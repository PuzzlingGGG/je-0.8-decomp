window.__require = function e(t, o, i) {
function n(s, r) {
if (!o[s]) {
if (!t[s]) {
var l = s.split("/");
l = l[l.length - 1];
if (!t[l]) {
var c = "function" == typeof __require && __require;
if (!r && c) return c(l, !0);
if (a) return a(l, !0);
throw new Error("Cannot find module '" + s + "'");
}
s = l;
}
var d = o[s] = {
exports: {}
};
t[s][0].call(d.exports, function(e) {
return n(t[s][1][e] || e);
}, d, d.exports, e, t, o, i);
}
return o[s].exports;
}
for (var a = "function" == typeof __require && __require, s = 0; s < i.length; s++) n(i[s]);
return n;
}({
AD: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f397dJ9pZxASo9m/NBbpvMC", "AD");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.AD = o.VideoError = o.AdUnitId = void 0;
const i = e("./CrossPlatform"), n = e("./Top"), a = e("./Util"), s = e("../TGA"), r = e("../Game/Hortor"), l = e("../Game/GameEnv");
var c;
(function(e) {
e.Reborn = "kb0lqcnqc8i219obn8";
e.PublishGame = "7kg5cfllmk37i8b5b8";
e.Coin = "18g20044mi3ljo1741";
e.GameAD = "f5e1kd57ec93ocrn9q";
if (i.wx) {
e.Reborn = "adunit-edb036d0a505aaa6";
e.PublishGame = "adunit-3953452cbd3b6c60";
e.Coin = "adunit-513ba7ca83fc4882";
e.GameAD = "adunit-c7e755f780fd6e4e";
}
})(o.AdUnitId || (o.AdUnitId = {}));
(function(e) {
e[e.UserCancel = 0] = "UserCancel";
e[e.NoAd = 1] = "NoAd";
e[e.LowSdk = 2] = "LowSdk";
})(c = o.VideoError || (o.VideoError = {}));
(function(e) {
e.skip = !1;
let t = 0;
e.addCoinByAdvertCnt = 0;
e.hasAD = function() {
return orange.TimeUtil.serverTime > t + 1e4 && e.addCoinByAdvertCnt < 15;
};
e.preloadRewardVideo = function() {
if (r.Hortor.isApp() && "233" !== this.channel) {
let e = r.Hortor.platformSysBigType == r.PlatformSysBigType.Android ? l.gameEnv.toponAdPlacementId_Android : l.gameEnv.toponAdPlacementId_Ios;
HAPP.preloadVideoAd({
id: e
});
}
};
let o = 0;
e.showVideoAd = function(e) {
let d = orange.TimeUtil.serverTime;
if (r.Hortor.isApp()) {
if (o > cc.director.getTotalTime()) return;
o = cc.director.getTotalTime() + 1e3;
let i = r.Hortor.platformSysBigType == r.PlatformSysBigType.Android ? l.gameEnv.toponAdPlacementId_Android : l.gameEnv.toponAdPlacementId_Ios;
r.Hortor.showRewardvideoAd(i, "rewardvideo", o => {
if (o) {
e.succ && e.succ();
t = d;
} else e.fail && e.fail();
});
} else if (i.tt || i.wx) {
if (i.tt && !a.Util.compareSDKVersion("1.3.0")) {
e.fail && e.fail(c.LowSdk);
n.default.hideLoading("播放广告失败");
return;
}
if (i.wx && !a.Util.compareSDKVersion("2.0.4")) {
e.fail && e.fail(c.LowSdk);
n.default.hideLoading("播放广告失败");
return;
}
if (i.crossPlatform.createRewardedVideoAd) {
s.TGA.track("showVideoAd", {
adUnitId: e.id,
step: "click"
});
let o = i.crossPlatform.createRewardedVideoAd({
adUnitId: e.id
}), a = i => {
if (i.isEnded) {
e.succ && e.succ();
t = d;
s.TGA.track("showVideoAd", {
adUnitId: e.id,
step: "succ"
});
} else {
console.log(i);
e.fail && e.fail(c.UserCancel);
}
o.offClose(a);
o.offError(r);
n.default.hideLoading();
}, r = t => {
console.log("video onError", t);
e.fail && e.fail(c.NoAd);
o.offClose(a);
o.offError(r);
n.default.hideLoading("播放广告失败");
};
o.onError(r);
n.default.showLoading("广告准备中");
o.show().then(() => {
o.onClose(a);
}).catch(() => {
o.load().then(() => {
o.show().then(() => {
o.onClose(a);
}).catch(t => {
console.log(t);
e.fail && e.fail(c.NoAd);
o.offError(r);
});
}).catch(t => {
console.log(t);
e.fail && e.fail(c.NoAd);
o.offError(r);
});
});
} else {
e.succ && e.succ();
t = d;
}
} else {
e.fail && e.fail(c.NoAd);
n.default.showToast("暂无广告");
}
};
e.showBanner = function(e, t) {
if (i.tt) {
if (i.systemInfo.appName == i.AppName.Douyin) return;
let o = i.crossPlatform.createBannerAd({
adUnitId: e,
adIntervals: 30,
style: t
});
o.onResize(e => {
o.style.top = i.systemInfo.windowHeight - e.height;
o.style.left = (i.systemInfo.windowWidth - e.width) / 2;
});
let n = () => {
o.show().then(() => {
console.log("广告显示成功");
}).catch(e => {
console.log("广告组件出现问题", e);
});
o.offLoad(n);
};
o.onLoad(n);
return o;
}
return null;
};
})(o.AD || (o.AD = {}));
cc._RF.pop();
}, {
"../Game/GameEnv": "GameEnv",
"../Game/Hortor": "Hortor",
"../TGA": "TGA",
"./CrossPlatform": "CrossPlatform",
"./Top": "Top",
"./Util": "Util"
} ],
AboutPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dab30r/r5FDC5qg3akIlA2V", "AboutPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), {ccclass: r, property: l} = cc._decorator;
let c = class extends s.default {
constructor() {
super(...arguments);
this.okBtn = null;
this.titleLabel = null;
this.label = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.closePanel, this);
}
setData(e, t) {
this.titleLabel.string = n.I18nMgr.getI18nStringByZh(e);
this.label.string = n.I18nMgr.getI18nStringByZh(t);
}
};
i([ l(a.default) ], c.prototype, "okBtn", void 0);
i([ l(cc.Label) ], c.prototype, "titleLabel", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
ActOptionActCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5752vCFCNOratTB9hR9WjJ", "ActOptionActCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this._data = null;
}
onLoad() {}
setData(e, t) {
this.actId = e;
this.actType = t;
}
};
i([ a(cc.Sprite) ], s.prototype, "sprite", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
ActOptionCameraShakePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "83a2a1M2mZJcbPVQaIbo9Ia", "ActOptionCameraShakePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/Util"), r = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), {ccclass: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.speedItem = null;
this.rangeItem = null;
this.timesItem = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onOkBtn, this);
}
setData(e) {
this.evt = s.Util.deepCopy(e);
let t;
if (this.evt.extra) t = this.evt.extra; else {
t = {
speed: 200,
range: 6,
times: 3
};
this.evt.extra = t;
}
this.speedItem.setData("震动速度", t.speed, e => {
let t = Number.parseFloat(e) || 0;
t = s.Util.clamp(t, 0, 1e3);
this.speedItem.label_num.string = t + "";
});
this.rangeItem.setData("震动幅度", t.range, e => {
let t = Number.parseFloat(e) || 0;
t = s.Util.clamp(t, 0, 100);
this.rangeItem.label_num.string = t + "";
});
this.timesItem.setData("震动次数", t.times, e => {
let t = Number.parseFloat(e) || 0;
t = s.Util.clamp(t, 0, 10);
this.timesItem.label_num.string = t + "";
});
}
onOkBtn() {
this.closePanel();
let e = this.evt.extra;
e.speed = Number.parseFloat(this.speedItem.label_num.string) || 0;
e.range = Number.parseFloat(this.rangeItem.label_num.string) || 0;
e.times = Number.parseFloat(this.timesItem.label_num.string) || 0;
this.call && this.call(this.evt);
}
};
i([ c(r.default) ], d.prototype, "speedItem", void 0);
i([ c(r.default) ], d.prototype, "rangeItem", void 0);
i([ c(r.default) ], d.prototype, "timesItem", void 0);
i([ c(n.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem"
} ],
ActOptionChangeActPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "00d76sd2UpEq5hJvtenocAd", "ActOptionChangeActPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), r = e("../../Game/Player/Mng"), l = e("../../CustomUI/Button"), c = e("../../CustomUI/DropDownBox"), d = e("../../CustomUI/Toggle"), h = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), p = e("../../Frame/Util"), u = e("../../Frame/Top"), m = e("../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper"), {ccclass: f, property: g} = cc._decorator;
let y = class extends a.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.btnSelAct = null;
this.addDropDown = null;
this.propertyDropDown = null;
this.btnOk = null;
this.editButton = null;
this.editValue = null;
this.editToggle = null;
this.evt = null;
this.saveCall = null;
}
onLoad() {
super.onLoad();
this.btnSelAct.node.on(l.default.CLICK, this.onClickSelAct, this);
this.btnOk.node.on(l.default.CLICK, this.onClickOk, this);
this.editButton.node.on(l.default.CLICK, this.onClickEditButton, this);
this.propertyDropDown.node.on(c.default.SELECT_CHANGE, this.onPropertyNameChange, this);
this.editToggle.node.on(d.default.STATE_CHANGE, this.onBooleanChange, this);
this._opArr = [ {
str: "设置",
type: -1
}, {
str: "增加",
type: n.GSComputeType.ADD
}, {
str: "减少",
type: n.GSComputeType.SUB
} ];
this.addDropDown.setDataArr(this._opArr);
this.addDropDown.node.on(c.default.SELECT_CHANGE, this.onAddStateChange, this);
this._opType = -1;
}
setData(e, t) {
this._worldId = e;
this.evt = t;
let o = t.extra;
if (o) {
this._actorId = o.actorId;
this._actorType = o.actType;
this._opType = o.opType;
this._propertyName = o.propertyName;
this.resetPropertyValue();
this._propertyValue = t.extra.propertyValue;
} else {
this._actorType = n.ActType.Hero;
this._propertyName = "hp";
this._propertyValue = "0";
this._actorIcon = null;
this._actorName = "";
}
this.onRefresh();
}
onRefresh() {
let e = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
if (!e) {
let t = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType);
this._propertyName = t && t.length > 0 && t[0].filedName;
e = t && t.length > 0 && t[0];
this._propertyValue = void 0;
if (!e) {
console.error(`error!actor[${this._actorId}] has no property`);
this.closePanel();
}
this.resetPropertyValue();
}
let t = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType), o = t.findIndex(e => e.filedName == this._propertyName);
o <= 0 && (o = 0);
this.propertyDropDown.setDataArr(t);
this.propertyDropDown.selectByIdx(o);
if (e) if (e.valueType == n.ActPropertyValueType.Float) {
this.addDropDown.node.active = !0;
let t = this._opArr.findIndex(e => e.type == this._opType);
t <= 0 && (t = 0);
this.addDropDown.selectByIdx(t);
this.editValue.node.active = !0;
this.editToggle.node.active = !1;
this.editButton.node.active = !1;
this.editValue.setData(e.str, this._propertyValue, t => {
let o = Number.parseFloat(t) || 0;
e.valueRange && 2 == e.valueRange.length && (o = p.Util.clamp(o, e.valueRange[0], e.valueRange[1]));
this._propertyValue = o + "";
this.editValue.label_num.string = this._propertyValue;
});
} else if (e.valueType == n.ActPropertyValueType.Bool) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !0;
this.editButton.node.active = !1;
let e = !1;
this._propertyValue && (e = "true" == this._propertyValue || parseFloat(this._propertyValue) > 0);
e ? this.editToggle.check() : this.editToggle.uncheck();
} else if (e.valueType == n.ActPropertyValueType.Weapon) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !1;
this.editButton.node.active = !0;
let e = r.Mng.Ins.weaponMng.getOne(this._propertyValue);
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
}
this.nameLabel.string = this._actorName;
this._actorIcon ? r.Mng.Ins.spriteMng.setPropSprite(this.icon, this._actorIcon, 100) : this.icon.spriteFrame = null;
}
resetPropertyValue() {
let e = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
switch (this._actorType) {
case n.ActType.Tile:
{
let t = r.Mng.Ins.worldMng.getTileData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.tileMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = m.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
break;

case n.ActType.Hero:
case n.ActType.Enemy:
case n.ActType.Npc:
{
let t = r.Mng.Ins.worldMng.getActorData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.actorMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = m.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
break;

case n.ActType.Device:
{
let t = r.Mng.Ins.worldMng.getDeviceData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.deviceMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = m.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
}
}
onAddStateChange(e, t, o) {
o && (this._opType = t.type);
}
onPropertyNameChange(e, t, o) {
if (o) {
this._propertyName = t.filedName;
this.resetPropertyValue();
this.onRefresh();
}
}
onClickSelAct() {
s.default.ins.OpenPanelByName("ActOptionSelectWorldActPanel", e => {
e.setData("选择地图对象", this._worldId, this._actorId);
e.selectCallBack = ((e, t) => {
if (t && t != this._actorId) {
this._actorId = t;
this._actorType = e;
let o = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType);
this._propertyName = o && o.length > 0 && o[0].filedName;
this.resetPropertyValue();
this.onRefresh();
}
}).bind(this);
});
}
onBooleanChange(e, t) {
t && (this._propertyValue = e ? "1" : "0");
}
onClickEditButton() {
let e = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
e && e.valueType == n.ActPropertyValueType.Weapon && s.default.ins.OpenPanelByName("SelectWeaponPanel", e => {
e.setData(this._propertyValue);
e.selectCall = e => {
this._propertyValue = e ? e.id : "";
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
};
});
}
onClickOk() {
if (!this._actorId || "" == this._actorId) {
u.default.showToast("请选择要调整的对象");
return;
}
if ("" == this._propertyName) {
u.default.showToast("请选择要更改的属性");
return;
}
this.closePanel();
let e = m.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName), t = {
type: n.GSDataNodeType.GDATA_ChangeActorProperty,
actorId: this._actorId,
actType: this._actorType,
opType: this._opType,
propertyName: this._propertyName,
propertyValue: this._propertyValue,
isTileUnit: e.isTileUnit
};
this.evt.extra = t;
this.saveCall && this.saveCall(this.evt);
}
};
i([ g(cc.Sprite) ], y.prototype, "icon", void 0);
i([ g(cc.Label) ], y.prototype, "nameLabel", void 0);
i([ g(l.default) ], y.prototype, "btnSelAct", void 0);
i([ g(c.default) ], y.prototype, "addDropDown", void 0);
i([ g(c.default) ], y.prototype, "propertyDropDown", void 0);
i([ g(l.default) ], y.prototype, "btnOk", void 0);
i([ g(l.default) ], y.prototype, "editButton", void 0);
i([ g(h.default) ], y.prototype, "editValue", void 0);
i([ g(d.default) ], y.prototype, "editToggle", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem",
"../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper"
} ],
ActOptionDialogCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3152fyUaAdGPoDbTfptD5Yu", "ActOptionDialogCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/Mng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.editBox = null;
this.headBtn = null;
this.itemBtn = null;
this.addBtn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.headBtn.node.on(a.default.CLICK, this.onHeadBtn, this);
this.addBtn.node.on(a.default.CLICK, this.onAddBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
e.items = e.items || [];
if (e.evts) {
e.items.push({
str: "点击屏幕继续",
evts: e.evts
});
delete e.evts;
}
this.editBox.string = e.str;
let t = yield h.Mng.Ins.actorMng.loadOne(e.actorConfId);
t && h.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 120);
this.refreshItems();
});
}
refreshItems() {
d.Util.makeBro(this.itemBtn.node, this.data.items.length, (e, t) => {
let o = e.getComponent(a.default), i = this.data.items[t];
o.label.string = i.str;
o.node.off(a.default.CLICK, this.onItemBtn, this);
o.node.on(a.default.CLICK, this.onItemBtn, this);
});
}
onEditBoxTextChange() {
this.data.str = this.editBox.textLabel.string;
}
onStateChange(e) {
this.node.color = e ? c.UIColor.blue : cc.color(230, 230, 230);
}
onHeadBtn() {
r.default.ins.OpenPanelByName("SelectActorPanel", e => {
e.setData(this.data.actorConfId);
e.selectCall = e => {
this.data.actorConfId = e.id;
this.setData(this.data);
};
});
}
onItemBtn(e) {
let t = e.target.getSiblingIndex();
console.log(t);
let o = this.data.items[t];
r.default.ins.OpenPanelByName("ActOptionDialogItemPanel", e => {
e.setData(o);
e.okCall = e => {
this.data.items[t] = e;
this.refreshItems();
};
e.deleteCall = () => {
this.data.items.splice(t, 1);
this.refreshItems();
};
});
}
onAddBtn() {
if (this.data.items.length >= 4) {
l.default.showToast("4 options at most");
return;
}
let e, t = 1;
do {
e = "Option " + t;
t++;
} while (this.data.items.findIndex(t => t.str == e) >= 0);
let o = {
str: e,
evts: []
};
this.data.items.push(o);
this.refreshItems();
}
};
i([ u(cc.Sprite) ], m.prototype, "sprite", void 0);
i([ u(cc.EditBox) ], m.prototype, "editBox", void 0);
i([ u(a.default) ], m.prototype, "headBtn", void 0);
i([ u(a.default) ], m.prototype, "itemBtn", void 0);
i([ u(a.default) ], m.prototype, "addBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
ActOptionDialogItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6f5cfSoppJJo5Qa85Ts0yjQ", "ActOptionDialogItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), l = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), {ccclass: c, property: d} = cc._decorator;
let h = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.triggerItem = null;
this.okBtn = null;
this.deleteBtn = null;
this.okCall = null;
this.deleteCall = null;
this.item = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = r.Util.deepCopy(e);
this.item = e;
this.editBox.string = e.str;
this.triggerItem.setData("选择此项时：", e.evts, !1);
});
}
onOkBtn() {
this.closePanel();
this.item.str = this.editBox.string;
this.okCall && this.okCall(this.item);
}
onDeleteBtn() {
this.closePanel();
this.deleteCall && this.deleteCall(this.item);
}
};
i([ d(cc.EditBox) ], h.prototype, "editBox", void 0);
i([ d(l.default) ], h.prototype, "triggerItem", void 0);
i([ d(a.default) ], h.prototype, "okBtn", void 0);
i([ d(a.default) ], h.prototype, "deleteBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
ActOptionDialogPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c018etpTitJVrqNu//CpuVv", "ActOptionDialogPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), {ccclass: c, property: d} = cc._decorator;
let h = class extends r.default {
constructor() {
super(...arguments);
this.addBtn = null;
this.deleteBtn = null;
this.moveUpBtn = null;
this.moveDownBtn = null;
this.okBtn = null;
this.toggle = null;
this.list = null;
this.emptyNode = null;
this.evt = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onOkBtn, this);
this.addBtn.node.on(n.default.CLICK, this.onAddBtn, this);
this.deleteBtn.node.on(n.default.CLICK, this.onDeleteBtn, this);
this.moveUpBtn.node.on(n.default.CLICK, this.onMoveUpBtn, this);
this.moveDownBtn.node.on(n.default.CLICK, this.onMoveDownBtn, this);
this.toggle.node.on(s.default.STATE_CHANGE, this.onStateChange, this);
}
onStateChange(e, t) {
t && (this.evt.extra.onlyOnce = e);
}
setData(e) {
this.evt = l.Util.deepCopy(e);
this.evt.extra || (this.evt.extra = {
onlyOnce: !0,
lines: []
});
let t = this.evt.extra;
this.list.setDataArr(t.lines);
this.emptyNode.active = 0 == t.lines.length;
this.toggle.isChecked = this.evt.extra.onlyOnce;
t.lines.length > 0 && this.list.selectByIdx(0);
}
onOkBtn() {
this.closePanel();
this.call && this.call(this.evt);
}
onAddBtn() {
let e = this.list.curSelectIdx, t = this.evt.extra, o = this.list.getCurData(), i = null;
i = o ? {
str: "Conversation",
actorConfId: o.actorConfId,
items: []
} : {
str: "Conversation",
actorConfId: "2",
items: []
};
t.lines.splice(e + 1, 0, i);
this.list.setDataArr(t.lines);
this.emptyNode.active = 0 == t.lines.length;
this.list.selectByIdx(e + 1);
}
onDeleteBtn() {
let e = this.list.curSelectIdx, t = this.evt.extra;
t.lines.splice(e, 1);
this.list.setDataArr(t.lines);
this.emptyNode.active = 0 == t.lines.length;
}
onMoveUpBtn() {
let e = this.list.curSelectIdx, t = this.evt.extra;
if (e > 0) {
let o = t.lines[e], i = t.lines[e - 1];
t.lines[e] = i;
t.lines[e - 1] = o;
this.list.setDataArr(t.lines);
this.list.selectByIdx(e - 1);
}
}
onMoveDownBtn() {
let e = this.list.curSelectIdx, t = this.evt.extra;
if (e < t.lines.length - 1) {
let o = t.lines[e], i = t.lines[e + 1];
t.lines[e] = i;
t.lines[e + 1] = o;
this.list.setDataArr(t.lines);
this.list.selectByIdx(e + 1);
}
}
};
i([ d(n.default) ], h.prototype, "addBtn", void 0);
i([ d(n.default) ], h.prototype, "deleteBtn", void 0);
i([ d(n.default) ], h.prototype, "moveUpBtn", void 0);
i([ d(n.default) ], h.prototype, "moveDownBtn", void 0);
i([ d(n.default) ], h.prototype, "okBtn", void 0);
i([ d(s.default) ], h.prototype, "toggle", void 0);
i([ d(a.default) ], h.prototype, "list", void 0);
i([ d(cc.Node) ], h.prototype, "emptyNode", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util"
} ],
ActOptionDropPropPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "67533PVUFxEXJd2QZ6amLB/", "ActOptionDropPropPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends r.default {
constructor() {
super(...arguments);
this.propBtn = null;
this.cntBtn = null;
this.useGravity = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.cntBtn.node.on(a.default.CLICK, this.onCntBtn, this);
this.propBtn.node.on(a.default.CLICK, this.onPropBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.evt = c.Util.deepCopy(e);
this.evt.extra || (this.evt.extra = {
propConfId: 1,
cnt: 1,
useGravity: !1
});
this.cntBtn.label.string = this.evt.extra.cnt;
this.evt.extra.useGravity ? this.useGravity.check() : this.useGravity.uncheck();
this.refreshProp();
});
}
refreshProp() {
return n(this, void 0, void 0, function*() {
let e = yield d.Mng.Ins.propMng.loadOne(this.evt.extra.propConfId);
if (e) {
this.propBtn.label.node.active = !1;
this.propBtn.icon.node.active = !0;
d.Mng.Ins.spriteMng.setPropSprite(this.propBtn.icon, e.textureName, 120);
} else {
this.propBtn.label.node.active = !0;
this.propBtn.icon.node.active = !1;
}
});
}
onPropBtn() {
l.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this.evt.extra.propConfId);
e.selectCall = e => {
this.evt.extra.propConfId = e.id;
this.refreshProp();
};
});
}
onCntBtn() {
l.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("数量：", this.evt.extra.cnt, e => n(this, void 0, void 0, function*() {
e = Math.floor(e);
e = c.Util.clamp(e, 0, 99);
this.evt.extra.cnt = e;
this.cntBtn.label.string = e;
}));
});
}
onOkBtn() {
this.closePanel();
this.evt.extra.useGravity = this.useGravity.isChecked;
this.call && this.call(this.evt);
}
};
i([ p(a.default) ], u.prototype, "propBtn", void 0);
i([ p(a.default) ], u.prototype, "cntBtn", void 0);
i([ p(s.default) ], u.prototype, "useGravity", void 0);
i([ p(a.default) ], u.prototype, "okBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
ActOptionGameAdPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8164fGOJyBEKqL3BysHomxc", "ActOptionGameAdPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Util"), c = e("../../Game/Player/Mng"), d = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.eidtBox = null;
this.imgBtn = null;
this.succTriggerItem = null;
this.failTriggerItem = null;
this.okBtn = null;
this.aboutBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.aboutBtn.node.on(a.default.CLICK, this.onAboutBtn, this);
this.imgBtn.node.on(a.default.CLICK, this.onImgBtn, this);
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = l.Util.deepCopy(e);
this.evt = e;
e.extra = e.extra || {
str: "",
url: "",
onSucc: [],
onFail: []
};
c.Mng.Ins.spriteMng.setShopSprite(this.imgBtn.icon, e.extra.url, 100);
this.succTriggerItem.setData("看完广告后：", e.extra.onSucc, !1);
this.failTriggerItem.setData("不看广告时：", e.extra.onFail, !1);
});
}
onOkBtn() {
this.closePanel();
this.evt.extra.str = this.eidtBox.textLabel.string;
this.call && this.call(this.evt);
}
onImgBtn() {
r.default.ins.OpenPanelByName("SelectImagePanel", e => {
e.call = e => {
this.evt.extra.url = e;
c.Mng.Ins.spriteMng.setShopSprite(this.imgBtn.icon, e, 100);
};
});
}
onAboutBtn() {
r.default.ins.OpenPanelByName("AboutPanel", e => {
e.setData("说明", "    \n    1.应清晰的说明奖励内容，再在广告成功时兑现奖励。\n    2.奖励与描述不符则可能收到举报。\n    3.游戏作者可以100%的获得广告产生的G币。\n");
});
}
};
i([ p(cc.EditBox) ], u.prototype, "eidtBox", void 0);
i([ p(a.default) ], u.prototype, "imgBtn", void 0);
i([ p(d.default) ], u.prototype, "succTriggerItem", void 0);
i([ p(d.default) ], u.prototype, "failTriggerItem", void 0);
i([ p(a.default) ], u.prototype, "okBtn", void 0);
i([ p(a.default) ], u.prototype, "aboutBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
ActOptionGameOverPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "24596d1O5VM85GbcQo0oNlx", "ActOptionGameOverPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Util"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.rankBtn = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.rankBtn.node.on(a.default.CLICK, this.onRankBtn, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e) {
e = l.Util.deepCopy(e);
this.evt = e;
e.extra || (e.extra = {
str: "Game Over"
});
this.editBox.string = e.extra.str;
this.refreshRankBtn(e.extra.gameRankId);
}
refreshRankBtn(e) {
return n(this, void 0, void 0, function*() {
let t = yield c.Mng.Ins.gameRankMng.loadOne(e);
this.rankBtn.label.string = t ? t.name : "无";
});
}
onRankBtn() {
r.default.ins.OpenPanelByName("SelectGameRankPanel", e => {
e.setData(this.evt.extra.gameRankId);
e.selectCall = e => {
this.evt.extra.gameRankId = e;
this.refreshRankBtn(e);
};
});
}
onOkBtn() {
this.closePanel();
let e = this.editBox.textLabel.string;
this.evt.extra.str = e;
this.call && this.call(this.evt);
}
};
i([ h(cc.EditBox) ], p.prototype, "editBox", void 0);
i([ h(a.default) ], p.prototype, "rankBtn", void 0);
i([ h(a.default) ], p.prototype, "okBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
ActOptionGameSharePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8d457s6Q+tK0aL9OgWftKzN", "ActOptionGameSharePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), l = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), {ccclass: c, property: d} = cc._decorator;
let h = class extends s.default {
constructor() {
super(...arguments);
this.eidtBox = null;
this.succTriggerItem = null;
this.failTriggerItem = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = r.Util.deepCopy(e);
this.evt = e;
e.extra = e.extra || {
str: "",
onSucc: [],
onFail: []
};
this.succTriggerItem.setData("分享成功时：", e.extra.onSucc, !1);
this.failTriggerItem.setData("分享失败时：", e.extra.onFail, !1);
});
}
onOkBtn() {
this.closePanel();
this.evt.extra.str = this.eidtBox.textLabel.string;
this.call && this.call(this.evt);
}
};
i([ d(cc.EditBox) ], h.prototype, "eidtBox", void 0);
i([ d(l.default) ], h.prototype, "succTriggerItem", void 0);
i([ d(l.default) ], h.prototype, "failTriggerItem", void 0);
i([ d(a.default) ], h.prototype, "okBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
ActOptionGameWinPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e950f5wQ+1IOq2tM2QFYDyE", "ActOptionGameWinPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Util"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.rankBtn = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.rankBtn.node.on(a.default.CLICK, this.onRankBtn, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = l.Util.deepCopy(e);
this.evt = e;
e.extra || (e.extra = {
str: "恭喜过关!",
gameRankId: null
});
this.editBox.string = e.extra.str;
this.refreshRankBtn(e.extra.gameRankId);
});
}
refreshRankBtn(e) {
return n(this, void 0, void 0, function*() {
let t = yield c.Mng.Ins.gameRankMng.loadOne(e);
this.rankBtn.label.string = t ? t.name : "无";
});
}
onRankBtn() {
r.default.ins.OpenPanelByName("SelectGameRankPanel", e => {
e.setData(this.evt.extra.gameRankId);
e.selectCall = e => {
this.evt.extra.gameRankId = e;
this.refreshRankBtn(e);
};
});
}
onOkBtn() {
this.closePanel();
let e = this.editBox.textLabel.string;
this.evt.extra.str = e;
this.call && this.call(this.evt);
}
};
i([ h(cc.EditBox) ], p.prototype, "editBox", void 0);
i([ h(a.default) ], p.prototype, "rankBtn", void 0);
i([ h(a.default) ], p.prototype, "okBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
ActOptionRandomPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cfffcHCLdFLfK9w2ZeTD+QY", "ActOptionRandomPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), l = e("../../Frame/UIColor"), c = e("../../Frame/Util"), d = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), h = e("../../../i18n/i18nMgr"), {ccclass: p, property: u} = cc._decorator;
let m = class extends s.default {
constructor() {
super(...arguments);
this.addBtn = null;
this.subBtn = null;
this.bar = null;
this.handler = null;
this.triggerItem = null;
this.okBtn = null;
this.call = null;
this.colors = [ l.UIColor.green, l.UIColor.pink, l.UIColor.yellow, l.UIColor.purple ];
this.evt = null;
}
onLoad() {
super.onLoad();
this.addBtn.node.on(a.default.CLICK, this.onAddBtn, this);
this.subBtn.node.on(a.default.CLICK, this.onSubBtn, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = c.Util.deepCopy(e);
this.evt = e;
e.extra || (e.extra = {
probabilitys: [ {
value: .2,
evts: []
}, {
value: .8,
evts: []
} ]
});
this.refresh();
});
}
onAddBtn() {
let e = this.evt.extra.probabilitys;
if (e.length >= 4) {
r.default.showToast("不能再多了");
return;
}
let t = e[e.length - 1];
t.value /= 2;
e.push({
value: t.value,
evts: []
});
this.refresh();
}
onSubBtn() {
let e = this.evt.extra.probabilitys;
if (e.length <= 2) {
r.default.showToast("不能再少了");
return;
}
let t = e.pop();
e[e.length - 1].value += t.value;
this.refresh();
}
refresh() {
let e = this.bar.parent, t = this.evt.extra.probabilitys, o = [], i = 0;
c.Util.makeBro(this.bar, t.length, (n, a) => {
let s = t[a], r = n.getComponentInChildren(cc.Label);
i += s.value;
let l = Math.round(100 * i);
for (let e = 0; e < o.length; e++) l -= o[e];
o.push(l);
r.string = l + "%";
n.width = e.width * l / 100;
n.color = this.colors[a];
});
c.Util.updateAllLayout(e);
c.Util.makeBro(this.handler, t.length - 1, (t, o) => {
let i = e.children[o];
t.x = i.x + i.width / 2;
t.targetOff(this);
t.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
});
c.Util.makeBro(this.triggerItem.node, t.length, (e, i) => {
let n = e.getComponent(d.default), a = t[i], s = o[i];
n.setData(s + h.I18nMgr.getI18nStringByZh("执行："), a.evts, null);
});
}
onTouchMove(e) {
let t = this.bar.parent, o = e.target.getSiblingIndex(), i = this.evt.extra.probabilitys, n = e.getDeltaX() / t.width, a = i[o], s = i[o + 1];
if (0 <= a.value + n && a.value + n <= 1 && 0 <= s.value - n && s.value - n <= 1) {
a.value += n;
s.value -= n;
this.refresh();
}
}
onOkBtn() {
this.closePanel();
this.call && this.call(this.evt);
}
};
i([ u(a.default) ], m.prototype, "addBtn", void 0);
i([ u(a.default) ], m.prototype, "subBtn", void 0);
i([ u(cc.Node) ], m.prototype, "bar", void 0);
i([ u(cc.Node) ], m.prototype, "handler", void 0);
i([ u(d.default) ], m.prototype, "triggerItem", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
ActOptionRecoverHpPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ff8c6WwG7JDErmQfEWrT7WJ", "ActOptionRecoverHpPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/Util"), r = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), {ccclass: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.editBox = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onOkBtn, this);
}
setData(e) {
this.evt = s.Util.deepCopy(e);
this.evt.extra || (this.evt.extra = {
cnt: 1
});
this.editBox.setData("数值:", this.evt.extra.cnt, e => {
this.evt.extra.cnt = Number.parseInt(e);
});
}
onOkBtn() {
this.closePanel();
this.call && this.call(this.evt);
}
};
i([ c(r.default) ], d.prototype, "editBox", void 0);
i([ c(n.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem"
} ],
ActOptionSelectWorldActPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fce021XGx1NNbznywsnyhrP", "ActOptionSelectWorldActPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../CustomUI/Button"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), c = e("../../Game/Player/Mng"), d = e("../../Game/World/Tile"), h = e("./ActOptionActCell"), p = e("../../GameData/GameTypeDefine"), {ccclass: u, property: m} = cc._decorator;
let f = class extends r.default {
constructor() {
super(...arguments);
this.labelTitle = null;
this.mask = null;
this.content = null;
this.actPrefab = null;
this.select = null;
this.okBtn = null;
this._allActs = [];
}
onLoad() {
super.onLoad();
this.okBtn.node.on(s.default.CLICK, this.onOkBtn, this);
this.mask.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.mask.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
}
onTouchMove(e) {
let t = this.content.position;
t.addSelf(e.getDelta());
this.content.position = t;
}
onTouchEnd(e) {
if (e.getLocation().sub(e.getStartLocation()).magSqr() < 10) {
let t = this.content.convertToNodeSpaceAR(e.getLocation());
if (t.x >= 0 && t.x < this.content.width && t.y >= 0 && t.y < this.content.height) {
let e = Math.floor(t.x / d.default.SIZE), o = Math.floor(t.y / d.default.SIZE);
this.selectAct(e, o);
}
}
}
selectAct(e, t) {
this.select.x = (e + .5) * d.default.SIZE;
this.select.y = (t + .5) * d.default.SIZE;
this.select.getComponentInChildren(cc.Label).string = `(${e},${t})`;
for (let o of this._allActs) {
let i = Math.floor(o.node.x / d.default.SIZE), n = Math.floor(o.node.y / d.default.SIZE);
if (i == e && n == t) {
this._selectAct = o;
break;
}
}
}
canSelectAct(e) {
if (!this._filters || 0 == this._filters.length) return !0;
for (let t of this._filters) if (t == e) return !0;
return !1;
}
setData(e, t, o, i) {
return n(this, void 0, void 0, function*() {
this._filters = i;
let n = yield c.Mng.Ins.worldMng.loadOne(t, !0);
if (!n) return;
this._allActs.length = 0;
let s, r = n.worldLayout.bgColor;
this.content.color = cc.color(r.r, r.g, r.b, r.a);
this.content.width = n.worldLayout.size.col * d.default.SIZE;
this.content.height = n.worldLayout.size.row * d.default.SIZE;
this.labelTitle.string = e;
for (let e = 0; e < n.worldLayout.actors.length; e++) {
let t = a.ActType.Hero, i = n.worldLayout.actors[e];
i.data.team == p.Team.Hero ? t = a.ActType.Hero : i.data.team == p.Team.Enemy ? t = a.ActType.Enemy : i.data.team == p.Team.NPC && (t = a.ActType.Npc);
if (!this.canSelectAct(t)) continue;
let r = yield c.Mng.Ins.actorMng.loadOne(i.data.confId);
if (r) {
let e = cc.instantiate(this.actPrefab.node);
this.content.insertChild(e, 0);
let n = e.getComponent(h.default);
n.actType = t;
t == a.ActType.Hero && (s = n);
this._allActs.push(n);
e.x = i.pos.x;
e.y = i.pos.y;
c.Mng.Ins.spriteMng.setActorSprite(n.sprite, r.textureName, d.default.SIZE);
n.actId = i.data.id;
o == i.data.id && (this._selectAct = n);
}
}
if (this.canSelectAct(a.ActType.Device)) for (let e = 0; e < n.worldLayout.devices.length; e++) {
let t = n.worldLayout.devices[e], i = yield c.Mng.Ins.deviceMng.loadOne(t.data.confId);
if (i) {
let e = cc.instantiate(this.actPrefab.node);
this.content.insertChild(e, 0);
let n = e.getComponent(h.default);
this._allActs.push(n);
e.x = t.pos.x;
e.y = t.pos.y;
c.Mng.Ins.spriteMng.setDeviceSprite(n.sprite, i.textureName, d.default.SIZE);
n.actId = t.data.id;
n.actType = a.ActType.Device;
o == t.data.id && (this._selectAct = n);
}
}
for (let e = 0; e < n.worldLayout.tiles.length; e++) {
let t = n.worldLayout.tiles[e], i = yield c.Mng.Ins.tileMng.loadOne(t.data.confId);
if (i) {
let e = cc.instantiate(this.actPrefab.node);
this.content.insertChild(e, 0);
let n = e.getComponent(h.default);
e.x = (t.pos.iCol + .5) * e.width;
e.y = (t.pos.iRow + .5) * e.height;
c.Mng.Ins.spriteMng.setTileSprite(n.sprite, i.textureName, d.default.SIZE);
n.actId = t.data.id;
n.actType = a.ActType.Tile;
if (this.canSelectAct(a.ActType.Tile)) {
this._allActs.push(n);
o == t.data.id && (this._selectAct = n);
}
}
}
this._selectAct || (this._selectAct = s);
!this._selectAct && this._allActs.length > 0 && (this._selectAct = this._allActs[0]);
if (this._selectAct) {
let e = Math.floor(this._selectAct.node.x / d.default.SIZE), t = Math.floor(this._selectAct.node.y / d.default.SIZE);
this.selectAct(e, t);
}
if (this._selectAct) {
let e = l.Util.convertPosition(this.content, this.mask.node, this._selectAct.node.position);
this.content.x = -e.x;
this.content.y = -e.y;
}
});
}
onOkBtn() {
this.closePanel();
this._selectAct && this.selectCallBack && this.selectCallBack(this._selectAct.actType, this._selectAct.actId);
}
};
i([ m(cc.Label) ], f.prototype, "labelTitle", void 0);
i([ m(cc.Mask) ], f.prototype, "mask", void 0);
i([ m(cc.Node) ], f.prototype, "content", void 0);
i([ m(h.default) ], f.prototype, "actPrefab", void 0);
i([ m(cc.Node) ], f.prototype, "select", void 0);
i([ m(s.default) ], f.prototype, "okBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../GameScript/index": "index",
"./ActOptionActCell": "ActOptionActCell"
} ],
ActOptionSelectWorldCoorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2ebe3bECOtHEJyJ6aakF2lW", "ActOptionSelectWorldCoorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), l = e("../../Game/Player/Mng"), c = e("../../Game/World/Tile"), d = e("../../GameData/GameTypeDefine"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.mask = null;
this.content = null;
this.spritePrefab = null;
this.select = null;
this.okBtn = null;
this.selectCall = null;
this.hero = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.mask.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd8, this);
this.mask.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove8, this);
}
onTouchMove8(e) {
let t = this.content.position;
t.addSelf(e.getDelta());
this.content.position = t;
}
onTouchEnd8(e) {
if (e.getLocation().sub(e.getStartLocation()).magSqr() < 10) {
let t = this.content.convertToNodeSpaceAR(e.getLocation());
if (t.x >= 0 && t.x < this.content.width && t.y >= 0 && t.y < this.content.height) {
let e = Math.floor(t.x / c.default.SIZE), o = Math.floor(t.y / c.default.SIZE);
this.selectCoor(e, o);
}
}
}
selectCoor(e, t) {
this.select.x = (e + .5) * c.default.SIZE;
this.select.y = (t + .5) * c.default.SIZE;
this.select.getComponentInChildren(cc.Label).string = `(${e},${t})`;
if (this.hero) {
this.hero.x = this.select.x;
this.hero.y = this.select.y;
}
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
let o = yield l.Mng.Ins.worldMng.loadOne(e, !0);
if (!o) return;
let i = o.worldLayout.bgColor;
this.content.color = cc.color(i.r, i.g, i.b, i.a);
this.content.width = o.worldLayout.size.col * c.default.SIZE;
this.content.height = o.worldLayout.size.row * c.default.SIZE;
for (let e = 0; e < o.worldLayout.actors.length; e++) {
let t = cc.instantiate(this.spritePrefab);
this.content.insertChild(t, 0);
let i = o.worldLayout.actors[e], n = yield l.Mng.Ins.actorMng.loadOne(i.data.confId);
t.x = i.pos.x;
t.y = i.pos.y;
let a = t.getComponent(cc.Sprite);
l.Mng.Ins.spriteMng.setActorSprite(a, n.textureName, c.default.SIZE);
this.hero || i.data.team != d.Team.Hero || (this.hero = t);
}
for (let e = 0; e < o.worldLayout.devices.length; e++) {
let t = cc.instantiate(this.spritePrefab);
this.content.insertChild(t, 0);
let i = o.worldLayout.devices[e], n = yield l.Mng.Ins.deviceMng.loadOne(i.data.confId);
t.x = i.pos.x;
t.y = i.pos.y;
let a = t.getComponent(cc.Sprite);
l.Mng.Ins.spriteMng.setDeviceSprite(a, n.textureName, c.default.SIZE);
}
for (let e = 0; e < o.worldLayout.props.length; e++) {
let t = cc.instantiate(this.spritePrefab);
this.content.insertChild(t, 0);
let i = o.worldLayout.props[e], n = yield l.Mng.Ins.propMng.loadOne(i.data.confId);
t.x = i.pos.x;
t.y = i.pos.y;
let a = t.getComponent(cc.Sprite);
l.Mng.Ins.spriteMng.setTileSprite(a, n.textureName, c.default.SIZE);
}
for (let e = 0; e < o.worldLayout.tiles.length; e++) {
let t = cc.instantiate(this.spritePrefab);
this.content.insertChild(t, 0);
let i = o.worldLayout.tiles[e], n = yield l.Mng.Ins.tileMng.loadOne(i.data.confId);
t.x = (i.pos.iCol + .5) * t.width;
t.y = (i.pos.iRow + .5) * t.height;
let a = t.getComponent(cc.Sprite);
l.Mng.Ins.spriteMng.setTileSprite(a, n.textureName, c.default.SIZE);
}
if (!t || 0 == t.iCol && 0 == t.iRow) {
if (this.hero) {
let e = Math.floor(this.hero.x / c.default.SIZE), t = Math.floor(this.hero.y / c.default.SIZE);
this.selectCoor(e, t);
} else if (o.worldLayout.startPoint && o.worldLayout.startPoint.pos) {
let e = o.worldLayout.startPoint.pos, t = Math.floor(e.x / c.default.SIZE), i = Math.floor(e.y / c.default.SIZE);
this.selectCoor(t, i);
}
} else this.selectCoor(t.iCol, t.iRow);
if (this.hero) {
let e = r.Util.convertPosition(this.content, this.mask.node, this.hero.position);
this.content.x = -e.x;
this.content.y = -e.y;
} else if (o.worldLayout.startPoint && o.worldLayout.startPoint.pos) {
let e = o.worldLayout.startPoint.pos;
this.content.x = -e.x;
this.content.y = -e.y;
}
});
}
onOkBtn() {
this.closePanel();
let e = Math.floor(this.select.x / c.default.SIZE), t = Math.floor(this.select.y / c.default.SIZE);
this.selectCall && this.selectCall({
iCol: e,
iRow: t
});
}
};
i([ p(cc.Mask) ], u.prototype, "mask", void 0);
i([ p(cc.Node) ], u.prototype, "content", void 0);
i([ p(cc.Node) ], u.prototype, "spritePrefab", void 0);
i([ p(cc.Node) ], u.prototype, "select", void 0);
i([ p(a.default) ], u.prototype, "okBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
ActOptionShiftWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "88d9d+GGl9CmovwoWmY+9y8", "ActOptionShiftWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/TweenUtil"), p = e("../../Frame/Util"), u = e("../../Game/Player/Mng"), m = e("../../Game/World/Tile"), f = e("../../Scene/EditWorldScene/EditWorldScene"), g = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), {ccclass: y, property: v} = cc._decorator;
let C = class extends l.default {
constructor() {
super(...arguments);
this.worldBtn = null;
this.coorBtn = null;
this.animDropDown = null;
this.okBtn = null;
this.triggerItem = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.worldBtn.node.on(a.default.CLICK, this.onWorldBtn, this);
this.coorBtn.node.on(a.default.CLICK, this.onCoorBtn, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.evt = p.Util.deepCopy(e);
this.evt.extra = this.evt.extra || {};
this.evt.extra.evts = this.evt.extra.evts || [];
this.updateWorldBtn(this.evt.extra.worldId);
this.updateCoorBtn(this.evt.extra.coor);
let t = this.evt.extra.animId || 2, o = r.Config.shiftWorldAnims || [], i = o.findIndex(e => e.id == t);
this.animDropDown.setDataArr(o);
this.animDropDown.selectByIdx(i);
this.triggerItem.setData("切换地图后", this.evt.extra.evts, !1);
});
}
autoSelectWorldPos(e) {
return n(this, void 0, void 0, function*() {
let t = yield u.Mng.Ins.worldMng.loadOne(e, !0);
if (t && t.worldLayout.startPoint && t.worldLayout.startPoint.pos) {
let e = t.worldLayout.startPoint.pos;
return {
iCol: Math.floor(e.x / m.default.SIZE),
iRow: Math.floor(e.y / m.default.SIZE)
};
}
return null;
});
}
updateCoorBtn(e) {
if (e) {
let t = e.iCol || 0, o = e.iRow || 0;
this.coorBtn.label.string = `(${t},${o})`;
} else this.coorBtn.label.string = "请选择";
}
updateWorldBtn(e) {
return n(this, void 0, void 0, function*() {
let t = yield u.Mng.Ins.worldMng.loadOne(e);
this.worldBtn.label.string = t ? t.info.name : "请选择";
if (!this.evt.extra.coor) {
this.evt.extra.coor = yield this.autoSelectWorldPos(this.evt.extra.worldId);
this.updateCoorBtn(this.evt.extra.coor);
}
});
}
onWorldBtn() {
c.default.ins.OpenPanelByName("SelectWorldPanel", e => {
let t = c.default.ins.findScene(f.default), o = t.gameData.worldIds;
o = o.filter(e => e != t.worldData.id);
e.setData(o, this.evt.extra.worldId);
e.call = e => {
this.evt.extra.worldId = e;
this.updateWorldBtn(e);
};
});
}
onCoorBtn() {
return n(this, void 0, void 0, function*() {
let e = this.evt.extra.worldId;
(yield u.Mng.Ins.worldMng.loadOne(e)) ? c.default.ins.OpenPanelByName("ActOptionSelectWorldCoorPanel", t => {
let o = this.evt.extra.coor;
t.setData(e, o);
t.selectCall = e => {
this.evt.extra.coor = e;
this.updateCoorBtn(e);
};
}) : d.default.showToast("请先选择地图");
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
let e = this.evt.extra.worldId, t = yield u.Mng.Ins.worldMng.loadOne(e), o = this.evt.extra.coor;
if (t) if (o) {
this.closePanel();
this.evt.extra.animId = this.animDropDown.getCurData().id;
this.call && this.call(this.evt);
} else {
d.default.showToast("请选择坐标");
h.TweenUtil.applyScaleBounce2(this.coorBtn.node, 1, 1.2);
} else {
d.default.showToast("请选择地图");
h.TweenUtil.applyScaleBounce2(this.worldBtn.node, 1, 1.2);
}
});
}
};
i([ v(a.default) ], C.prototype, "worldBtn", void 0);
i([ v(a.default) ], C.prototype, "coorBtn", void 0);
i([ v(s.default) ], C.prototype, "animDropDown", void 0);
i([ v(a.default) ], C.prototype, "okBtn", void 0);
i([ v(g.default) ], C.prototype, "triggerItem", void 0);
C = i([ y ], C);
o.default = C;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
ActOptionSwitchHeroPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5fc92wYkB9NHaWkce1dCWYU", "ActOptionSwitchHeroPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/Mng"), c = e("../../CustomUI/Button"), d = e("../../Frame/Top"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.btnSelHero = null;
this.btnOk = null;
this.evt = null;
this.saveCall = null;
}
onLoad() {
super.onLoad();
this.btnSelHero.node.on(c.default.CLICK, this.onClickSelHero, this);
this.btnOk.node.on(c.default.CLICK, this.onClickOk, this);
}
setData(e) {
this.evt = e;
let t = e.extra;
this._confId = t ? t.confId : null;
this.onRefresh();
}
onRefresh() {
return n(this, void 0, void 0, function*() {
let e = yield l.Mng.Ins.actorMng.loadOne(this._confId);
if (e) {
this.nameLabel.string = e.name;
l.Mng.Ins.spriteMng.setPropSprite(this.icon, e.textureName, 160);
} else {
this.nameLabel.string = "";
this.icon.spriteFrame = null;
}
});
}
onClickSelHero() {
r.default.ins.OpenPanelByName("SelectHeroPanel", e => {
e.setData(null);
e.selectCall = (e => {
if (e) {
this._confId = e.id;
this.onRefresh();
}
}).bind(this);
});
}
onClickOk() {
if (!this._confId || "" == this._confId) {
d.default.showToast("请选择英雄");
return;
}
this.closePanel();
let e = {
type: a.GSDataNodeType.GSYS_SwitchHero,
confId: this._confId
};
this.evt.extra = e;
this.saveCall && this.saveCall(this.evt);
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(c.default) ], u.prototype, "btnSelHero", void 0);
i([ p(c.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
ActOptionUploadRankScorePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "95f0d5V3T5HM5EfCy7/YEPL", "ActOptionUploadRankScorePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), c = e("../../Game/Player/Mng"), d = e("../../Frame/SceneManager"), h = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.rankDropDown = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.rankDropDown.node.on(s.default.SELECT_CHANGE, this.onRankChange, this);
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = l.Util.deepCopy(e);
this.evt = e;
e.extra || (e.extra = {
gameRankId: "",
sourceType: 0,
propId: 0,
variableId: 0
});
let t = d.default.ins.findScene(h.default).gameData, o = yield c.Mng.Ins.gameRankMng.loadMany(t.gameRankIds), i = [];
for (let e = 0; e < o.length; e++) {
let t = o[e];
i.push({
str: t.name,
id: t.id
});
}
let n = i.findIndex(t => t.id == e.extra.gameRankId);
this.rankDropDown.setDataArr(i, n);
});
}
onRankChange(e, t, o) {
this.evt && t && (this.evt.extra.gameRankId = t.id);
}
onOkBtn() {
this.closePanel();
this.call && this.call(this.evt);
}
};
i([ u(s.default) ], m.prototype, "rankDropDown", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
ActorCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a4388LrMC1MnatUtBaoxZNz", "ActorCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/UIColor"), d = e("../../Game/Player/Mng"), h = e("../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
new Map([ [ h.Team.Hero, {
color: c.UIColor.green,
name: "主角"
} ], [ h.Team.Enemy, {
color: c.UIColor.red,
name: "敌人"
} ], [ h.Team.NPC, {
color: c.UIColor.blue,
name: "NPC"
} ], [ h.Team.Ally, {
color: c.UIColor.yellow,
name: "队友"
} ] ]);
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.optionBtn = null;
this.createNewNode = null;
this.spTeam = null;
this.lbTeam = null;
this.conf = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.optionBtn.node.on(s.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.optionBtn.node.active = !e.createNew;
this.createNewNode.active = e.createNew;
e.createNew ? a.I18nMgr.getSprite("createNewBtn", e => {
cc.isValid(this.sprite) && (this.sprite.spriteFrame = e);
}) : d.Mng.Ins.spriteMng.setActorSprite(this.sprite, e.textureName, 100);
});
}
onOptionBtnTap() {
l.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ u(cc.Sprite) ], m.prototype, "sprite", void 0);
i([ u(s.default) ], m.prototype, "optionBtn", void 0);
i([ u(cc.Node) ], m.prototype, "createNewNode", void 0);
i([ u(cc.Sprite) ], m.prototype, "spTeam", void 0);
i([ u(cc.Label) ], m.prototype, "lbTeam", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
ActorGroupCreatePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "80304OkCdtCzYSlGWr6kJkr", "ActorGroupCreatePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends r.default {
constructor() {
super(...arguments);
this.editGroupName = null;
this.btnOk = null;
this._delOnResult = null;
this._popSelect = !1;
}
onLoad() {
super.onLoad();
this.btnOk.node.on(s.default.CLICK, this.onClickOk, this);
}
setData(e, t) {
this._delOnResult = t;
this._popSelect = e;
}
onClickOk() {
let e = this.editGroupName.string;
null != e && "" != e ? d.Mng.Ins.assetGroupMng.isGroupNameExist(e) ? c.default.showToast("分组名字已经存在") : this.onCreate(e) : c.default.showToast("分组名字不能为空");
}
onCreate(e) {
return n(this, void 0, void 0, function*() {
let t = new a.ActorGroupData();
t.groupName = e;
if (t = yield d.Mng.Ins.assetGroupMng.save(t)) {
cc.game.emit("refreshElementBox");
this.closePanel();
d.Mng.Ins.assetGroupMng.curGroupName = e;
l.default.ins.OpenPanelByName("EditAssetGroupPanel", e => {
e.setData(t);
});
}
});
}
};
i([ p(cc.EditBox) ], u.prototype, "editGroupName", void 0);
i([ p(s.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng"
} ],
ActorGroupFilterCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8a4a2Gd8cZMz7GG62SHfwz7", "ActorGroupFilterCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.btnEdit = null;
this.label = null;
this.groupName = null;
}
onLoad() {
this.btnEdit.node.on(a.default.CLICK, this.onClickEdit, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
this.groupName = e.str;
this.btnEdit.node.active = e.canEdit;
this.label.string = l.Util.clampStr(e.str, 6, "..");
}
onClickEdit() {
return n(this, void 0, void 0, function*() {
cc.game.emit("ActorGroupFilterCell.onClickEdit");
let e = yield c.Mng.Ins.assetGroupMng.findGroup(this.groupName);
e && r.default.ins.OpenPanelByName("EditAssetGroupPanel", t => {
t.setData(e);
});
});
}
};
i([ h(a.default) ], p.prototype, "btnEdit", void 0);
i([ h(cc.Label) ], p.prototype, "label", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/Mng": "Mng"
} ],
ActorGroupNameToggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8e4eaX933hPQrX+2uxeb8/U", "ActorGroupNameToggle");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/DataBind"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends r.DB.DataBindComponent {
constructor() {
super(...arguments);
this.toggle = null;
this.lableName = null;
this.btnCreate = null;
this._data = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.toggle.node.on(s.default.STATE_CHANGE, this.onStateChange, this);
this.btnCreate.node.on(n.default.CLICK, () => {
d.Mng.Ins.assetGroupMng.customGroups.length >= 10 ? c.default.showToast("最多可创建10个分组") : l.default.ins.OpenPanelByName("ActorGroupCreatePanel", e => {
e.setData(!1, e => {
e && this.node.parent.emit("onRefreshGroup");
});
});
}, this);
}
setData(e) {
this._data = e;
this.lableName.string = e.groupName;
this._data.isSelect ? this.toggle.check() : this.toggle.uncheck();
this.btnCreate.node.active = e.isCreateBtn;
}
onStateChange() {
this._data.isSelect = this.toggle.isChecked;
}
};
i([ p(s.default) ], u.prototype, "toggle", void 0);
i([ p(cc.Label) ], u.prototype, "lableName", void 0);
i([ p(n.default) ], u.prototype, "btnCreate", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/DataBind": "DataBind",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng"
} ],
ActorMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2afcb4r6F1H9JNb2k4zeJf7", "ActorMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./BaseConfMng"), r = e("../../Frame/Config"), l = e("../../GameData/GameTypeDefine"), c = e("../../../scripts/_autogen/data/data");
o.default = class extends s.BaseConfMng {
constructor() {
super();
this.confType = l.CommonDataType.Actor;
this.creativeConfType = c.CreativeConfType.actor;
this.appendBuildIn(r.Config.actorConfs);
}
upgradeConf(e) {
if (e) {
e.type = l.CommonDataType.Actor;
e.rpgConf = e.rpgConf || {
moveSpeed: 256,
aiMoveType: l.AIMoveType.None,
beatenLockHpTime: .8
};
e.jumpPlatformConf = e.jumpPlatformConf || {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: l.AIMoveType.None,
beatenLockHpTime: .8
};
}
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleActorConf,
params: t
}, n.Game_RGetRoleActorConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleActorConf,
params: t
}, n.Game_RSaveRoleActorConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleActorConf,
params: t
}, n.Game_RSaveRoleActorConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleActorConf,
params: t
}, n.Game_RDelRoleActorConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
ActorOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4d096pLWLJLkKesoOHF6y7S", "ActorOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ActorOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/SceneManager"), s = e("../../Frame/Util"), r = e("../../Game/Player/Mng"), l = e("../../Game/World/Actor"), c = e("../../Scene/EditWorldScene/EditWorldScene"), d = e("./CommonOptionHelper");
o.ActorOptionHelper = class extends d.CommonOptionHelper {
constructor() {
super(...arguments);
this.actorConf = null;
this.imageFileType = n.ImageFileType.actor;
this.optionName = "角色";
this.refreshMsgName = "refreshActorList";
this.changeDataMsgName = null;
}
setConf(e) {
super.setConf(e);
this.actorConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
yield r.Mng.Ins.actorMng.save(this.actorConf);
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield r.Mng.Ins.actorMng.delete(this.actorConf);
});
}
displayWorldType() {
return !0;
}
initInspector(e) {
if (e) {
e.reset();
if (null == this._worldType) {
let e = a.default.ins.findScene(c.default);
this._worldType = e.worldData.info.type;
}
l.default.displayConfInspector(this._worldType, e, this.actorConf, () => {
this.initInspector(e);
});
}
}
onShiftWorldType(e, t) {
this._worldType = e;
t && this.initInspector(t);
}
onModifyTexture(e, t) {
let o = s.Util.getPixelTirmBounds(e, 256, 256), i = s.Util.bounds2OffsetAndSize(o);
t.collider = i;
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Actor": "Actor",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
ActorPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "706d127eddO74ddZKwAhOUI", "ActorPage");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../CustomUI/ScrollList"), r = e("../../../Game/OperationFlow"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/Mng"), d = e("../../../Game/World/Actor"), h = e("../../../Game/World/Tile"), p = e("../../../GameData/GameTypeDefine"), u = e("../EditWorldScene"), m = e("../TouchWorldShowGizmos"), f = e("./EditPageBase"), {ccclass: g, property: y} = cc._decorator;
let v = i = class extends f.EditPageBase {
constructor() {
super(...arguments);
this.editWorldScene = null;
this.list = null;
}
onLoad() {
this.list.node.on(s.default.CLICK_ITEM, this.onClickActorCell, this);
}
onEnable() {
return a(this, void 0, void 0, function*() {
cc.game.on("refreshActorList", this.refreshList, this);
yield this.refreshList();
this.editWorldScene.gameData.parnetGame || cc.game.emit(i.ActorPage_Enable, this);
});
}
onDisable() {
cc.game.off("refreshActorList", this.refreshList, this);
}
refreshList() {
return a(this, void 0, void 0, function*() {
this.editWorldScene.elementBox.emptyLabel.node.active = !1;
let e = this.editWorldScene.elementBox.filter.getCurData(), t = yield c.Mng.Ins.assetGroupMng.findGroup(e.str);
t || (t = c.Mng.Ins.assetGroupMng.all);
let o = [];
for (let e of t.refDataList) e.confType == p.CommonDataType.Actor && o.push(e.confId);
let i = yield c.Mng.Ins.actorMng.loadMany(o), n = [];
l.DynamicMng.Ins.isDisable(l.FunctionEnum.PaintAsset, !1) || n.push({
createNew: !0
});
n = n.concat(i);
this.list.setDataArr(n);
this.list.selectByIdx(1);
this.editWorldScene.elementBox.emptyLabel.node.active = 1 == n.length;
});
}
onClickActorCell(e, t) {
if (t && t.createNew) this.createActorConf(); else {
this.instanceActor(t);
cc.game.emit(i.ActorPage_PUT_ACTOR, t);
}
}
createActorConf() {
r.OperationFlow.paintActor(() => {
this.refreshList();
});
}
instanceActor(e) {
return a(this, void 0, void 0, function*() {
let t = this.editWorldScene.world, o = t.camera.node.position, i = Math.round(o.x / h.default.SIZE), n = Math.round(o.y / h.default.SIZE), a = d.default.createActorData(e, p.Team.Hero, t.worldLayout), s = t.addActor({
iCol: i,
iRow: n
});
if (a.team == p.Team.Hero) if (t.hero) a.team = p.Team.Enemy; else {
t.hero = s;
t.startPoint.SetPosition(s.node.x, s.node.y);
}
yield s.setData(a);
(yield s.getTeamGizmo()).setTeam(a.team);
m.default.Ins.clickActor(s);
});
}
};
v.ActorPage_Enable = "ActorPage_Enable";
v.ActorPage_PUT_ACTOR = "ActorPage_PUT_ACTOR";
v.ActorPage_DEL_ACTOR = "ActorPage_DEL_ACTOR";
n([ y(u.default) ], v.prototype, "editWorldScene", void 0);
n([ y(s.default) ], v.prototype, "list", void 0);
v = i = n([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/World/Actor": "Actor",
"../../../Game/World/Tile": "Tile",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../EditWorldScene": "EditWorldScene",
"../TouchWorldShowGizmos": "TouchWorldShowGizmos",
"./EditPageBase": "EditPageBase"
} ],
ActorTypeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1a505l7SyZCt5Tr/IaMO1GG", "ActorTypeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../GameData/GameTypeDefine"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator, c = new Map([ [ a.Team.Hero, {
textureName: "Actor/astro/astro",
name: "主角"
} ], [ a.Team.Enemy, {
textureName: "Actor/monster1/monster1",
name: "敌人"
} ], [ a.Team.NPC, {
textureName: "Actor/chick/chick",
name: "NPC"
} ], [ a.Team.Ally, {
textureName: "Actor/sheep/sheep",
name: "队友"
} ] ]);
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.label = null;
this.call = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
let t = c.get(e);
this.label.string = t.name;
s.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 100);
}
};
i([ l(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ l(cc.Label) ], d.prototype, "label", void 0);
d = i([ r ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
ActorTypePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fe3e2m/ayJI2aPkcljBol1m", "ActorTypePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../TypeScript/Frame/Panel"), a = e("../../CustomUI/ScrollList"), s = e("../../GameData/GameTypeDefine"), {ccclass: r, property: l} = cc._decorator;
let c = class extends n.default {
constructor() {
super(...arguments);
this.list = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.list.node.on(a.default.CLICK_ITEM, this.onClickCell, this);
let e = [ s.Team.Hero, s.Team.Enemy, s.Team.NPC, s.Team.Ally ];
this.list.setDataArr(e);
}
closeAnim(e) {
e();
}
onClickCell(e, t) {
this.closePanel();
this.call && this.call(t);
}
};
i([ l(a.default) ], c.prototype, "list", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../TypeScript/Frame/Panel": "Panel",
"../../CustomUI/ScrollList": "ScrollList",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
Actor: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "043fdKW/1JAe6wsfi+XFjFf", "Actor");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Config"), r = e("../../Frame/Damager"), l = e("../../Frame/FightSystem"), c = e("../../Frame/Hper"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/UIColor"), u = e("../../Frame/Util"), m = e("../../GameData/GameTypeDefine"), f = e("../../Scene/GameScene/GameScene"), g = e("../GameBoard"), y = e("../Player/GamePetMng"), v = e("../Player/GameSaveMng"), C = e("../Player/Mng"), _ = e("../Player/SpriteMng"), S = e("../Player/TriggerMng"), I = e("./AICtrl/Com/AiComDirLineMover"), G = e("./Gizmos/TeamGizmo"), T = e("./Tile"), b = e("./Weapon/Weapon"), M = e("./WorldNodeBody"), {ccclass: P, property: D} = cc._decorator;
let w = i = class extends M.default {
constructor() {
super(...arguments);
this.sprite = null;
this.gun = null;
this.spFireCd = null;
this.hper = null;
this.damager = null;
this.teamGizmo = null;
this.data = null;
this._isShowFireCd = !1;
this._fireCdEndTime = 0;
this.flashTime = 0;
this.flashEndCall = null;
this.hpBar = null;
this._dir = new cc.Vec2();
this._petList = [];
}
get dataId() {
return this.data.id;
}
get gravity() {
return this.data ? -this.data.g : 0;
}
static createActorData(e, t, o) {
let i = "actor" + o.incId++, n = {
confId: e.id,
id: i,
name: e.name,
team: t,
author: "",
isBuildIn: e.isBuildIn,
gunId: e.gunId,
hp: e.hp,
hpMax: e.hp,
scale: e.scale,
jumpHight: 0,
jumpStep: 0,
aiMoveType: m.AIMoveType.None,
beatenLockHpTime: .8,
moveSpeed: 3 * T.default.SIZE,
faceX: 1,
g: 1500
};
o.type == m.WorldType.Rpg ? s.FillActorDataHelper.fillActorDataByRpgConf(n, e.rpgConf) : o.type == m.WorldType.Jump && s.FillActorDataHelper.fillActorDataByJumpPlatformConf(n, e.jumpPlatformConf);
return n;
}
onLoad() {
super.onLoad();
cc.game.on(_.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
this.node.on(l.FightSystem.Event.Beaten, this.onBeaten, this);
this.hper = this.node.getComponent(c.default);
this.damager = this.node.getComponent(r.default);
this.spFireCd && (this.spFireCd.node.parent.active = !1);
}
reset() {}
setProperty(e, t, o, i, n) {
let a = typeof this.data[e];
if ("boolean" == a) {
let o = "true" == t || "1" == t;
this.data[e] = o;
"isShow" == e && (this.node.active = o);
} else if ("number" == a) {
let a = parseFloat(t);
Number.isNaN(a) && (a = 0);
o && (a *= -1);
n && (a *= T.default.SIZE);
if ("team" == e) {
this.data[e] = a;
this.setTeam(a);
} else {
(i || o) && (a += this.data[e]);
this.data[e] = a;
if ("hp" == e) {
this.hper.hp = a;
a <= 0 && this.doDead();
} else "hpMax" == e ? this.hper.HpMax = a : "scale" == e && (this.node.scale = a);
}
} else if ("string" == a) {
this.data[e] = t;
"gunId" == e && this.setupGun(this.data.gunId);
} else console.error(`>>not support actor property[${e}] type[${a}]`);
}
onDisable() {
super.onDisable && super.onDisable();
this.setHpBar(null);
}
onDestroy() {
super.onDestroy && super.onDestroy();
this.setHpBar(null);
cc.game.off(_.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
}
setCutting(e) {
this.sprite.enabled = !e;
this.gun && this.gun.setCutting(e);
}
showFireCd(e) {
if (!(e <= 0 || this.data.team != m.Team.Hero)) {
this._isShowFireCd = !0;
this._fireCdTotolTime = 1e3 * e;
this._fireCdEndTime = cc.director.getTotalTime() + this._fireCdTotolTime;
if (this.spFireCd) {
this.spFireCd.node.parent.active = !0;
this.spFireCd.fillRange = 0;
}
}
}
updateFireCd() {
if (!this._isShowFireCd) return;
let e = 1 - (this._fireCdEndTime - cc.director.getTotalTime()) / this._fireCdTotolTime;
if (e > 1) {
e = 1;
this._isShowFireCd = !1;
}
e < 0 && (e = 0);
if (this.spFireCd) {
this.spFireCd.fillRange = e;
this._isShowFireCd || (this.spFireCd.node.parent.active = !1);
}
}
onPixelsUpdate(e, t) {
return a(this, void 0, void 0, function*() {
this._conf && this._conf.id == e && C.Mng.Ins.spriteMng.setActorSprite(this.sprite, t, 64);
});
}
initDataDefaultValue() {
this.data.scale = this.data.scale || 1;
this.data.onHeroEnter = this.data.onHeroEnter || [];
this.data.onDie = this.data.onDie || [];
this.data.onBeaten = this.data.onBeaten || [];
this.data.onJump = this.data.onJump || [];
this.data.onMove = this.data.onMove || [];
this.data.onGroundMove = this.data.onGroundMove || [];
this.data.onAirMove = this.data.onAirMove || [];
this.data.aiMoveType = this.data.aiMoveType || m.AIMoveType.None;
this.data.aiMoveType == m.AIMoveType.PlatformJump_DirLine && (this.data.dirLineMoveData = this.data.dirLineMoveData || {
moveDir: m.MoveDirType.Up,
speed: 2,
distance: 2
});
this.data.team = this.data.team || m.Team.None;
"string" == typeof this.data.beatenLockHpTime && (this.data.beatenLockHpTime = parseInt(this.data.beatenLockHpTime) || .8);
this.data.beatenLockHpTime = this.data.beatenLockHpTime || 0;
this.data.moveSpeed = this.data.moveSpeed || 3 * T.default.SIZE;
this.data.jumpInterval = this.data.jumpInterval || 0;
this.data.traceHeroRange = this.data.traceHeroRange || 5 * T.default.SIZE;
null == this.data.beatenBackRange && (this.data.beatenBackRange = 1.8);
this.data.enableClimbWall = this.data.enableClimbWall || !1;
this.data.isShow = this.data.isShow || !0;
}
get conf() {
return this._conf;
}
setData(e) {
return a(this, void 0, void 0, function*() {
this.spFireCd && (this.spFireCd.node.parent.active = !1);
this._petList.length = 0;
let t = this.world;
t.isGameScene && (e = u.Util.deepCopy(e));
this.data = e;
e.hpMax = e.hpMax || e.hp;
this.flashEndCall = null;
this.initDataDefaultValue();
this.node.active = e.isShow;
e.faceX && this.setScaleX(e.faceX);
this.setTeam(e.team);
this._lastSyncHp = e.hp;
this.hper.lockHp = !1;
this.hper.hp = e.hp;
this.hper.HpMax = e.hpMax;
this.damager.enabled = e.team == m.Team.Enemy;
this.node.scale = e.scale;
if (t.worldLayout.type == m.WorldType.Rpg) {
this._boundingBoxExtInTiledPhysics.x = 0;
this._boundingBoxExtInTiledPhysics.y = -13;
this._boundingBoxExtInTiledPhysics.width = 0;
this._boundingBoxExtInTiledPhysics.height = -26;
} else {
this._boundingBoxExtInTiledPhysics.x = 0;
this._boundingBoxExtInTiledPhysics.y = 0;
this._boundingBoxExtInTiledPhysics.width = 0;
this._boundingBoxExtInTiledPhysics.height = 0;
}
this.node.width = 48;
this.node.height = 52;
let o = yield C.Mng.Ins.actorMng.loadOne(e.confId);
this._conf = o;
if (o) {
let e = o.collider || {
offset: {
x: 0,
y: 0
},
size: {
w: 48,
h: 52
}
}, t = this.node.getComponent(cc.BoxCollider);
t.size = cc.size(e.size.w, e.size.h);
t.offset = cc.v2(e.offset.x, e.offset.y);
C.Mng.Ins.spriteMng.setActorSprite(this.sprite, o.textureName, 64);
}
yield this.setupGun(e.gunId);
});
}
setTeam(e) {
this.hper.team = e;
this.damager.team = e;
e == m.Team.Hero || e == m.Team.NPC || e == m.Team.Ally ? this.damager.dmg = 0 : e == m.Team.Enemy && (this.damager.dmg = 1);
let t = this.world;
t.isGameScene || t.hero != this && e != m.Team.Hero || t.onReCheckHero();
this.LoadHpBar(e);
}
get weaponContext() {
this._weaponContext || (this._weaponContext = {
noticeFire: this.showFireCd.bind(this)
});
return this._weaponContext;
}
setupGun(e) {
return a(this, void 0, void 0, function*() {
this.gun.team = this.data.team;
this.data.gunId = e;
let t = yield C.Mng.Ins.weaponMng.loadOne(e);
if (this.node) {
this.gun.firing = !1;
if (t) {
yield this.gun.setData(t, this.weaponContext);
this.gun.node.active = !0;
} else {
yield this.gun.setData(null, null);
this.gun.node.active = !1;
}
}
});
}
onCollisionEnter(e, t) {
let o = this.world;
o.playing && !o.isHeroActor(t.node) && o.isHeroActor(e.node) && this.data && S.default.Ins.emitTrigger(this.data.onHeroEnter, this.node);
}
onBeaten(e) {
let t = this.world;
this.data.hp = this.hper.hp;
if (e.dmg > 0) {
let o = this.node.position;
o.y += this.node.height / 2;
t.playFloatLabel({
str: "-" + e.dmg,
pos: o,
color: cc.Color.RED,
anim: "JumpLabel",
size: 60
});
S.default.Ins.emitTrigger(this.data.onBeaten, this.node);
if (e.causeDeath) this.doDead(); else {
"string" == typeof this.data.beatenLockHpTime && (this.data.beatenLockHpTime = parseFloat(this.data.beatenLockHpTime));
let e = this.data.beatenLockHpTime || 0;
this.hper.lockHp = !0;
this.playFlashAnim(e, () => {
this.hper.lockHp = !1;
});
}
}
}
doDead() {
let e = this.world;
this.data.onlyOnce && v.default.Ins.setActorFlag(e.worldData.id, this.data.id);
this.hper.hp = 0;
this.gun.firing = !1;
this.damager.enabled = !1;
this.data.hp = this.data.hpMax;
this.playFlashAnim(1.5, () => {
S.default.Ins.emitTrigger(this.data.onDie, this.node);
if (this.data.team == m.Team.Hero) S.default.Ins.emitTrigger([ {
act: m.TriggerAct.GameOver
} ], this.node); else {
e.removeActor(this);
this.data.team == m.Team.Ally && e.hero && e.hero.removePet(this.world.id);
}
});
}
setScaleX(e) {
this.sprite.node.scaleX = e;
this.data.faceX = e;
}
getScaleX() {
return this.sprite.node.scaleX;
}
getTeamGizmo() {
return a(this, void 0, void 0, function*() {
if (!this.teamGizmo) {
let e = yield u.Util.loadBundleRes("Prefab/TeamGizmo"), t = cc.instantiate(e);
this.node.addChild(t);
let o = t.getComponent(G.default);
this.teamGizmo = o;
}
return this.teamGizmo;
});
}
initInspector(e) {
let t = this.world.worldLayout.type;
e.reset();
i.initInspectHead(e, this.data, this._conf);
t == m.WorldType.Rpg ? i.initInspectorRPG(e, this.data, this.data, this, this.gun.conf, () => {
this.initInspector(e);
}) : i.initInspectorPlatformJump(e, this.data, this.data, this, this.gun.conf, () => {
this.initInspector(e);
});
}
static displayConfInspector(e, t, o, n) {
return a(this, void 0, void 0, function*() {
let a = yield C.Mng.Ins.weaponMng.loadOne(o.gunId);
e == m.WorldType.Rpg ? i.initInspectorRPG(t, o, o.rpgConf, null, a, n) : i.initInspectorPlatformJump(t, o, o.jumpPlatformConf, null, a, n);
});
}
static initInspectorRPG(e, t, o, i, n, a) {
o.onHeroEnter = o.onHeroEnter || [];
o.onDie = o.onDie || [];
o.onBeaten = o.onBeaten || [];
o.onMove = o.onMove || [];
t.team = t.team || m.Team.None;
this.initInspectTeam(e, i, t, a);
let s = t.team;
if (s != m.Team.NPC) {
s == m.Team.Enemy && this.initInspectMoverType(e, o, [ {
str: "静止",
type: m.AIMoveType.Grid_Static
}, {
str: "随机移动",
type: m.AIMoveType.Grid_Random
} ], a);
s == m.Team.Ally && this.initInspectMoverType(e, o, [ {
str: "静止",
type: m.AIMoveType.Grid_Static
}, {
str: "随机移动",
type: m.AIMoveType.Grid_Random
}, {
str: "跟随主角",
type: m.AIMoveType.PlatformJump_FollowHero
} ], a);
this.initInspectHPMax(e, t);
this.initInspectWeapon(e, i, n, t);
this.initInspectScale(e, i, t);
this.initInspectMoveSpeed(e, o);
this.initInspectBeatenLockHpTime(e, o);
s == m.Team.Ally && e.addTrigger("当主角接触此角色时：", o.onHeroEnter, !0);
s == m.Team.Enemy && e.addToggle("防刷怪物：", t.onlyOnce, e => {
t.onlyOnce = e;
});
e.addTrigger("当此角色死亡时：", o.onDie, !0);
e.addTrigger("当此角色受击时：", o.onBeaten, !0);
e.addTrigger("当此角色移动时：", o.onMove, !0);
} else e.addTrigger("当主角接触此角色时：", o.onHeroEnter, !0);
}
static initInspectorPlatformJump(e, t, o, i, n, a) {
o.onHeroEnter = o.onHeroEnter || [];
o.onDie = o.onDie || [];
o.onBeaten = o.onBeaten || [];
o.onJump = o.onJump || [];
o.onMove = o.onMove || [];
o.onGroundMove = o.onGroundMove || [];
o.onAirMove = o.onAirMove || [];
t.team = t.team || m.Team.None;
this.initInspectTeam(e, i, t, a);
let s = t.team;
if (s == m.Team.NPC) {
e.addTrigger("当主角接触此角色时：", o.onHeroEnter, !0);
return;
}
this.initInspectHPMax(e, t);
this.initInspectWeapon(e, i, n, t);
let r = !1;
s == m.Team.Hero && (r = !0);
if (s == m.Team.Enemy) {
let t = this.initInspectMoverType(e, o, [ {
str: "静止",
type: m.AIMoveType.PlatformJump_Static
}, {
str: "痴呆",
type: m.AIMoveType.PlatformJump_IDLE
}, {
str: "地面-遇墙折返",
type: m.AIMoveType.PlatformJump_Ground_WallBack
}, {
str: "地面-踩空折返",
type: m.AIMoveType.PlatformJump_Ground_MisstepBack
}, {
str: "蹦跳-遇墙折返",
type: m.AIMoveType.PlatformJump_Jump_WallBack
}, {
str: "蹦跳-追逐主角",
type: m.AIMoveType.PlatformJump_Jump_Trace
}, {
str: "飞行",
type: m.AIMoveType.PlatformJump_DirLine
} ], a);
t.type != m.AIMoveType.PlatformJump_Jump_WallBack && t.type != m.AIMoveType.PlatformJump_Jump_Trace || (r = !0);
if (t.type == m.AIMoveType.PlatformJump_DirLine) {
o.dirLineMoveData = o.dirLineMoveData || {
moveDir: m.MoveDirType.Up,
speed: 2,
distance: 2
};
I.AiComDirLineMover.displayInspector(e, o.dirLineMoveData);
}
} else if (s == m.Team.Ally) {
let t = this.initInspectMoverType(e, o, [ {
str: "静止",
type: m.AIMoveType.PlatformJump_Static
}, {
str: "痴呆",
type: m.AIMoveType.PlatformJump_IDLE
}, {
str: "地面-遇墙折返",
type: m.AIMoveType.PlatformJump_Ground_WallBack
}, {
str: "地面-踩空折返",
type: m.AIMoveType.PlatformJump_Ground_MisstepBack
}, {
str: "蹦跳-遇墙折返",
type: m.AIMoveType.PlatformJump_Jump_WallBack
}, {
str: "蹦跳-追逐主角",
type: m.AIMoveType.PlatformJump_Jump_Trace
}, {
str: "宠物",
type: m.AIMoveType.PlatformJump_FollowHero
}, {
str: "飞行",
type: m.AIMoveType.PlatformJump_DirLine
} ], a);
t.type != m.AIMoveType.PlatformJump_Jump_WallBack && t.type != m.AIMoveType.PlatformJump_Jump_Trace || (r = !0);
if (t.type == m.AIMoveType.PlatformJump_DirLine) {
o.dirLineMoveData = o.dirLineMoveData || {
moveDir: m.MoveDirType.Up,
speed: 2,
distance: 2
};
I.AiComDirLineMover.displayInspector(e, o.dirLineMoveData);
}
}
this.initInspectScale(e, i, t);
this.initInspectMoveSpeed(e, o);
if (r) {
this.initInspectJumpHeight(e, o);
this.initInspectJumpInterval(e, o);
if (s == m.Team.Hero) {
this.initInspectJumpStep(e, o);
this.initInspectEnableClimbWall(e, o);
}
}
this.initInspectBeatenLockHpTime(e, o);
this.initInspectBeatenBackRange(e, o);
s == m.Team.Enemy && e.addToggle("死亡后不再出现？", t.onlyOnce, e => {
t.onlyOnce = e;
});
e.addTrigger("当此角色死亡时：", o.onDie, !0);
e.addTrigger("当此角色受击时：", o.onBeaten, !0);
e.addTrigger("当此角色地面移动时：", o.onGroundMove, !0);
e.addTrigger("当此角色空中移动时：", o.onAirMove, !0);
r && e.addTrigger("当此角色跳跃时：", o.onJump, !0);
}
static initInspectHead(e, t, o) {
e.addHead(t.name, o ? o.textureName : void 0);
}
static initInspectTeam(e, t, o, i) {
o.team = o.team || m.Team.None;
let n = [ {
str: "主角",
team: m.Team.Hero
}, {
str: "队友",
team: m.Team.Ally
}, {
str: "NPC",
team: m.Team.NPC
}, {
str: "敌人",
team: m.Team.Enemy
} ], s = n.findIndex(e => o.team == e.team), r = e.addDropDownBox("阵营", n, s, (e, n, l) => a(this, void 0, void 0, function*() {
if (l) {
if (t && n.team == m.Team.Hero) {
let e = t.world;
if (e.hero && e.hero != t) {
r.dropDownBox.selectByIdx(s);
h.default.showToast("只能放置一个主角");
return;
}
}
let e = o.team != n.team;
o.team = n.team;
if (t) {
t.setTeam(o.team);
(yield t.getTeamGizmo()).setTeam(o.team);
e && l && i && i();
} else e && l && i && i();
}
}));
}
static initInspectMoverType(e, t, o, i) {
let n = o.findIndex(e => e.type == t.aiMoveType);
-1 == n && (n = 0);
let a = e.addButton("移动方式", o[n].str, () => {
d.default.ins.OpenPanelByName("SelectAIPanel", e => {
e.setData(o, n);
e.selectCall = e => {
t.aiMoveType = e.type;
a.button.label.string = e.str;
i && i();
};
});
});
return o[n];
}
static initInspectHPMax(e, t) {
let o = t.hpMax || t.hp;
e.addNumberEditBox("血量", o, 1, 999999, e => {
t.hp = e;
t.hpMax = e;
});
}
static initInspectWeapon(e, t, o, i) {
let n = "无武器";
o && (n = o.name);
let a = e.addButton("武器", n, () => {
d.default.ins.OpenPanelByName("SelectWeaponPanel", e => {
e.setData(i.gunId);
e.selectCall = e => {
i.gunId = e.id;
a.button.label.string = e.name;
t && t.setupGun(e.id);
};
});
});
}
static initInspectScale(e, t, o) {
o.scale = o.scale || 1;
e.addNumberEditBox("缩放", o.scale, .2, 8, e => {
o.scale = e;
if (t) {
t.node.scale = o.scale;
t.world.placeGizmos.setScale(o.scale);
}
});
}
static initInspectMoveSpeed(e, t) {
e.addNumberEditBox("移动速度(格/秒)", t.moveSpeed / T.default.SIZE, .1, 100, e => {
t.moveSpeed = e * T.default.SIZE;
});
}
static initInspectJumpHeight(e, t) {
e.addNumberEditBox("跳跃高度(格)", t.jumpHight / T.default.SIZE, .01, 32, e => {
t.jumpHight = e * T.default.SIZE;
});
}
static initInspectJumpInterval(e, t) {
t.jumpInterval = t.jumpInterval || 0;
e.addNumberEditBox("跳跃间隔(秒)", t.jumpInterval, 0, 5, e => {
t.jumpInterval = e;
});
}
static initInspectJumpStep(e, t) {
e.addNumberEditBox("跳跃段数", t.jumpStep, 1, 999999, e => {
e = Math.floor(e);
t.jumpStep = e;
});
}
static initInspectEnableClimbWall(e, t) {
t.enableClimbWall = t.enableClimbWall || !1;
e.addToggle("爬墙跳", t.enableClimbWall, e => {
t.enableClimbWall = e;
});
}
static initInspectBeatenLockHpTime(e, t) {
t.beatenLockHpTime = t.beatenLockHpTime || .8;
e.addNumberEditBox("受击后无敌(秒)", t.beatenLockHpTime, 0, 999999, e => {
t.beatenLockHpTime = e;
});
}
static initInspectBeatenBackRange(e, t) {
t.beatenBackRange = t.beatenBackRange || 1.8;
e.addNumberEditBox("受击被击飞(格)", t.beatenBackRange, 0, 10, e => {
t.beatenBackRange = e;
});
}
onDamageByTile(e) {
if (!this.hper.isAlive()) return;
let t = Math.ceil(e * this.hper.HpMax), o = this.hper.hp - t;
o < 0 && (o = 0);
this.hper.hp = o;
this.onBeaten({
hper: this.hper,
damager: null,
dmg: t,
isCrit: !1,
causeDeath: o <= 0
});
}
playFlashAnim(e, t) {
this.flashTime = e;
this.flashEndCall = t;
}
update(e) {
this.updateHpBar();
this.updateFireCd();
if (this.flashTime >= 0) {
this.flashTime -= e;
let t = Math.floor(10 * this.flashTime) % 2;
this.sprite.node.opacity = 0 == t ? 255 : 0;
if (this.flashTime < 0) {
this.sprite.node.opacity = 255;
this.flashEndCall && this.flashEndCall();
this.flashEndCall = null;
}
}
}
LoadHpBar(e) {
if (g.GameBoard.IS_EDITOR_MODE) return;
let t = !1;
!this.hper || e != m.Team.Enemy && e != m.Team.Ally || (t = !0);
t ? this.hpBar ? this.setHpBar(this.hpBar) : i.CreateHpBar(this.setHpBar.bind(this)) : this.hpBar && this.setHpBar(null);
}
setHpBar(e) {
if (null != e) {
this.hpBar = e;
this.data.team == m.Team.Enemy && (e.barSprite.node.color = p.UIColor.red);
this.data.team == m.Team.Ally && (e.barSprite.node.color = p.UIColor.yellow);
this.node.on(l.FightSystem.Event.HpChange, this.refreshHpBar, this);
this.updateHpBar();
} else if (this.hpBar) {
this.hpBar.node.parent = null;
this.node.off(l.FightSystem.Event.HpChange, this.refreshHpBar, this);
}
}
updateHpBar() {
if (!g.GameBoard.IS_EDITOR_MODE && this.hpBar && this.hpBar.node.parent) {
let e = this.hpBar.node.position;
e.set(this.node.position);
e.y += this.node.height;
this.hpBar.node.position = e;
this._refreshHpbarTimer < cc.director.getTotalTime() && (this.hpBar.node.parent = null);
}
}
refreshHpBar(e) {
if (!(g.GameBoard.IS_EDITOR_MODE || this._lastSyncHp <= e)) {
this._lastSyncHp = e;
if (this.hpBar) {
this._refreshHpbarTimer = cc.director.getTotalTime() + 1e3;
this.hpBar.node.parent || (this.hpBar.node.parent = this.world.headContent);
this.hpBar.progress = this.hper.hp / this.hper.HpMax;
}
}
}
static CreateHpBar(e) {
let t = (e, t) => a(this, void 0, void 0, function*() {
var o = cc.instantiate(e);
o.position = cc.Vec2.ZERO;
t(o.getComponent(cc.ProgressBar));
});
this._hpBarPrefab ? t(this._hpBarPrefab, e) : (e => a(this, void 0, void 0, function*() {
let o = yield u.Util.loadBundleRes("Prefab/ActorUI/hpBar");
this._hpBarPrefab = o;
yield t(o, e);
}))(e);
}
get dirx() {
return this._dir.x;
}
get diry() {
return this._dir.y;
}
setDir(e, t) {
this._dir.x = e;
this._dir.y = t;
this.gun && this.gun.setDir(e, t);
}
get petList() {
return this._petList;
}
addPet(e) {
if (e && !(this._petList.length >= 3 || this._petList.findIndex(t => t.id == e.id) >= 0)) {
this._petList.push(e);
y.GamePetMng.Ins.RegPet(this.data.id, e.data);
e.node.emit("onAddPet", this);
cc.game.emit(f.default.HERO_PET_CHANGE);
}
}
getPetPosIdx(e) {
return this._petList.findIndex(t => t.id == e.id);
}
removePet(e) {
let t = this._petList.findIndex(t => t.id == e), o = null;
if (t >= 0) {
o = this._petList[t];
this._petList.splice(t, 1);
y.GamePetMng.Ins.RemovePet(this.data.id, o.data.id);
}
o && o.node.emit("onRemovePet", this);
cc.game.emit(f.default.HERO_PET_CHANGE);
}
};
w.FOOT_CONTACT = "FOOT_CONTACT";
w.BODY_CONTACT = "BODY_CONTACT";
w.root = null;
w._hpBarPrefab = null;
n([ D(cc.Sprite) ], w.prototype, "sprite", void 0);
n([ D(b.Weapon) ], w.prototype, "gun", void 0);
n([ D(cc.Sprite) ], w.prototype, "spFireCd", void 0);
w = i = n([ P ], w);
o.default = w;
cc._RF.pop();
}, {
"../../Frame/Config": "Config",
"../../Frame/Damager": "Damager",
"../../Frame/FightSystem": "FightSystem",
"../../Frame/Hper": "Hper",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Scene/GameScene/GameScene": "GameScene",
"../GameBoard": "GameBoard",
"../Player/GamePetMng": "GamePetMng",
"../Player/GameSaveMng": "GameSaveMng",
"../Player/Mng": "Mng",
"../Player/SpriteMng": "SpriteMng",
"../Player/TriggerMng": "TriggerMng",
"./AICtrl/Com/AiComDirLineMover": "AiComDirLineMover",
"./Gizmos/TeamGizmo": "TeamGizmo",
"./Tile": "Tile",
"./Weapon/Weapon": "Weapon",
"./WorldNodeBody": "WorldNodeBody"
} ],
AddGameTagPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "86207jaFE5DZqUbSg86xJuN", "AddGameTagPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), l = e("../../Frame/UIColor"), c = e("../../Frame/Util"), d = e("../../Game/Player/DynamicMng"), h = e("../../Game/Player/GameTagMng"), p = e("../../Scene/GameCoverScene/GameCoverScene"), {ccclass: u, property: m} = cc._decorator;
let f = class extends s.default {
constructor() {
super(...arguments);
this.tagBtn = null;
this.editBox = null;
this.scrollView = null;
this.okBtn = null;
this.tagsByMe = [];
this.data = null;
this.tipLabel = null;
}
setTip(e) {
this.tipLabel.string = `同一标签达到${e}人次时，游戏才能获得这个标签`;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e) {
this.data = e;
this.tagsByMe = h.default.Ins.getTagsByMe(e.gameId);
this.refresh();
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = [], t = (yield d.DynamicMng.Ins.loadOne("GameTags")) || [];
for (let o = 0; o < t.length; o++) {
let i = t[o];
e.push(i.tag);
}
for (let t = 0; t < this.data.tagList.length; t++) {
let o = this.data.tagList[t];
!e.includes(o.tagMsg) && o.recommendTimes > 0 && e.push(o.tagMsg);
}
for (let t = 0; t < this.tagsByMe.length; t++) {
let o = this.tagsByMe[t];
e.includes(o) || e.push(o);
}
c.Util.makeBro(this.tagBtn.node, e.length, (t, o) => {
let i = t.getComponent(a.default), n = e[o], s = this.tagsByMe.includes(n);
this.initBtn(i, n, s);
});
c.Util.flowLayout(this.tagBtn.node.parent, 10, 10);
});
}
initBtn(e, t, o) {
e.taged = o;
e.label.string = t;
this.updateBtn(e, o);
c.Util.updateLabel(e.label);
e.node.width = e.label.node.width + 20;
e.node.targetOff(this);
e.node.on(a.default.CLICK, () => {
let t = e.taged;
t = !t;
e.taged = t;
this.updateBtn(e, t);
}, this);
}
updateBtn(e, t) {
e.node.color = t ? l.UIColor.lightBlue : l.UIColor.lightGray;
e.label.node.color = t ? l.UIColor.darkBlue : l.UIColor.gray;
}
onEditEnd() {
let e = this.editBox.textLabel.string;
if ((e = e.trim()).length > 10) {
r.default.showToast("最多10个字");
return;
}
if (!e) return;
let t = this.tagBtn.node.parent;
for (let o = 0; o < t.childrenCount; o++) if (t.children[o].getComponentInChildren(cc.Label).string == e) {
r.default.showToast("标签已存在");
return;
}
this.editBox.string = "";
let o = cc.instantiate(this.tagBtn.node);
this.tagBtn.node.parent.addChild(o);
let i = o.getComponent(a.default);
this.initBtn(i, e, !0);
c.Util.flowLayout(this.tagBtn.node.parent, 10, 10);
this.scrollView.scrollToBottom(.3);
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
let e = [], t = [], o = [], i = this.tagBtn.node.parent;
for (let n = 0; n < i.children.length; n++) {
let s = i.children[n];
if (s.active) {
let i = s.getComponent(a.default), n = i.label.string;
i.taged && o.push(n);
this.tagsByMe.includes(n) && !i.taged && t.push(n);
!this.tagsByMe.includes(n) && i.taged && e.push(n);
}
}
if (o.length > 5) r.default.showToast("最多可选5个标签"); else {
if (e.length || t.length) {
r.default.showLoading("正在上传");
if (yield h.default.Ins.uploadGameTag(this.data.gameId, e, t)) {
r.default.hideLoading("编辑已提交");
h.default.Ins.saveTagsByMe(this.data.gameId, o);
cc.game.emit(p.default.GameCoverScene_Refresh);
} else r.default.hideLoading("上传标签失败");
}
this.closePanel();
}
});
}
};
i([ m(a.default) ], f.prototype, "tagBtn", void 0);
i([ m(cc.EditBox) ], f.prototype, "editBox", void 0);
i([ m(cc.ScrollView) ], f.prototype, "scrollView", void 0);
i([ m(a.default) ], f.prototype, "okBtn", void 0);
i([ m(cc.Label) ], f.prototype, "tipLabel", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameTagMng": "GameTagMng",
"../../Scene/GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
AiComBase: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "751e9nqLNFBHbpNe6SvEKO0", "AiComBase");
Object.defineProperty(o, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
AiComDirLineMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e19efspOl9JXaIq75nDpqTj", "AiComDirLineMover");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.AiComDirLineMover = void 0;
const n = e("../../../../Frame/TweenUtil"), a = e("../../../../Frame/Util"), s = e("../../../../GameData/GameTypeDefine"), r = e("../../Tile"), l = new cc.Vec2(), c = new cc.Vec2();
new cc.Vec2();
o.AiComDirLineMover = class {
constructor() {
this._moveDir = new cc.Vec2();
this._moveSpeed = 0;
this._moveDistance = 0;
this._moveStart = new cc.Vec2();
this._moveTarget = new cc.Vec2();
this._movet = 0;
this._totalMoveTime = 0;
this._moveCurrent = new cc.Vec2();
this._useTween = !1;
}
onDestroy() {
if (this._moveTween) {
this._moveTween.stop();
this._moveTween = null;
}
}
setData(e, t, o = !1) {
if (this._moveTween) {
this._moveTween.stop();
this._moveTween = null;
}
this._data = t;
this._body = e;
this._useTween = o;
this.refresh();
}
refresh() {
this._moveSpeed = this._data.speed * r.default.SIZE;
this._moveDistance = this._data.distance * r.default.SIZE;
this._moveDir.x = 0;
this._moveDir.y = 0;
switch (this._data.moveDir) {
case s.MoveDirType.Up:
this._moveDir.y = 1;
break;

case s.MoveDirType.UpLeft:
this._moveDir.y = 1;
this._moveDir.x = -1;
break;

case s.MoveDirType.UpRight:
this._moveDir.y = 1;
this._moveDir.x = 1;
break;

case s.MoveDirType.Down:
this._moveDir.y = -1;
break;

case s.MoveDirType.DownLeft:
this._moveDir.y = -1;
this._moveDir.x = -1;
break;

case s.MoveDirType.DownRight:
this._moveDir.y = -1;
this._moveDir.x = 1;
break;

case s.MoveDirType.Left:
this._moveDir.x = -1;
break;

case s.MoveDirType.Right:
this._moveDir.x = 1;
}
this._moveStart.set(this._body.node.position);
cc.Vec2.scaleAndAdd(this._moveTarget, this._moveStart, this._moveDir, this._moveDistance);
this._movet = 0;
this._totalMoveTime = this._moveDistance / this._moveSpeed;
if (this._moveTween) {
this._moveTween.stop();
this._moveTween = null;
}
if (this._useTween) {
this._moveTween = cc.tween(this._body).repeatForever(cc.tween(this._body).to(this._totalMoveTime, {
Move2PositionX: this._moveTarget.x,
Move2PositionY: this._moveTarget.y
}, {
easing: n.Easing.sineInOut
}).delay(.2).to(this._totalMoveTime, {
Move2PositionX: this._moveStart.x,
Move2PositionY: this._moveStart.y
}, {
easing: n.Easing.sineInOut
}).delay(.2));
this._moveTween.start();
}
}
static displayInspector(e, t) {
let o = [ {
str: "上",
type: s.MoveDirType.Up
}, {
str: "左上",
type: s.MoveDirType.UpLeft
}, {
str: "右上",
type: s.MoveDirType.UpRight
}, {
str: "下",
type: s.MoveDirType.Down
}, {
str: "左下",
type: s.MoveDirType.DownLeft
}, {
str: "右下",
type: s.MoveDirType.DownRight
}, {
str: "左",
type: s.MoveDirType.Left
}, {
str: "右",
type: s.MoveDirType.Right
} ], n = o.findIndex(e => e.type == t.moveDir);
-1 == n && (n = 0);
e.addDropDownBox("移动方向", o, n, (e, o) => i(this, void 0, void 0, function*() {
t.moveDir = o.type;
}));
e.addNumberEditBox("移动速度(格/秒)", t.speed, 0, 99, e => {
t.speed = e;
});
e.addNumberEditBox("移动距离(格)", t.distance, 0, 64, e => {
e = a.Util.clamp(e, 0, 64);
t.distance = e;
});
}
run(e) {
this.updateState(e);
}
toggleMove() {
l.set(this._moveStart);
this._moveStart.set(this._moveTarget);
this._moveTarget.set(l);
this._movet = 0;
this._totalMoveTime = this._moveDistance / this._moveSpeed;
}
updateState(e) {
if (this._moveSpeed <= 0 || this._useTween) return;
this._movet += e;
let t = this._movet / this._totalMoveTime;
t > 1 && (t = 1);
let o = this._moveCurrent;
o.set(this._body.targetPosition);
cc.Vec2.lerp(c, this._moveStart, this._moveTarget, t);
this._movet >= this._totalMoveTime && this.toggleMove();
let i = c.x - o.x, n = c.y - o.y;
this._body.PositionMoveDelta(i, n);
}
};
cc._RF.pop();
}, {
"../../../../Frame/TweenUtil": "TweenUtil",
"../../../../Frame/Util": "Util",
"../../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Tile": "Tile"
} ],
AiComPlatformJumpFollow: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "26927IXpbFFK7iK+enEpG04", "AiComPlatformJumpFollow");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.AiComPlatformJumpFollow = void 0;
const i = e("../../../../Frame/FightSystem"), n = e("../../../../Frame/TweenUtil"), a = e("../../Tile");
o.AiComPlatformJumpFollow = class {
constructor() {
this._inBeaten = !1;
this._forceVelocityX = 0;
this._velocity = new cc.Vec2();
this._beatenSpeedX = 300;
}
onDestroy() {
this._idleAnim && this._idleAnim.stop();
}
setActor(e) {
e.node.on(i.FightSystem.Event.Beaten, this.onBeaten, this);
this._self = e;
let t = this._self.sprite.node;
this._idleAnim = cc.tween(t).repeatForever(cc.tween(t).to(.5, {
y: -20
}, {
easing: n.Easing.sineOut
}).to(.5, {
y: 0
}, {
easing: n.Easing.sineIn
}).to(.5, {
y: 20
}, {
easing: n.Easing.sineOut
}).to(.5, {
y: 0
}, {
easing: n.Easing.sineIn
}));
this._idleAnim.start();
}
setTarget(e) {
this._target = e;
this._posIdx = this._target.getPetPosIdx(this._self);
this._idleAnim.stop();
let t = 0;
1 == this._posIdx ? t = .4 : 2 == this._posIdx && (t = .2);
this._self.scheduleOnce(() => {
this._idleAnim.start();
}, t);
}
clearTarget() {
this._target = null;
}
hasTarget() {
return !!this._target;
}
run(e) {
if (this._inBeaten) {
this.updateBeaten(e);
return;
}
if (!this._target || !this._self || this._posIdx < 0) return;
this._self.gun.firing = this._target.gun.firing;
this._self.setDir(this._target.dirx, this._target.diry);
let t = this._target.sprite.node.scaleX, o = this._self.node.position, i = this._target.node.position;
i.x - o.x > 0 ? this._self.setScaleX(1) : this._self.setScaleX(-1);
let n = 64, a = 32;
if (1 == this._posIdx) {
n += 54;
a -= 20;
} else if (2 == this._posIdx) {
n += 32;
a += 24;
}
let s = i.x + (t < 0 ? n : -n), r = i.y + a, l = s - o.x, c = r - o.y, d = o.x + .1 * l, h = o.y + .1 * c;
this._self.SetPosition(d, h);
}
onBeaten(e) {
if (this._self.data.beatenBackRange > 0) {
this._beatenSpeedX = this._self.data.beatenBackRange * a.default.SIZE;
let t = this._self.node.convertToWorldSpaceAR(cc.Vec2.ZERO).x, o = e.damager.node.convertToWorldSpaceAR(cc.Vec2.ZERO).x;
this._inBeaten = !0;
if (t < o) {
this._forceVelocityX = -this._beatenSpeedX;
this._self.setScaleX(1);
} else if (t > o) {
this._forceVelocityX = this._beatenSpeedX;
this._self.setScaleX(-1);
}
this._velocity.x = 0;
this._velocity.y = 300;
this._self.scheduleOnce(() => {
this._inBeaten = !1;
}, .4);
}
let t = this._self.data.beatenLockHpTime || 0;
this._self.hper.lockHp = !0;
this._self.scheduleOnce(() => {
this._self.hper.lockHp = !1;
}, t);
}
updateBeaten(e) {
if (!this._inBeaten) return;
let t = 0;
t = this._forceVelocityX;
this._self.PositionMoveDelta(t * e, 0);
}
};
cc._RF.pop();
}, {
"../../../../Frame/FightSystem": "FightSystem",
"../../../../Frame/TweenUtil": "TweenUtil",
"../../Tile": "Tile"
} ],
AiComSimplerMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f5a80GJhSRGSry7KQ4A/+z+", "AiComSimplerMover");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.AiComSimplerMover = o.GameActorDeadSubstitute = void 0;
const i = e("../../../../Frame/TweenUtil");
class n extends cc.Component {
constructor() {
super(...arguments);
this._position = new cc.Vec2();
this.useGravity = !1;
this._timer = 0;
this._isRun = !1;
}
static Create() {
let e = this._pool.get() || new cc.Node(), t = e.getComponent(n);
t || (t = e.addComponent(n));
return t;
}
static Back(e) {
e && this._pool.put(e.node);
}
unuse() {
this.node.active = !1;
}
reuse() {
this.node.active = !0;
}
onLoad() {
this._mover = new a();
this._mover.setBody(this);
}
PositionMoveDelta(e, t) {
this._position.set(this.node.position);
this._position.x += e;
this._position.y += t;
this.node.position = this._position;
}
addImpulse(e, t, o) {
this._isRun = !0;
this._timer = o + .5;
this.node.scale = 1;
this.node.opacity = 255;
cc.Tween.stopAllByTarget(this.node);
cc.tween(this.node).to(.5 * o, {
scale: 1
}, {
easing: i.Easing.linear
}).to(.5 * o, {}).to(.2, {
opacity: 0
}, {
easing: i.Easing.linear
}).start();
this._mover.addForceMover({
impulse: !0,
sx: e,
sy: t,
duration: o
});
}
update(e) {
if (this._isRun) {
if (this._timer >= 0) this._timer -= e; else {
this._isRun = !1;
n.Back(this);
}
this._mover.run(e);
}
}
}
o.GameActorDeadSubstitute = n;
n._pool = new cc.NodePool(n);
class a {
constructor() {
this._body = null;
this._velocity = new cc.Vec2();
this._onGroundTimer = 0;
this._touchWallTimer = 0;
this._forces = [];
}
onDestroy() {}
get isGround() {
return cc.director.getTotalTime() < this._onGroundTimer;
}
get isInAir() {
return !this.isGround;
}
get isTouchWall() {
return cc.director.getTotalTime() < this._touchWallTimer;
}
setBody(e) {
this._body = e;
this._body.onBlockedByTile = this.onBlockedByTile.bind(this);
}
onBlockedByTile(e) {
let t = e.moveBackX, o = e.moveBackY;
this._body.PositionMoveDelta(t, o);
this._velocity.y < 0 && o > 0 ? this._onGroundTimer = cc.director.getTotalTime() + 50 : this._onGroundTimer = 0;
this._velocity.y > 0 && o < 0 && (this._velocity.y = 0);
if (this._velocity.x * t < 0) {
this._touchWallTimer = cc.director.getTotalTime() + 50;
let e = t < 0 ? -1 : 1, o = .5 * Math.abs(this._velocity.x), i = 0;
this._velocity.x = 0;
for (let e = 0; e < this._forces.length; ++e) this._forces[e].accx = 0;
this.addForceMover({
impulse: !0,
sx: e * o,
sy: i,
duration: .2
});
} else this._touchWallTimer = 0;
}
addForceMover(e) {
e.duration <= 0 && (e.duration = 1 / 60);
if (e.impulse) {
this._velocity.x += e.sx;
this._velocity.y += e.sy;
e.accx = -e.sx / e.duration;
0 != this._body.gravity ? this._body.useGravity ? e.accy = -2 * e.sy / e.duration : e.accy = -1.8 * e.sy / e.duration : e.accy = -e.sy / e.duration;
} else {
let t = e.duration * e.duration;
e.accx = 2 * e.sx / t;
e.accy = 2 * e.sy / t;
}
this._forces.push(e);
}
run(e) {
let t = 0, o = 0;
for (let i = 0; i < this._forces.length; ++i) {
let n = this._forces[i];
if (n.duration > 0) {
n.duration -= e;
t += n.accx;
o += n.accy;
} else {
this._forces.splice(i, 1);
--i;
}
}
0 == o && this._body.useGravity && (o += this._body.gravity);
if (e > 0) {
0 == t && 0 != this._velocity.x && (t -= .5 * this._velocity.x / e);
0 == o && 0 != this._velocity.y && (o -= .5 * this._velocity.y / e);
}
this._velocity.x += t * e;
this._velocity.y += o * e;
this._body.PositionMoveDelta(this._velocity.x * e, this._velocity.y * e);
}
}
o.AiComSimplerMover = a;
cc._RF.pop();
}, {
"../../../../Frame/TweenUtil": "TweenUtil"
} ],
AiCtrlBase: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f8145pw7BZBL6T3ocxnWtf0", "AiCtrlBase");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.default = class extends cc.Component {};
cc._RF.pop();
}, {} ],
ApplyWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a2e03gREbNJarrKbOolQAwb", "ApplyWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.tipLabel = null;
this.editBox = null;
this.sumbitBtn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.sumbitBtn.node.on(a.default.CLICK, this.onSubmitBtn, this);
}
onSubmitBtn() {
return n(this, void 0, void 0, function*() {
let e = this.editBox.textLabel.string.trim();
if ("" != e) {
this.call && this.call(e);
this.closePanel();
} else r.default.showToast("多写几个字～");
});
}
};
i([ c(cc.Label) ], d.prototype, "tipLabel", void 0);
i([ c(cc.EditBox) ], d.prototype, "editBox", void 0);
i([ c(a.default) ], d.prototype, "sumbitBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top"
} ],
ArrowGuide: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "59b4dCt3IFAJq8x7bUS0QD8", "ArrowGuide");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.anim = null;
}
play(e, t) {
this.node.position = e;
this.node.angle = t;
this.anim.play();
}
};
i([ a(cc.Animation) ], s.prototype, "anim", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
AssetCategoryPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "de35agLHFBCiZVxcyVtY5VI", "AssetCategoryPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/Panel"), s = e("../../GameData/GameTypeDefine"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.list = null;
}
onLoad() {
super.onLoad();
this.list.setDataArr([ s.CommonDataType.Actor, s.CommonDataType.Tile, s.CommonDataType.Device, s.CommonDataType.Prop, s.CommonDataType.Weapon ]);
}
};
i([ l(n.default) ], c.prototype, "list", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
AssetCategorycCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fd77eLiwn1NRoq2jo5yv931", "AssetCategorycCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), r = e("../../Game/OperationFlow"), l = e("../../GameData/GameTypeDefine"), c = e("../../CustomUI/Button"), d = e("../../Frame/SceneManager"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.icon = null;
this.title = null;
this._category = l.CommonDataType.Tile;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(c.default.CLICK, this.onTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this._category = e;
switch (this._category) {
case l.CommonDataType.Actor:
this.icon.spriteFrame = yield s.Util.loadBundleRes("Atlas/Icon/icon_asset_actor", cc.SpriteFrame);
this.title.string = "Role";
break;

case l.CommonDataType.Tile:
this.icon.spriteFrame = yield s.Util.loadBundleRes("Atlas/Icon/icon_asset_tile", cc.SpriteFrame);
this.title.string = "Plot";
break;

case l.CommonDataType.Device:
this.icon.spriteFrame = yield s.Util.loadBundleRes("Atlas/Icon/icon_asset_device", cc.SpriteFrame);
this.title.string = "Device";
break;

case l.CommonDataType.Prop:
this.icon.spriteFrame = yield s.Util.loadBundleRes("Atlas/Icon/icon_asset_prop", cc.SpriteFrame);
this.title.string = "Tool";
break;

case l.CommonDataType.Weapon:
this.icon.spriteFrame = yield s.Util.loadBundleRes("Atlas/Icon/icon_asset_weapon", cc.SpriteFrame);
this.title.string = "Weapon";
}
});
}
onTap() {
switch (this._category) {
case l.CommonDataType.Actor:
d.default.ins.curScene.closeAllPanel();
r.OperationFlow.paintActor(null);
break;

case l.CommonDataType.Tile:
d.default.ins.curScene.closeAllPanel();
r.OperationFlow.paintTile(l.TileType.All, null);
break;

case l.CommonDataType.Device:
d.default.ins.curScene.closeAllPanel();
r.OperationFlow.paintDevice(null);
break;

case l.CommonDataType.Prop:
d.default.ins.curScene.closeAllPanel();
r.OperationFlow.paintProp(null);
break;

case l.CommonDataType.Weapon:
d.default.ins.curScene.closeAllPanel();
r.OperationFlow.paintWeapon(null, null);
}
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "title", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
AssetGroupMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fa3d3s+/xpJNaGLnno1++ZW", "AssetGroupMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/NetworkMgr"), r = e("../../GameData/GameTypeDefine"), l = e("./Mng");
class c {
constructor() {
this.curGroupName = "";
this.customGroups = [];
this.rpg = new a.ActorGroupData();
this.jump = new a.ActorGroupData();
this.all = new a.ActorGroupData();
this.extra = new a.ActorGroupData();
}
isGroupNameExist(e) {
return e == c.RpgGroupName || e == c.JumpGroupName || e == c.AllGroupName || !!this.customGroups.find(t => t.groupName == e);
}
updateBuildInGroup() {
return i(this, void 0, void 0, function*() {
let e = this.getAllActorConfs();
this.all.groupName = c.AllGroupName;
this.rpg.groupName = c.RpgGroupName;
this.jump.groupName = c.JumpGroupName;
yield l.Mng.Ins.tileMng.loadAll();
yield l.Mng.Ins.actorMng.loadAll();
yield l.Mng.Ins.deviceMng.loadAll();
yield l.Mng.Ins.propMng.loadAll();
yield l.Mng.Ins.weaponMng.loadAll();
yield l.Mng.Ins.bulletMng.loadAll();
this.all.refDataList = [];
this.rpg.refDataList = [];
this.jump.refDataList = [];
for (let t of e) {
let e = new a.ActorGroupRefData();
e.confId = t.confId;
e.confType = t.confType;
this.all.refDataList.push(e);
if (t.confType == r.CommonDataType.Tile) {
let o = l.Mng.Ins.tileMng.getOne(t.confId);
if (o) if (o.tileType == r.TileType.Jump) this.jump.refDataList.push(e); else if (o.tileType == r.TileType.RPG) this.rpg.refDataList.push(e); else if (o.tileType == r.TileType.All) {
this.jump.refDataList.push(e);
this.rpg.refDataList.push(e);
}
} else {
this.rpg.refDataList.push(e);
this.jump.refDataList.push(e);
}
}
});
}
getAllActorConfs() {
let e = [], t = l.Mng.Ins.tileMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Tile,
confId: o
});
t = l.Mng.Ins.actorMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Actor,
confId: o
});
t = l.Mng.Ins.deviceMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Device,
confId: o
});
t = l.Mng.Ins.propMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Prop,
confId: o
});
t = l.Mng.Ins.weaponMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Weapon,
confId: o
});
t = l.Mng.Ins.bulletMng.getAllIds(!0);
for (let o of t) e.push({
confType: r.CommonDataType.Bullet,
confId: o
});
return e;
}
initExtraGroup(e, t) {
return i(this, void 0, void 0, function*() {
this.extra.groupName = e;
this.extra.refDataList = t;
this.curGroupName = e;
});
}
findGroup(e) {
return i(this, void 0, void 0, function*() {
if (e == c.AllGroupName) {
yield this.updateBuildInGroup();
return this.all;
}
if (e == c.RpgGroupName) {
yield this.updateBuildInGroup();
return this.rpg;
}
if (e == c.JumpGroupName) {
yield this.updateBuildInGroup();
return this.jump;
}
return e == this.extra.groupName ? this.extra : this.customGroups.find(t => t.groupName == e);
});
}
save(e) {
return i(this, void 0, void 0, function*() {
let t = {
groupName: e.groupName,
refDataList: e.refDataList
};
if (yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveActorGroups,
params: t
}, n.Game_RSaveActorGroups)) {
this.customGroups.find(t => t.groupName == e.groupName) || this.customGroups.unshift(e);
return e;
}
});
}
delete(e) {
return i(this, void 0, void 0, function*() {
let t = this.customGroups.findIndex(t => t.groupName == e);
if (t < 0) return;
let o = {
groupName: e
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelActorGroups,
params: o
}, n.Game_RDelActorGroups);
this.customGroups.splice(t, 1);
});
}
curGroupAppend(e) {
return i(this, void 0, void 0, function*() {
let t = this.curGroupName;
if (t == this.extra.groupName || e.belongGameId) {
let t = new a.ActorGroupRefData();
t.confId = e.id;
t.confType = e.type;
this.extra.refDataList.unshift(t);
} else if (t !== c.RpgGroupName && t !== c.JumpGroupName && t !== c.AllGroupName) {
let t = yield this.findGroup(this.curGroupName);
if (t) {
let o = new a.ActorGroupRefData();
o.confId = e.id;
o.confType = e.type;
t.refDataList.unshift(o);
yield this.save(t);
}
}
});
}
resetExtra() {
this.extra.groupName = "";
this.extra.refDataList = [];
}
}
o.default = c;
c.RpgGroupName = "俯视冒险";
c.JumpGroupName = "平台跳跃";
c.AllGroupName = "所有素材";
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./Mng": "Mng"
} ],
AssetGroupSelectPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b8c0449MM9FxJvAAi+87Il+", "AssetGroupSelectPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Panel"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.labelTitle = null;
this.scrollList = null;
this.btnOk = null;
this._selectedGroupList = [];
this._groupSelectDatas = [];
}
onLoad() {
super.onLoad();
this.btnOk.node.on(n.default.CLICK, this.onClickOk, this);
this.scrollList.content.on("onRefreshGroup", () => {
this.refresh();
}, this);
}
setData(e, t, o, i) {
this._callback = i;
this._ignoreGroup = t;
this._canCreateNew = o;
this.labelTitle.string = e;
this.refresh();
}
refresh() {
let e = r.Mng.Ins.assetGroupMng.customGroups;
this._groupSelectDatas.length = 0;
if (e) for (let t of e) this._ignoreGroup && t.groupName == this._ignoreGroup || this._groupSelectDatas.push({
isSelect: !1,
groupName: t.groupName
});
this._canCreateNew && e.length < 10 && this._groupSelectDatas.push({
isSelect: !1,
groupName: "",
isCreateBtn: !0
});
this.scrollList.setDataArr(this._groupSelectDatas);
}
onClickOk() {
this.closePanel();
this._selectedGroupList.length = 0;
for (let e of this._groupSelectDatas) e.isSelect && this._selectedGroupList.push(e.groupName);
this._callback && this._callback(this._selectedGroupList);
}
};
i([ c(cc.Label) ], d.prototype, "labelTitle", void 0);
i([ c(a.default) ], d.prototype, "scrollList", void 0);
i([ c(n.default) ], d.prototype, "btnOk", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Game/Player/Mng": "Mng"
} ],
AssetPreviewCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e59e42E5ilCpqQrcrg9dr1h", "AssetPreviewCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/SceneManager"), r = e("../../Frame/Util"), l = e("../../Game/Player/Mng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
this.typeLabel = null;
this.data = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(n.default.CLICK, this.onClick, this);
}
setData(e) {
if (e) {
this.data = e;
this.label.string = r.Util.clampStr(e.name, 6, "..");
l.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120);
let t = e.typeName;
this.typeLabel.node.active = !!t;
this.typeLabel.string = t;
r.Util.updateLabel(this.typeLabel);
this.typeLabel.node.parent.width = this.typeLabel.node.width + 20;
}
}
onClick() {
s.default.ins.OpenPanelByName("ImagePreviewPanel", e => {
e.setData(this.data.name, this.data.textureName);
});
}
};
i([ d(cc.Label) ], h.prototype, "label", void 0);
i([ d(cc.Sprite) ], h.prototype, "sprite", void 0);
i([ d(cc.Label) ], h.prototype, "typeLabel", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
AssetPreviewPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "925f5upfeJKo4GzjYrU2+98", "AssetPreviewPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.scrollList = null;
}
onLoad() {
super.onLoad();
}
setData(e) {
this.scrollList.setDataArr(e);
}
};
i([ r(n.default) ], l.prototype, "scrollList", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel"
} ],
AstroGuide: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "50e9fjOzg5DNJQkrTEXI+b+", "AstroGuide");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../i18n/i18nMgr"), a = e("../CustomUI/Button"), s = e("../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.ani = null;
this.astro = null;
this.bubble = null;
this.label = null;
this.continueLabel = null;
this.touch = null;
this.block = null;
this.btn = null;
this.str = "";
this.timer = 0;
this.charIdx = 0;
this.lineIdx = 0;
this.playing = !1;
this.closeCall = null;
this.timePerWorld = .05;
this.onEnd = null;
this.lines = [];
}
onLoad() {
this.maskNode(null);
this.bubble.active = !1;
s.Util.makeBro(this.btn.node, 0);
this.touch.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
}
maskNode(e) {
if (e) {
this.touch.active = !1;
let t = s.Util.convertPosition(e, this.node);
this.block.width = e.width;
this.block.height = e.height;
this.block.position = t;
this.block.anchorX = e.anchorX;
this.block.anchorY = e.anchorY;
s.Util.updateAllWidget(this.block);
} else {
this.touch.active = !1;
this.block.x = 0;
this.block.y = 1e3;
this.block.width = 0;
this.block.height = 0;
s.Util.updateAllWidget(this.block);
}
}
setMaskOpacity(e) {
for (let t = 0; t < this.block.childrenCount; t++) this.block.children[t].opacity = e;
}
playAnim(e) {
return new Promise(t => {
this.ani.play(e);
this.ani.once(cc.Animation.EventType.STOP, () => {
t();
}, this);
});
}
moveLeftRight() {
return new Promise(e => {
this.astro.node.runAction(cc.sequence(cc.moveTo(.3, -310, -600), cc.callFunc(e)));
});
}
moveCenter() {
return new Promise(e => {
this.astro.node.runAction(cc.sequence(cc.moveTo(.3, -220, -169), cc.callFunc(e)));
});
}
moveUp() {
return new Promise(e => {
this.astro.node.runAction(cc.sequence(cc.moveTo(.3, -220, 200), cc.callFunc(e)));
});
}
update(e) {
if (this.playing) {
this.timer += e;
if (this.timer > this.timePerWorld) {
this.timer -= this.timePerWorld;
this.charIdx++;
this.charIdx <= this.str.length ? this.label.string = this.str.substr(0, this.charIdx) : this.endLine();
}
}
}
showBubble(e) {
this.node.active = !0;
this.astro.node.active = !0;
return new Promise(t => {
this.touch.active = !0;
this.bubble.active = !0;
this.playing = !0;
this.lines = e;
this.lineIdx = 0;
this.onEnd = t;
if (e.length > 0) {
let t = e[0];
this.playLine(t);
}
});
}
hideBubble() {
this.bubble.active = !1;
this.playing = !1;
}
playLine(e) {
this.timer = 0;
this.charIdx = 0;
this.str = n.I18nMgr.getI18nStringByZh(e.str);
this.str.length < 60 ? this.bubble.height = 229 : this.str.length >= 60 ? this.bubble.height = 349 : this.str.length >= 90 && (this.bubble.height = 349);
this.playing = !0;
this.label.string = "";
this.timePerWorld = e.timePerWorld || .05;
s.Util.makeBro(this.btn.node, 0);
this.continueLabel.node.active = !1;
}
nextLine() {
this.touch.active = !0;
this.lineIdx++;
if (this.lineIdx < this.lines.length) this.playLine(this.lines[this.lineIdx]); else {
this.hideBubble();
s.Util.makeBro(this.btn.node, 0);
let e = this.onEnd;
if (e) {
this.onEnd = null;
e();
}
}
}
endLine() {
this.label.string = this.str;
this.playing = !1;
let e = this.lines[this.lineIdx];
if (e.btnStr) {
this.touch.active = !1;
s.Util.makeBro(this.btn.node, 1, t => {
let o = t.getComponent(a.default);
o.label.string = e.btnStr;
o.node.targetOff(this);
o.node.on(a.default.CLICK, this.onTouchEnd, this);
});
} else if (e.options) {
this.touch.active = !1;
s.Util.makeBro(this.btn.node, e.options.length, (t, o) => {
let i = t.getComponent(a.default), n = e.options[o];
i.label.string = n.str;
i.node.targetOff(this);
i.node.on(a.default.CLICK, () => {
n.lines && this.insert(n.lines);
n.call && n.call();
this.nextLine();
}, this);
});
} else this.continueLabel.node.active = !0;
}
onTouchEnd() {
this.lines ? this.playing ? this.endLine() : this.nextLine() : this.hideBubble();
}
insert(e) {
let t = this.lineIdx + 1, o = this.lines.slice(0, t), i = this.lines.slice(t, this.lines.length);
this.lines = o.concat(e).concat(i);
}
};
i([ l(cc.Animation) ], c.prototype, "ani", void 0);
i([ l(cc.Sprite) ], c.prototype, "astro", void 0);
i([ l(cc.Node) ], c.prototype, "bubble", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
i([ l(cc.Label) ], c.prototype, "continueLabel", void 0);
i([ l(cc.Node) ], c.prototype, "touch", void 0);
i([ l(cc.Node) ], c.prototype, "block", void 0);
i([ l(a.default) ], c.prototype, "btn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"../CustomUI/Button": "Button",
"../Frame/Util": "Util"
} ],
AutoFixedSizeByTargetNode: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "97ba5hSBFhDYJaKa9SVv3TK", "AutoFixedSizeByTargetNode");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, menu: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.fixedWidth = !0;
this.fixedHeight = !1;
this.extsize = new cc.Vec2();
this.target = null;
this.minWidth = 0;
this.minHeight = 0;
this._inited = !1;
}
onLoad() {
this._inited || (this._inited = !0);
}
lateUpdate() {
this.updateNodeSizeByChild(!1);
}
updateNodeSizeByChild(e) {
if (e) for (let t of this.node.children) {
if (!t.active) continue;
let o = t.getComponent(i);
o && o.updateNodeSizeByChild(e);
}
if (this.target) {
if (this.fixedWidth) {
let e = this.target.width > this.minWidth ? this.target.width + this.extsize.x : this.minWidth;
this.node.width = e;
}
if (this.fixedHeight) {
let e = this.target.height > this.minHeight ? this.target.height + this.extsize.y : this.minHeight;
this.node.height = e;
}
return;
}
let t = this.node, o = 0, n = 0, a = 0, s = 0;
for (let e = 0; e < t.childrenCount; ++e) {
let i = t.children[e];
if (i.active) {
if (this.fixedWidth) {
let t = i.x - i.width * i.anchorX, a = i.x + i.width * (1 - i.anchorX);
(0 == e || o > t) && (o = t);
(0 == e || n < a) && (n = a);
}
if (this.fixedHeight) {
let t = i.y - i.height * i.anchorY, o = i.y + i.height * (1 - i.anchorY);
(0 == e || a > t) && (a = t);
(0 == e || s < o) && (s = o);
}
}
}
if (this.fixedWidth) {
let e = n - o + this.extsize.x;
t.width = e > this.minWidth ? e : this.minWidth;
}
if (this.fixedHeight) {
let e = s - a + this.extsize.y;
t.height = e > this.minHeight ? e : this.minHeight;
}
}
};
n([ r ], l.prototype, "fixedWidth", void 0);
n([ r ], l.prototype, "fixedHeight", void 0);
n([ r(cc.Vec2) ], l.prototype, "extsize", void 0);
n([ r(cc.Node) ], l.prototype, "target", void 0);
n([ r ], l.prototype, "minWidth", void 0);
n([ r ], l.prototype, "minHeight", void 0);
l = i = n([ a, s("自定义UI/AutoFixedSize") ], l);
o.default = l;
cc._RF.pop();
}, {} ],
BagCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "feda3HwT91IpI1WjLM4gl0J", "BagCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.cntLabel = null;
this.sprite = null;
this.select = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.cntLabel.string = "x" + e.cnt;
let t = yield s.Mng.Ins.propMng.loadOne(e.propConfId);
s.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, this.node.width);
});
}
onStateChange(e) {
this.select && (this.select.node.active = e);
}
};
i([ l(cc.Label) ], c.prototype, "cntLabel", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Sprite) ], c.prototype, "select", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
BagItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3b116MQkA1P5LxCtlBZJMgD", "BagItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/Util"), d = e("../../Game/Player/GameBagMng"), h = e("../../Game/Player/Mng"), p = e("../../Game/Player/TriggerMng"), u = e("../../Scene/GameScene/GameScene"), {ccclass: m, property: f} = cc._decorator;
let g = class extends s.default {
constructor() {
super(...arguments);
this.nameLabel = null;
this.cntLabel = null;
this.introLabel = null;
this.sprite = null;
this.useBtn = null;
this.dropBtn = null;
this.data = null;
this.conf = null;
this.useCall = null;
this.dropCall = null;
}
onLoad() {
super.onLoad();
this.useBtn.node.on(a.default.CLICK, this.onUseBtn, this);
this.dropBtn.node.on(a.default.CLICK, this.onDropBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.refreshCnt();
let t = yield h.Mng.Ins.propMng.loadOne(e.propConfId);
this.conf = t;
if (t) {
this.nameLabel.string = t.name;
this.introLabel.string = t.intro;
h.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, 300);
}
});
}
refreshCnt() {
this.cntLabel.string = "x" + d.default.Ins.getCnt(this.data.propConfId);
}
onUseBtn() {
if (this.conf) if (d.default.Ins.getCnt(this.data.propConfId) > 0) {
if (this.conf.once) {
d.default.Ins.sub(this.data.propConfId, 1);
this.refreshCnt();
}
let e = r.default.ins.findScene(u.default).world.hero, t = c.Util.deepCopy(this.conf.onUse, []);
p.default.Ins.emitTrigger(t, e.node);
this.useCall && this.useCall();
this.closePanel();
l.default.showToast("使用了道具：" + this.conf.name);
} else l.default.showToast("道具用光了");
}
onDropBtn() {
if (this.conf) if (d.default.Ins.getCnt(this.data.propConfId) > 0) {
d.default.Ins.sub(this.data.propConfId, 1);
this.refreshCnt();
let e = r.default.ins.findScene(u.default).world.hero, t = c.Util.deepCopy(this.conf.onDrop, []);
p.default.Ins.emitTrigger(t, e.node);
this.dropCall && this.dropCall();
} else l.default.showToast("数量不足");
}
};
i([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
i([ f(cc.Label) ], g.prototype, "cntLabel", void 0);
i([ f(cc.Label) ], g.prototype, "introLabel", void 0);
i([ f(cc.Sprite) ], g.prototype, "sprite", void 0);
i([ f(a.default) ], g.prototype, "useBtn", void 0);
i([ f(a.default) ], g.prototype, "dropBtn", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../Scene/GameScene/GameScene": "GameScene"
} ],
BagPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5416L8lgRGGpPPf+u6jTKB", "BagPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/GameBagMng"), u = e("../../Game/Player/Mng"), m = e("../../Game/Player/TriggerMng"), f = e("../../GameData/GameTypeDefine"), g = e("../../Scene/GameScene/GameScene"), y = e("./BagCell"), {ccclass: v, property: C} = cc._decorator;
let _ = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.bag_cell_show = null;
this.label_name = null;
this.label_desc = null;
this.btn_drop = null;
this.btn_use = null;
this.coinCntLabel = null;
this.emptyNode = null;
this.content = null;
this.triggerSource = null;
this.conf = null;
this.bagItemData = null;
}
onLoad() {
super.onLoad();
this.btn_drop.node.on(a.default.CLICK, this.onClickDrop, this);
this.btn_use.node.on(a.default.CLICK, this.onClickUse, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
this.refreshList();
this.list.selectByIdx(0);
this.list.node.emit(s.default.CLICK_ITEM, this.list.curSelectIdx, this.list.getCurData());
this.coinCntLabel.string = "x" + p.default.Ins.getCoinCnt();
}
refreshList() {
let e = p.default.Ins.propList.filter(e => !p.default.Ins.isCoin(e.propConfId));
this.list.setDataArr(e);
this.emptyNode.active = 0 == e.length;
this.content.active = 0 !== e.length;
}
onClickItem(e, t) {
t && this.setContent(t);
}
setContent(e) {
return n(this, void 0, void 0, function*() {
this.bag_cell_show.setData(e);
let t = yield u.Mng.Ins.propMng.loadOne(e.propConfId);
this.conf = t;
this.bagItemData = e;
this.label_name.string = t.name;
this.label_desc.string = t.intro;
});
}
onClickDrop() {
this.conf && l.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.node.active = !1;
e.label.string = `确定丢弃全部【${this.conf.name}】吗?`;
e.leftBtn.node.width *= .7;
e.rightBtn.node.width *= 1.3;
e.setLeftBtn({
text: "确定",
color: d.UIColor.pink,
call: () => {
let e = p.default.Ins.getCnt(this.bagItemData.propConfId);
if (e > 0) {
p.default.Ins.sub(this.bagItemData.propConfId, e);
this.refreshCnt();
let t = l.default.ins.findScene(g.default).world.hero, o = h.Util.deepCopy(this.conf.onDrop) || [];
o.push({
act: f.TriggerAct.DropProp,
extra: {
propConfId: this.bagItemData.propConfId,
cnt: e,
useGravity: !0
}
});
m.default.Ins.emitTrigger(o, t.node);
} else c.default.showToast("数量不足");
}
});
e.setRightBtn({
text: "不丢,留着",
color: d.UIColor.green
});
});
}
onClickUse() {
if (this.conf) {
let e = l.default.ins.findScene(g.default), t = e.world.hero, o = t.node.position;
o.y += t.node.height / 2;
if (p.default.Ins.getCnt(this.bagItemData.propConfId) > 0) {
if (this.conf.once) {
p.default.Ins.sub(this.bagItemData.propConfId, 1);
this.refreshCnt();
}
let i = h.Util.deepCopy(this.conf.onUse, []);
m.default.Ins.emitTrigger(i, t.node);
this.closePanel();
e.world.playFloatLabel({
str: `使用【${this.conf.name}】`,
pos: o,
color: d.UIColor.purple,
anim: "JumpLabel",
size: 40
});
} else {
c.default.showToast("道具用光了");
e.world.playFloatLabel({
str: "道具用光了",
pos: o,
color: d.UIColor.purple,
anim: "FlashLabel",
size: 40
});
}
}
}
refreshCnt() {
this.refreshList();
let e = p.default.Ins.getCnt(this.bagItemData.propConfId);
if (e > 0) this.bag_cell_show.cntLabel.string = "x" + e; else {
this.list.selectByIdx(0);
this.list.node.emit(s.default.CLICK_ITEM, this.list.curSelectIdx, this.list.getCurData());
}
}
};
i([ C(s.default) ], _.prototype, "list", void 0);
i([ C(y.default) ], _.prototype, "bag_cell_show", void 0);
i([ C(cc.Label) ], _.prototype, "label_name", void 0);
i([ C(cc.Label) ], _.prototype, "label_desc", void 0);
i([ C(a.default) ], _.prototype, "btn_drop", void 0);
i([ C(a.default) ], _.prototype, "btn_use", void 0);
i([ C(cc.Label) ], _.prototype, "coinCntLabel", void 0);
i([ C(cc.Node) ], _.prototype, "emptyNode", void 0);
i([ C(cc.Node) ], _.prototype, "content", void 0);
_ = i([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Scene/GameScene/GameScene": "GameScene",
"./BagCell": "BagCell"
} ],
BagScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f7154lTUgNOFbGPCuI8Y9Wa", "BagScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Scene"), l = e("../../Frame/SceneManager"), c = e("../../Game/OperationFlow"), {ccclass: d, property: h} = cc._decorator;
let p = class extends r.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.list = null;
this.emptyLabel = null;
this.backCall = null;
}
onLoad() {
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
this.emptyLabel.node.active = !1;
}
onBackBtn() {
l.default.ins.Back(() => {
this.backCall && this.backCall();
}, l.ShiftAnima.moveRightShift);
}
onShow(e) {
c.OperationFlow.deelOnShow(e);
}
start() {
return n(this, void 0, void 0, function*() {});
}
};
i([ h(a.default) ], p.prototype, "backBtn", void 0);
i([ h(s.default) ], p.prototype, "list", void 0);
i([ h(cc.Label) ], p.prototype, "emptyLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Game/OperationFlow": "OperationFlow"
} ],
BanCommentPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7a48OcbgRPurb0oXboh/JU", "BanCommentPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/ReportMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.btnPrefab = null;
this.btnLayout = null;
this.scoreToggleGroup = null;
this.msgEditBox = null;
this.okBtn = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.btnPrefab.node.active = !1;
}
addBtn(e, t, o, i) {
let n = cc.instantiate(this.btnPrefab.node);
this.btnLayout.addChild(n);
let s = n.getComponent(a.default);
s.label.string = e;
s.node.active = !0;
n.on(a.default.CLICK, () => {
this.scoreToggleGroup.selectIdx(t);
this.msgEditBox.string = o;
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
let t = d.Util.clampStr(e.msg, 8, "..");
this.addBtn("SCP", 0, "应抖音审核方要求，不能发布SCP相关内容", !0);
this.addBtn("挑拨引战", 1, `您的评论："${t}"由于‘挑拨引战’被删除`, !0);
this.addBtn("引人不适", 1, `您的评论："${t}"由于‘引人不适’被删除`, !0);
this.addBtn("图标违规", 1, `您的评论："${t}"由于‘图标违规’被删除`, !0);
this.addBtn("低俗色情", 3, `您的评论："${t}"由于‘低俗色情’被删除`, !0);
this.addBtn("政治敏感", 3, `您的评论："${t}"由于‘政治敏感’被删除`, !0);
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否处罚该评论？";
e.setLeftBtn({
text: "是",
color: c.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield this.banGame();
this.node.dispatchEvent(d.Util.customEvent("refreshList"));
this.closePanel();
})
});
e.setRightBtn({
text: "取消",
color: c.UIColor.blue
});
});
});
}
banGame() {
return n(this, void 0, void 0, function*() {
if (!this.data) return;
let e = this.msgEditBox.textLabel.string, t = -this.scoreToggleGroup.idx;
h.ReportMng.Ins.banComments(this.data.id, e, t);
});
}
};
i([ u(a.default) ], m.prototype, "btnPrefab", void 0);
i([ u(cc.Node) ], m.prototype, "btnLayout", void 0);
i([ u(s.default) ], m.prototype, "scoreToggleGroup", void 0);
i([ u(cc.EditBox) ], m.prototype, "msgEditBox", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ReportMng": "ReportMng"
} ],
BanGamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "73345OITN5IZJqiTcRVIwME", "BanGamePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/ReportMng"), {ccclass: u, property: m} = cc._decorator;
let f = class extends l.default {
constructor() {
super(...arguments);
this.btn = null;
this.btnLayout = null;
this.scoreToggleGroup = null;
this.msgEditBox = null;
this.deleteProjectToggle = null;
this.okBtn = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.btn.node.active = !1;
}
addBtn(e, t, o, i) {
let n = cc.instantiate(this.btn.node);
this.btnLayout.addChild(n);
let s = n.getComponent(a.default);
s.label.string = e;
s.node.active = !0;
n.on(a.default.CLICK, () => {
this.scoreToggleGroup.selectIdx(t);
this.msgEditBox.string = o;
this.deleteProjectToggle.isChecked = i;
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.addBtn("SCP", 0, "应抖音审核方要求，不能发布SCP相关内容", !0);
this.addBtn("SANS", 0, "应抖音审核方要求，不能发布sans相关内容", !1);
this.addBtn("挑拨引战", 1, `您的游戏：《${e.name}》由于‘挑拨引战’被下架`, !0);
this.addBtn("引人不适", 1, `您的游戏：《${e.name}》由于‘引人不适’被下架`, !0);
this.addBtn("图标违规", 1, `您的游戏：《${e.name}》由于‘图标违规’被下架`, !0);
this.addBtn("低俗色情", 3, `您的游戏：《${e.name}》由于‘低俗色情’被下架`, !0);
this.addBtn("政治敏感", 3, `您的游戏：《${e.name}》由于‘政治敏感’被下架`, !0);
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否下架该游戏？";
e.setLeftBtn({
text: "下架",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield this.banGame();
this.node.dispatchEvent(h.Util.customEvent("refreshList"));
this.closePanel();
})
});
e.setRightBtn({
text: "取消",
color: d.UIColor.blue
});
});
});
}
banGame() {
return n(this, void 0, void 0, function*() {
if (!this.data) return;
let e = this.msgEditBox.textLabel.string, t = -this.scoreToggleGroup.idx, o = this.deleteProjectToggle.isChecked;
p.ReportMng.Ins.banGame(this.data.id, t, e, o);
});
}
};
i([ m(a.default) ], f.prototype, "btn", void 0);
i([ m(cc.Node) ], f.prototype, "btnLayout", void 0);
i([ m(r.default) ], f.prototype, "scoreToggleGroup", void 0);
i([ m(cc.EditBox) ], f.prototype, "msgEditBox", void 0);
i([ m(s.default) ], f.prototype, "deleteProjectToggle", void 0);
i([ m(a.default) ], f.prototype, "okBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ReportMng": "ReportMng"
} ],
BanGoodsPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9331fFkoaJKpprFo7ltTmcp", "BanGoodsPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/ReportMng"), u = e("../../Game/Player/ShopMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends r.default {
constructor() {
super(...arguments);
this.btn = null;
this.btnLayout = null;
this.scoreToggleGroup = null;
this.msgEditBox = null;
this.okBtn = null;
this.goodsId = 0;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
addBtn(e, t, o) {
let i = cc.instantiate(this.btn.node);
this.btnLayout.addChild(i);
i.getComponent(a.default).label.string = e;
i.on(a.default.CLICK, () => {
this.scoreToggleGroup.selectIdx(t);
this.msgEditBox.string = o;
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.goodsId = e;
let t = (yield u.default.Ins.loadGoodsCellDatas([ e ]))[0];
this.addBtn("SCP", 0, "应抖音审核方要求，不能发布SCP相关内容");
this.addBtn("挑拨引战", 1, `您的素材：《${t.name}》由于‘挑拨引战’被下架`);
this.addBtn("引人不适", 1, `您的素材：《${t.name}》由于‘引人不适’被下架`);
this.addBtn("图标违规", 1, `您的素材：《${t.name}》由于‘图标违规’被下架`);
this.addBtn("低俗色情", 3, `您的素材：《${t.name}》由于‘低俗色情’被下架`);
this.addBtn("政治敏感", 3, `您的素材：《${t.name}》由于‘政治敏感’被下架`);
this.btn.node.active = !1;
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否下架商品？";
e.setLeftBtn({
text: "是",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield this.doBanGoods();
this.node.dispatchEvent(h.Util.customEvent("refreshList"));
this.closePanel();
})
});
e.setRightBtn({
text: "取消",
color: d.UIColor.blue
});
});
});
}
doBanGoods() {
return n(this, void 0, void 0, function*() {
let e = this.msgEditBox.textLabel.string, t = -this.scoreToggleGroup.idx;
p.ReportMng.Ins.banGoods(this.goodsId, e, t);
c.default.hideLoading("下线完成");
});
}
};
i([ f(a.default) ], g.prototype, "btn", void 0);
i([ f(cc.Node) ], g.prototype, "btnLayout", void 0);
i([ f(s.default) ], g.prototype, "scoreToggleGroup", void 0);
i([ f(cc.EditBox) ], g.prototype, "msgEditBox", void 0);
i([ f(a.default) ], g.prototype, "okBtn", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ReportMng": "ReportMng",
"../../Game/Player/ShopMng": "ShopMng"
} ],
BanPlayerPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a84b9wMOXhKBrr4quadnd8E", "BanPlayerPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/ReportMng"), {ccclass: u, property: m} = cc._decorator;
let f = class extends r.default {
constructor() {
super(...arguments);
this.btn = null;
this.btnLayout = null;
this.scoreToggleGroup = null;
this.msgEditBox = null;
this.okBtn = null;
this.playerId = 0;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.addBtn("头像违规", 1, "头像违规");
this.addBtn("名称违规", 1, "名称违规");
this.addBtn("头像名称", 1, "头像、名称违规");
this.addBtn("头像名称介绍", 1, "头像、名称、介绍违规");
this.btn.node.active = !1;
}
addBtn(e, t, o) {
let i = cc.instantiate(this.btn.node);
this.btnLayout.addChild(i);
i.getComponent(a.default).label.string = e;
i.on(a.default.CLICK, () => {
this.scoreToggleGroup.selectIdx(t);
this.msgEditBox.string = o;
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.playerId = e;
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否处罚该玩家？";
e.setLeftBtn({
text: "是",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield this.doBanPlayer();
this.node.dispatchEvent(h.Util.customEvent("refreshList"));
this.closePanel();
})
});
e.setRightBtn({
text: "取消",
color: d.UIColor.blue
});
});
});
}
doBanPlayer() {
return n(this, void 0, void 0, function*() {
let e = !1, t = !1, o = !1, i = this.msgEditBox.textLabel.string;
i.indexOf("头像") >= 0 && (t = !0);
i.indexOf("名称") >= 0 && (e = !0);
i.indexOf("介绍") >= 0 && (o = !0);
let n = -this.scoreToggleGroup.idx;
p.ReportMng.Ins.banPlayer(this.playerId, i, n, e, t, o);
c.default.hideLoading("下线完成");
});
}
};
i([ m(a.default) ], f.prototype, "btn", void 0);
i([ m(cc.Node) ], f.prototype, "btnLayout", void 0);
i([ m(s.default) ], f.prototype, "scoreToggleGroup", void 0);
i([ m(cc.EditBox) ], f.prototype, "msgEditBox", void 0);
i([ m(a.default) ], f.prototype, "okBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ReportMng": "ReportMng"
} ],
BanTalkPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "15a7e4plkRDko3qBgAfVy3/", "BanTalkPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/ReportMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.btn = null;
this.btnLayout = null;
this.scoreToggleGroup = null;
this.msgEditBox = null;
this.okBtn = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.btn.node.active = !1;
}
addBtn(e, t, o) {
let i = cc.instantiate(this.btn.node);
this.btnLayout.addChild(i);
let n = i.getComponent(a.default);
n.label.string = e;
n.node.active = !0;
i.on(a.default.CLICK, () => {
this.scoreToggleGroup.selectIdx(t);
this.msgEditBox.string = o;
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.addBtn("SCP", 0, "应抖音审核方要求，不能发布SCP相关内容");
this.addBtn("SANS", 0, "应抖音审核方要求，不能发布sans相关内容");
this.addBtn("挑拨引战", 1, `您的帖子：《${e.title}》由于‘挑拨引战’被下架`);
this.addBtn("引人不适", 1, `您的帖子：《${e.title}》由于‘引人不适’被下架`);
this.addBtn("图标违规", 1, `您的帖子：《${e.title}》由于‘图标违规’被下架`);
this.addBtn("低俗色情", 3, `您的帖子：《${e.title}》由于‘低俗色情’被下架`);
this.addBtn("政治敏感", 3, `您的帖子：《${e.title}》由于‘政治敏感’被下架`);
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否下架该帖子？";
e.setLeftBtn({
text: "下架",
color: c.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield this.banGame();
this.node.dispatchEvent(d.Util.customEvent("refreshList"));
this.closePanel();
})
});
e.setRightBtn({
text: "取消",
color: c.UIColor.blue
});
});
});
}
banGame() {
return n(this, void 0, void 0, function*() {
if (!this.data) return;
let e = this.msgEditBox.textLabel.string, t = -this.scoreToggleGroup.idx;
h.ReportMng.Ins.banTalk(this.data.uId, t, e);
});
}
};
i([ u(a.default) ], m.prototype, "btn", void 0);
i([ u(cc.Node) ], m.prototype, "btnLayout", void 0);
i([ u(s.default) ], m.prototype, "scoreToggleGroup", void 0);
i([ u(cc.EditBox) ], m.prototype, "msgEditBox", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ReportMng": "ReportMng"
} ],
BannerGuide: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "159837rNQ1LtIUIJ8K9MXP8", "BannerGuide");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../i18n/i18nMgr"), s = e("../Frame/Util"), r = e("./Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
this.ani = null;
this.spriteInitialPos = cc.Vec2.ZERO;
}
onLoad() {
this.spriteInitialPos = this.sprite.node.position;
}
guideMove() {
this.ani.play("GestureMove");
}
guideZoomMax() {
this.ani.play("GestureZoomMax");
}
guideZoomMin() {
this.ani.play("GestureZoomMin");
}
guidePencil(e) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = a.I18nMgr.exceI18nStringByZh("切换到铅笔工具\n并放置${cnt}个地块", [ {
paramName: "cnt",
param: e
} ]);
this.sprite.spriteFrame = yield s.Util.loadBundleRes("Atlas/Paint/pencil", cc.SpriteFrame);
});
}
guideErase(e) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = a.I18nMgr.exceI18nStringByZh("切换到橡皮工具\n并擦除${cnt}个地块", [ {
paramName: "cnt",
param: e
} ]);
this.sprite.spriteFrame = yield s.Util.loadBundleRes("Atlas/Paint/eraser", cc.SpriteFrame);
});
}
guidePutCustomTile(e, t) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = a.I18nMgr.exceI18nStringByZh("切换到铅笔工具，然后放置${cnt}个你刚刚画的地块", [ {
paramName: "cnt",
param: t
} ]);
r.Mng.Ins.spriteMng.setSprite(this.sprite, e, 100);
});
}
guidePutCustomProp(e, t, o) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = a.I18nMgr.exceI18nStringByZh("放置${cnt}个${name}", [ {
paramName: "cnt",
param: o
}, {
paramName: "name",
param: a.I18nMgr.getI18nStringByZh(e)
} ]);
r.Mng.Ins.spriteMng.setSprite(this.sprite, t, 100);
});
}
guidePlaceActor() {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = "拖动史莱姆，把它放到地面上，然后点‘对勾’按钮";
let e = yield r.Mng.Ins.actorMng.loadOne("1002");
r.Mng.Ins.spriteMng.setActorSprite(this.sprite, e.textureName, 100);
});
}
guidePlaceDevice(e, t) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.sprite.node.setPosition(this.spriteInitialPos);
this.label.string = a.I18nMgr.exceI18nStringByZh("拖动${name}，摆放到合适的位置", [ {
paramName: "name",
param: a.I18nMgr.getI18nStringByZh(e)
} ]);
r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t, 100);
});
}
guideText(e) {
return n(this, void 0, void 0, function*() {
this.ani.stop();
this.label.string = e;
this.label.node.x = 0;
this.sprite.node.active = !1;
});
}
};
i([ c(cc.Label) ], d.prototype, "label", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ c(cc.Animation) ], d.prototype, "ani", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"../Frame/Util": "Util",
"./Player/Mng": "Mng"
} ],
BannerMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "778c4MM1y5DVZ/ggLeAKYzE", "BannerMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.BannerMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top"), r = e("./DynamicMng");
class l {
constructor() {
this.gameDatas = null;
}
loadGames(e) {
return i(this, void 0, void 0, function*() {
r.DynamicMng.Ins.isInspectVersion() && (e = r.DynamicMng.Ins.inspectGameIds);
if (!this.gameDatas) {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetHomepageGameData,
params: t
}, n.Game_RGetHomepageGameData);
o || s.default.showToast("网络错误，加载失败！");
this.gameDatas = o ? o.gameDatas : null;
}
return this.gameDatas;
});
}
clear() {
this.gameDatas = null;
}
}
o.BannerMng = l;
l.Ins = new l();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"./DynamicMng": "DynamicMng"
} ],
BaseConfMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef0dbifadpKV6sAMtWL3e6q", "BaseConfMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.BaseConfMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top");
o.BaseConfMng = class {
constructor() {
this.buildInIds = [];
this.buildInCache = new Map();
this.customIds = [];
this.customCache = new Map();
this.extraIds = [];
this.extraCache = new Map();
}
appendBuildIn(e) {
if (e) for (let t = 0; t < e.length; t++) {
let o = e[t];
this.buildInCache.set(o.id, o);
this.buildInIds.includes(o.id) || o.disuse || this.buildInIds.push(o.id);
}
}
appendCustom(e) {
if (e) for (let t = 0; t < e.length; t++) {
let o = e[t];
this.customCache.set(o.id, o);
this.customIds.includes(o.id) || this.customIds.unshift(o.id);
}
}
appendExtra(e) {
if (e) for (let t = 0; t < e.length; t++) {
let o = e[t];
this.extraCache.set(o.id, o);
this.extraIds.includes(o.id) || this.extraIds.unshift(o.id);
}
}
resetExtra() {
this.extraIds = [];
this.extraCache = new Map();
}
create(e, t) {
return i(this, void 0, void 0, function*() {
if (e.belongGameId) {
e.id = `${e.belongGameId}+${orange.TimeUtil.serverTime}`;
let t = {
gameId: e.belongGameId,
confType: this.creativeConfType,
confId: e.id,
data: e
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleCreativeConf,
params: t
}, n.Game_RSaveRoleCreativeConf))) {
s.default.showToast("网路错误，创建失败！");
return null;
}
this.extraCache.set(e.id, e);
this.extraIds.unshift(e.id);
return e;
}
let o = yield this.requestCreateConf(e, t);
if (o) {
e.id = o;
this.customCache.set(e.id, e);
this.customIds.unshift(e.id);
return e;
}
});
}
delete(e, t) {
return i(this, void 0, void 0, function*() {
if (!e) return;
let o = e.id;
if (e.belongGameId) {
let t = {
gameId: e.belongGameId,
confType: this.creativeConfType,
confId: e.id
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleCreativeConf,
params: t
}, n.Game_RDelRoleCreativeConf))) {
s.default.showToast("网络错误，删除失败！");
return;
}
let i = this.extraIds.indexOf(o);
i >= 0 && this.extraIds.splice(i, 1);
this.extraCache.delete(e.id);
return;
}
yield this.requestDeleteConf(e, t);
this.customCache.delete(o);
let i = this.customIds.indexOf(o);
i >= 0 && this.customIds.splice(i, 1);
});
}
save(e) {
return i(this, void 0, void 0, function*() {
if (e.belongGameId) {
let t = {
gameId: e.belongGameId,
confType: this.creativeConfType,
confId: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleCreativeConf,
params: t
}, n.Game_RSaveRoleCreativeConf);
this.extraCache.set(e.id, e);
} else {
yield this.requestSaveConf(e);
this.customCache.set(e.id, e);
}
});
}
loadOne(e) {
return i(this, void 0, void 0, function*() {
yield this.loadMany([ e ]);
return this.getOne(e);
});
}
getOne(e) {
let t = this.extraCache.get(e);
t || (t = this.customCache.get(e));
t || (t = this.buildInCache.get(e));
return t;
}
loadAll(e) {
return i(this, void 0, void 0, function*() {
return yield this.loadMany(this.getAllIds(e));
});
}
getAllIds(e) {
let t = this.extraIds.concat(this.customIds);
e && (t = t.concat(this.buildInIds));
for (let e = 0; e < t.length; e++) {
let o = t[e];
for (let i = e + 1; i < t.length; i++) if (t[i] == o) {
t.splice(e, 1);
e--;
break;
}
}
return t;
}
loadMany(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
!i || this.customCache.has(i) || this.extraCache.has(i) || this.buildInCache.has(i) || t.push(i);
}
if (t.length > 0) {
let e = yield this.requestLoadConf(t);
for (let o = 0; o < t.length; o++) {
let i = t[o], n = e.find(e => e.id == i);
n && this.upgradeConf(n);
this.customCache.set(i, n);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = e[t], n = this.getOne(i);
n && o.push(n);
}
return o;
});
}
upgradeConf(e) {}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
return [];
});
}
requestCreateConf(e, t) {
return i(this, void 0, void 0, function*() {
return "";
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {});
}
requestDeleteConf(e, t) {
return i(this, void 0, void 0, function*() {});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top"
} ],
BaseGainPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ebd29rDvs5LGI3FTpzmk9oa", "BaseGainPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Panel"), a = e("../../CustomUI/Button"), s = e("../../Frame/TweenUtil"), r = e("../../Frame/Sound"), {ccclass: l, menu: c, property: d} = cc._decorator;
let h = class extends n.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.subTitleLabel = null;
this.lightNode = null;
this.rewardPos = null;
this.gainBtn = null;
this.gainCallback = null;
}
onLoad() {
super.onLoad();
this.subTitleLabel && (this.subTitleLabel.string = "");
this.gainBtn.node.on("click", this.onGainBtnTap, this);
this.initLight();
r.Sound.play("openGainPanel");
}
openAnim(e = null) {
s.TweenUtil.applyAppear({
node: this.node,
callback: e
});
s.TweenUtil.applyAppear({
node: this.rewardPos,
delay: .25,
time: .3
});
s.TweenUtil.applyAppear({
node: this.gainBtn.node,
delay: .25,
time: .3
});
}
initLight() {
for (;this.lightNode.childrenCount < 7; ) {
let e = cc.instantiate(this.lightNode.children[0]);
this.lightNode.addChild(e);
}
for (let e = 0; e < 7; e++) {
let t = this.lightNode.children[e];
t.angle = 360 * e / 7;
t.runAction(cc.repeatForever(cc.rotateBy(10, 360)));
}
}
onGainBtnTap() {
this.gainCallback && this.gainCallback();
this.closePanel();
}
};
i([ d(cc.Label) ], h.prototype, "titleLabel", void 0);
i([ d(cc.Label) ], h.prototype, "subTitleLabel", void 0);
i([ d(cc.Node) ], h.prototype, "lightNode", void 0);
i([ d(cc.Node) ], h.prototype, "rewardPos", void 0);
i([ d(a.default) ], h.prototype, "gainBtn", void 0);
h = i([ l, c("面板/RewardPanel") ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Sound": "Sound",
"../../Frame/TweenUtil": "TweenUtil"
} ],
BaseMoveCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "81573eekWhNKbrYxF2Rrpu3", "BaseMoveCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Hortor"), a = e("./KeyInput"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this._keyInput = new a.default();
this._isTouchDir = !1;
}
show() {
if (!this.node) return;
let e = this.node.getComponent(cc.Widget);
e && e.updateAlignment();
this._keyInput.Active(this);
}
hide() {
this.node.x = 1e5;
this._keyInput.DeActive();
}
onDestroy() {
this.node.x = 1e5;
this._keyInput.DeActive();
}
setMover(e) {}
setMoveDir(e) {}
onTouchStartA() {}
onTouchEndA() {}
onTouchStartB() {}
onTouchEndB() {}
update() {
n.Hortor.isMiniGame() || n.Hortor.isApp() || this._isTouchDir || this._keyInput.update();
}
};
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../Hortor": "Hortor",
"./KeyInput": "KeyInput"
} ],
BeginExamPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dd5f55lr91DfqbjielyOOx0", "BeginExamPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.btn = null;
}
onLoad() {
super.onLoad();
this.btn.node.on(n.default.CLICK, this.onBtn, this);
}
onBtn() {
this.closePanel();
s.default.ins.Enter("ExamScene");
}
closeAnim(e = null) {
e && e();
}
};
i([ l(n.default) ], c.prototype, "btn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager"
} ],
BgLayerCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8f925hru8RK4or3qJhi81KA", "BgLayerCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Util"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this._camera = null;
this.speedScale = 1;
this._startPos = new cc.Vec2();
this._cameraPos = new cc.Vec2();
this._moveDelta = new cc.Vec2();
}
lateUpdate(e) {
if (this._camera) {
this._camera.getPosition(this._cameraPos);
this._cameraPos.subSelf(this._startPos);
this._moveDelta.set(this._cameraPos);
this._moveDelta.mulSelf(this.speedScale);
this.node.setPosition(this._moveDelta);
}
}
setCamera(e) {
this._camera = e;
let t = n.Util.convertPosition(this._camera, this.node.parent);
this.node.position = t;
this._startPos.set(t);
}
};
i([ s ], r.prototype, "speedScale", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
Billboard: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ff648AcHh9PVIBv/74V0KgC", "Billboard");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../CollisionEmiter"), s = e("../Player/Mng"), r = e("../World/Device"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends r.default {
constructor() {
super(...arguments);
this.boxCollider = null;
this.bubble = null;
}
setCutting(e) {
this.sprite && (this.sprite.enabled = !e);
}
onLoad() {
super.onLoad();
this.node.on(a.default.onCollisionEnter, this.onCollisionEnter, this);
this.node.on(a.default.onCollisionExit, this.onCollisionExit, this);
}
clearBubble() {
this.bubble && this.bubble.hide();
this.bubble = null;
}
onCollisionEnter(e, t) {
if (this.world.playing && this.isHeroActor(e) && this.data.extra.text) {
this.clearBubble();
let e = this.world;
this.bubble = e.showTextBubble({
parent: this.node,
text: this.data.extra.text
});
}
}
onCollisionExit(e, t) {
this.world.playing && this.isHeroActor(e) && this.clearBubble();
}
setData(e, t) {
super.setData(e, t);
e = this.data;
s.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
scale: 1,
text: "我是告示牌"
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
text: "我是告示牌"
};
o && e.addHead(t.name, t.textureName);
e.addEditBox("文字", n.extra.text, e => {
n.extra.text = e;
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
}
};
n([ c(cc.BoxCollider) ], d.prototype, "boxCollider", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../CollisionEmiter": "CollisionEmiter",
"../Player/Mng": "Mng",
"../World/Device": "Device"
} ],
Bomb: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "628f7WkBXxMnJ20rFbjjoYy", "Bomb");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Damager"), r = e("../../Frame/FightSystem"), l = e("../../Frame/TweenUtil"), c = e("../../Frame/Util"), d = e("../../GameData/GameTypeDefine"), h = e("../CollisionEmiter"), p = e("../Player/GameSaveMng"), u = e("../Player/Mng"), m = e("../World/Device"), f = e("../World/Tile"), g = e("../World/World"), {ccclass: y, property: v} = cc._decorator;
let C = i = class extends m.default {
constructor() {
super(...arguments);
this.sprite = null;
this.damager = null;
this.anim = null;
this.detonated = !1;
this.explored = !1;
this.detonateTime = 0;
}
onLoad() {
this.anim = this.node.getComponent(cc.Animation);
this.node.on(r.FightSystem.Event.Beaten, this.onBeaten, this);
this.node.on(r.FightSystem.Event.BeatHper, this.onBeatHper, this);
this.node.on(h.default.onCollisionEnter, this.onCollisionEnter, this);
this.damager.node.active = !1;
}
onEnable() {
this.world.node.on(g.default.PAUSE, this.onWorldPause, this);
this.world.node.on(g.default.RESUME, this.onWorldResume, this);
}
onDisable() {
this.world.node.off(g.default.PAUSE, this.onWorldPause, this);
this.world.node.off(g.default.RESUME, this.onWorldResume, this);
}
onWorldPause() {
this.detonated && this.anim.pause();
}
onWorldResume() {
this.detonated && this.anim.resume();
}
onBeaten() {
this.world.playing && this.detonate();
}
onBeatHper(e) {
0 == e.dmg && l.TweenUtil.applyShakeShort(e.hper.node);
}
onCollisionEnter(e, t) {
this.world.playing && this.detonate();
}
detonate() {
if (!this.detonated) {
this.detonated = !0;
this.detonateTime = this.data.extra.detonateTime;
this.anim.play();
c.Util.loadBundleRes("Prefab/Effect/BombSpark");
}
}
update(e) {
if (this.world.playing && this.detonated) {
this.detonateTime -= e;
this.detonateTime < 0 && this.explore();
}
}
explore() {
return a(this, void 0, void 0, function*() {
if (this.explored) return;
this.explored = !0;
let e = this.world, t = this.data;
this.sprite.node.active = !1;
this.damager.node.active = !0;
c.Util.moveNode(this.damager.node, this.node.parent);
e.AddBody(this.damager);
cc.tween(this.damager.node).to(.2, {
opacity: 0
}).call(() => {
this.damager.node.parent = this.node;
this.damager.node.x = 0;
this.damager.node.y = 0;
e.removeDevice(this);
e.RemoveBody(this.damager);
this.data.onlyOnce && p.default.Ins.setDeviceFlag(e.worldData.id, this.data.id);
}).start();
(yield e.playEffect({
effectName: "BombSpark",
pos: this.node.position
})).scale = t.extra.scale;
});
}
setData(e, t) {
super.setData(e, t);
e = this.data;
u.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
speed: 300,
dmg: 1,
scale: 1,
exploreRange: 1.5 * f.default.SIZE,
detonateTime: 1
});
this.damager.dmg = e.extra.dmg;
this.damager.ignoreTeam = this.data.ignoreDmgEnemy ? d.Team.Enemy : d.Team.None;
this.node.scale = e.extra.scale;
this.setDamagerRadius(e.extra.exploreRange);
}
setDamagerRadius(e) {
this.damager.getComponent(cc.CircleCollider).radius = e;
this.damager.node.width = 2 * e;
this.damager.node.height = 2 * e;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
speed: 300,
dmg: 1,
scale: 1,
exploreRange: 1.5 * f.default.SIZE,
detonateTime: 1
};
o && e.addHead(t.name, t.textureName);
e.addToggle("伤害敌人", !n.ignoreDmgEnemy, e => {
n.ignoreDmgEnemy = !e;
});
e.addNumberEditBox("伤害", n.extra.dmg, 0, 999999, e => {
n.extra.dmg = e;
});
e.addNumberEditBox("爆炸半径(格)", n.extra.exploreRange / f.default.SIZE, 0, 64, e => {
n.extra.exploreRange = e * f.default.SIZE;
o && o.setDamagerRadius(e);
});
e.addNumberEditBox("引爆时间(秒)", n.extra.detonateTime, 0, 999999, e => {
n.extra.detonateTime = e;
});
e.addToggle("爆炸后不再出现？", n.onlyOnce, e => {
n.onlyOnce = e;
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
}
};
n([ v({
override: !0,
type: cc.Sprite
}) ], C.prototype, "sprite", void 0);
n([ v(s.default) ], C.prototype, "damager", void 0);
C = i = n([ y ], C);
o.default = C;
cc._RF.pop();
}, {
"../../Frame/Damager": "Damager",
"../../Frame/FightSystem": "FightSystem",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../CollisionEmiter": "CollisionEmiter",
"../Player/GameSaveMng": "GameSaveMng",
"../Player/Mng": "Mng",
"../World/Device": "Device",
"../World/Tile": "Tile",
"../World/World": "World"
} ],
BulletCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a2631P7NkZGW4gtga5+WPqi", "BulletCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.bulletSprite = null;
this.normalNode = null;
this.createNew = null;
this.optionBtn = null;
this.bulletConf = null;
this.from = "MinePage";
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.bulletConf = e;
this.createNew.active = e.createNew;
this.bulletSprite.node.active = !e.createNew;
e.createNew || c.Mng.Ins.spriteMng.setBullletSprite(this.bulletSprite, e.textureName, 120);
});
}
onStateChange(e) {
"MinePage" == this.from || "SelectBulletPanel" == this.from && (this.node.color = e ? l.UIColor.blue : cc.Color.WHITE);
}
onOptionBtnTap() {
this.bulletConf && r.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.bulletConf);
});
}
};
i([ h(cc.Sprite) ], p.prototype, "bulletSprite", void 0);
i([ h(cc.Node) ], p.prototype, "normalNode", void 0);
i([ h(cc.Node) ], p.prototype, "createNew", void 0);
i([ h(a.default) ], p.prototype, "optionBtn", void 0);
i([ h ], p.prototype, "from", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
BulletMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "354e4udt+hIIJqSrQv+wqUl", "BulletMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Config"), r = e("../../GameData/GameTypeDefine"), l = e("../../../scripts/_autogen/data/data"), c = e("./BaseConfMng");
o.default = class extends c.BaseConfMng {
constructor() {
super();
this.confType = r.CommonDataType.Bullet;
this.creativeConfType = l.CreativeConfType.weapon;
this.appendBuildIn(s.Config.bulletConfs);
}
upgradeConf(e) {
e && (e.type = r.CommonDataType.Bullet);
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleBulletConf,
params: t
}, n.Game_RGetRoleBulletConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleBulletConf,
params: t
}, n.Game_RSaveRoleBulletConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleBulletConf,
params: t
}, n.Game_RSaveRoleBulletConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleBulletConf,
params: t
}, n.Game_RDelRoleBulletConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
BulletOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5955ccRtCJPXaHj9L0/Is10", "BulletOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.BulletOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/SceneManager"), s = e("../../Frame/Top"), r = e("../../Game/Player/Mng"), l = e("./CommonOptionHelper");
o.BulletOptionHelper = class extends l.CommonOptionHelper {
constructor() {
super(...arguments);
this.bulletConf = null;
this.propConf = null;
this.imageFileType = n.ImageFileType.bullet;
this.optionName = "子弹";
this.refreshMsgName = "refreshBulletList";
this.changeDataMsgName = null;
}
setConf(e) {
super.setConf(e);
this.bulletConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
s.default.showLoading("正在上传(1/2)");
yield r.Mng.Ins.bulletMng.save(this.bulletConf);
s.default.hideLoading("上传成功");
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield r.Mng.Ins.bulletMng.delete(this.bulletConf);
});
}
displayWorldType() {
return !1;
}
initInspector(e) {
e.reset();
this.loadCostProp();
e.addNumberEditBox("伤害值", this.bulletConf.damage, 0, 999999, e => {
this.bulletConf.damage = e;
});
e.addNumberEditBox("自旋转(度/秒)", this.bulletConf.angleSpeed, 0, 36e3, e => {
this.bulletConf.angleSpeed = e;
});
let t = e.addButton("消耗道具", this.propConf ? this.propConf.name : this.bulletConf.costPropId && "" != this.bulletConf.costPropId ? "" : "无道具", () => {
a.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this.bulletConf.costPropId);
e.selectCall = e => {
this.propConf = e;
this.bulletConf.costPropId = e.id;
t.button.label.string = e.name;
};
});
});
e.addToggle("击中震屏", this.bulletConf.hitShake, e => {
this.bulletConf.hitShake = e;
});
e.addToggle("击中销毁", this.bulletConf.hitDestroy, e => {
this.bulletConf.hitDestroy = e;
});
this.bulletConf.onHit = this.bulletConf.onHit || [];
e.addTrigger("击中时", this.bulletConf.onHit, !1);
this.bulletConf.onDestroy = this.bulletConf.onDestroy || [];
e.addTrigger("销毁时", this.bulletConf.onDestroy, !1);
}
loadCostProp() {
return i(this, void 0, void 0, function*() {
if (this.bulletConf.costPropId) {
let e = yield r.Mng.Ins.propMng.loadOne(this.bulletConf.costPropId);
this.propConf != e && (this.propConf = e);
}
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
Bullet: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "90041/viWxAH6mFmRRqzi8N", "Bullet");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../Frame/Damager"), s = e("../../../Frame/FightSystem"), r = e("../../../Frame/TweenUtil"), l = e("../../../Frame/Util"), c = e("../../../GameData/GameTypeDefine"), d = e("../../Player/Mng"), h = e("../../Player/TriggerMng"), p = e("../WorldNodeBody"), {ccclass: u, property: m} = cc._decorator;
new cc.Vec2();
let f = class extends p.default {
constructor() {
super(...arguments);
this.skin = null;
this.damager = null;
this.box = null;
this.conf = null;
this._distance = 500;
this._angleSpeed = 0;
this._velocity = cc.Vec2.ZERO;
this._vh = 0;
this._acc = cc.Vec3.ZERO;
this._airResistanceCof = 0;
this._isPlay = !1;
}
onLoad() {
super.onLoad();
this.damager = this.getComponent(a.default);
this.box = this.getComponent(cc.BoxCollider);
this.node.on(s.FightSystem.Event.BeatHper, this.onBeatHper, this);
}
onBeatHper() {
this._isPlay && this.damager.remainTimes <= 0 && this.onHit();
}
onHit() {
this.conf.hitShake && r.TweenUtil.applyShakeShort(this.world.camera.node);
this.conf.onHit && h.default.Ins.emitTrigger(this.conf.onHit, this.node);
this._isPlay = !1;
this.playSpark();
this.scheduleOnce(() => {
this.world.removeBullet(this);
this.conf.onDestroy && h.default.Ins.emitTrigger(this.conf.onDestroy, this.node);
});
}
setCutting(e) {
this.skin.enabled = !e;
}
update(e) {
if (!this.world.playing || !this._isPlay) return;
let t = this._velocity.mul(e), o = this._vh * e;
this.updateH(this.h + o);
this.PositionMoveDelta(t.x, t.y);
if (this.checkHitGround()) return;
0 != this._angleSpeed ? this._velocity.x > 0 ? this.skin.node.angle -= this._angleSpeed * e : this.skin.node.angle += this._angleSpeed * e : this.skin.node.angle = l.Util.angle(t);
this._distance -= t.mag();
this._velocity.x += this._acc.x * e;
this._velocity.y += this._acc.y * e;
this._vh += this._acc.z * e;
let i = this._airResistanceCof * e;
i > 1 && (i = 1);
0 != this._velocity.x && (this._velocity.x -= this._velocity.x * i);
0 != this._velocity.y && (this._velocity.y -= this._velocity.y * i);
if (this._distance < 0) {
this.conf.hitShake && this.damager.team == c.Team.Hero && r.TweenUtil.applyShakeShort(this.world.camera.node);
this._isPlay = !1;
this.playSpark();
this.world.removeBullet(this);
this.conf.onDestroy && h.default.Ins.emitTrigger(this.conf.onDestroy, this.node);
}
}
fly(e, t, o = 0, i, a) {
return n(this, void 0, void 0, function*() {
this._isPlay = !0;
this.conf = t;
this._velocity.x = e.x;
this._velocity.y = e.y;
this._vh = o;
this.updateH(0);
i ? this._acc.set(i) : this._acc.set(cc.Vec3.ZERO);
this._airResistanceCof = a || 0;
this._airResistanceCof < 0 && (this._airResistanceCof = 0);
this.skin.node.angle = l.Util.angle(this._velocity);
e.x > 0 ? this.skin.node.scaleY = 1 : this.skin.node.scaleY = -1;
this._distance = t.range;
this._angleSpeed = t.angleSpeed;
this.damager.dmg = t.damage;
this.damager.remainTimes = 1;
this.box.size = cc.size(32, 32);
d.Mng.Ins.spriteMng.setBullletSprite(this.skin, t.textureName, 32);
});
}
playSpark() {
this.world.playEffect({
effectName: "BulletSpark",
pos: this.node.position
});
}
checkHitGround() {
if (this.world.worldLayout.type == c.WorldType.Rpg && this.h <= 0 && this._vh < 0) {
this.onHit();
return !0;
}
return !1;
}
};
i([ m(cc.Sprite) ], f.prototype, "skin", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../Frame/Damager": "Damager",
"../../../Frame/FightSystem": "FightSystem",
"../../../Frame/TweenUtil": "TweenUtil",
"../../../Frame/Util": "Util",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Player/Mng": "Mng",
"../../Player/TriggerMng": "TriggerMng",
"../WorldNodeBody": "WorldNodeBody"
} ],
ButtonItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "709027nynRHM5dS0RzNQtr2", "ButtonItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.button = null;
this.onClick = null;
}
onLoad() {
this.button.node.on(n.default.CLICK, this.onBtn, this);
}
setData(e, t, o) {
null == t && (t = "");
this.nameLabel.string = e;
this.button.label.string = t;
this.onClick = o;
}
onBtn() {
this.onClick && this.onClick(this.button);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(n.default) ], r.prototype, "button", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button"
} ],
Button: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "422f3XEwbxIp602STugcqcm", "Button");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Vibrate"), s = e("../Frame/Sound"), r = e("../Frame/Util"), {ccclass: l, menu: c, property: d} = cc._decorator;
let h = class extends cc.Button {
constructor() {
super(...arguments);
this.vibrate = !0;
this.soundName = "clickBtn";
this.background = null;
this.icon = null;
this.label = null;
this.dot = null;
this.dotLabel = null;
}
onLoad() {
this.target || (this.target = this.node);
this.transition == cc.Button.Transition.NONE && (this.transition = cc.Button.Transition.SCALE);
this.node.on("click", this.onClick, this);
}
onClick() {
s.Sound.play(this.soundName);
this.vibrate && a.Vibrate.short();
}
tempDisable(e) {
this.interactable = !1;
setTimeout(() => {
this.interactable = !0;
}, e);
}
showDot(e) {
this.dot && (this.dot.active = e);
}
setIconUrl(e) {
return n(this, void 0, void 0, function*() {
this.icon && e && (this.icon.spriteFrame = yield r.Util.loadBundleRes(e, cc.SpriteFrame));
});
}
};
h.CLICK = "click";
i([ d ], h.prototype, "vibrate", void 0);
i([ d ], h.prototype, "soundName", void 0);
i([ d(cc.Sprite) ], h.prototype, "background", void 0);
i([ d(cc.Sprite) ], h.prototype, "icon", void 0);
i([ d(cc.Label) ], h.prototype, "label", void 0);
i([ d(cc.Node) ], h.prototype, "dot", void 0);
i([ d(cc.Label) ], h.prototype, "dotLabel", void 0);
h = i([ l, c("自定义UI/Button") ], h);
o.default = h;
cc._RF.pop();
}, {
"../Frame/Sound": "Sound",
"../Frame/Util": "Util",
"../Frame/Vibrate": "Vibrate"
} ],
BuyGameGoodsComfirmPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11ff30QFptCQJ9xR7VykBOi", "BuyGameGoodsComfirmPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/CoinMng"), c = e("../../Game/Player/Mng"), d = e("../../Scene/GameScene/GameScene"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.label1 = null;
this.costIcon = null;
this.label2 = null;
this.sprite = null;
this.buyBtn = null;
this.buyCall = null;
this.goods = null;
}
onLoad() {
super.onLoad();
this.buyBtn.node.on(a.default.CLICK, this.onBuyBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.goods = e;
this.label1.string = `Do you want to spend ${e.price}`;
let t = yield c.Mng.Ins.gameShopMng.getCostIconUrl(e.costType);
this.buyBtn.label.string = `${e.price} Buy`;
c.Mng.Ins.spriteMng.setSprite(this.costIcon, t, 50);
c.Mng.Ins.spriteMng.setSprite(this.buyBtn.icon, t, 60);
let o = yield c.Mng.Ins.propMng.loadOne(e.propId);
this.label2.string = `Buy ${o.name}?`;
c.Mng.Ins.spriteMng.setSprite(this.sprite, o.textureName, 150);
});
}
onBuyBtn() {
return n(this, void 0, void 0, function*() {
if (l.default.Ins.coin < this.goods.price) r.default.ins.OpenPanelByName("LackCoinPanel", e => {
e.titleLabel.string = "Not enough G coin";
let t = r.default.ins.findScene(d.default);
t && e.setGameData(t.gameData);
}); else {
this.buyCall && this.buyCall();
this.closePanel();
}
});
}
};
i([ p(cc.Label) ], u.prototype, "label1", void 0);
i([ p(cc.Sprite) ], u.prototype, "costIcon", void 0);
i([ p(cc.Label) ], u.prototype, "label2", void 0);
i([ p(cc.Sprite) ], u.prototype, "sprite", void 0);
i([ p(a.default) ], u.prototype, "buyBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/Mng": "Mng",
"../../Scene/GameScene/GameScene": "GameScene"
} ],
BuyGoodsPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ec4deN+3jhMKr+9R2oFPEpz", "BuyGoodsPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../TypeScript/Frame/Panel"), s = e("../../../TypeScript/Game/Player/ShopMng"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/HeadIcon"), c = e("../../CustomUI/ScrollList"), d = e("../../Frame/Config"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Frame/UIColor"), m = e("../../Frame/Util"), f = e("../../Game/GameEnv"), g = e("../../Game/Hortor"), y = e("../../Game/OperationFlow"), v = e("../../Game/Player/CoinMng"), C = e("../../Game/Player/DynamicMng"), _ = e("../../Game/Player/PlayerDetailMng"), S = e("../../Game/Player/TalkMng"), I = e("../../GameData/GameTypeDefine"), G = e("../../Role"), T = e("../../Scene/FriendSceen/FriendScene"), b = e("../../TGA"), M = e("../../Frame/Share"), P = e("../../Game/Player/CollectionMng"), D = e("../../Game/PathConfig"), w = e("../../../i18n/i18nMgr"), {ccclass: B, property: R} = cc._decorator;
let x = class extends a.default {
constructor() {
super(...arguments);
this.headIcon = null;
this.userNameLabel = null;
this.advertLabel = null;
this.goodsNameLabel = null;
this.saleCntLabel = null;
this.timeLabel = null;
this.packageSizeLabel = null;
this.scrollList = null;
this.shareBtn = null;
this.buyBtn = null;
this.discountBuyBtn = null;
this.fullPriceLabel = null;
this.discountLabel = null;
this.mineLabel = null;
this.menuBtn = null;
this.info = null;
this.buyCall = null;
this.discount = 1;
this.price = 0;
}
onLoad() {
super.onLoad();
this.buyBtn.node.on(r.default.CLICK, this.onBuyBtn, this);
this.shareBtn.node.on(r.default.CLICK, this.onShareBtn, this);
this.discountBuyBtn.node.on(r.default.CLICK, this.onBuyBtn, this);
this.headIcon.node.on(r.default.CLICK, this.onHeadIcon, this);
this.menuBtn.node.on(r.default.CLICK, this.onMenuBtn, this);
this.buyBtn.node.active = !0;
this.discountBuyBtn.node.active = !1;
}
onCollectBtn() {
return n(this, void 0, void 0, function*() {
this.closePanel();
let e = this.info.id, t = yield s.default.Ins.gmLoadAllChosenGoodsIds();
if (t.includes(e)) {
let o = t.indexOf(e);
o >= 0 && t.splice(o, 1);
} else {
let o = t.indexOf(e);
o >= 0 && t.splice(o, 1);
t.unshift(e);
}
cc.game.emit("RefreshShopList");
});
}
onBanBtn() {
return n(this, void 0, void 0, function*() {
h.default.ins.OpenPanelByName("BanGoodsPanel", e => {
e.setData(this.info.id);
});
});
}
onMenuBtn() {
return n(this, void 0, void 0, function*() {
let e = [ {
str: "举报",
icon: {
url: "Atlas/UI/reportBtn",
color: u.UIColor.white,
w: 50,
h: 40
},
call: () => {
this.onReportBtn();
}
}, {
str: "分享",
icon: {
url: "Atlas/UI/ttShare",
color: u.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onShareBtn();
}
} ], t = P.CollectionMng.Ins.isCollectGoods(this.info.id);
e.push({
str: t ? "取消收藏" : "收藏",
icon: {
url: D.default.ICON_MENU_COLLECTION,
color: t ? u.UIColor.yellow : u.UIColor.gray,
w: 40,
h: 40
},
call: () => n(this, void 0, void 0, function*() {
t ? P.CollectionMng.Ins.unCollectGoods(this.info.id) : P.CollectionMng.Ins.collectGoods(this.info.id);
})
});
if (C.DynamicMng.Ins.isGmPlayer() || g.Hortor.platformSysBigType == g.PlatformSysBigType.H5) {
let t = yield s.default.Ins.gmLoadAllChosenGoodsIds(), o = (yield C.DynamicMng.Ins.loadOne("IpGoodsIds")) || [];
e.push({
str: t.includes(this.info.id) ? "移除精选" : "加入精选",
icon: {
url: "Atlas/UI/ttShare",
color: u.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onCollectBtn();
}
});
e.push({
str: o.includes(this.info.id) ? "取消Ip" : "标记IP",
icon: {
url: "Atlas/UI/ttShare",
color: u.UIColor.green,
w: 50,
h: 40
},
call: () => {
if (o.includes(this.info.id)) {
let e = o.indexOf(this.info.id);
o.splice(e, 1);
} else o.unshift(this.info.id);
cc.game.emit("RefreshShopList");
}
});
e.push({
str: "下架",
icon: {
url: "Atlas/UI/ttShare",
color: u.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onBanBtn();
}
});
e.push({
str: "游戏信息",
icon: {
url: "Atlas/UI/reportBtn",
color: u.UIColor.white,
w: 50,
h: 40
},
call: () => {
h.default.ins.OpenPanelByName("AboutPanel", e => {
let t = w.I18nMgr.exceI18nStringByZh("商品ID：${this.info.id}", [ {
paramName: "this.info.id",
param: this.info.id
} ]);
e.setData("商品信息", t);
console.log(t);
});
}
});
}
p.default.showMenu(this.menuBtn.node, e);
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.info = e;
this.price = e.price;
this.goodsNameLabel.string = e.name + ":";
this.advertLabel.string = e.advert;
this.saleCntLabel.string = e.saleCnt + w.I18nMgr.getI18nStringByZh("次下载");
this.buyBtn.label.string = e.price + w.I18nMgr.getI18nStringByZh("购买");
let t = [];
for (let o = 0; o < e.goodsContent.tileConfs.length; o++) {
let i = e.goodsContent.tileConfs[o];
i.conf.typeName = "地块";
t.push(i);
}
for (let o = 0; o < e.goodsContent.actorConfs.length; o++) {
let i = e.goodsContent.actorConfs[o];
i.conf.typeName = "角色";
t.push(i);
}
for (let o = 0; o < e.goodsContent.deviceConfs.length; o++) {
let i = e.goodsContent.deviceConfs[o], n = i.conf;
i.conf.typeName = d.Config.getDeviceTypeName(n.deviceType);
t.push(i);
}
for (let o = 0; o < e.goodsContent.propConfs.length; o++) {
let i = e.goodsContent.propConfs[o];
i.conf.typeName = "道具";
t.push(i);
}
for (let o = 0; o < e.goodsContent.weaponConfs.length; o++) {
let i = e.goodsContent.weaponConfs[o], n = i.conf;
n.weaponType == I.WeaponType.Gun ? i.conf.typeName = "直射武器" : n.weaponType == I.WeaponType.Melee ? i.conf.typeName = "近战武器" : n.weaponType == I.WeaponType.Cast ? i.conf.typeName = "弹射武器" : i.conf.typeName = "武器";
t.push(i);
}
this.scrollList.setDataArr(t);
let o = yield _.default.Ins.load(e.playerId);
this.timeLabel.string = "Upload on: " + m.Util.parseDataString(e.upStamp);
this.packageSizeLabel.string = t.length + "";
if (o) {
this.userNameLabel.string = o.userName;
this.headIcon.loadUrl(o.userImg);
this.headIcon.setLevel(o.level);
}
if (this.info.playerId == G.default.Ins.role.id) {
this.buyBtn.node.active = !1;
this.discountBuyBtn.node.active = !1;
this.mineLabel.node.active = !0;
} else this.mineLabel.node.active = !1;
});
}
setDiscount(e) {
return n(this, void 0, void 0, function*() {
if (1 == e) {
this.buyBtn.node.active = !0;
this.discountBuyBtn.node.active = !1;
} else {
this.discount = e;
this.price = Math.ceil(this.info.price * this.discount);
this.discountBuyBtn.label.string = this.price + "购买";
this.fullPriceLabel.string = "原价" + this.info.price;
this.discountLabel.string = 10 * e + "折";
if (this.buyBtn.node.active) {
this.buyBtn.node.active = !1;
this.discountBuyBtn.node.active = !0;
}
}
});
}
onBuyBtn() {
return n(this, void 0, void 0, function*() {
if ((v.default.Ins.coin || 0) < this.price) h.default.ins.OpenPanelByName("LackCoinPanel", e => {
e.titleLabel.string = "G币不足";
}); else {
p.default.showLoading("下载中");
let e = yield s.default.Ins.buy(this.info.id, this.discount);
p.default.hideLoading();
v.default.Ins.costCoin(this.price);
this.closePanel();
y.OperationFlow.openRewards(e);
this.buyCall && this.buyCall();
b.TGA.track("buyGoods", {
goodsId: this.info.id,
price: this.price,
goodsType: this.info.goodsType,
packageSize: e.length,
discount: this.discount
});
}
});
}
onHeadIcon() {
let e = h.default.ins.findScene(T.default);
e && e.enabled ? this.closePanel() : h.default.ins.Enter("FriendScene", e => {
e.setData(this.info.playerId);
}, h.ShiftAnima.moveLeftShift);
}
onReportBtn() {
h.default.ins.Enter("ReportScene", e => {
e.initReportGoods(this.info.id);
}, h.ShiftAnima.moveLeftShift);
}
onShareBtn() {
let e = {
type: "goods",
isMine: this.info.playerId == G.default.Ins.role.id,
goodsId: this.info.id
}, t = {
shareType: "shareGoods",
title: g.Hortor.isApp() ? this.info.name : `${this.info.name}：${this.info.advert}`,
desc: this.info.advert,
imageUrl: f.gameEnv.fileCDN + this.info.iconTextureName,
query: m.Util.toQueryStr(e),
imageName: this.info.iconTextureName,
talk: {
title: "",
sections: [ {
type: S.TalkSectionType.Goods,
goodsId: this.info.id
} ]
},
success: () => {
p.default.showToast("分享成功");
b.TGA.track("share", e);
},
fail: () => {
p.default.showToast("分享失败");
}
};
M.Share.share(t);
}
};
i([ R(l.default) ], x.prototype, "headIcon", void 0);
i([ R(cc.Label) ], x.prototype, "userNameLabel", void 0);
i([ R(cc.Label) ], x.prototype, "advertLabel", void 0);
i([ R(cc.Label) ], x.prototype, "goodsNameLabel", void 0);
i([ R(cc.Label) ], x.prototype, "saleCntLabel", void 0);
i([ R(cc.Label) ], x.prototype, "timeLabel", void 0);
i([ R(cc.Label) ], x.prototype, "packageSizeLabel", void 0);
i([ R(c.default) ], x.prototype, "scrollList", void 0);
i([ R(r.default) ], x.prototype, "shareBtn", void 0);
i([ R(r.default) ], x.prototype, "buyBtn", void 0);
i([ R(r.default) ], x.prototype, "discountBuyBtn", void 0);
i([ R(cc.Label) ], x.prototype, "fullPriceLabel", void 0);
i([ R(cc.Label) ], x.prototype, "discountLabel", void 0);
i([ R(cc.Label) ], x.prototype, "mineLabel", void 0);
i([ R(r.default) ], x.prototype, "menuBtn", void 0);
x = i([ B ], x);
o.default = x;
cc._RF.pop();
}, {
"../../../TypeScript/Frame/Panel": "Panel",
"../../../TypeScript/Game/Player/ShopMng": "ShopMng",
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Share": "Share",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/PathConfig": "PathConfig",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/PlayerDetailMng": "PlayerDetailMng",
"../../Game/Player/TalkMng": "TalkMng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Role": "Role",
"../../Scene/FriendSceen/FriendScene": "FriendScene",
"../../TGA": "TGA"
} ],
CameraCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cd260ya0XNJlbxwVqRICXcU", "CameraCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./Util"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.target = null;
this.useX = !1;
this.useY = !1;
}
update() {
if (!this.target || !this.target.isValid) return;
let e = n.Util.convertPosition(this.target, this.node.parent);
this.useX && (this.node.x = n.Util.lerp(this.node.x, e.x, .1));
this.useY && (this.node.y = n.Util.lerp(this.node.y, e.y, .1));
}
};
i([ s(cc.Node) ], r.prototype, "target", void 0);
i([ s ], r.prototype, "useX", void 0);
i([ s ], r.prototype, "useY", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"./Util": "Util"
} ],
CameraDragCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb528w70P5BB5P0vqRhCd6f", "CameraDragCtrl");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/TweenUtil"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = i = class extends cc.Component {
constructor() {
super(...arguments);
this.camera = null;
this.boundBox = null;
this.distance = 0;
this.zoomChange = 0;
}
onEnable() {
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove3, this);
this.node.on(cc.Node.EventType.MOUSE_WHEEL, this.onMouseWheel, this);
}
onDisable() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove3, this);
this.node.off(cc.Node.EventType.MOUSE_WHEEL, this.onMouseWheel, this);
}
setCamera(e, t) {
this.camera = e;
this.boundBox = t;
this.setZoom(e.zoomRatio);
}
onTouchMove3(e) {
if (!this.camera || !this.boundBox) return;
let t = e.getTouches();
if (1 == t.length) {
let t = e.getDelta();
this.camera.node.x -= t.x / this.camera.zoomRatio;
this.camera.node.y -= t.y / this.camera.zoomRatio;
this.clampCamera();
this.distance += t.mag();
if (this.distance > 300) {
this.distance = 0;
cc.game.emit(i.CAMERA_DRAG);
}
} else if (2 == t.length) {
let e = t[0], o = t[1], i = e.getLocation().sub(e.getDelta()), n = o.getLocation().sub(o.getDelta()), a = i.sub(n).mag(), s = e.getLocation().sub(o.getLocation()).mag();
this.setZoom(this.camera.zoomRatio * s / a);
}
}
onMouseWheel(e) {
if (this.camera && this.boundBox && "mousewheel" == e.type) {
let t = e.getScrollY();
this.setZoom(this.camera.zoomRatio + t / 720);
}
}
clampCamera() {
if (this.camera && this.boundBox) {
this.camera.node.x = s.Util.clamp(this.camera.node.x, 0, this.boundBox.width);
this.camera.node.y = s.Util.clamp(this.camera.node.y, 0, this.boundBox.height);
}
}
setZoom(e) {
if (this.camera && this.boundBox) {
e <= 1 && cc.game.emit(i.CAMERA_ZOOM_MIN);
e >= 3 && cc.game.emit(i.CAMERA_ZOOM_MAX);
e = s.Util.clamp(e, .5, 4);
this.camera.zoomRatio = e;
this.node.emit("ZOOM_CHANGE", e);
}
}
centerOn(e) {
let t = s.Util.convertPosition(e, this.camera.node.parent);
cc.tween(this.camera.node).to(.2, {
position: t
}, {
easing: a.Easing.quadOut
}).start();
}
};
c.ZOOM_CHANGE = "ZOOM_CHANGE";
c.CAMERA_DRAG = "CAMERA_DRAG";
c.CAMERA_ZOOM_MIN = "CAMERA_ZOOM_MIN";
c.CAMERA_ZOOM_MAX = "CAMERA_ZOOM_MAX";
n([ l(cc.Camera) ], c.prototype, "camera", void 0);
n([ l(cc.Node) ], c.prototype, "boundBox", void 0);
c = i = n([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util"
} ],
CameraFollowCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9d6daaCcTVFGJdKobkD/CSE", "CameraFollowCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.target = null;
this.boundBox = null;
this._follower = null;
}
setCamera(e, t) {
this._follower = t;
this._follower.setCamera(e, this.node, this.boundBox);
}
lateUpdate(e) {
this._follower && this._follower.doFollow();
}
setTarget(e) {
this.target = e;
this._follower && this._follower.setTarget(e);
}
centerOnTarget() {
this._follower && this._follower.centerOnTarget();
}
};
i([ a(cc.Node) ], s.prototype, "boundBox", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
CastCtl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a434aHYwk5Myq9apH24Ogdj", "CastCtl");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CastCtl = void 0;
const n = e("../../../Frame/Util"), a = e("../../../GameData/GameTypeDefine"), s = e("../../Player/Mng"), r = e("../../Player/TriggerMng"), l = e("../Tile"), c = e("./WeaponCtl");
o.CastCtl = class extends c.WeaponCtl {
constructor() {
super(...arguments);
this.bulletConf = null;
this._worldMat = new cc.Mat4();
this._worldScale = new cc.Vec3();
this._acc = cc.Vec3.ZERO;
this._defaultDir = cc.Vec2.ZERO;
this._useGraphics = !1;
this._isReadyFire = !1;
this._faceDir = new cc.Vec2();
this._fireDir = cc.Vec2.ZERO;
}
init() {
return i(this, void 0, void 0, function*() {
if (this.weapon.conf) {
this.weapon.conf.cast.bulletId && (this.bulletConf = yield s.Mng.Ins.bulletMng.loadOne(this.weapon.conf.cast.bulletId));
this.timer = 1 / this.weapon.conf.ROF;
} else this.bulletConf = null;
this.weapon.conf.cast.defaultAngle = this.weapon.conf.cast.defaultAngle || 0;
this._acc.x = 0;
this._acc.y = 0;
this._acc.z = 0;
this.weapon.world.worldLayout.type == a.WorldType.Rpg ? this._acc.z = -1500 : this._acc.y = -1500;
this.weapon.skin.node.x = 21;
this.weapon.skin.node.y = 0;
this.weapon.skin.node.anchorX = .5;
this.weapon.skin.node.anchorY = .5;
this.weapon.skin.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this.weapon.node.angle = this.weapon.conf.cast.defaultAngle;
let e = this.weapon.conf.cast.defaultAngle * Math.PI / 180;
this._defaultDir.x = Math.cos(e);
this._defaultDir.y = Math.sin(e);
this._faceDir.set(this._defaultDir);
this.reset2FireDefaultDir();
});
}
run(e) {
let t = this.weapon.world;
if (t && t.playing && this.bulletConf && this.weapon.conf) {
this.timer += e;
this.weapon.firing && this.timer > 1 / this.weapon.conf.ROF && this.fire(1);
}
}
get fireGraphics() {
if (!this._fireGraphics) {
this._fireGraphics = this.weapon.node.getComponent(cc.Graphics);
this._fireGraphics || (this._fireGraphics = this.weapon.node.addComponent(cc.Graphics));
this._fireGraphics.lineWidth = 3;
}
return this._fireGraphics;
}
drawAimLine(e) {
if (!(this.timer <= 1 / this.weapon.conf.ROF)) if (this._useGraphics) {
this.fireGraphics.clear();
let t = 30, o = 0, i = e;
this.fireGraphics.moveTo(t, o);
this.fireGraphics.lineTo(i, o);
this.fireGraphics.strokeColor = cc.Color.GREEN;
this.fireGraphics.stroke();
} else if (this.weapon.spLine) {
this.weapon.spLine.node.active = !0;
let t = 30, o = 0, i = e = 32 * Math.ceil(e / 32);
this.weapon.spLine.drawLine(t, o, i, o, 32, e);
}
}
hideAimLine() {
this._useGraphics ? this.fireGraphics.clear() : this.weapon.spLine && (this.weapon.spLine.node.active = !1);
}
reset2FireDefaultDir() {
this.weapon.world.worldLayout.type == a.WorldType.Jump ? this._fireDir.set(this._defaultDir) : this._fireDir.set(this._faceDir);
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this._worldScale.x < 0 && (this._fireDir.x *= -1);
}
readyFire() {
this._isReadyFire = !0;
this.reset2FireDefaultDir();
this.drawAimLine(0);
}
updateFirePower(e) {
this._isReadyFire = !0;
e < 0 && (e = 0);
e > 1 && (e = 1);
this.drawAimLine(200 * e);
}
fire(e) {
this._isReadyFire || this.reset2FireDefaultDir();
this._isReadyFire = !1;
e < 0 && (e = 0);
e > 1 && (e = 1);
this.hideAimLine();
let t = 1 / this.weapon.conf.ROF;
if (this.timer <= t) return;
this.weapon.context && this.weapon.context.noticeFire(1 / this.weapon.conf.ROF);
let o = this.weapon.world;
this.timer = 0;
let i = n.Util.convertPosition(this.weapon.node, o.node), s = o.addBullet(i);
if (!s) return;
let c = this._fireDir, d = n.Util.angle(c);
c = n.Util.angleToVec2(d);
(null == this.weapon.conf.cast.outSpeed || isNaN(this.weapon.conf.cast.outSpeed)) && (this.weapon.conf.cast.outSpeed = this.bulletConf.speed || 10 * l.default.SIZE);
(null == this.weapon.conf.cast.flyDistance || isNaN(this.weapon.conf.cast.flyDistance)) && (this.weapon.conf.cast.flyDistance = this.bulletConf.range || 10 * l.default.SIZE);
let h = this.weapon.conf.cast.outSpeed * e, p = c.mul(h);
this.bulletConf.range = this.weapon.conf.cast.flyDistance;
s.fly(p, this.bulletConf, h, this._acc, this.weapon.conf.cast.airResistanceCof);
s.damager.dmg = this.bulletConf.damage;
this.weapon.team == a.Team.Hero ? s.damager.team = a.Team.HeroBullet : this.weapon.team == a.Team.Enemy ? s.damager.team = a.Team.EnemyBullet : this.weapon.team == a.Team.Ally && (s.damager.team = a.Team.AllyBullet);
s.node.scale = Math.abs(this._worldScale.x);
let u = t > .1 ? .1 : .5 * t;
this.weapon.spark.node.active = !0;
this.weapon.scheduleOnce(() => {
this.weapon.spark.node.active = !1;
}, u);
o.camera.node.position = cc.Vec2.ZERO;
if (this.weapon.conf.cast.onFire) {
let e = this.weapon.conf.cast.onFire;
this.weapon.team != a.Team.Hero && (e = e.filter(e => e.act !== a.TriggerAct.CameraShake));
r.default.Ins.emitTrigger(e, this.weapon.node);
}
}
setDir(e, t) {
if (0 != e || 0 != t) {
this._faceDir.x = e;
this._faceDir.y = t;
}
if (!this._isReadyFire) if (this.weapon.world.worldLayout.type == a.WorldType.Rpg) {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this._worldScale.x < 0 && (this._faceDir.x *= -1);
let e = n.Util.angle(this._faceDir);
this.weapon.node.angle = e;
} else {
this._faceDir.set(this._defaultDir);
let e = n.Util.angle(this._faceDir);
this.weapon.node.angle = e;
}
}
setFireDir(e, t) {
let o = 0;
if (0 == e && 0 == t) {
this.weapon.world.worldLayout.type == a.WorldType.Jump && this._faceDir.set(this._defaultDir);
o = n.Util.angle(this._faceDir);
this.reset2FireDefaultDir();
} else {
if (this.weapon.conf.cast.dragInverse) {
e = -e;
t = -t;
}
this._fireDir.x = e;
this._fireDir.y = t;
o = n.Util.angle(this._fireDir);
if (0 != e) {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this._worldScale.x < 0 && (o = 180 - o);
}
this.weapon.node.angle = o;
}
}
};
cc._RF.pop();
}, {
"../../../Frame/Util": "Util",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Player/Mng": "Mng",
"../../Player/TriggerMng": "TriggerMng",
"../Tile": "Tile",
"./WeaponCtl": "WeaponCtl"
} ],
ChosenComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5971cQ8aXpKarT0CE0rhVB2", "ChosenComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/GameCellDataMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.list = null;
this.data = null;
}
onLoad() {
this.moreBtn.node.on(a.default.CLICK, this.onMoreBtn, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
this.data = e;
this.list.setDataArr(e.games);
}
onMoreBtn() {
return n(this, void 0, void 0, function*() {
let e = (yield l.DynamicMng.Ins.loadOne("GameChosenIds")) || [];
r.default.ins.Enter("GameListScene", t => n(this, void 0, void 0, function*() {
t.setData({
title: "小编精选",
games: yield c.default.Ins.loadGames(e.slice(0, 12)),
from: "HotCompMore",
appendFunc: () => n(this, void 0, void 0, function*() {
let o = t.data.games.length, i = o + 12;
return c.default.Ins.loadGames(e.slice(o, i));
})
});
}));
});
}
};
i([ h(a.default) ], p.prototype, "moreBtn", void 0);
i([ h(s.default) ], p.prototype, "list", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng"
} ],
ChosenMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c37fdvO3L1Gy7Bv/Kq8rLEs", "ChosenMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top"), r = e("./DynamicMng");
class l {
constructor() {
this.gameDatas = null;
}
loadGames(e) {
return i(this, void 0, void 0, function*() {
r.DynamicMng.Ins.isInspectVersion() && (e = r.DynamicMng.Ins.inspectGameIds);
if (!this.gameDatas) {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetHomepageGameData,
params: t
}, n.Game_RGetHomepageGameData);
o || s.default.showToast("网络错误，加载失败！");
this.gameDatas = o ? o.gameDatas : null;
}
return this.gameDatas;
});
}
clear() {
this.gameDatas = null;
}
}
o.default = l;
l.Ins = new l();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"./DynamicMng": "DynamicMng"
} ],
ChosenRowComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fb4a84khCJB4ZS3Ok0ZgMJG", "ChosenRowComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/ScrollList"), a = e("../../../Frame/Util"), s = e("../GameCell"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.gameCell = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
let t = orange.TimeUtil.serverTime;
a.Util.makeBro(this.gameCell.node, e.games.length, (o, i) => {
let n = o.getComponent(s.default), a = e.games[i];
if (a) {
n.node.active = !0;
n.setData(a, t);
} else n.node.active = !1;
});
}
};
i([ l(s.default) ], c.prototype, "gameCell", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Util": "Util",
"../GameCell": "GameCell"
} ],
ChosenSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b725FR5GZHKaOfHgxInQhF", "ChosenSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/CrossPlatform"), r = e("../../../Frame/Util"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/GameCellDataMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.list = null;
}
onLoad() {
return n(this, void 0, void 0, function*() {
this.list.getPrefabName = e => e.prefabName;
cc.game.on("refreshChosenSubPage", this.refresh, this);
});
}
onDestroy() {
cc.game.off("refreshChosenSubPage", this.refresh, this);
}
start() {
this.refresh();
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = [];
s.tt && s.AppName.Douyin == s.systemInfo.appName && s.crossPlatform.openAwemeUserProfile && r.Util.compareVersion(s.systemInfo.SDKVersion, "1.84.0") >= 0 && e.push({
prefabName: "FollowBanner"
});
let t = (yield l.DynamicMng.Ins.loadOne("GameChosenIds")) || [];
if (s.wx) {
let e = (yield l.DynamicMng.Ins.loadOne("IpGameIds")) || [];
t = t.filter(t => !e.includes(t));
}
l.DynamicMng.Ins.isInspectVersion() && (t = l.DynamicMng.Ins.inspectGameIds);
let o = yield c.default.Ins.loadGames(t);
for (let t = 0; t < o.length; t += 2) e.push({
prefabName: "ChosenRowComp",
games: [ o[t], o[t + 1] ]
});
this.list.setDataArr(e);
});
}
};
i([ h(a.default) ], p.prototype, "list", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/Util": "Util",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng"
} ],
CoinBar: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "59faeJbPnJBl4NCd6ik4ifG", "CoinBar");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/SceneManager"), s = e("../Game/Player/CoinMng"), r = e("./Button"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends cc.Component {
constructor() {
super(...arguments);
this.icon = null;
this.label = null;
}
onLoad() {
i.Ins = this;
this.hide();
this.node.on(r.default.CLICK, this.onClick, this);
cc.game.on("refreshCoinBar", this.refresh, this);
}
onDestroy() {
i.Ins = null;
cc.game.off("refreshCoinBar", this.refresh, this);
}
onClick() {
let e = this.node.getComponent(r.default);
e.interactable = !1;
a.default.ins.OpenPanelByName("LackCoinPanel", t => {
t.closeCallback = () => {
e.interactable = !0;
};
});
}
refresh() {
this.label.string = s.default.Ins.getViewCoinCnt() + "";
}
show(e = 50, t = 68) {
let o = this.node.getComponent(cc.Widget);
o.left = e;
o.top = t;
o.updateAlignment();
this.node.active = !0;
}
hide() {
this.node.active = !1;
}
};
d.Ins = null;
n([ c(cc.Sprite) ], d.prototype, "icon", void 0);
n([ c(cc.Label) ], d.prototype, "label", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../Frame/SceneManager": "SceneManager",
"../Game/Player/CoinMng": "CoinMng",
"./Button": "Button"
} ],
CoinMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "41fa57XvQxGN6oCaYvMW4iZ", "CoinMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/AD"), s = e("../../Frame/NetworkMgr");
class r {
constructor() {
this.coin = 0;
this.flyCoinCnt = 0;
}
setCoin(e) {
this.coin = e || 0;
cc.game.emit("refreshCoinBar");
}
requestAddCoinByAd() {
return i(this, void 0, void 0, function*() {
let e = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_AddCoinByAdvert,
params: {}
}, n.Game_RAddCoinByAdvert);
if (!e) return;
let t = this.coin, o = e.coin, i = o - t;
this.flyCoinCnt += i;
this.coin = o;
a.AD.addCoinByAdvertCnt = e.addCoinByAdvertCnt;
cc.game.emit("refreshCoinBar");
return [ {
type: "coin",
cnt: i
} ];
});
}
requestAddCoinByShare() {
return i(this, void 0, void 0, function*() {
let e = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_AddCoinByShareVideo,
params: {}
}, n.Game_RAddCoinByShareVideo);
if (!e) return;
let t = this.coin, o = e.coin, i = o - t;
this.flyCoinCnt += i;
this.coin = o;
cc.game.emit("refreshCoinBar");
return [ {
type: "coin",
cnt: i
} ];
});
}
requestTTCoin0319() {
return i(this, void 0, void 0, function*() {
let e = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ObtainTTCoin0319,
params: {}
}, n.Game_RObtainTTCoin0319);
if (!e) return;
let t = this.coin, o = e.coin, i = o - t;
this.flyCoinCnt += i;
this.coin = o;
cc.game.emit("refreshCoinBar");
return {
type: "coin",
cnt: i
};
});
}
requestCostCoinInGame(e, t, o, a, r) {
return i(this, void 0, void 0, function*() {
let i = {
type: e,
gameId: o,
coin: t,
name: a,
textureName: r
}, l = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CostCoinInGame,
params: i
}, n.Game_RCostCoinInGame);
if (!l) return !1;
this.coin = l.curCoin;
cc.game.emit("refreshCoinBar");
return !0;
});
}
coinArrive(e) {
return i(this, void 0, void 0, function*() {
this.flyCoinCnt -= e;
cc.game.emit("refreshCoinBar");
});
}
getViewCoinCnt() {
return Math.max(this.coin - this.flyCoinCnt, 0);
}
costCoin(e) {
this.coin -= e;
cc.game.emit("refreshCoinBar");
}
}
o.default = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/AD": "AD",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
CollectionGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1a48d0OFSRFOqd7t1DfQocm", "CollectionGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/GameIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Game/GameEnv"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.adLabel = null;
this.playBtn = null;
this.data = null;
}
onLoad() {
this.playBtn && this.playBtn.node.on(a.default.CLICK, this.onClick, this);
this.node.on(r.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel && (this.nameLabel.string = c.Util.clampStr(e.name, 10, ".."));
this.adLabel && (this.adLabel.string = c.Util.clampStr(e.advert, 10, ".."));
this.gameIcon.loadUrl(e.iconTextureName);
this.gameIcon.showSubIcon(e.openCreativeGame);
});
}
onClick() {
return n(this, void 0, void 0, function*() {
console.log(d.gameEnv.fileCDN + this.data.iconTextureName);
l.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id);
});
});
}
};
i([ p(s.default) ], u.prototype, "gameIcon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "adLabel", void 0);
i([ p(a.default) ], u.prototype, "playBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv"
} ],
CollectionMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "371c9/JVURJK6XSWyV/rvaA", "CollectionMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CollectionMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top"), r = e("../../Role"), l = e("./GameCellDataMng"), c = e("./ShopMng"), d = e("./TalkMng");
class h {
constructor() {
this.ids = [];
this.talkIds = null;
this.goodsIds = null;
}
init(e) {
this.ids = e.collectionGames || [];
this.talkIds = new Set(e.collectionTalks || []);
this.goodsIds = new Set(e.collectionGoods || []);
}
collectGame(e) {
return i(this, void 0, void 0, function*() {
s.default.blockInput(!0, "collectGame");
let t = {
ids: [ e ]
};
if (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CollectionGames,
params: t
}, n.Game_RCollectionGames)) {
this.ids.unshift(e);
s.default.blockInput(!1, "collectGame");
} else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, "collectGame");
}
});
}
unCollectGame(e) {
return i(this, void 0, void 0, function*() {
const t = "unCollectGame";
s.default.blockInput(!0, t);
let o = {
ids: [ e ]
};
if (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelCollectionGames,
params: o
}, n.Game_RCancelCollectionGames)) {
this.ids.indexOf(e) >= 0 && this.ids.splice(e, 1);
s.default.blockInput(!1, t);
} else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, t);
}
});
}
collectTalk(e) {
return i(this, void 0, void 0, function*() {
let t = {
iD: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CollectionTalk,
params: t
}, n.Game_RCollectionTalk);
if (o) if (1 != o.code) {
s.default.showToast("收藏成功");
this.talkIds.add(e);
s.default.blockInput(!1, "collectTalk");
} else s.default.showToast("收藏数量已满"); else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, "collectTalk");
}
});
}
unCollectTalk(e) {
return i(this, void 0, void 0, function*() {
let t = {
iD: e
};
if (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelCollectionTalk,
params: t
}, n.Game_RCancelCollectionTalk)) {
this.talkIds.delete(e);
s.default.blockInput(!1, "unCollectTalk");
} else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, "unCollectTalk");
}
});
}
collectGoods(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e ]
};
if (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CollectionGGoods,
params: t
}, n.Game_RCollectionGGoods)) {
s.default.showToast("收藏成功");
this.goodsIds.add(e);
s.default.blockInput(!1, "collectGoods");
} else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, "collectGoods");
}
});
}
unCollectGoods(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e ]
};
if (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelCollectionGoods,
params: t
}, n.Game_RCancelCollectionGoods)) {
this.goodsIds.delete(e);
s.default.blockInput(!1, "unCollectGoods");
} else {
s.default.showToast("网络错误！");
s.default.blockInput(!1, "unCollectGoods");
}
});
}
loadGames() {
return i(this, void 0, void 0, function*() {
return yield l.default.Ins.loadGames(this.ids);
});
}
loadTalks() {
return i(this, void 0, void 0, function*() {
return yield d.default.Ins.loadTalksByIds(Array.from(this.talkIds));
});
}
loadGoods() {
return i(this, void 0, void 0, function*() {
return yield c.default.Ins.loadGoodsCellDatas(Array.from(this.goodsIds));
});
}
isCollectTalk(e) {
return this.talkIds.has(e);
}
isCollectGoods(e) {
return this.goodsIds.has(e);
}
getNumCollection() {
return r.default.Ins.role.collectionGames.length + this.talkIds.size + this.goodsIds.size;
}
}
o.CollectionMng = h;
h.Ins = new h();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"../../Role": "Role",
"./GameCellDataMng": "GameCellDataMng",
"./ShopMng": "ShopMng",
"./TalkMng": "TalkMng"
} ],
CollectionScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0dfa90ygP1EGbheAzNnlM5R", "CollectionScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Game/OperationFlow"), h = e("../../Game/Player/CollectionMng"), p = e("../../Game/Player/TalkMng"), u = e("../HomeScene/ShopPage/GoodsCell"), m = e("../HomeScene/TalkPage/TalkCell"), {ccclass: f, property: g} = cc._decorator;
let y = class extends l.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.toggleGroup = null;
this.gameList = null;
this.talkList = null;
this.goodsList = null;
this.emptyLabel = null;
this.backCall = null;
}
onLoad() {
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.emptyLabel.node.active = !1;
}
init() {
return n(this, void 0, void 0, function*() {
this.onToggleChange(0, -1, !0);
});
}
onToggleChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
this.talkList.node.active = !1;
this.gameList.node.active = !1;
this.goodsList.node.active = !1;
if (0 == e) {
this.gameList.node.active = !0;
let e = yield h.CollectionMng.Ins.loadGames();
e = e.concat();
this.gameList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
}
if (1 == e) {
this.goodsList.node.active = !0;
let e = yield h.CollectionMng.Ins.loadGoods();
e = e.concat();
let t = this.node.getComponentsInChildren(u.default);
for (let e = 0; e < t.length; e++) t[e].from = "collection";
this.goodsList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
}
if (2 == e) {
this.talkList.node.active = !0;
yield p.default.Ins.bindTalkCell(this.talkList);
m.default.calcuHeightCache.clear();
let e = yield h.CollectionMng.Ins.loadTalks();
e = e.concat();
this.talkList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
}
}
});
}
onBackBtn() {
c.default.ins.Back(() => {
this.backCall && this.backCall();
}, c.ShiftAnima.moveRightShift);
}
onShow(e) {
d.OperationFlow.deelOnShow(e);
}
};
i([ g(a.default) ], y.prototype, "backBtn", void 0);
i([ g(r.default) ], y.prototype, "toggleGroup", void 0);
i([ g(s.default) ], y.prototype, "gameList", void 0);
i([ g(s.default) ], y.prototype, "talkList", void 0);
i([ g(s.default) ], y.prototype, "goodsList", void 0);
i([ g(cc.Label) ], y.prototype, "emptyLabel", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/TalkMng": "TalkMng",
"../HomeScene/ShopPage/GoodsCell": "GoodsCell",
"../HomeScene/TalkPage/TalkCell": "TalkCell"
} ],
CollisionEmiter: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0b831n2+XBN479aSqXs4Spn", "CollisionEmiter");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator;
let r = i = class extends cc.Component {
constructor() {
super(...arguments);
this.target = null;
}
onCollisionEnter(e, t) {
this.target && this.target.emit(i.onCollisionEnter, e, t);
}
onCollisionStay(e, t) {
this.target && this.target.emit(i.onCollisionStay, e, t);
}
onCollisionExit(e, t) {
this.target && this.target.emit(i.onCollisionExit, e, t);
}
};
r.onCollisionEnter = "EmiterCollisionEnter";
r.onCollisionStay = "EmiterCollisionStay";
r.onCollisionExit = "EmiterCollisionExit";
n([ s(cc.Node) ], r.prototype, "target", void 0);
r = i = n([ a ], r);
o.default = r;
cc._RF.pop();
}, {} ],
ColorBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c1749MuT/xKJYe9nMae4q1l", "ColorBox");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Top"), s = e("../Frame/Util"), r = e("./Button"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.triangle = null;
this.content = null;
this.selectIdx = 0;
this.dataArr = [];
}
onLoad() {
this.content.active = !1;
this.node.on(r.default.CLICK, this.onClick, this);
this.content.on(cc.Node.EventType.TOUCH_START, this.onTouchContentMove, this);
this.content.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchContentMove, this);
}
onDestroy() {
this.content && this.content.removeFromParent();
}
setDataArr(e) {
this.dataArr = e;
this.content.active = !1;
this.select(0);
}
select(e) {
this.selectIdx = e;
let t = this.dataArr[e];
this.sprite.node.color = t.color;
this.node.emit(i.COLOR_CHANGE, e, t);
}
open() {
this.content.active = !0;
this.triangle.angle = 90;
a.default.blockInput(!0, "ColorBox");
a.default.node.on(cc.Node.EventType.TOUCH_END, this.onTopNodeTouch, this);
s.Util.moveNode(this.content, a.default.node);
let e = this.content.children[0], t = Math.floor(this.content.width / e.width), o = Math.ceil(this.dataArr.length / t);
this.content.width = t * e.width;
this.content.height = o * e.height;
s.Util.makeBro(e, this.dataArr.length, (o, i) => {
let n = this.dataArr[i];
o.color = n.color;
o.x = i % t * e.width;
o.y = -Math.floor(i / t) * e.height;
});
}
close() {
this.content.active = !1;
this.triangle.angle = 0;
a.default.blockInput(!1, "ColorBox");
a.default.node.off(cc.Node.EventType.TOUCH_END, this.onTopNodeTouch, this);
s.Util.moveNode(this.content, this.node);
}
onTopNodeTouch() {
this.close();
}
onClick() {
this.content.active ? this.close() : this.open();
}
onTouchContentMove(e) {
let t = e.getLocation();
this.content.convertToNodeSpaceAR(t, t);
let o = this.content.children[0], i = Math.floor(this.content.width / o.width), n = Math.floor(t.x / o.width), a = Math.floor(-t.y / o.height), s = i * a + n;
n >= 0 && n < i && a >= 0 && s < this.dataArr.length && this.select(s);
}
getColor() {
return this.dataArr[this.selectIdx].color;
}
};
d.COLOR_CHANGE = "COLOR_CHANGE";
n([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
n([ c(cc.Node) ], d.prototype, "triangle", void 0);
n([ c(cc.Node) ], d.prototype, "content", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../Frame/Top": "Top",
"../Frame/Util": "Util",
"./Button": "Button"
} ],
ColorBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7f008b93n9In552KzYPIu+p", "ColorBtn");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.alphaSprite = null;
this.selectBox = null;
this.holding = !1;
this.colorData = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
this.node.on(n.default.ITEM_STATE_CHANGE, this.stateChange, this);
}
setData(e) {
this.colorData = e;
this.holding = !1;
let t = e.color;
if (0 === t.getA()) {
this.node.color = cc.Color.WHITE;
this.alphaSprite.node.active = !0;
} else {
this.node.color = t;
this.alphaSprite.node.active = !1;
}
}
stateChange(e) {
this.selectBox.node.active = e;
}
};
i([ s(cc.Sprite) ], r.prototype, "alphaSprite", void 0);
i([ s(cc.Sprite) ], r.prototype, "selectBox", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList"
} ],
ColorCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4d492LQTBJEtLRIq3nHrKeb", "ColorCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/ColorMng"), d = e("../../Scene/PaintScene/PaintScene"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
this.optionBtn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.stateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtn, this);
}
setData(e) {
this.data = e;
this.label.string = `(${e.data.r},${e.data.g},${e.data.b})`;
this.sprite.node.color = cc.color(this.data.data.r, this.data.data.g, this.data.data.b);
}
refreshData(e) {
this.data.id = e.id;
this.data.data.r = e.data.r;
this.data.data.g = e.data.g;
this.data.data.b = e.data.b;
this.label.string = `(${e.data.r},${e.data.g},${e.data.b})`;
this.sprite.node.color = cc.color(this.data.data.r, this.data.data.g, this.data.data.b);
}
stateChange(e) {
this.node.color = e ? l.UIColor.blue : l.UIColor.white;
}
onOptionBtn() {
r.default.ins.OpenPanelByName("CreateColorPanel", e => {
let t = cc.color(this.data.data.r, this.data.data.g, this.data.data.b);
e.setColor(this.data.id, t);
e.setSaveStyle(!0);
e.call = e => {
this.refreshData(e);
};
});
}
onDeleteBtn() {
r.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "提示";
e.label.string = "是否删除该颜色？";
e.setLeftBtn({
text: "好的",
color: l.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield c.ColorMng.Ins.delete(this.data.id);
r.default.ins.findScene(d.default).refreshColorList(this.data.id);
})
});
e.setRightBtn({
text: "点错了",
color: l.UIColor.blue
});
});
}
};
i([ p(cc.Label) ], u.prototype, "label", void 0);
i([ p(cc.Sprite) ], u.prototype, "sprite", void 0);
i([ p(a.default) ], u.prototype, "optionBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/ColorMng": "ColorMng",
"../../Scene/PaintScene/PaintScene": "PaintScene"
} ],
ColorMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5c2e4SdbWxDM4FQQx7Ilzf4", "ColorMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ColorMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top");
class r {
constructor() {
this.customColors = new Array();
}
save(e) {
return i(this, void 0, void 0, function*() {
let t = {
colorDatas: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveCustomColors,
params: t
}, n.Game_RSaveCustomColors);
if (!o) {
s.default.showToast("网路错误，创建失败！");
return null;
}
for (let e = 0; e < o.colorDatas.length; e++) {
let t = o.colorDatas[e], i = this.customColors.find(e => t.id == e.id);
i ? i.data = t.data : this.customColors.push(t);
}
return o.colorDatas;
});
}
saveAll(e) {
return i(this, void 0, void 0, function*() {
let t = {
colorDatas: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveAllCustomColors,
params: t
}, n.Game_RSaveAllCustomColors);
if (!o) {
s.default.showToast("网路错误，创建失败！");
return null;
}
this.customColors = o.colorDatas;
return o.colorDatas;
});
}
delete(e) {
return i(this, void 0, void 0, function*() {
if (!e) return;
let t = [];
this.customColors.forEach(o => {
o.id != e && t.push(o);
});
this.customColors = t;
let o = {
ids: [ e ]
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelCustomColors,
params: o
}, n.Game_RDelCustomColors))) {
s.default.showToast("网路错误，创建失败！");
return null;
}
});
}
}
o.ColorMng = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top"
} ],
CommentCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9cccbsoBYpD4ZkLTUXTYO/s", "CommentCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/HeadIcon"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/CrossPlatform"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/UIColor"), u = e("../../Frame/Util"), m = e("../../Frame/Vibrate"), f = e("../../Game/OperationFlow"), g = e("../../Game/Player/CommentMng"), y = e("../../Game/Player/DynamicMng"), v = e("../../Game/Player/GameCoverMng"), C = e("../../Role"), _ = e("../../TGA"), S = e("./GameCoverScene"), {ccclass: I, property: G} = cc._decorator;
let T = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon = null;
this.nameLabel = null;
this.pointer = null;
this.targetNameLabel = null;
this.commentLabel = null;
this.timeLabel = null;
this.likeBtn = null;
this.data = null;
this.touching = !1;
this.moved = !1;
this.popMenu = !1;
}
onLoad() {
this.node.on(l.default.SET_DATA, this.setData, this);
this.likeBtn.node.on(s.default.CLICK, this.onLikeBtn, this);
this.headIcon.node.on(s.default.CLICK, this.onHeadIcon, this);
this.nameLabel.node.on(s.default.CLICK, this.onHeadIcon, this);
this.targetNameLabel && this.targetNameLabel.node.on(s.default.CLICK, this.onTargetNameLabel, this);
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
}
setData(e) {
this.unscheduleAllCallbacks();
this.data = e;
let t = e.reportCnt < 5 ? e.msg : "给大佬递茶！";
this.commentLabel.string = t;
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
u.Util.updateLabel(this.commentLabel);
f.OperationFlow.setNameLabel(this.nameLabel, e.userName, e.playerId);
u.Util.updateLabel(this.nameLabel);
if (this.targetNameLabel && this.pointer) if (e.targetPlayerId) {
this.targetNameLabel.node.active = !0;
this.pointer.active = !0;
f.OperationFlow.setNameLabel(this.targetNameLabel, e.targetPlayerName, e.targetPlayerId);
u.Util.updateLabel(this.targetNameLabel);
} else {
this.pointer.active = !1;
this.targetNameLabel.node.active = !1;
}
u.Util.updateAllLayout(this.nameLabel.node.parent);
this.timeLabel.node.y = -this.commentLabel.node.height + this.commentLabel.node.y - 10;
this.node.height = this.commentLabel.node.height + 80;
this.timeLabel.string = u.Util.parseDataString(e.stamp) + a.I18nMgr.getI18nStringByZh("    回复");
this.refreshLikeBtn();
}
refreshLikeBtn() {
this.likeBtn.label.string = this.data.likeCnt + "";
let e = g.CommentMng.Ins.isLike(this.data.gameId, this.data.id);
this.likeBtn.background.node.color = e ? p.UIColor.red : p.UIColor.gray;
}
onLikeBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.gameId, t = this.data.id;
if (g.CommentMng.Ins.isLike(e, t)) {
yield g.CommentMng.Ins.unlike(e, t);
this.data.likeCnt--;
} else {
yield g.CommentMng.Ins.like(e, t);
this.data.likeCnt++;
_.TGA.track("commentThumb", {
gameId: this.data.gameId,
commentId: this.data.id
});
}
this.refreshLikeBtn();
});
}
onHeadIcon() {
this.enterFriendScene(this.data.playerId);
}
onTargetNameLabel() {
this.enterFriendScene(this.data.targetPlayerId);
}
enterFriendScene(e) {
d.default.ins.Enter("FriendScene", t => {
t.setData(e);
}, d.ShiftAnima.moveLeftShift);
}
onTouchStart(e) {
this.touching = !0;
this.moved = !1;
this.popMenu = !1;
this.scheduleOnce(() => {
if (!this.moved && this.touching) {
this.touching = !1;
this.popMenu = !0;
this.onHold();
}
}, .5);
}
onTouchMove(e) {
e.getLocation().sub(e.getStartLocation()).magSqr() > 100 && (this.moved = !0);
}
onTouchEnd(e) {
this.touching = !1;
this.moved || this.popMenu || this.onCommentBtn();
}
onHold() {
m.Vibrate.short();
d.default.ins.OpenPanelByName("MenuPanel", e => n(this, void 0, void 0, function*() {
let t = [ {
name: "复制",
call: () => {
c.crossPlatform.setClipboardData({
data: this.data.msg,
success: () => {
h.default.showToast("已复制到剪贴板");
}
});
}
}, {
name: "举报",
call: () => {
d.default.ins.Enter("ReportScene", e => {
e.initReportComments(this.data.id);
}, d.ShiftAnima.moveLeftShift);
}
} ], o = yield v.default.Ins.load(this.data.gameId);
(this.data.playerId == C.default.Ins.role.id || o.authorMsg.id == C.default.Ins.role.id || y.DynamicMng.Ins.isGmPlayer()) && t.push({
name: "删除",
call: () => n(this, void 0, void 0, function*() {
yield g.CommentMng.Ins.deleteComment(this.data.id);
h.default.showToast("已删除");
cc.game.emit(S.default.GameCoverScene_Refresh);
})
});
e.setData(t);
}));
}
onCommentBtn() {
this.node.dispatchEvent(u.Util.customEvent("showKeyBoard"));
u.Util.showKeyBoard("", e => n(this, void 0, void 0, function*() {
this.node.dispatchEvent(u.Util.customEvent("showKeyBoardEnd"));
if ("" != e && (yield g.CommentMng.Ins.sendComment("", this.data.id, e))) {
cc.game.emit(S.default.GameCoverScene_Refresh);
_.TGA.track("comment", {
gameId: this.data.gameId,
commentId: this.data.id,
cnt: e.length
});
}
}));
}
calcuHeight(e) {
let t = e.reportCnt < 5 ? e.msg : "给大佬递茶！";
this.calcuHeightCache || (this.calcuHeightCache = new Map());
let o = this.calcuHeightCache.get(t);
if (!o) {
this.commentLabel.string = t;
u.Util.updateLabel(this.commentLabel);
o = this.commentLabel.node.height + 80;
this.calcuHeightCache.set(t, o);
}
return o;
}
};
i([ G(r.default) ], T.prototype, "headIcon", void 0);
i([ G(cc.Label) ], T.prototype, "nameLabel", void 0);
i([ G(cc.Node) ], T.prototype, "pointer", void 0);
i([ G(cc.Label) ], T.prototype, "targetNameLabel", void 0);
i([ G(cc.Label) ], T.prototype, "commentLabel", void 0);
i([ G(cc.Label) ], T.prototype, "timeLabel", void 0);
i([ G(s.default) ], T.prototype, "likeBtn", void 0);
T = i([ I ], T);
o.default = T;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Frame/Vibrate": "Vibrate",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CommentMng": "CommentMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameCoverMng": "GameCoverMng",
"../../Role": "Role",
"../../TGA": "TGA",
"./GameCoverScene": "GameCoverScene"
} ],
CommentHeadCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "faec6CIZRRPAoG/y88clbke", "CommentHeadCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CommentHeadCellData = void 0;
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/ScrollList"), {ccclass: s, property: r} = cc._decorator;
o.CommentHeadCellData = class {};
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.commentCntLabel = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
this.commentCntLabel.string = n.I18nMgr.exceI18nStringByZh("评论(${detail.cnt})", [ {
paramName: "detail.cnt",
param: e.cnt
} ]);
}
};
i([ r(cc.Label) ], l.prototype, "commentCntLabel", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/ScrollList": "ScrollList"
} ],
CommentMeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d9f95nFAwlGTJ/f22doWGZ/", "CommentMeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../scripts/_autogen/data/data"), s = e("../../../CustomUI/Button"), r = e("../../../CustomUI/HeadIcon"), l = e("../../../CustomUI/ScrollList"), c = e("../../../Frame/SceneManager"), d = e("../../../Frame/Util"), h = e("../../../Game/Player/GameIconMng"), p = e("../../../Game/Player/TalkMng"), u = e("../../../TGA"), {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon = null;
this.nameLabel = null;
this.commentLabel = null;
this.dot = null;
this.gameIcon = null;
this.data = null;
}
onLoad() {
this.node.on(l.default.SET_DATA, this.setData, this);
this.headIcon.node.on(s.default.CLICK, this.enterFriendScene, this);
this.nameLabel.node.on(s.default.CLICK, this.enterFriendScene, this);
this.node.on(s.default.CLICK, this.onClick, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
let t = "";
"string" == typeof e.content ? t = e.content : "object" == typeof e.content && (t = e.content.msg);
e.reportCnt >= 5 && (t = "给大佬递茶！");
this.commentLabel.string = d.Util.clampStr(t, 18, "..") + "      " + d.Util.parseDataString(e.stamp);
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
this.nameLabel.string = e.userName;
this.dot.active = e.isNew;
if (e.type == a.CommentType.gameType) {
this.gameIcon.node.active = !0;
h.GameIconMng.Ins.setSprite(this.gameIcon, e.gameIcon, 120);
} else e.type == a.CommentType.talkType && (this.gameIcon.node.active = !1);
});
}
enterFriendScene() {
if (this.data) {
this.data.isNew = !1;
this.dot.active = !1;
c.default.ins.Enter("FriendScene", e => {
e.setData(this.data.playerId);
}, c.ShiftAnima.moveLeftShift);
}
}
onClick() {
this.data.isNew = !1;
this.dot.active = !1;
if (this.data.type == a.CommentType.gameType) {
c.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id, this.data.commentId);
e.backAnima = c.ShiftAnima.moveRightShift;
}, c.ShiftAnima.moveLeftShift);
u.TGA.track("clickGameCell", {
gameId: this.data.id,
from: "CommentMeCell"
});
} else if (this.data.type == a.CommentType.talkType) {
p.default.Ins.detailMap.delete(this.data.id);
c.default.ins.Enter("TalkScene", e => {
e.setData(this.data.id, this.data.commentId);
}, c.ShiftAnima.moveLeftShift);
}
}
};
i([ f(r.default) ], g.prototype, "headIcon", void 0);
i([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
i([ f(cc.Label) ], g.prototype, "commentLabel", void 0);
i([ f(cc.Node) ], g.prototype, "dot", void 0);
i([ f(cc.Sprite) ], g.prototype, "gameIcon", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/GameIconMng": "GameIconMng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../TGA": "TGA"
} ],
CommentMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1e2dbMn6TJBuJFaV1lqgXmO", "CommentMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CommentMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/CrossPlatform"), s = e("../../Frame/NetworkMgr"), r = e("../../Frame/Top"), l = e("../Hortor"), c = e("../OperationFlow"), d = e("./CreditMng"), h = e("./DynamicMng");
class p {
constructor() {
this.lastCommentStamp = 0;
this.tempStr = "";
this.tempId = "";
this.gameTopComment = null;
this.likeMap = new Map();
}
init(e) {
this.gameTopComment = e;
}
sendComment(e, t, o) {
return i(this, void 0, void 0, function*() {
if (h.DynamicMng.Ins.isDisable(h.FunctionEnum.PublishGameComment, !0)) return !1;
if (l.Hortor.isVisitor()) {
c.OperationFlow.openVisitorPanel();
return !1;
}
if (orange.TimeUtil.serverTime - this.lastCommentStamp < 1e4) {
r.default.showToast("你发消息太快了！");
return !1;
}
if (d.CreditMng.Ins.credit < 2) {
r.default.showToast("近期违规，不能发表评论");
return !1;
}
r.default.showLoading("发送中");
let i = {
gameId: e,
commentId: t,
msg: o
}, a = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CommentGame,
params: i
}, n.Game_RCommentGame);
if (a) {
let e = a.comment;
if (a.sensitiveWords && a.sensitiveWords.length > 0) {
r.default.hideLoading("发现敏感词：" + a.sensitiveWords.join(","));
return !1;
}
this.lastCommentStamp = orange.TimeUtil.serverTime;
if (t) for (let o = 0; o < this.gameTopComment.comments.length; o++) {
let i = this.gameTopComment.comments[o];
if (i.id == t) {
this.gameTopComment.commentsCntSum++;
i.subCommentsCnt++;
i.openCnt++;
i.comments.unshift(e);
break;
}
for (let o = 0; o < i.comments.length; o++) if (i.comments[o].id == t) {
this.gameTopComment.commentsCntSum++;
i.subCommentsCnt++;
i.openCnt++;
i.comments.splice(o + 1, 0, e);
break;
}
} else {
this.gameTopComment.commentsCntSum++;
this.gameTopComment.commentsCnt++;
this.gameTopComment.comments.unshift(e);
}
r.default.hideLoading();
return !0;
}
r.default.hideLoading("发送失败");
return !1;
});
}
deleteComment(e) {
return i(this, void 0, void 0, function*() {
let t = {
commentId: e
};
if (yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelGameComment,
params: t
}, n.Game_RDelGameComment)) for (let t = 0; t < this.gameTopComment.comments.length; t++) {
let o = this.gameTopComment.comments[t];
if (o.id == e) {
this.gameTopComment.commentsCntSum -= o.subCommentsCnt + 1;
this.gameTopComment.commentsCnt--;
this.gameTopComment.comments.splice(t, 1);
break;
}
for (let t = 0; t < o.comments.length; t++) if (o.comments[t].id == e) {
this.gameTopComment.commentsCntSum--;
o.subCommentsCnt--;
o.openCnt--;
o.comments.splice(t, 1);
break;
}
}
});
}
loadGameComment(e) {
return i(this, void 0, void 0, function*() {
let t = this.gameTopComment.comments.length, o = t + 10;
if (t >= this.gameTopComment.commentsCnt) return;
let i = {
gameId: e,
start: t,
end: o
}, a = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadGameComment,
params: i
}, n.Game_RLoadGameComment);
if (a) for (let e = 0; e < a.comments.length; e++) {
let t = a.comments[e];
this.gameTopComment.comments.find(e => e.id == t.id) || this.gameTopComment.comments.push(t);
}
});
}
loadSubGameComment(e) {
return i(this, void 0, void 0, function*() {
let t = this.gameTopComment.comments.find(t => t.id == e);
if (t) {
let o = t.comments, i = o.length, a = i + 5;
if (i >= t.subCommentsCnt) return t.comments;
let r = {
commentId: e,
start: i,
end: a
}, l = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadGameSubComment,
params: r
}, n.Game_RLoadGameSubComment);
if (l) for (let e = 0; e < l.comments.length; e++) {
let t = l.comments[e];
o.find(e => e.id == t.id) || o.push(t);
}
return o;
}
return [];
});
}
loadFirstLevelCommentById(e) {
return i(this, void 0, void 0, function*() {
for (let t = 0; t < this.gameTopComment.comments.length; t++) {
let o = this.gameTopComment.comments[t];
if (o.id == e) return o;
let i = o.comments;
for (let t = 0; t < i.length; t++) if (i[t].id == e) return o;
}
let t = {
commentId: e
}, o = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadFirstLevelGameComment,
params: t
}, n.Game_RLoadFirstLevelGameComment);
if (o && o.comment) {
let t = this.gameTopComment.comments.findIndex(t => t.id == e);
t >= 0 && this.gameTopComment.comments.splice(t, 1);
this.gameTopComment.comments.unshift(o.comment);
return o.comment;
}
return null;
});
}
loadLikeData(e) {
let t = this.likeMap.get(e);
if (!t) {
t = a.crossPlatform.getStorageSync("commentLikeData" + e) || {};
this.likeMap.set(e, t);
}
return t;
}
saveLikeData(e, t) {
a.crossPlatform.setStorageSync("commentLikeData" + e, t);
}
isLike(e, t) {
return !!this.loadLikeData(e)[t];
}
like(e, t) {
return i(this, void 0, void 0, function*() {
r.default.blockInput(!0, "likeComment");
let o = {
commentId: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ThumbGameComment,
params: o
}, n.Game_RThumbGameComment);
let i = this.loadLikeData(e);
i[t] = !0;
this.saveLikeData(e, i);
r.default.blockInput(!1, "likeComment");
});
}
unlike(e, t) {
return i(this, void 0, void 0, function*() {
r.default.blockInput(!0, "unlikeComment");
let o = {
commentId: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelThumbGameComment,
params: o
}, n.Game_RCancelThumbGameComment);
let i = this.loadLikeData(e);
delete i[t];
this.saveLikeData(e, i);
r.default.blockInput(!1, "unlikeComment");
});
}
}
o.CommentMng = p;
p.Ins = new p();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"../Hortor": "Hortor",
"../OperationFlow": "OperationFlow",
"./CreditMng": "CreditMng",
"./DynamicMng": "DynamicMng"
} ],
CommentMoreCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1ea58ZxVZ5DF4bHnudyDCRA", "CommentMoreCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CommentMoreCellData = void 0;
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Util"), c = e("../../Game/Player/CommentMng"), d = e("./GameCoverScene"), {ccclass: h, property: p} = cc._decorator;
o.CommentMoreCellData = class {};
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.moreBtn.node.on(s.default.CLICK, this.onMoreBtn, this);
}
setData(e) {
this.data = e;
let t = e.comment;
if (t.openCnt < t.subCommentsCnt) {
this.moreBtn.label.string = a.I18nMgr.exceI18nStringByZh("展开${comment.subCommentsCnt - comment.openCnt}条回复", [ {
paramName: "comment.subCommentsCnt - comment.openCnt",
param: t.subCommentsCnt - t.openCnt
} ]);
this.moreBtn.icon.node.angle = 90;
} else {
this.moreBtn.label.string = "收起";
this.moreBtn.icon.node.angle = -90;
}
l.Util.updateLabel(this.moreBtn.label);
l.Util.updateAllLayout(this.moreBtn.node);
}
onMoreBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.comment;
if (this.moreBtn.label.string.includes(a.I18nMgr.getI18nStringByZh("展开"))) {
let t = yield c.CommentMng.Ins.loadSubGameComment(e.id);
e.openCnt = Math.min(t.length, e.openCnt + 5);
} else e.openCnt = 0;
cc.game.emit(d.default.GameCoverScene_Refresh);
});
}
};
i([ p(s.default) ], u.prototype, "moreBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/CommentMng": "CommentMng",
"./GameCoverScene": "GameCoverScene"
} ],
CommonOptionHelperFactory: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f91a6eltIFKXJIDAF3ijkxM", "CommonOptionHelperFactory");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CommonOptionHelperFactory = void 0;
const i = e("../../GameData/GameTypeDefine"), n = e("./ActorOptionHelper"), a = e("./BulletOptionHelper"), s = e("./DeviceOptionHelper"), r = e("./PropOptionHelper"), l = e("./TileOptionHelper"), c = e("./WeaponOptionHelper");
class d {
constructor() {
this._helperCatchTable = new Map();
}
static get instance() {
if (!this._instance) {
this._instance = new d();
this._instance.AddHelperInfo(i.CommonDataType.Tile, l.TileOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Actor, n.ActorOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Device, s.DeviceOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Prop, r.PropOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Weapon, c.WeaponOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Bullet, a.BulletOptionHelper);
}
return this._instance;
}
AddHelperInfo(e, t) {
this._helperCatchTable.has(e) || this._helperCatchTable.set(e, {
typeIns: t,
catch: null
});
}
GetGommonOptionHelper(e) {
if (this._helperCatchTable.has(e.type)) {
let t = this._helperCatchTable.get(e.type);
t.catch || (t.catch = new t.typeIns());
t.catch.setConf(e);
return t.catch;
}
return null;
}
}
o.CommonOptionHelperFactory = d;
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./ActorOptionHelper": "ActorOptionHelper",
"./BulletOptionHelper": "BulletOptionHelper",
"./DeviceOptionHelper": "DeviceOptionHelper",
"./PropOptionHelper": "PropOptionHelper",
"./TileOptionHelper": "TileOptionHelper",
"./WeaponOptionHelper": "WeaponOptionHelper"
} ],
CommonOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5d6c5cBY2ZMKZSsMEIYdFiY", "CommonOptionHelper");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CommonOptionHelper = void 0;
o.CommonOptionHelper = class {
constructor() {
this.conf = null;
}
setConf(e) {
this.conf = e;
}
close() {}
paintCall(e) {
e.toPaintTile();
}
};
cc._RF.pop();
}, {} ],
CommonOptionPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e80675Dd+1MPoVa+OJv9JxG", "CommonOptionPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/UIColor"), p = e("../../Frame/Util"), u = e("../../Game/Player/Mng"), m = e("../../Game/Player/SpriteMng"), f = e("../../GameData/GameTypeDefine"), g = e("../../Scene/EditWorldScene/EditWorldScene"), y = e("../../Scene/EditWorldScene/Inspector"), v = e("./CommonOptionHelperFactory"), {ccclass: C, property: _} = cc._decorator;
let S = i = class extends l.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.authorLabel = null;
this.sprite = null;
this.paintBtn = null;
this.deleteBtn = null;
this.saveBtn = null;
this.inspector = null;
this.toggleGroup = null;
this.buildInLabel = null;
this.centerWidget = null;
this.centerWidgetTopDisplayToggle = 350;
this.centerWidgetTopNotDisplayToggle = 270;
this._conf = null;
this._saveCall = null;
this._delCall = null;
}
onLoad() {
super.onLoad();
this.paintBtn.node.on(s.default.CLICK, this.onPaintBtnClick, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtnClick, this);
this.saveBtn.node.on(s.default.CLICK, this.onSaveBtnClick, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, (e, t) => {
if (e != t && this._helper && this._helper.displayWorldType()) {
let t = 0 == e ? f.WorldType.Rpg : f.WorldType.Jump;
this._helper.onShiftWorldType && this._helper.onShiftWorldType(t, this.inspector);
}
}, this);
}
openAnim(e) {
cc.game.emit(i.CommonOptionPanel_Open, this);
super.openAnim(() => {
e && e();
cc.game.emit(i.CommonOptionPanel_Opend, this);
});
}
setData(e, t, o) {
return a(this, void 0, void 0, function*() {
this.inspector.reset();
this._saveCall = t;
this._delCall = o;
this._conf = p.Util.deepCopy(e);
this._helper = v.CommonOptionHelperFactory.instance.GetGommonOptionHelper(this._conf);
if (this._helper) {
if (this._helper.displayWorldType()) {
this.toggleGroup.node.active = !0;
if (this.centerWidget) {
this.centerWidget.top = this.centerWidgetTopDisplayToggle;
this.centerWidget.updateAlignment();
}
let e = c.default.ins.findScene(g.default).worldData.info.type == f.WorldType.Rpg ? 0 : 1;
this.toggleGroup.selectIdx(e);
} else {
this.toggleGroup.node.active = !1;
if (this.centerWidget) {
this.centerWidget.top = this.centerWidgetTopNotDisplayToggle;
this.centerWidget.updateAlignment();
}
}
this.nameEditBox.string = this._conf.name;
this.authorLabel.string = this._conf.author;
this._helper.initInspector(this.inspector);
this.buildInLabel.node.active = !1;
if (this._conf.isBuildIn) {
this.deleteBtn.node.active = !1;
this.saveBtn.node.active = !1;
this.paintBtn.node.active = !1;
this.buildInLabel.node.active = !0;
} else if (this._conf.belongGameId) {
this.deleteBtn.node.active = !1;
this.saveBtn.node.active = !0;
} else {
this.deleteBtn.node.active = !0;
this.saveBtn.node.active = !0;
}
u.Mng.Ins.spriteMng.setSprite(this.sprite, this._conf.textureName, 150);
}
});
}
onPaintBtnClick() {
d.default.showLoading("加载中");
c.default.ins.Enter("PaintScene", e => a(this, void 0, void 0, function*() {
d.default.hideLoading();
this._helper.paintCall(e);
let t = yield p.Util.downloadPngPixel(this._conf.textureName);
e.graphics.drawPixels(t);
e.setBelongGameId(this._conf.belongGameId);
e.setImportOthersImg(this._conf.importOthersImg);
e.completeCall = (e, t, o, i) => a(this, void 0, void 0, function*() {
d.default.showLoading("正在上传");
let n = yield p.Util.uploadPng(e, this._helper.imageFileType, i);
if (n.err) d.default.hideLoading("图片违规：" + n.err); else {
cc.game.emit(m.default.UPDATE_SPRITE, this._conf.id, n.url);
this._conf.textureName = n.url;
this._conf.importOthersImg = t;
this._conf.belongGameId = o;
this._helper.onModifyTexture && this._helper.onModifyTexture(e, this._conf);
yield this._helper.saveAsncFunc();
d.default.hideLoading("重绘已保存");
u.Mng.Ins.spriteMng.setSprite(this.sprite, this._conf.textureName, 150);
c.default.ins.Back();
}
});
}));
}
onDeleteBtnClick() {
i.CAN_DELETE ? c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = `Delete this ${this._helper.optionName}？`;
e.setLeftBtn({
text: "删除",
color: h.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
d.default.showLoading("正在删除");
yield this._helper.deleteAsncFunc();
d.default.hideLoading("删除成功");
this._helper.refreshMsgName && cc.game.emit(this._helper.refreshMsgName);
this.closePanel();
this._delCall && this._delCall();
})
});
e.setRightBtn({
text: "关闭",
color: h.UIColor.blue
});
}) : d.default.showToast("不能删除");
}
onSaveBtnClick() {
return a(this, void 0, void 0, function*() {
let e = this._conf;
e.name = this.nameEditBox.textLabel.string;
d.default.showLoading("保存中");
yield this._helper.saveAsncFunc();
d.default.hideLoading();
this._helper.refreshMsgName && cc.game.emit(this._helper.refreshMsgName);
this._helper.changeDataMsgName && cc.game.emit(this._helper.changeDataMsgName, this._helper.conf);
this.closePanel();
this._saveCall && this._saveCall(e);
});
}
};
S.CommonOptionPanel_Open = "CommonOptionPanel_Open";
S.CommonOptionPanel_Opend = "CommonOptionPanel_Opend";
S.CAN_DELETE = !0;
n([ _(cc.EditBox) ], S.prototype, "nameEditBox", void 0);
n([ _(cc.Label) ], S.prototype, "authorLabel", void 0);
n([ _(cc.Sprite) ], S.prototype, "sprite", void 0);
n([ _(s.default) ], S.prototype, "paintBtn", void 0);
n([ _(s.default) ], S.prototype, "deleteBtn", void 0);
n([ _(s.default) ], S.prototype, "saveBtn", void 0);
n([ _(y.default) ], S.prototype, "inspector", void 0);
n([ _(r.default) ], S.prototype, "toggleGroup", void 0);
n([ _(cc.Label) ], S.prototype, "buildInLabel", void 0);
n([ _(cc.Widget) ], S.prototype, "centerWidget", void 0);
n([ _ ], S.prototype, "centerWidgetTopDisplayToggle", void 0);
n([ _ ], S.prototype, "centerWidgetTopNotDisplayToggle", void 0);
S = i = n([ C ], S);
o.default = S;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/SpriteMng": "SpriteMng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"../../Scene/EditWorldScene/Inspector": "Inspector",
"./CommonOptionHelperFactory": "CommonOptionHelperFactory"
} ],
Config: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c6b4cf2N9FEpLy+p7yR0Em1", "Config");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Config = o.FillActorDataHelper = void 0;
const i = e("./Util"), n = e("../GameData/GameTypeDefine");
o.FillActorDataHelper = class {
static fillActorDataByRpgConf(e, t) {
e.moveSpeed = t.moveSpeed || 256;
e.aiMoveType = t.aiMoveType;
e.beatenLockHpTime = t.beatenLockHpTime;
e.onBeaten = i.Util.deepCopy(t.onBeaten);
e.onMove = i.Util.deepCopy(t.onMove);
e.onDie = i.Util.deepCopy(t.onDie);
e.onHeroEnter = i.Util.deepCopy(t.onHeroEnter);
e.isEnteredWorldTypes = e.isEnteredWorldTypes || [];
e.isEnteredWorldTypes[n.WorldType.Rpg] = !0;
}
static fillActorDataByJumpPlatformConf(e, t) {
e.moveSpeed = t.moveSpeed;
e.g = t.g;
e.jumpStep = t.jumpStep;
e.jumpHight = t.jumpHight;
e.jumpInterval = t.jumpInterval;
e.aiMoveType = t.aiMoveType;
e.beatenLockHpTime = t.beatenLockHpTime;
e.beatenBackRange = t.beatenBackRange;
e.enableClimbWall = t.enableClimbWall;
e.traceHeroRange = t.traceHeroRange;
e.dirLineMoveData = t.dirLineMoveData;
e.onBeaten = i.Util.deepCopy(t.onBeaten);
e.onJump = i.Util.deepCopy(t.onJump);
e.onMove = i.Util.deepCopy(t.onMove);
e.onGroundMove = i.Util.deepCopy(t.onGroundMove);
e.onAirMove = i.Util.deepCopy(t.onAirMove);
e.onDie = i.Util.deepCopy(t.onDie);
e.onHeroEnter = i.Util.deepCopy(t.onHeroEnter);
e.isEnteredWorldTypes = e.isEnteredWorldTypes || [];
e.isEnteredWorldTypes[n.WorldType.Jump] = !0;
}
};
(function(e) {
e.tagConfs = [ {
tag: "像素",
icon: "像素"
}, {
tag: "二次元",
icon: "二次元"
}, {
tag: "科幻",
icon: "科幻"
}, {
tag: "萌系",
icon: "萌系"
}, {
tag: "古风",
icon: "古风"
}, {
tag: "音游",
icon: "音游"
}, {
tag: "狗头",
icon: "狗头"
}, {
tag: "兽设",
icon: "兽设"
}, {
tag: "太空人",
icon: "太空人"
} ];
e.actorConfs = [ {
type: n.CommonDataType.Actor,
id: "2",
name: "Astro",
textureName: "Actor/disuse/astro",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 52
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "6",
name: "Farmer",
textureName: "Actor/disuse/civilian",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "0",
name: "Sheep",
textureName: "Actor/disuse/sheep",
author: "Julian",
team: n.Team.Ally,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "1",
name: "Chicky",
textureName: "Actor/disuse/chick",
author: "Julian",
team: n.Team.NPC,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "4",
name: "Monster Abby",
textureName: "Actor/disuse/monster1",
author: "Julian",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "5",
name: "Monster Bob",
textureName: "Actor/disuse/monster2",
author: "Julian",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "7",
name: "Knight",
textureName: "Actor/disuse/knight",
author: "Julian",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
disuse: !0
}, {
type: n.CommonDataType.Actor,
id: "101",
name: "Orangie",
textureName: "Actor/astro/green",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 3,
hpMax: 3,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 52
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "102",
name: "Berry",
textureName: "Actor/astro/blue",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 3,
hpMax: 3,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 52
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "103",
name: "Tango",
textureName: "Actor/astro/orange",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 3,
hpMax: 3,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 52
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "104",
name: "Baby",
textureName: "Actor/astro/baby",
author: "Julian",
team: n.Team.Hero,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: -5
},
size: {
w: 32,
h: 40
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 192,
jumpStep: 2,
jumpHight: 160,
aiMoveType: n.AIMoveType.None,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1002",
name: "Slime",
textureName: "Actor/monster/monster2",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpInterval: 1,
jumpStep: 1,
jumpHight: 64,
aiMoveType: n.AIMoveType.PlatformJump_Jump_WallBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1001",
name: "Fatty",
textureName: "Actor/monster/monster1",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_MisstepBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1003",
name: "蜘蛛怪",
textureName: "Actor/monster/monster3",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 196,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_MisstepBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1004",
name: "Snakey",
textureName: "Actor/monster/monster4",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "8",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_MisstepBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1005",
name: "Jelly",
textureName: "Actor/monster/monster5",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_DirLine,
beatenLockHpTime: .8,
dirLineMoveData: {
moveDir: n.MoveDirType.Up,
speed: 1,
distance: 2
}
}
}, {
type: n.CommonDataType.Actor,
id: "1006",
name: "Hurry",
textureName: "Actor/monster/monster6",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 128,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_WallBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1007",
name: "Cloudy",
textureName: "Actor/monster/monster7",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "7",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_DirLine,
beatenLockHpTime: .8,
dirLineMoveData: {
moveDir: n.MoveDirType.Right,
speed: 1,
distance: 3
}
}
}, {
type: n.CommonDataType.Actor,
id: "1008",
name: "Panty",
textureName: "Actor/monster/monster8",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_DirLine,
beatenLockHpTime: .8,
dirLineMoveData: {
moveDir: n.MoveDirType.Right,
speed: 1,
distance: 3
}
}
}, {
type: n.CommonDataType.Actor,
id: "1009",
name: "Stary",
textureName: "Actor/monster/monster9",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_DirLine,
beatenLockHpTime: .8,
dirLineMoveData: {
moveDir: n.MoveDirType.Right,
speed: 1,
distance: 3
}
}
}, {
type: n.CommonDataType.Actor,
id: "1010",
name: "Ghost",
textureName: "Actor/monster/monster10",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_MisstepBack,
beatenLockHpTime: .8
}
}, {
type: n.CommonDataType.Actor,
id: "1011",
name: "Bubble",
textureName: "Actor/monster/monster11",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 64,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_DirLine,
beatenLockHpTime: .8,
dirLineMoveData: {
moveDir: n.MoveDirType.Right,
speed: 1,
distance: 3
}
}
}, {
type: n.CommonDataType.Actor,
id: "1012",
name: "Rocky",
textureName: "Actor/monster/monster12",
author: "太空人蓝莓",
team: n.Team.Enemy,
gunId: "",
hp: 1,
hpMax: 1,
collider: {
offset: {
x: 0,
y: 0
},
size: {
w: 32,
h: 32
}
},
isBuildIn: !0,
rpgConf: {
moveSpeed: 256,
aiMoveType: n.AIMoveType.Grid_Random,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 196,
jumpStep: 1,
jumpHight: 160,
aiMoveType: n.AIMoveType.PlatformJump_Ground_MisstepBack,
beatenLockHpTime: .8
}
} ];
e.propConfs = [ {
type: n.CommonDataType.Prop,
id: "1",
name: "Coin",
intro: "",
textureName: "Prop/coin",
author: "Julian",
isBuildIn: !0,
once: !0,
useWhenPick: !1,
onPick: [ {
act: n.TriggerAct.Sound,
extra: {
soundId: 1005
}
} ],
defaultPrice: 1,
salePrice: 1
}, {
type: n.CommonDataType.Prop,
id: "2",
name: "Recovery Potion",
intro: "",
textureName: "Prop/potion",
author: "Julian",
isBuildIn: !0,
once: !0,
useWhenPick: !1,
onUse: [ {
act: n.TriggerAct.RecoverHP,
extra: {
cnt: 10
}
}, {
act: n.TriggerAct.Sound,
extra: {
soundId: 6010
}
} ],
defaultPrice: 10,
salePrice: 5
} ];
e.deviceConfs = [ {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Decorator,
id: "12",
name: "装饰物",
author: "Julian",
prefabName: "Decorator",
textureName: "Device/Decorator",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Saw,
id: "1",
name: "圆锯",
author: "Julian",
prefabName: "Saw",
textureName: "Device/Saw",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.FireBallLine,
id: "2",
name: "火球",
author: "Julian",
prefabName: "FireBallLine",
textureName: "Device/FireBall",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Lurker,
id: "3",
name: "地刺",
author: "Julian",
prefabName: "Lurker",
textureName: "Device/Lurker",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.IceCone,
id: "14",
name: "冰锥",
author: "Julian",
prefabName: "IceCone",
textureName: "Device/IceCone",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Bomb,
id: "7",
name: "炸弹",
author: "Julian",
prefabName: "Bomb",
textureName: "Device/Bomb",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Button,
id: "4",
name: "按钮",
author: "Julian",
prefabName: "DeviceButton",
textureName: "Device/DeviceButton",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Flag,
id: "6",
name: "过关旗",
author: "Julian",
prefabName: "Flag",
textureName: "Device/Flag",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Region,
id: "18",
name: "区域",
author: "Julian",
prefabName: "Region",
textureName: "Device/Region",
isBuildIn: !0,
forbidCustomCreate: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Billboard,
id: "19",
name: "告示牌",
author: "Julian",
prefabName: "Billboard",
textureName: "Device/Billboard",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.SavePoint,
id: "15",
name: "存档点",
author: "Julian",
prefabName: "SavePoint",
textureName: "Device/SavePoint",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.LoadPoint,
id: "16",
name: "读档点",
author: "Julian",
prefabName: "LoadPoint",
textureName: "Device/LoadPoint",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.MonsterSpawner,
id: "13",
name: "怪物门",
author: "Julian",
prefabName: "MonsterSpawner",
textureName: "Device/MonsterSpawner",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Spring,
id: "5",
name: "弹簧",
author: "Julian",
prefabName: "Spring",
textureName: "Device/Spring",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.TrapPlatform,
id: "8",
name: "陷阱平台",
author: "Julian",
prefabName: "TrapPlatform",
textureName: "Device/TrapPlatform",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.ConveyorPlatform,
id: "9",
name: "传送带",
author: "Julian",
prefabName: "ConveyorPlatform",
textureName: "Device/ConveyorPlatform",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.MovePlatform,
id: "10",
name: "移动平台",
author: "Julian",
prefabName: "MovePlatform",
textureName: "Device/MovePlatform",
isBuildIn: !0
}, {
type: n.CommonDataType.Device,
deviceType: n.DeviceType.Ladder,
id: "11",
name: "梯子",
author: "Julian",
prefabName: "Ladder",
textureName: "Device/Ladder",
isBuildIn: !0
} ];
e.playerLvConfs = [ {
id: 0,
exp: 0
}, {
id: 1,
exp: 10
}, {
id: 2,
exp: 30
}, {
id: 3,
exp: 50
}, {
id: 4,
exp: 100
}, {
id: 5,
exp: 150
}, {
id: 6,
exp: 200
}, {
id: 7,
exp: 300
}, {
id: 8,
exp: 400
}, {
id: 9,
exp: 500
}, {
id: 10,
exp: 700
}, {
id: 11,
exp: 900
}, {
id: 12,
exp: 1100
}, {
id: 13,
exp: 1300
}, {
id: 14,
exp: 1500
}, {
id: 15,
exp: 2e3
}, {
id: 16,
exp: 2500
}, {
id: 17,
exp: 3e3
}, {
id: 18,
exp: 3500
}, {
id: 19,
exp: 4e3
}, {
id: 20,
exp: 4500
}, {
id: 21,
exp: 5e3
}, {
id: 22,
exp: 5500
}, {
id: 23,
exp: 6e3
}, {
id: 24,
exp: 6500
}, {
id: 25,
exp: 7e3
}, {
id: 26,
exp: 7500
}, {
id: 27,
exp: 8e3
}, {
id: 28,
exp: 8500
}, {
id: 29,
exp: 9e3
}, {
id: 30,
exp: 9500
}, {
id: 31,
exp: 1e4
}, {
id: 32,
exp: 11e3
}, {
id: 33,
exp: 12e3
}, {
id: 34,
exp: 13e3
}, {
id: 35,
exp: 14e3
}, {
id: 36,
exp: 15e3
}, {
id: 37,
exp: 16e3
}, {
id: 38,
exp: 17e3
}, {
id: 39,
exp: 18e3
}, {
id: 40,
exp: 19e3
}, {
id: 41,
exp: 2e4
}, {
id: 42,
exp: 21e3
}, {
id: 43,
exp: 22e3
}, {
id: 44,
exp: 23e3
}, {
id: 45,
exp: 24e3
}, {
id: 46,
exp: 25e3
}, {
id: 47,
exp: 26e3
}, {
id: 48,
exp: 27e3
}, {
id: 49,
exp: 28e3
}, {
id: 50,
exp: 29e3
}, {
id: 51,
exp: 3e4
}, {
id: 52,
exp: 31e3
}, {
id: 53,
exp: 32e3
}, {
id: 54,
exp: 33e3
}, {
id: 55,
exp: 34e3
}, {
id: 56,
exp: 35e3
}, {
id: 57,
exp: 36e3
}, {
id: 58,
exp: 37e3
}, {
id: 59,
exp: 38e3
}, {
id: 60,
exp: 39e3
}, {
id: 61,
exp: 4e4
}, {
id: 62,
exp: 41e3
}, {
id: 63,
exp: 42e3
}, {
id: 64,
exp: 43e3
}, {
id: 65,
exp: 44e3
}, {
id: 66,
exp: 45e3
}, {
id: 67,
exp: 46e3
}, {
id: 68,
exp: 47e3
}, {
id: 69,
exp: 48e3
}, {
id: 70,
exp: 49e3
}, {
id: 71,
exp: 5e4
}, {
id: 72,
exp: 51e3
}, {
id: 73,
exp: 52e3
}, {
id: 74,
exp: 53e3
}, {
id: 75,
exp: 54e3
}, {
id: 76,
exp: 55e3
}, {
id: 77,
exp: 56e3
}, {
id: 78,
exp: 57e3
}, {
id: 79,
exp: 58e3
}, {
id: 80,
exp: 59e3
}, {
id: 81,
exp: 6e4
}, {
id: 82,
exp: 61e3
}, {
id: 83,
exp: 62e3
}, {
id: 84,
exp: 63e3
}, {
id: 85,
exp: 64e3
}, {
id: 86,
exp: 65e3
}, {
id: 87,
exp: 66e3
}, {
id: 88,
exp: 67e3
}, {
id: 89,
exp: 68e3
}, {
id: 90,
exp: 69e3
}, {
id: 91,
exp: 7e4
}, {
id: 92,
exp: 71e3
}, {
id: 93,
exp: 72e3
}, {
id: 94,
exp: 73e3
}, {
id: 95,
exp: 74e3
}, {
id: 96,
exp: 75e3
}, {
id: 97,
exp: 76e3
}, {
id: 98,
exp: 77e3
}, {
id: 99,
exp: 999999
} ];
e.tileConfs = [ {
disuse: !0,
type: n.CommonDataType.Tile,
id: "1",
name: "草地",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/glassland_jump1",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "2",
name: "草地2",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/glassland_jump2",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "3",
name: "石头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/stone",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "4",
name: "云",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/cloud",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "11",
name: "草地",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass1",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45
}, {
type: n.CommonDataType.Tile,
id: "12",
name: "草地",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass2",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "13",
name: "草地",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass3",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45_Flip
}, {
type: n.CommonDataType.Tile,
id: "14",
name: "草地1",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass4",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "15",
name: "草地2",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass5",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "16",
name: "草地3",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/grass6",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "21",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall1",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45
}, {
type: n.CommonDataType.Tile,
id: "22",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall2",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "23",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall3",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45_Flip
}, {
type: n.CommonDataType.Tile,
id: "24",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall4",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "25",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall5",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "26",
name: "石头",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/wall6",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "31",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood1",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45
}, {
type: n.CommonDataType.Tile,
id: "32",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood2",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "33",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood3",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45_Flip
}, {
type: n.CommonDataType.Tile,
id: "34",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood4",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Half_Top
}, {
type: n.CommonDataType.Tile,
id: "35",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood5",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Half_Top
}, {
type: n.CommonDataType.Tile,
id: "36",
name: "木头",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/wood6",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Half_Top
}, {
type: n.CommonDataType.Tile,
id: "41",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon1",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45
}, {
type: n.CommonDataType.Tile,
id: "42",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon2",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "43",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon3",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Slope_45_Flip
}, {
type: n.CommonDataType.Tile,
id: "44",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon4",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "45",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon5",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "46",
name: "地牢",
tileType: n.TileType.Jump,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Jump/dungeon6",
tilePhyType: n.TilePhysicType.Block,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "601",
name: "岩浆",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/lava",
tilePhyType: n.TilePhysicType.Damage,
shape: n.TileShape.Normal,
dataDamgae: {
perDmg: 1
}
}, {
type: n.CommonDataType.Tile,
id: "602",
name: "浓酸",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/acid",
tilePhyType: n.TilePhysicType.Damage,
shape: n.TileShape.Normal,
dataDamgae: {
perDmg: 1
}
}, {
type: n.CommonDataType.Tile,
id: "603",
name: "沼泽",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/swamp",
tilePhyType: n.TilePhysicType.Damage,
shape: n.TileShape.Normal,
dataDamgae: {
perDmg: 1
}
}, {
type: n.CommonDataType.Tile,
id: "801",
name: "箱子",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/box",
tilePhyType: n.TilePhysicType.Destroy,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "802",
name: "酒桶",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/barrel",
tilePhyType: n.TilePhysicType.Destroy,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "803",
name: "陶罐",
tileType: n.TileType.Jump,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/Jump/jar",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "1001",
name: "草地",
tileType: n.TileType.RPG,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/glassland_rpg1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "1002",
name: "草地",
tileType: n.TileType.RPG,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/glassland_rpg2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
disuse: !0,
type: n.CommonDataType.Tile,
id: "1003",
name: "树",
tileType: n.TileType.RPG,
author: "Julian",
isBuildIn: !0,
textureName: "Tile/disuse/tree",
tilePhyType: n.TilePhysicType.Destroy,
dataDestroy: {
hp: 1
},
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "301",
name: "草地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/grassland1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "302",
name: "草地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/grassland2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "303",
name: "草地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/grassland3",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "311",
name: "土地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/soil1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "312",
name: "土地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/soil2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "313",
name: "土地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/soil3",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "321",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "322",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "323",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank3",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "324",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank4",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "325",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank5",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "326",
name: "木板1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/plank6",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "331",
name: "石路1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/slateRoad1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "332",
name: "石路1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/slateRoad2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "333",
name: "石路1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/slateRoad3",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "341",
name: "雪地1",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/snow1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "342",
name: "雪地2",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/snow2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "343",
name: "雪地3",
tileType: n.TileType.RPG,
author: "巳木",
isBuildIn: !0,
textureName: "Tile/Rpg/snow3",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "501",
name: "石头1",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/stone1",
tilePhyType: n.TilePhysicType.Destroy,
dataDestroy: {
hp: 5
},
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "511",
name: "草1",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/grass1",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "512",
name: "草2",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/grass2",
tilePhyType: n.TilePhysicType.Pass,
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "521",
name: "树1",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/tree1",
tilePhyType: n.TilePhysicType.Destroy,
dataDestroy: {
hp: 3
},
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "522",
name: "树2",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/tree2",
tilePhyType: n.TilePhysicType.Destroy,
dataDestroy: {
hp: 3
},
shape: n.TileShape.Normal
}, {
type: n.CommonDataType.Tile,
id: "523",
name: "树3",
tileType: n.TileType.RPG,
author: "太空人蓝莓",
isBuildIn: !0,
textureName: "Tile/Rpg/tree3",
tilePhyType: n.TilePhysicType.Destroy,
dataDestroy: {
hp: 3
},
shape: n.TileShape.Normal
} ];
e.weaponConfs = [ {
type: n.CommonDataType.Weapon,
id: "1",
name: "冲锋枪",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 10,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 10,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "1",
bulletSpeed: 500,
bulletRange: 300
}
}, {
type: n.CommonDataType.Weapon,
id: "2",
name: "飞刀",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 3,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "2",
bulletSpeed: 300,
bulletRange: 300
}
}, {
type: n.CommonDataType.Weapon,
id: "3",
name: "狙击枪",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 2,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !0,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "3",
bulletSpeed: 600,
bulletRange: 600
}
}, {
type: n.CommonDataType.Weapon,
id: "4",
name: "燃烧瓶",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 1,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "4",
bulletSpeed: 300,
bulletRange: 200
}
}, {
type: n.CommonDataType.Weapon,
id: "5",
name: "火箭炮",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 1,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !0,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "5",
bulletSpeed: 400,
bulletRange: 300
}
}, {
type: n.CommonDataType.Weapon,
id: "6",
name: "刀光",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: 3,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "6",
bulletSpeed: 200,
bulletRange: 200
}
}, {
type: n.CommonDataType.Weapon,
id: "7",
name: "闪电",
textureName: "Weapon/BuildIn1/lightning",
isBuildIn: !0,
ROF: .5,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 360,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "7",
bulletSpeed: 200,
bulletRange: 200
}
}, {
type: n.CommonDataType.Weapon,
id: "8",
name: "毒液",
textureName: "Weapon/BuildIn1/gun",
isBuildIn: !0,
ROF: .5,
weaponType: n.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "8",
bulletSpeed: 200,
bulletRange: 200
}
}, {
type: n.CommonDataType.Weapon,
id: "1001",
name: "大刀",
textureName: "Weapon/BuildIn2/melee1",
isBuildIn: !0,
ROF: 2,
weaponType: n.WeaponType.Melee,
melee: {
damage: 1,
scale: 1.5,
actType: n.MeleeActType.Swing
}
}, {
type: n.CommonDataType.Weapon,
id: "1002",
name: "长矛",
textureName: "Weapon/BuildIn2/melee2",
isBuildIn: !0,
ROF: 2,
weaponType: n.WeaponType.Melee,
melee: {
damage: 1,
scale: 1.5,
actType: n.MeleeActType.Jab
}
}, {
type: n.CommonDataType.Weapon,
id: "2001",
name: "弹弓",
textureName: "Weapon/BuildIn3/cast1",
isBuildIn: !0,
ROF: 1,
weaponType: n.WeaponType.Cast,
cast: {
fireShake: !0,
bulletId: "5",
outSpeed: 1152,
flyDistance: 1024,
airResistanceCof: .1,
defaultAngle: 70,
dragInverse: !0
}
} ];
e.bulletConfs = [ {
type: n.CommonDataType.Bullet,
id: "1",
name: "子弹",
textureName: "Bullet/bullet1",
isBuildIn: !0,
speed: 500,
range: 300,
angleSpeed: 0,
damage: 1,
hitShake: !1,
hitDestroy: !0
}, {
type: n.CommonDataType.Bullet,
id: "2",
name: "飞刀",
textureName: "Bullet/bullet2",
isBuildIn: !0,
speed: 300,
range: 300,
angleSpeed: 360,
damage: 1,
hitShake: !1,
hitDestroy: !0
}, {
type: n.CommonDataType.Bullet,
id: "3",
name: "狙击子弹",
textureName: "Bullet/bullet3",
isBuildIn: !0,
speed: 600,
range: 600,
angleSpeed: 0,
damage: 1,
hitShake: !1,
hitDestroy: !1
}, {
type: n.CommonDataType.Bullet,
id: "4",
name: "燃烧瓶",
textureName: "Bullet/bullet4",
isBuildIn: !0,
speed: 300,
range: 200,
angleSpeed: 360,
damage: 1,
hitShake: !0,
hitDestroy: !0
}, {
type: n.CommonDataType.Bullet,
id: "5",
name: "导弹",
textureName: "Bullet/bullet5",
isBuildIn: !0,
speed: 400,
range: 300,
angleSpeed: 0,
damage: 1,
hitShake: !0,
hitDestroy: !0
}, {
type: n.CommonDataType.Bullet,
id: "6",
name: "刀光",
textureName: "Bullet/bullet6",
isBuildIn: !0,
speed: 200,
range: 200,
angleSpeed: 0,
damage: 1,
hitShake: !1,
hitDestroy: !1
}, {
type: n.CommonDataType.Bullet,
id: "7",
name: "闪电",
textureName: "Bullet/lightning",
isBuildIn: !0,
speed: 100,
range: 200,
angleSpeed: 0,
damage: 5,
hitShake: !1,
hitDestroy: !1
}, {
type: n.CommonDataType.Bullet,
id: "8",
name: "毒液",
textureName: "Bullet/venom",
isBuildIn: !0,
speed: 100,
range: 200,
angleSpeed: 0,
damage: 5,
hitShake: !1,
hitDestroy: !1
} ];
e.worldConf = [ {
type: n.WorldType.Jump,
name: "平台跳跃",
moveType: n.MoveType.PlatformJump
}, {
type: n.WorldType.Rpg,
name: "平面冒险",
moveType: n.MoveType.RpgMove
}, {
type: n.WorldType.Shoot,
name: "弹幕射击",
moveType: n.MoveType.Drag
} ];
e.moveAIConfs = [ {
type: n.MoveAI.Static,
name: "静止"
}, {
type: n.MoveAI.Line,
name: "直线发射"
}, {
type: n.MoveAI.Follow,
name: "跟踪主角"
}, {
type: n.MoveAI.Patrol,
name: "两点巡逻"
} ];
e.colors = [ {
id: 1,
color: cc.color(0, 0, 0)
}, {
id: 2,
color: cc.color(34, 32, 52)
}, {
id: 3,
color: cc.color(69, 40, 60)
}, {
id: 4,
color: cc.color(102, 57, 49)
}, {
id: 5,
color: cc.color(143, 86, 59)
}, {
id: 6,
color: cc.color(223, 113, 38)
}, {
id: 7,
color: cc.color(217, 160, 102)
}, {
id: 8,
color: cc.color(238, 195, 154)
}, {
id: 9,
color: cc.color(251, 242, 54)
}, {
id: 10,
color: cc.color(153, 229, 80)
}, {
id: 11,
color: cc.color(106, 190, 48)
}, {
id: 12,
color: cc.color(55, 148, 110)
}, {
id: 13,
color: cc.color(75, 105, 47)
}, {
id: 14,
color: cc.color(82, 75, 36)
}, {
id: 15,
color: cc.color(50, 60, 57)
}, {
id: 16,
color: cc.color(63, 63, 116)
}, {
id: 17,
color: cc.color(48, 96, 130)
}, {
id: 18,
color: cc.color(91, 110, 225)
}, {
id: 19,
color: cc.color(99, 155, 255)
}, {
id: 20,
color: cc.color(95, 205, 228)
}, {
id: 21,
color: cc.color(203, 219, 252)
}, {
id: 22,
color: cc.color(255, 255, 255)
}, {
id: 23,
color: cc.color(155, 173, 183)
}, {
id: 24,
color: cc.color(132, 126, 135)
}, {
id: 25,
color: cc.color(105, 106, 106)
}, {
id: 26,
color: cc.color(89, 86, 82)
}, {
id: 27,
color: cc.color(118, 66, 138)
}, {
id: 28,
color: cc.color(172, 50, 50)
}, {
id: 29,
color: cc.color(217, 87, 99)
}, {
id: 30,
color: cc.color(215, 123, 186)
}, {
id: 31,
color: cc.color(143, 151, 74)
}, {
id: 32,
color: cc.color(138, 111, 48)
} ];
e.soundConfs = [ {
id: 1001,
type: n.SoundTyp.coin,
name: "coin1",
url: "coin/coin1"
}, {
id: 1002,
type: n.SoundTyp.coin,
name: "coin2",
url: "coin/coin2"
}, {
id: 1003,
type: n.SoundTyp.coin,
name: "coin3",
url: "coin/coin3"
}, {
id: 1004,
type: n.SoundTyp.coin,
name: "coin4",
url: "coin/coin4"
}, {
id: 1005,
type: n.SoundTyp.coin,
name: "coin5",
url: "coin/coin5"
}, {
id: 1006,
type: n.SoundTyp.coin,
name: "coin6",
url: "coin/coin6"
}, {
id: 1007,
type: n.SoundTyp.coin,
name: "coin7",
url: "coin/coin7"
}, {
id: 1008,
type: n.SoundTyp.coin,
name: "coin8",
url: "coin/coin8"
}, {
id: 1009,
type: n.SoundTyp.coin,
name: "coin9",
url: "coin/coin9"
}, {
id: 1010,
type: n.SoundTyp.coin,
name: "coin10",
url: "coin/coin10"
}, {
id: 2001,
type: n.SoundTyp.explosion,
name: "explosion1",
url: "explosion/explosion1"
}, {
id: 2002,
type: n.SoundTyp.explosion,
name: "explosion2",
url: "explosion/explosion2"
}, {
id: 2003,
type: n.SoundTyp.explosion,
name: "explosion3",
url: "explosion/explosion3"
}, {
id: 2004,
type: n.SoundTyp.explosion,
name: "explosion4",
url: "explosion/explosion4"
}, {
id: 2005,
type: n.SoundTyp.explosion,
name: "explosion5",
url: "explosion/explosion5"
}, {
id: 2006,
type: n.SoundTyp.explosion,
name: "explosion6",
url: "explosion/explosion6"
}, {
id: 2007,
type: n.SoundTyp.explosion,
name: "explosion7",
url: "explosion/explosion7"
}, {
id: 2008,
type: n.SoundTyp.explosion,
name: "explosion8",
url: "explosion/explosion8"
}, {
id: 2009,
type: n.SoundTyp.explosion,
name: "explosion9",
url: "explosion/explosion9"
}, {
id: 2010,
type: n.SoundTyp.explosion,
name: "explosion10",
url: "explosion/explosion10"
}, {
id: 3001,
type: n.SoundTyp.hurt,
name: "hurt1",
url: "hurt/hurt1"
}, {
id: 3002,
type: n.SoundTyp.hurt,
name: "hurt2",
url: "hurt/hurt2"
}, {
id: 3003,
type: n.SoundTyp.hurt,
name: "hurt3",
url: "hurt/hurt3"
}, {
id: 3004,
type: n.SoundTyp.hurt,
name: "hurt4",
url: "hurt/hurt4"
}, {
id: 3005,
type: n.SoundTyp.hurt,
name: "hurt5",
url: "hurt/hurt5"
}, {
id: 3006,
type: n.SoundTyp.hurt,
name: "hurt6",
url: "hurt/hurt6"
}, {
id: 3007,
type: n.SoundTyp.hurt,
name: "hurt7",
url: "hurt/hurt7"
}, {
id: 3008,
type: n.SoundTyp.hurt,
name: "hurt8",
url: "hurt/hurt8"
}, {
id: 3009,
type: n.SoundTyp.hurt,
name: "hurt9",
url: "hurt/hurt9"
}, {
id: 3010,
type: n.SoundTyp.hurt,
name: "hurt10",
url: "hurt/hurt10"
}, {
id: 4001,
type: n.SoundTyp.jump,
name: "jump1",
url: "jump/jump1"
}, {
id: 4002,
type: n.SoundTyp.jump,
name: "jump2",
url: "jump/jump2"
}, {
id: 4003,
type: n.SoundTyp.jump,
name: "jump3",
url: "jump/jump3"
}, {
id: 4004,
type: n.SoundTyp.jump,
name: "jump4",
url: "jump/jump4"
}, {
id: 4005,
type: n.SoundTyp.jump,
name: "jump5",
url: "jump/jump5"
}, {
id: 4006,
type: n.SoundTyp.jump,
name: "jump6",
url: "jump/jump6"
}, {
id: 4007,
type: n.SoundTyp.jump,
name: "jump7",
url: "jump/jump7"
}, {
id: 4008,
type: n.SoundTyp.jump,
name: "jump8",
url: "jump/jump8"
}, {
id: 4009,
type: n.SoundTyp.jump,
name: "jump9",
url: "jump/jump9"
}, {
id: 4010,
type: n.SoundTyp.jump,
name: "jump10",
url: "jump/jump10"
}, {
id: 5001,
type: n.SoundTyp.laser,
name: "laser1",
url: "laser/laser1"
}, {
id: 5002,
type: n.SoundTyp.laser,
name: "laser2",
url: "laser/laser2"
}, {
id: 5003,
type: n.SoundTyp.laser,
name: "laser3",
url: "laser/laser3"
}, {
id: 5004,
type: n.SoundTyp.laser,
name: "laser4",
url: "laser/laser4"
}, {
id: 5005,
type: n.SoundTyp.laser,
name: "laser5",
url: "laser/laser5"
}, {
id: 5006,
type: n.SoundTyp.laser,
name: "laser6",
url: "laser/laser6"
}, {
id: 5007,
type: n.SoundTyp.laser,
name: "laser7",
url: "laser/laser7"
}, {
id: 5008,
type: n.SoundTyp.laser,
name: "laser8",
url: "laser/laser8"
}, {
id: 5009,
type: n.SoundTyp.laser,
name: "laser9",
url: "laser/laser9"
}, {
id: 5010,
type: n.SoundTyp.laser,
name: "laser10",
url: "laser/laser10"
}, {
id: 6001,
type: n.SoundTyp.powerup,
name: "powerup1",
url: "powerup/powerup1"
}, {
id: 6002,
type: n.SoundTyp.powerup,
name: "powerup2",
url: "powerup/powerup2"
}, {
id: 6003,
type: n.SoundTyp.powerup,
name: "powerup3",
url: "powerup/powerup3"
}, {
id: 6004,
type: n.SoundTyp.powerup,
name: "powerup4",
url: "powerup/powerup4"
}, {
id: 6005,
type: n.SoundTyp.powerup,
name: "powerup5",
url: "powerup/powerup5"
}, {
id: 6006,
type: n.SoundTyp.powerup,
name: "powerup6",
url: "powerup/powerup6"
}, {
id: 6007,
type: n.SoundTyp.powerup,
name: "powerup7",
url: "powerup/powerup7"
}, {
id: 6008,
type: n.SoundTyp.powerup,
name: "powerup8",
url: "powerup/powerup8"
}, {
id: 6009,
type: n.SoundTyp.powerup,
name: "powerup9",
url: "powerup/powerup9"
}, {
id: 6010,
type: n.SoundTyp.powerup,
name: "powerup10",
url: "powerup/powerup10"
}, {
id: 31,
type: n.SoundTyp.piano,
name: "钢琴1",
url: "piano/piano31"
}, {
id: 32,
type: n.SoundTyp.piano,
name: "钢琴2",
url: "piano/piano32"
}, {
id: 33,
type: n.SoundTyp.piano,
name: "钢琴3",
url: "piano/piano33"
}, {
id: 34,
type: n.SoundTyp.piano,
name: "钢琴4",
url: "piano/piano34"
}, {
id: 35,
type: n.SoundTyp.piano,
name: "钢琴5",
url: "piano/piano35"
}, {
id: 36,
type: n.SoundTyp.piano,
name: "钢琴6",
url: "piano/piano36"
}, {
id: 37,
type: n.SoundTyp.piano,
name: "钢琴7",
url: "piano/piano37"
}, {
id: 41,
type: n.SoundTyp.piano,
name: "钢琴8",
url: "piano/piano41"
}, {
id: 42,
type: n.SoundTyp.piano,
name: "钢琴9",
url: "piano/piano42"
}, {
id: 43,
type: n.SoundTyp.piano,
name: "钢琴10",
url: "piano/piano43"
}, {
id: 44,
type: n.SoundTyp.piano,
name: "钢琴11",
url: "piano/piano44"
}, {
id: 45,
type: n.SoundTyp.piano,
name: "钢琴12",
url: "piano/piano45"
}, {
id: 46,
type: n.SoundTyp.piano,
name: "钢琴13",
url: "piano/piano46"
}, {
id: 47,
type: n.SoundTyp.piano,
name: "钢琴14",
url: "piano/piano47"
}, {
id: 51,
type: n.SoundTyp.piano,
name: "钢琴15",
url: "piano/piano51"
} ];
e.shiftWorldAnims = [ {
id: 1,
str: "无",
animName: "None"
}, {
id: 2,
str: "黑底白字",
animName: "BlackBgWhiteLabel"
} ];
e.getWorldConfByType = function(t) {
for (let o = 0; o < e.worldConf.length; o++) if (e.worldConf[o].type === t) return e.worldConf[o];
};
e.getMoveAIConfByType = function(t) {
for (let o = 0; o < e.moveAIConfs.length; o++) if (e.moveAIConfs[o].type === t) return e.moveAIConfs[o];
};
e.getDeviceConf = function(t) {
for (let o = 0; o < e.deviceConfs.length; o++) {
let i = e.deviceConfs[o];
if (i.id == t) return i;
}
};
let t = new Map([ [ n.TriggerAct.None, {
name: "无"
} ], [ n.TriggerAct.Dialog, {
name: "剧情对话"
} ], [ n.TriggerAct.ShiftWorld, {
name: "切换地图"
} ], [ n.TriggerAct.DropProp, {
name: "生成道具"
} ], [ n.TriggerAct.Sound, {
name: "播放音效"
} ], [ n.TriggerAct.ShiftWeapon, {
name: "切换武器"
} ], [ n.TriggerAct.ShiftHero, {
name: "切换主角"
} ], [ n.TriggerAct.RecoverHP, {
name: "恢复血量"
} ], [ n.TriggerAct.CameraShake, {
name: "屏幕震动"
} ], [ n.TriggerAct.ChangeAct, {
name: "调整属性"
} ], [ n.TriggerAct.GameScript, {
name: "游戏脚本(实验版)"
} ], [ n.TriggerAct.Save, {
name: "存档"
} ], [ n.TriggerAct.Load, {
name: "读档"
} ], [ n.TriggerAct.ClearSave, {
name: "清空存档"
} ], [ n.TriggerAct.ShareGame, {
name: "分享游戏"
} ], [ n.TriggerAct.AD, {
name: "广告"
} ], [ n.TriggerAct.BagItem, {
name: "加减物品"
} ], [ n.TriggerAct.BagSize, {
name: "调整背包大小"
} ], [ n.TriggerAct.Random, {
name: "随机事件"
} ], [ n.TriggerAct.ChangeHero, {
name: "调整主角属性"
} ], [ n.TriggerAct.StartTimeCountDown, {
name: "开始计时"
} ], [ n.TriggerAct.StopTimeCountDown, {
name: "停止计时"
} ], [ n.TriggerAct.GameShop, {
name: "商店界面"
} ], [ n.TriggerAct.GameOver, {
name: "失败界面"
} ], [ n.TriggerAct.GameWin, {
name: "胜利界面"
} ], [ n.TriggerAct.GameRank, {
name: "排行榜"
} ], [ n.TriggerAct.UploadRankScore, {
name: "上传排行榜分数"
} ] ]), o = new Map([ [ n.DeviceType.Saw, "圆锯" ], [ n.DeviceType.FireBallLine, "火球" ], [ n.DeviceType.Lurker, "地刺" ], [ n.DeviceType.Button, "按钮" ], [ n.DeviceType.Flag, "接触触发器" ], [ n.DeviceType.Spring, "弹簧" ], [ n.DeviceType.Bomb, "炸弹" ], [ n.DeviceType.TrapPlatform, "陷阱平台" ], [ n.DeviceType.ConveyorPlatform, "传送带" ], [ n.DeviceType.MovePlatform, "移动平台" ], [ n.DeviceType.Ladder, "梯子" ], [ n.DeviceType.Decorator, "装饰物" ], [ n.DeviceType.MonsterSpawner, "怪物门" ], [ n.DeviceType.IceCone, "冰锥" ], [ n.DeviceType.SavePoint, "存档点" ], [ n.DeviceType.LoadPoint, "读档点" ], [ n.DeviceType.Toggle, "操纵杆" ], [ n.DeviceType.Region, "区域" ], [ n.DeviceType.Billboard, "告示牌" ] ]), i = new Map([ [ n.WorldType.Jump, "平台跳跃" ], [ n.WorldType.Rpg, "俯视冒险" ], [ n.WorldType.Shoot, "射击" ] ]);
e.getDeviceTypeName = function(e) {
return o.get(e);
};
e.getWorldTypeActName = function(e) {
return i.get(e);
};
e.getTriggerAct = function(e) {
return t.get(e);
};
e.getTriggerActName = function(e) {
return t.get(e).name;
};
e.getTriggerActDisplay = function(e) {
let o = t.get(e.act);
return o.getDisplayStr ? o.getDisplayStr(e) : o.name;
};
e.weaponTypeConfs = [ {
type: n.WeaponType.Gun,
name: "直射",
textureName: "Weapon/BuildIn1/gun"
}, {
type: n.WeaponType.Melee,
name: "近战",
textureName: "Weapon/BuildIn2/melee1"
}, {
type: n.WeaponType.Cast,
name: "弹射",
textureName: "Weapon/BuildIn3/cast1"
} ];
})(o.Config || (o.Config = {}));
cc._RF.pop();
}, {
"../GameData/GameTypeDefine": "GameTypeDefine",
"./Util": "Util"
} ],
ConveyorPlatform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c9961vuLMxHhbkOU/HmZVBF", "ConveyorPlatform");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Util"), r = e("../Player/Mng"), l = e("../World/Tile"), c = e("./Platform"), {ccclass: d, property: h} = cc._decorator;
var p;
(function(e) {
e[e.Left = 0] = "Left";
e[e.Right = 1] = "Right";
e[e.Up = 2] = "Up";
e[e.Down = 3] = "Down";
})(p || (p = {}));
const u = new cc.Vec2(), m = new cc.Vec2();
let f = i = class extends c.Platform {
constructor() {
super(...arguments);
this.platform = null;
this.content = null;
this.mask = null;
this.edge = null;
this.moveRoot = null;
this._moveDir = new cc.Vec2();
this._moveSpeed = 0;
this._moveTarget = new cc.Vec2();
this._moveStart = new cc.Vec2();
this._onPlatformActors = [];
}
get width() {
return this._boxCollider.size.width;
}
get height() {
return this._boxCollider.size.height;
}
onLoad() {
super.onLoad();
s.Util.makeBro(this.platform, 0);
this._moveStart.set(this.moveRoot.position);
}
setCutting(e) {
if (this.content) {
let t = this.data.extra.cnt * this.data.extra.cnty;
t > this.content.childrenCount && (t = this.content.childrenCount);
for (let o = 0; o < t; ++o) this.content.children[o].active = !e;
}
}
initCollider() {
this._boxCollider = this.content.getComponent(cc.BoxCollider);
}
onActorOnPlatform(e) {
this._onPlatformActors.indexOf(e) < 0 && this._onPlatformActors.push(e);
}
onActorExistPlatform(e) {
let t = this._onPlatformActors.indexOf(e);
t >= 0 && this._onPlatformActors.splice(t, 1);
}
lateUpdate(e) {
this.world.playing && this.updateState(e);
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
moveDir: p.Right,
speed: 2.5,
cnt: 3,
cnty: 1
});
e.extra.cnty = e.extra.cnty || 1;
this.refresh(e, t);
}
refresh(e, t) {
this._moveDir.x = 0;
this._moveDir.y = 0;
switch (e.extra.moveDir) {
case p.Left:
this._moveDir.x = -1;
break;

case p.Right:
this._moveDir.x = 1;
break;

case p.Up:
this._moveDir.y = 1;
break;

case p.Down:
this._moveDir.y = -1;
}
let o = e.extra.cnt + 1, i = e.extra.cnty + 1, n = this._moveDir.x > 0 ? -1 : 0, a = this._moveDir.y > 0 ? -1 : 0;
s.Util.makeBro(this.platform, o * i, (e, i) => {
let s = i % o + n, l = Math.floor(i / o) + a, c = cc.v2(64 * s, 64 * l);
e.position = c;
let d = e.getComponent(cc.Sprite);
d.node.scaleX = 0 != this._moveDir.x ? this._moveDir.x : 1;
0 != this._moveDir.y ? this._moveDir.y < 0 ? d.node.angle = 90 : d.node.angle = -90 : d.node.angle = 0;
r.Mng.Ins.spriteMng.setDeviceSprite(d, t.textureName, 64);
});
let c = this._boxCollider.size;
c.width = 64 * e.extra.cnt;
c.height = 64 * e.extra.cnty;
this._boxCollider.size = c;
let d = this._boxCollider.offset;
d.x = .5 * c.width - 32;
d.y = .5 * c.height - 32;
this._boxCollider.offset = d;
this.mask.node.width = c.width;
this.mask.node.height = c.height;
if (0 != this._moveDir.y) {
this.edge.node.angle = 90;
this.edge.node.width = c.height;
this.edge.node.height = c.width;
this.edge.node.x = 0;
this.edge.node.y = this.edge.node.width;
} else {
this.edge.node.angle = 0;
this.edge.node.width = c.width;
this.edge.node.height = c.height;
this.edge.node.x = 0;
this.edge.node.y = 0;
}
this._moveSpeed = e.extra.speed * l.default.SIZE;
this.startMove();
}
startMove() {
this.moveRoot.position = this._moveStart;
cc.Vec2.scaleAndAdd(this._moveTarget, this._moveStart, this._moveDir, l.default.SIZE);
}
updateState(e) {
if (this._moveSpeed <= 0) return;
let t = this._moveSpeed * e, o = u;
o.set(this.moveRoot.position);
let i = cc.Vec2.distance(this._moveTarget, o);
if (i <= t || i < Number.EPSILON) {
m.set(this._moveTarget);
this.moveRoot.position = m;
this.startMove();
} else {
cc.Vec2.lerp(m, o, this._moveTarget, t / i);
this.moveRoot.position = m;
}
for (let e of this._onPlatformActors) e.PositionMoveDelta(t * this._moveDir.x, t * this._moveDir.y);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
moveDir: p.Right,
speed: 2.5,
cnt: 3,
cnty: 1
};
o && e.addHead(t.name, t.textureName);
let s = [ {
str: "左",
type: p.Left
}, {
str: "右",
type: p.Right
}, {
str: "上",
type: p.Up
}, {
str: "下",
type: p.Down
} ], r = s.findIndex(e => e.type == n.extra.moveDir);
-1 == r && (r = 0);
e.addDropDownBox("移动方向", s, r, (e, t) => a(this, void 0, void 0, function*() {
n.extra.moveDir = t.type;
}));
e.addNumberEditBox("移动速度(格/秒)", n.extra.speed, 0, 99, e => {
n.extra.speed = e;
});
e.addNumberEditBox("横向个数", n.extra.cnt, 1, 64, e => {
n.extra.cnt = e;
o && o.refresh(i, t);
});
e.addNumberEditBox("纵向个数", n.extra.cnty, 1, 64, e => {
n.extra.cnty = e;
o && o.refresh(i, t);
});
}
};
n([ h(cc.Node) ], f.prototype, "platform", void 0);
n([ h(cc.Node) ], f.prototype, "content", void 0);
n([ h(cc.Mask) ], f.prototype, "mask", void 0);
n([ h(cc.Sprite) ], f.prototype, "edge", void 0);
n([ h(cc.Node) ], f.prototype, "moveRoot", void 0);
f = i = n([ d ], f);
o.default = f;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../Player/Mng": "Mng",
"../World/Tile": "Tile",
"./Platform": "Platform"
} ],
CreateActorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d3f7ekPnJNHaJqGgxpol4Lt", "CreateActorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../GameData/GameTypeDefine"), {ccclass: d, property: h} = cc._decorator;
let p = class extends r.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.sprite = null;
this.actorTypeBox = null;
this.confirmBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.confirmBtn.node.on(a.default.CLICK, this.onConfitmBtn1, this);
let e = [ {
str: "主角",
type: c.Team.Hero
}, {
str: "敌人",
type: c.Team.Enemy
}, {
str: "NPC",
type: c.Team.NPC
}, {
str: "队友",
type: c.Team.Ally
} ];
this.actorTypeBox.setDataArr(e);
this.actorTypeBox.node.on(s.default.SELECT_CHANGE, this.onTypeStateChange, this);
}
onTypeStateChange(e, t, o) {
o && (this.conf.team = t.type);
}
setData(e, t) {
this.conf = e;
this.nameEditBox.string = n.I18nMgr.getI18nStringByZh(e.name);
this.conf.team = c.Team.Hero;
this.actorTypeBox.selectByIdx(0);
this.setSpriteByPixels(t);
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
onPaintBtnClick() {
l.default.ins.Enter("PaintScene");
}
onConfitmBtn1() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
this.confirmCall && this.confirmCall(e);
this.closePanel();
}
};
i([ h(cc.EditBox) ], p.prototype, "nameEditBox", void 0);
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(s.default) ], p.prototype, "actorTypeBox", void 0);
i([ h(a.default) ], p.prototype, "confirmBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
CreateBulletHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9da55nr+axGN7c7IWJIJhXe", "CreateBulletHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CreateBulletHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/SceneManager"), s = e("../../Game/Player/Mng"), r = e("../../GameData/GameTypeDefine"), l = e("../../Role"), c = e("./CreateCommonHelper");
o.CreateBulletHelper = class extends c.CreateCommonHelper {
constructor() {
super(...arguments);
this.bulletConf = null;
this.propConf = null;
this.imageFileType = n.ImageFileType.bullet;
this.displayName = "子弹";
this.refreshMsgName = "refreshBulletList";
}
buildConf() {
return i(this, void 0, void 0, function*() {
let e, t = yield s.Mng.Ins.bulletMng.loadAll(), o = 1;
do {
e = "子弹" + o;
o++;
} while (t.find(t => t.name == e));
this.bulletConf = {
author: l.default.Ins.userName,
type: r.CommonDataType.Bullet,
id: "",
name: e,
textureName: "",
speed: 5,
range: 5,
damage: 1,
hitShake: !0,
hitDestroy: !0,
angleSpeed: 0
};
return this.bulletConf;
});
}
setConf(e) {
this.bulletConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
if (this.bulletConf) return yield s.Mng.Ins.bulletMng.create(this.bulletConf);
});
}
initInspector(e) {
e.reset();
this.loadCostProp();
e.addNumberEditBox("伤害值", this.bulletConf.damage, 0, 999990, e => {
this.bulletConf.damage = e;
});
e.addNumberEditBox("自旋转(度/秒)", this.bulletConf.angleSpeed, 0, 36e3, e => {
this.bulletConf.angleSpeed = e;
});
let t = e.addButton("消耗道具", this.propConf ? this.propConf.name : this.bulletConf.costPropId && "" != this.bulletConf.costPropId ? "" : "无道具", () => {
a.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this.bulletConf.costPropId);
e.selectCall = e => {
this.propConf = e;
this.bulletConf.costPropId = e.id;
t.button.label.string = e.name;
};
});
});
e.addToggle("击中震屏", this.bulletConf.hitShake, e => {
this.bulletConf.hitShake = e;
});
e.addToggle("击中销毁", this.bulletConf.hitDestroy, e => {
this.bulletConf.hitDestroy = e;
});
this.bulletConf.onHit = this.bulletConf.onHit || [];
e.addTrigger("击中时", this.bulletConf.onHit, !1);
this.bulletConf.onDestroy = this.bulletConf.onDestroy || [];
e.addTrigger("销毁时", this.bulletConf.onDestroy, !1);
}
loadCostProp() {
return i(this, void 0, void 0, function*() {
if (this.bulletConf.costPropId) {
let e = yield s.Mng.Ins.propMng.loadOne(this.bulletConf.costPropId);
if (this.propConf != e) {
this.propConf = e;
this.isDirty = !0;
}
}
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Role": "Role",
"./CreateCommonHelper": "CreateCommonHelper"
} ],
CreateBulletPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dc66fZhKXFLbrqjqVfxznjc", "CreateBulletPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.sprite = null;
this.confirmBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.confirmBtn.node.on(n.default.CLICK, this.onConfitmBtn2, this);
}
setData(e, t) {
this.conf = e;
this.nameEditBox.string = e.name;
this.setSpriteByPixels(t);
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
onPaintBtnClick() {
s.default.ins.Enter("PaintScene");
}
onConfitmBtn2() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
this.confirmCall && this.confirmCall(e);
this.closePanel();
}
};
i([ l(cc.EditBox) ], c.prototype, "nameEditBox", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(n.default) ], c.prototype, "confirmBtn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager"
} ],
CreateColorBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "54c16wzJhBMA6iS74zVjrb8", "CreateColorBtn");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/SceneManager"), s = e("./PaintScene"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
onLoad() {
this.node.on(n.default.CLICK, this.onClick, this);
}
onClick() {
let e = cc.color(128, 128, 128), t = a.default.ins.findScene(s.default);
t && (e = t.pencilColor);
a.default.ins.OpenPanelByName("CreateColorPanel", t => {
t.setColor(0, e);
t.setSaveStyle(!0);
});
}
};
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"./PaintScene": "PaintScene"
} ],
CreateColorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "09d8bVJfiVCH5UlBW5me264", "CreateColorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/Slider"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Util"), h = e("../../Game/Player/ColorMng"), p = e("../../Scene/PaintScene/PaintScene"), u = e("../../Frame/UIColor"), {ccclass: m, property: f} = cc._decorator;
let g = class extends l.default {
constructor() {
super(...arguments);
this.sprite = null;
this.createBtn = null;
this.saveBtn = null;
this.deleteBtn = null;
this.rSlider = null;
this.gSlider = null;
this.bSlider = null;
this.colorDataId = 0;
this.call = null;
}
onLoad() {
super.onLoad();
this.createBtn.node.on(s.default.CLICK, this.onCreateBtn, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtn, this);
this.saveBtn.node.on(s.default.CLICK, this.onSaveBtn, this);
let e = (e, t, o, i) => {
let a = e.getComponentInChildren(cc.Graphics), l = e.getComponentInChildren(s.default);
for (let n = 0; n < e.node.width; n++) {
let s = 255 * n / e.node.width;
a.fillColor = cc.color(s * t, s * o, s * i);
a.fillRect(n, 0, 1, e.node.height);
a.fill();
}
l.node.on(s.default.CLICK, () => {
c.default.ins.OpenPanelByName("NumberInputPanel", t => {
let o = e.value;
t.setData("摄像机缩放", o, t => n(this, void 0, void 0, function*() {
t = d.Util.clamp(t, 0, 255);
e.value = t;
}));
});
});
e.node.on(r.default.MOVE, e => {
l.label.string = e;
let t = this.rSlider.value, o = this.gSlider.value, i = this.bSlider.value;
this.sprite.node.color = cc.color(t, o, i);
}, this);
};
e(this.rSlider, 1, 0, 0);
e(this.gSlider, 0, 1, 0);
e(this.bSlider, 0, 0, 1);
}
setColor(e, t) {
this.colorDataId = e;
this.rSlider.value = t.r;
this.gSlider.value = t.g;
this.bSlider.value = t.b;
}
setCreateStyle(e) {
this.createBtn.node.active = e;
this.saveBtn.node.active = !e;
this.deleteBtn.node.active = !e;
}
setSaveStyle(e) {
this.saveBtn.node.active = e;
this.createBtn.node.active = !e;
this.deleteBtn.node.active = !e;
}
onCreateBtn() {
return n(this, void 0, void 0, function*() {
let e = new a.CustomColor();
e.id = 0;
e.data = new a.ColorData();
e.data.r = this.rSlider.value;
e.data.g = this.gSlider.value;
e.data.b = this.bSlider.value;
let t = yield h.ColorMng.Ins.save([ e ]);
if (t && t.length > 0) {
let e = t[t.length - 1].id, o = c.default.ins.findScene(p.default);
o.refreshColorList(e);
let i = o.colorList.getDataArr().findIndex(t => t.id == e), n = o.colorList.getExtraData(i);
n && n.item && o.addColorGuide(n.item);
}
this.closePanel();
});
}
onSaveBtn() {
return n(this, void 0, void 0, function*() {
let e = new a.CustomColor();
e.id = this.colorDataId;
e.data = new a.ColorData();
e.data.r = this.rSlider.value;
e.data.g = this.gSlider.value;
e.data.b = this.bSlider.value;
this.call && this.call(e);
this.closePanel();
});
}
onDeleteBtn() {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "提示";
e.label.string = "是否删除该颜色？";
e.setLeftBtn({
text: "好的",
color: u.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield h.ColorMng.Ins.delete(this.colorDataId);
c.default.ins.findScene(p.default).refreshColorList(this.colorDataId);
this.closePanel();
})
});
e.setRightBtn({
text: "点错了",
color: u.UIColor.blue
});
});
}
};
i([ f(cc.Sprite) ], g.prototype, "sprite", void 0);
i([ f(s.default) ], g.prototype, "createBtn", void 0);
i([ f(s.default) ], g.prototype, "saveBtn", void 0);
i([ f(s.default) ], g.prototype, "deleteBtn", void 0);
i([ f(r.default) ], g.prototype, "rSlider", void 0);
i([ f(r.default) ], g.prototype, "gSlider", void 0);
i([ f(r.default) ], g.prototype, "bSlider", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/Slider": "Slider",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/ColorMng": "ColorMng",
"../../Scene/PaintScene/PaintScene": "PaintScene"
} ],
CreateCommonHelperFactory: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "122d34XLc1NP7RgQZBxIDHy", "CreateCommonHelperFactory");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CreateCommonHelperFactory = void 0;
const i = e("../../GameData/GameTypeDefine"), n = e("./CreateBulletHelper"), a = e("./CreateTileHelper"), s = e("./CreateWeaponHelper");
class r {
constructor() {
this._helperCatchTable = new Map();
}
static get instance() {
if (!this._instance) {
this._instance = new r();
this._instance.AddHelperInfo(i.CommonDataType.Tile, a.TileOptionHelper);
this._instance.AddHelperInfo(i.CommonDataType.Weapon, s.CreateWeaponHelper);
this._instance.AddHelperInfo(i.CommonDataType.Bullet, n.CreateBulletHelper);
}
return this._instance;
}
AddHelperInfo(e, t) {
this._helperCatchTable.has(e) || this._helperCatchTable.set(e, {
typeIns: t,
catch: null
});
}
GetGommonOptionHelper(e) {
if (this._helperCatchTable.has(e)) {
let t = this._helperCatchTable.get(e);
t.catch || (t.catch = new t.typeIns());
return t.catch;
}
return null;
}
}
o.CreateCommonHelperFactory = r;
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./CreateBulletHelper": "CreateBulletHelper",
"./CreateTileHelper": "CreateTileHelper",
"./CreateWeaponHelper": "CreateWeaponHelper"
} ],
CreateCommonHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d22729MGNJNFKbBoUlEQE6s", "CreateCommonHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CreateCommonHelper = void 0;
o.CreateCommonHelper = class {
constructor() {
this.conf = null;
this.isDirty = !1;
}
createConf(e) {
return i(this, void 0, void 0, function*() {
this.params = e;
this.conf = yield this.buildConf();
return this.conf;
});
}
paintCall(e) {
e.toPaintTile();
}
};
cc._RF.pop();
}, {} ],
CreateCommonPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e2839sJ0NFD+onA4TJFLdd4", "CreateCommonPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../Frame/Panel"), l = e("../../Frame/Top"), c = e("../../Frame/Util"), d = e("../../Scene/EditWorldScene/Inspector"), h = e("./CreateCommonHelperFactory"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.sprite = null;
this.nameEditBox = null;
this.authorLabel = null;
this.titleLabel = null;
this.inspector = null;
this.okBtn = null;
this._pixels = null;
this._saveCall = null;
this.sensitiveName = "";
}
onLoad() {
super.onLoad();
this.okBtn.node.on(s.default.CLICK, this.onClickOk, this);
this.sensitiveName = "stamp" + orange.TimeUtil.serverTime;
}
setData(e, t, o, i) {
return n(this, void 0, void 0, function*() {
this._saveCall = i;
this._helper = h.CreateCommonHelperFactory.instance.GetGommonOptionHelper(e);
if (t) {
this._conf = t;
this._helper.setConf(t);
} else this._conf = yield this._helper.createConf(o);
this.titleLabel.string = a.I18nMgr.exceI18nStringByZh("创建${this._helper.displayName}", [ {
paramName: "this._helper.displayName",
param: a.I18nMgr.getI18nStringByZh(this._helper.displayName)
} ]);
this.authorLabel.string = this._conf.author;
this.nameEditBox.string = a.I18nMgr.getI18nStringByZh(this._conf.name);
this._helper.initInspector(this.inspector);
});
}
setPixel(e) {
this._pixels = e;
this.sprite.spriteFrame = this.makeSpriteFrameByPixel(e);
}
makeSpriteFrameByPixel(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
return new cc.SpriteFrame(t);
}
onClickOk() {
return n(this, void 0, void 0, function*() {
if (!this._pixels) {
l.default.showToast(`请绘制${this._helper.displayName}`);
return;
}
l.default.showLoading("上传中(1/3)");
let e = yield c.Util.uploadPng(this._pixels, this._helper.imageFileType, this.sensitiveName);
if (e.err) l.default.hideLoading("图片违规：" + e.err); else {
l.default.showLoading("上传中(2/3)");
this._conf.name = this.nameEditBox.textLabel.string;
this._conf.textureName = e.url;
this._conf.author = this.authorLabel.string;
l.default.showLoading("上传中(3/3)");
if (yield this._helper.saveAsncFunc()) {
l.default.hideLoading("上传成功");
this.closePanel();
this._helper.refreshMsgName && cc.game.emit(this._helper.refreshMsgName);
this._saveCall && this._saveCall(this._conf);
} else l.default.hideLoading("上传失败");
}
});
}
update() {
if (this._helper && this._helper.isDirty) {
this._helper.isDirty = !1;
this._helper.initInspector(this.inspector);
}
}
};
i([ u(cc.Sprite) ], m.prototype, "sprite", void 0);
i([ u(cc.EditBox) ], m.prototype, "nameEditBox", void 0);
i([ u(cc.Label) ], m.prototype, "authorLabel", void 0);
i([ u(cc.Label) ], m.prototype, "titleLabel", void 0);
i([ u(d.default) ], m.prototype, "inspector", void 0);
i([ u(s.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector": "Inspector",
"./CreateCommonHelperFactory": "CreateCommonHelperFactory"
} ],
CreateDevicePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "166abh8nIpOi495XImYDAdw", "CreateDevicePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), {ccclass: r, property: l} = cc._decorator;
let c = class extends s.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.sprite = null;
this.confirmBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.confirmBtn.node.on(a.default.CLICK, this.onConfitmBtn3, this);
}
setData(e, t) {
this.conf = e;
this.nameEditBox.string = n.I18nMgr.getI18nStringByZh(e.name);
this.setSpriteByPixels(t);
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
onConfitmBtn3() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
this.confirmCall && this.confirmCall(e);
this.closePanel();
}
};
i([ l(cc.EditBox) ], c.prototype, "nameEditBox", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(a.default) ], c.prototype, "confirmBtn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
CreateGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f4662FZ8KVKOpV5+9ba/jPg", "CreateGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/Button"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Top"), c = e("../../../Game/Hortor"), d = e("../../../Game/OperationFlow"), h = e("../../../Game/Player/CreditMng"), p = e("../../../Game/Player/DynamicMng"), u = e("../../../Game/Player/GuideMng"), m = e("../../../Game/Player/Mng"), f = e("../../../Role"), {ccclass: g, property: y} = cc._decorator;
let v = class extends cc.Component {
onLoad() {
this.node.on(s.default.CLICK, this.onClick, this);
}
onClick() {
return n(this, void 0, void 0, function*() {
if (!u.default.Ins.isComplete(u.GuideId.Intro)) {
l.default.showToast("暂未解锁，先去体验别人的游戏吧！");
return;
}
if (p.DynamicMng.Ins.isDisable(p.FunctionEnum.PublishGame, !0)) return;
if (c.Hortor.isVisitor()) {
d.OperationFlow.openVisitorPanel();
return;
}
if (h.CreditMng.Ins.credit <= 2) {
l.default.showToast("近期违规，不能创造或编辑");
return;
}
let e, t = yield m.Mng.Ins.gameMng.loadAll(), o = 1;
do {
e = a.I18nMgr.getI18nStringByZh("我的游戏") + o;
o++;
} while (t.findIndex(t => t.name == e) >= 0);
if (t.length < f.default.Ins.role.myGameMaxCnt) r.default.ins.OpenPanelByName("CreateGamePanel", t => {
t.setData(e, null);
}); else {
let e = f.default.Ins.gameSlotUnlockLvls[f.default.Ins.role.myGameMaxCnt];
l.default.showToast(a.I18nMgr.exceI18nStringByZh("等级${lvl}解锁新栏位", [ {
paramName: "lvl",
param: e
} ]));
}
});
}
};
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GuideMng": "GuideMng",
"../../../Game/Player/Mng": "Mng",
"../../../Role": "Role"
} ],
CreateGamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "37760GD7kVPR5UStMPwFvX4", "CreateGamePanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../CustomUI/Button"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Panel"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Game/Player/Mng"), u = e("../../TGA"), {ccclass: m, property: f} = cc._decorator;
let g = i = class extends c.default {
constructor() {
super(...arguments);
this.nameEditbox = null;
this.createBtn = null;
this.richText = null;
this.parentGame = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.createBtn.node.on("click", this.onCreateBtnTap, this);
let e = this.richText.node.width + 750;
this.richText.node.x = 350;
this.richText.node.runAction(cc.repeatForever(cc.sequence(cc.moveBy(15, -e, 0), cc.moveBy(0, e, 0))));
}
setData(e, t) {
return a(this, void 0, void 0, function*() {
this.nameEditbox.string = e;
this.parentGame = t;
});
}
onCreateBtnTap() {
return a(this, void 0, void 0, function*() {
p.Mng.switchMine();
let e = this.nameEditbox.textLabel.string;
if ("" == e.trim()) {
h.default.showToast("必须填写游戏名！");
return;
}
let t = {
msg: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SensitiveMsg,
params: t
}, s.Game_RSensitiveMsg);
if (o && o.sensitiveWords && o.sensitiveWords.length) {
h.default.showToast("名称违规");
return;
}
h.default.showLoading("正在创建");
let n = yield p.Mng.Ins.gameMng.create(e, this.parentGame);
if (n) {
cc.game.emit(i.CREATE_GAME);
h.default.hideLoading("创建成功");
this.closePanel();
this.call && this.call(n);
d.default.ins.Enter("EditGameScene", e => a(this, void 0, void 0, function*() {
e.setData(n);
}));
u.TGA.track("gameOperate", {
gameId: n.id,
step: "create",
gameVer: n.version,
gameName: n.name
});
cc.game.emit("MyGameChange");
} else {
h.default.hideLoading("创建失败");
this.closePanel();
}
});
}
};
g.CREATE_GAME = "CREATE_GAME";
n([ f(cc.EditBox) ], g.prototype, "nameEditbox", void 0);
n([ f(r.default) ], g.prototype, "createBtn", void 0);
n([ f(cc.RichText) ], g.prototype, "richText", void 0);
g = i = n([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../TGA": "TGA"
} ],
CreateGameRankPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5435c/TFNRF+pyEEfhjK+tk", "CreateGameRankPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Game/Player/Mng"), d = e("../../Scene/EditWorldScene/EditWorldScene"), h = e("../../../scripts/_autogen/data/data"), p = e("../../CustomUI/DropDownBox"), u = e("../../CustomUI/ToggleGroup"), m = e("../../Role"), f = e("./../../GameScript/index"), g = e("../../Game/Player/GameRankMng"), y = e("../../GameData/GameTypeDefine"), v = e("../../../i18n/i18nMgr"), {ccclass: C, property: _} = cc._decorator;
let S = class extends s.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.nameEditBox = null;
this.typeDropDownBox = null;
this.idDropDown = null;
this.cycleDropDownBox = null;
this.sortToggleGroup = null;
this.createBtn = null;
this.timmerLabel = null;
this.createCall = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.createBtn.node.on(a.default.CLICK, this.onCreateBtn, this);
this.typeDropDownBox.node.on(p.default.SELECT_CHANGE, this.onTypeChange, this);
this.idDropDown.node.on(p.default.SELECT_CHANGE, this.onIdChange, this);
this.sortToggleGroup.node.on(u.default.TOGGLE_CHANGE, this.onSortTypeChange, this);
this.cycleDropDownBox.node.on(p.default.SELECT_CHANGE, this.onCycleChange, this);
this.cycleDropDownBox.setDataArr([ {
str: "日榜",
type: h.GameRankCycleType.day
}, {
str: "周榜",
type: h.GameRankCycleType.week
}, {
str: "月榜",
type: h.GameRankCycleType.month
}, {
str: "永久",
type: h.GameRankCycleType.forever
} ]);
this.typeDropDownBox.setDataArr([ {
str: "用时最短榜",
type: g.GameRankType.ShortTime
}, {
str: "活得最久榜",
type: g.GameRankType.LongTime
}, {
str: "道具榜",
type: g.GameRankType.PropRank
}, {
str: "变量榜",
type: g.GameRankType.CustomRank
} ]);
}
setData(e) {
this.data = e;
this.nameEditBox.string = e.name;
this.sortToggleGroup.selectIdx(e.sortType);
let t = this.cycleDropDownBox.getDataArr(), o = t.findIndex(t => t.type == e.cycleType);
o >= 0 && this.cycleDropDownBox.selectByIdx(o);
(o = (t = this.typeDropDownBox.getDataArr()).findIndex(t => t.type == e.rankType)) >= 0 && this.typeDropDownBox.selectByIdx(o);
}
onSortTypeChange(e, t, o) {
this.data && (0 == e ? this.data.sortType = h.GameRankSortType.asc : 1 == e && (this.data.sortType = h.GameRankSortType.desc));
}
onTypeChange(e, t, o) {
return n(this, void 0, void 0, function*() {
this.idDropDown.node.active = !1;
this.sortToggleGroup.node.active = !1;
this.timmerLabel.node.active = !1;
if (this.data && t) {
this.data.rankType = t.type;
switch (t.type) {
case 0:
this.data.sortType = h.GameRankSortType.asc;
this.timmerLabel.node.active = !0;
break;

case 1:
this.data.sortType = h.GameRankSortType.desc;
this.timmerLabel.node.active = !0;
break;

case 2:
{
this.idDropDown.node.active = !0;
let e = [], t = yield c.Mng.Ins.propMng.loadAll(!0);
for (let o = 0; o < t.length; o++) {
let i = t[o];
e.unshift({
str: i.name,
id: i.id
});
}
let o = e.findIndex(e => e.id == this.data.propId);
o < 0 && (o = 0);
this.idDropDown.setDataArr(e, o);
this.data.sortType = h.GameRankSortType.desc;
break;
}

case 3:
{
this.idDropDown.node.active = !0;
this.sortToggleGroup.node.active = !0;
let e = [], t = yield c.Mng.Ins.variableMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.valueType == f.GSValueType.FLOAT && e.push({
str: i.name,
id: i.id
});
}
let o = e.findIndex(e => e.id == this.data.variableId);
o < 0 && (o = 0);
this.idDropDown.setDataArr(e, o);
this.sortToggleGroup.selectIdx(0);
break;
}
}
}
});
}
onIdChange(e, t) {
if (this.data && t) {
this.data.rankType == g.GameRankType.PropRank && (this.data.propId = t.id);
this.data.rankType == g.GameRankType.CustomRank && (this.data.variableId = t.id);
}
}
onCycleChange(e, t, o) {
this.data && (this.data.cycleType = t.type);
}
toCreateStyle() {
return n(this, void 0, void 0, function*() {
let e, t = {
type: y.CommonDataType.Rank,
id: null,
roleId: m.default.Ins.role.id,
name: "",
rankType: g.GameRankType.ShortTime,
sortType: h.GameRankSortType.asc,
cycleType: h.GameRankCycleType.day,
propId: "1",
belongGameId: "",
textureName: "",
textureName2: ""
}, o = r.default.ins.findScene(d.default).gameData, i = yield c.Mng.Ins.gameRankMng.loadMany(o.gameRankIds), n = 1;
do {
e = v.I18nMgr.getI18nStringByZh("排行榜") + n;
n++;
} while (i.findIndex(t => t.name == e) >= 0);
t.name = e;
this.titleLabel.string = "创建排行榜";
this.setData(t);
});
}
onCreateBtn() {
return n(this, void 0, void 0, function*() {
let e = this.nameEditBox.textLabel.string;
if (e.length > 8) {
l.default.showToast("名字最多8个字");
return;
}
this.closePanel();
let t = r.default.ins.findScene(d.default).gameData;
this.data.name = e;
if (yield c.Mng.Ins.gameRankMng.create(this.data, t)) {
this.createCall && this.createCall(this.data);
l.default.showToast("创建成功");
} else l.default.showToast("创建失败");
});
}
};
i([ _(cc.Label) ], S.prototype, "titleLabel", void 0);
i([ _(cc.EditBox) ], S.prototype, "nameEditBox", void 0);
i([ _(p.default) ], S.prototype, "typeDropDownBox", void 0);
i([ _(p.default) ], S.prototype, "idDropDown", void 0);
i([ _(p.default) ], S.prototype, "cycleDropDownBox", void 0);
i([ _(u.default) ], S.prototype, "sortToggleGroup", void 0);
i([ _(a.default) ], S.prototype, "createBtn", void 0);
i([ _(cc.Label) ], S.prototype, "timmerLabel", void 0);
S = i([ C ], S);
o.default = S;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/GameRankMng": "GameRankMng",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Role": "Role",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"./../../GameScript/index": "index"
} ],
CreateGameShopCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "51a3bx3KdhIZ6EyNzW86zkV", "CreateGameShopCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Game/Player/Mng"), h = e("../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.normalNode = null;
this.createNode = null;
this.deleteBtn = null;
this.propBtn = null;
this.advertEditBox = null;
this.priceBtn = null;
this.costTypeDropDownBox = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.propBtn.node.on(a.default.CLICK, this.onPropBtn, this);
this.priceBtn.node.on(a.default.CLICK, this.onPriceBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
this.costTypeDropDownBox.node.on(s.default.SELECT_CHANGE, this.onCostTypeChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.normalNode.active = !1;
this.createNode.active = !1;
if (e) {
this.normalNode.active = !0;
this.data = e;
this.advertEditBox.string = e.advert;
this.priceBtn.label.string = e.price + "";
this.setProp(e.propId);
this.setCostType(e.costType);
} else this.createNode.active = !0;
});
}
setProp(e) {
return n(this, void 0, void 0, function*() {
let t = yield d.Mng.Ins.propMng.loadOne(e);
d.Mng.Ins.spriteMng.setPropSprite(this.propBtn.icon, t.textureName, 100);
});
}
setCostType(e) {
return n(this, void 0, void 0, function*() {
let t = [ {
img: yield d.Mng.Ins.gameShopMng.getCostIconUrl(h.GameGoodsCostType.Coin),
type: h.GameGoodsCostType.Coin
}, {
img: yield d.Mng.Ins.gameShopMng.getCostIconUrl(h.GameGoodsCostType.GCoin),
type: h.GameGoodsCostType.GCoin
} ];
this.costTypeDropDownBox.setDataArr(t);
let o = t.findIndex(t => t.type == e);
o >= 0 && this.costTypeDropDownBox.selectByIdx(o);
});
}
onAdvertEditBoxEnd() {
this.data.advert = this.advertEditBox.textLabel.string;
}
onPriceBtn() {
l.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("价格", this.data.price, e => n(this, void 0, void 0, function*() {
e = c.Util.clamp(e, 1, 1e3);
e = Math.round(e);
this.data.price = e;
this.priceBtn.label.string = e;
}));
});
}
onPropBtn() {
l.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this.data.propId);
e.selectCall = e => {
if (this.data.propId != e.id) {
this.advertEditBox.string = "";
this.data.advert = "";
let t = e.defaultPrice || 10;
this.priceBtn.label.string = t + "";
this.setCostType(h.GameGoodsCostType.Coin);
}
this.data.propId = e.id;
this.setProp(e.id);
};
});
}
onDeleteBtn() {
this.node.dispatchEvent(c.Util.customEvent("CreateGameShopCell.onDeleteBtn", !0, this.data));
}
onCostTypeChange(e, t, o) {
this.data.costType = t.type;
}
};
i([ u(cc.Node) ], m.prototype, "normalNode", void 0);
i([ u(cc.Node) ], m.prototype, "createNode", void 0);
i([ u(a.default) ], m.prototype, "deleteBtn", void 0);
i([ u(a.default) ], m.prototype, "propBtn", void 0);
i([ u(cc.EditBox) ], m.prototype, "advertEditBox", void 0);
i([ u(a.default) ], m.prototype, "priceBtn", void 0);
i([ u(s.default) ], m.prototype, "costTypeDropDownBox", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
CreateGameShopPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "15a73Th/4lN0Lul96hcapwx", "CreateGameShopPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/UIColor"), p = e("../../Frame/Util"), u = e("../../Game/Player/Mng"), m = e("../../GameData/GameTypeDefine"), f = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: g, property: y} = cc._decorator;
let v = class extends l.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.bgBtn = null;
this.actorBtn = null;
this.nameEditBox = null;
this.welcomeEditBox = null;
this.scrollList = null;
this.createBtn = null;
this.deleteBtn = null;
this.saveBtn = null;
this.createCall = null;
this.saveCall = null;
this.data = null;
this.style = "create";
}
onLoad() {
super.onLoad();
this.bgBtn.node.on(s.default.CLICK, this.onBgBtn, this);
this.actorBtn.node.on(s.default.CLICK, this.onActorBtn, this);
this.createBtn.node.on(s.default.CLICK, this.onCreateBtn, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtn, this);
this.saveBtn.node.on(s.default.CLICK, this.onSaveBtn, this);
this.scrollList.node.on(r.default.CLICK_ITEM, this.onClickItem, this);
this.node.on("CreateGameShopCell.onDeleteBtn", this.onCreateGameShopCellDeleteBtn, this);
}
toCreateStyle() {
return n(this, void 0, void 0, function*() {
let e, t = {
type: m.CommonDataType.Shop,
id: null,
name: "",
actorId: "2",
welcome: "欢迎光临",
goodses: [],
textureName: "Shop/shop",
belongGameId: ""
}, o = c.default.ins.findScene(f.default).gameData, i = yield u.Mng.Ins.gameShopMng.loadMany(o.gameShopIds), n = 1;
do {
e = "Shop" + n;
n++;
} while (i.findIndex(t => t.name == e) >= 0);
t.name = e;
this.style = "edit";
this.titleLabel.string = "Create Shop";
this.createBtn.node.active = !0;
this.deleteBtn.node.active = !1;
this.saveBtn.node.active = !1;
this.setData(t);
});
}
toEditStyle(e) {
e = p.Util.deepCopy(e);
this.style = "create";
this.titleLabel.string = "Edit Shop";
this.createBtn.node.active = !1;
this.deleteBtn.node.active = !0;
this.saveBtn.node.active = !0;
this.setData(e);
}
setData(e) {
this.data = e;
this.nameEditBox.string = e.name;
this.welcomeEditBox.string = e.welcome;
u.Mng.Ins.spriteMng.setShopSprite(this.bgBtn.icon, e.textureName, 196);
this.setActor(e.actorId);
this.refreshList();
}
refreshList() {
let e = this.data.goodses.concat();
e.length < 6 && e.push(null);
this.scrollList.setDataArr(e);
}
setActor(e) {
return n(this, void 0, void 0, function*() {
let t = yield u.Mng.Ins.actorMng.loadOne(e);
u.Mng.Ins.spriteMng.setActorSprite(this.actorBtn.icon, t.textureName, 50);
this.actorBtn.label.string = t.name;
});
}
onActorBtn() {
c.default.ins.OpenPanelByName("SelectActorPanel", e => {
e.setData(this.data.actorId);
e.selectCall = e => {
this.data.actorId = e.id;
this.setActor(e.id);
};
});
}
onBgBtn() {
d.default.showLoading("加载中");
c.default.ins.Enter("PaintScene", e => n(this, void 0, void 0, function*() {
e.toPaintShop();
if (p.Util.isCdnPng(this.data.textureName)) {
let t = yield p.Util.downloadPngPixel(this.data.textureName);
e.graphics.drawPixels(t);
}
d.default.hideLoading();
e.setImportOthersImg(this.data.importOthersImg);
e.completeCall = (e, t, o, i) => n(this, void 0, void 0, function*() {
let o = yield p.Util.uploadPng(e, a.ImageFileType.actor, i);
if (o.err) d.default.showToast("图片违规：" + o.err); else {
this.data.textureName = o.url;
this.data.importOthersImg = t;
u.Mng.Ins.spriteMng.setSprite(this.bgBtn.icon, this.data.textureName, 150);
c.default.ins.Back();
yield u.Mng.Ins.gameShopMng.save(this.data);
this.saveCall && this.saveCall(this.data);
d.default.showToast("重绘已保存");
}
});
}));
}
onClickItem(e, t) {
if (null == t) {
let e = {
propId: "2",
price: 10,
costType: m.GameGoodsCostType.Coin,
advert: "草莓味回血药剂！"
};
this.data.goodses.push(e);
this.refreshList();
}
}
onCreateGameShopCellDeleteBtn(e) {
let t = e.detail, o = this.data.goodses.indexOf(t);
o >= 0 && this.data.goodses.splice(o, 1);
this.refreshList();
}
onCreateBtn() {
return n(this, void 0, void 0, function*() {
this.closePanel();
let e = c.default.ins.findScene(f.default).gameData;
if (yield u.Mng.Ins.gameShopMng.create(this.data, e)) {
this.createCall && this.createCall(this.data);
d.default.showToast("创建成功");
} else d.default.showToast("创建失败");
});
}
onSaveBtn() {
return n(this, void 0, void 0, function*() {
this.closePanel();
this.data.name = this.nameEditBox.textLabel.string;
this.data.welcome = this.welcomeEditBox.textLabel.string;
yield u.Mng.Ins.gameShopMng.save(this.data);
this.saveCall && this.saveCall(this.data);
d.default.showToast("已保存");
});
}
onDeleteBtn() {
return n(this, void 0, void 0, function*() {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "Delete this shop？";
e.setLeftBtn({
text: "Delete",
color: h.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
let e = c.default.ins.findScene(f.default).gameData;
yield u.Mng.Ins.gameShopMng.delete(this.data, e);
this.closePanel();
cc.game.emit("refreshGameShopList");
d.default.showToast("Deleted");
})
});
e.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
});
});
}
};
i([ y(cc.Label) ], v.prototype, "titleLabel", void 0);
i([ y(s.default) ], v.prototype, "bgBtn", void 0);
i([ y(s.default) ], v.prototype, "actorBtn", void 0);
i([ y(cc.EditBox) ], v.prototype, "nameEditBox", void 0);
i([ y(cc.EditBox) ], v.prototype, "welcomeEditBox", void 0);
i([ y(r.default) ], v.prototype, "scrollList", void 0);
i([ y(s.default) ], v.prototype, "createBtn", void 0);
i([ y(s.default) ], v.prototype, "deleteBtn", void 0);
i([ y(s.default) ], v.prototype, "saveBtn", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
CreateGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cf4e0eIcmJOz6wlio2QzYDB", "CreateGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../../scripts/_autogen/data/data"), a = e("../../../CustomUI/Button"), s = e("../../../Frame/SceneManager"), r = e("../../../Frame/Top"), l = e("../../../Game/Hortor"), c = e("../../../Game/OperationFlow"), d = e("../../../Game/Player/CreditMng"), h = e("../../../Game/Player/DynamicMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.data = null;
}
onLoad() {
this.node.on(a.default.CLICK, this.onClick, this);
}
onClick() {
if (h.DynamicMng.Ins.isDisable(h.FunctionEnum.PublishGoods, !0)) return;
if (l.Hortor.isVisitor()) {
c.OperationFlow.openVisitorPanel();
return;
}
if (d.CreditMng.Ins.credit <= 2) {
r.default.showToast("近期违规，不能上传作品");
return;
}
let e = {
goodsId: "",
name: "",
iconTextureName: "",
advert: "",
price: 0,
goodsType: n.GoodsType.all,
tileConfIds: [],
actorConfIds: [],
propConfIds: [],
deviceConfIds: [],
weaponConfIds: [],
bulletConfIds: [],
sensitiveMsg: "",
reviewStr: "",
reviewImageMap: null
};
if (this.data) {
e.goodsId = this.data.id;
e.iconTextureName = this.data.iconTextureName;
e.advert = this.data.advert;
e.name = this.data.name;
e.price = this.data.price;
e.goodsType = this.data.goodsType;
this.data.goodsContent.tileConfs.forEach(t => {
e.tileConfIds.push(t.id);
});
this.data.goodsContent.actorConfs.forEach(t => {
e.actorConfIds.push(t.id);
});
this.data.goodsContent.deviceConfs.forEach(t => {
e.deviceConfIds.push(t.id);
});
this.data.goodsContent.propConfs.forEach(t => {
e.propConfIds.push(t.id);
});
this.data.goodsContent.weaponConfs.forEach(t => {
e.weaponConfIds.push(t.id);
});
this.data.goodsContent.bulletConfs.forEach(t => {
e.bulletConfIds.push(t.id);
});
}
s.default.ins.OpenPanelByName("UploadGoodsPanel", t => {
t.setData(e, this.data ? "modify" : "upload");
t.uploadCall = () => {
cc.game.emit("MyGoodsChange");
};
});
}
};
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng"
} ],
CreatePropPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d63f8IVy1FL5p4Uj0ZQMYe3", "CreatePropPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.introEditBox = null;
this.sprite = null;
this.confirmBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.confirmBtn.node.on(a.default.CLICK, this.onConfitmBtn4, this);
}
setData(e, t) {
this.conf = e;
this.nameEditBox.string = n.I18nMgr.getI18nStringByZh(e.name);
this.introEditBox.string = e.intro;
this.setSpriteByPixels(t);
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
onPaintBtnClick() {
r.default.ins.Enter("PaintScene");
}
onConfitmBtn4() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
e.intro = this.introEditBox.textLabel.string;
this.confirmCall && this.confirmCall(e);
this.closePanel();
}
};
i([ c(cc.EditBox) ], d.prototype, "nameEditBox", void 0);
i([ c(cc.EditBox) ], d.prototype, "introEditBox", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ c(a.default) ], d.prototype, "confirmBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager"
} ],
CreateSelectPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e9995J0LrFGB6mX4vJgDwYf", "CreateSelectPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Game/Hortor"), d = e("../../Game/OperationFlow"), h = e("../../Game/Player/CreditMng"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/GuideMng"), m = e("../../Game/Player/Mng"), f = e("../../Role"), g = e("../../TGA"), y = e("../../../i18n/i18nMgr"), {ccclass: v, property: C} = cc._decorator;
let _ = class extends s.default {
constructor() {
super(...arguments);
this.closeBg = null;
this.gameBtn = null;
this.assetBtn = null;
this.discussBtn = null;
}
onLoad() {
super.onLoad();
this.closeBg.on(a.default.CLICK, this.closePanel, this);
this.gameBtn.node.on(a.default.CLICK, this.onTapGame, this);
this.assetBtn.node.on(a.default.CLICK, this.onTapAsset, this);
}
onTapGame() {
return n(this, void 0, void 0, function*() {
g.TGA.track("click", {
btn: "CreateBtn"
});
if (!u.default.Ins.isComplete(u.GuideId.Intro)) {
l.default.showToast("暂未解锁，先去体验别人的游戏吧！");
return;
}
if (p.DynamicMng.Ins.isDisable(p.FunctionEnum.PublishGame, !0)) return;
if (c.Hortor.isVisitor()) {
d.OperationFlow.openVisitorPanel();
return;
}
if (h.CreditMng.Ins.credit <= 2) {
l.default.showToast("近期违规，不能创造或编辑");
return;
}
let e, t = yield m.Mng.Ins.gameMng.loadAll(), o = 1;
do {
e = y.I18nMgr.getI18nStringByZh("我的游戏") + o;
o++;
} while (t.findIndex(t => t.name == e) >= 0);
if (t.length < f.default.Ins.role.myGameMaxCnt) r.default.ins.OpenPanelByName("CreateGamePanel", t => {
t.setData(e, null);
}); else {
let e = f.default.Ins.gameSlotUnlockLvls[f.default.Ins.role.myGameMaxCnt];
l.default.showToast(y.I18nMgr.exceI18nStringByZh("等级${lvl}解锁新栏位", [ {
paramName: "lvl",
param: e
} ]));
}
});
}
onTapAsset() {
c.Hortor.isVisitor() ? d.OperationFlow.openVisitorPanel() : h.CreditMng.Ins.credit <= 2 ? l.default.showToast("近期违规，不能创造或编辑") : r.default.ins.OpenPanelByName("AssetCategoryPanel", () => {});
}
};
i([ C(cc.Node) ], _.prototype, "closeBg", void 0);
i([ C(a.default) ], _.prototype, "gameBtn", void 0);
i([ C(a.default) ], _.prototype, "assetBtn", void 0);
i([ C(a.default) ], _.prototype, "discussBtn", void 0);
_ = i([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"../../Role": "Role",
"../../TGA": "TGA"
} ],
CreateTalkCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "27783r6SidA86FNCzXel10G", "CreateTalkCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../Frame/SceneManager"), s = e("../../../Frame/Top"), r = e("../../../Game/Hortor"), l = e("../../../Game/OperationFlow"), c = e("../../../Game/Player/DynamicMng"), d = e("../../../Game/Player/TalkMng"), h = e("../../../Role"), p = e("../../../TGA"), {ccclass: u, property: m} = cc._decorator;
let f = class extends cc.Component {
constructor() {
super(...arguments);
this.createBtn = null;
this.draftBtn = null;
}
onLoad() {
this.createBtn.node.on(n.default.CLICK, this.onCreateBtn, this);
this.draftBtn.node.on(n.default.CLICK, this.onDraftBtn, this);
}
onCreateBtn() {
if (!c.DynamicMng.Ins.isDisable(c.FunctionEnum.PublishTalk, !0)) if (r.Hortor.isVisitor()) l.OperationFlow.openVisitorPanel(); else if (h.default.Ins.role.level < d.default.UnlockPublishLvl) s.default.showToast("等级5解锁"); else {
p.TGA.track("Talk", {
step: "clickCreateBtn"
});
a.default.ins.Enter("EditTalkScene", e => {
e.toCreateStyle();
}, a.ShiftAnima.moveLeftShift);
}
}
onDraftBtn() {
c.DynamicMng.Ins.isDisable(c.FunctionEnum.PublishTalk, !0) || (r.Hortor.isVisitor() ? l.OperationFlow.openVisitorPanel() : h.default.Ins.role.level < d.default.UnlockPublishLvl ? s.default.showToast("等级5解锁") : a.default.ins.OpenPanelByName("TalkDraftPanel"));
}
};
i([ m(n.default) ], f.prototype, "createBtn", void 0);
i([ m(n.default) ], f.prototype, "draftBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../Role": "Role",
"../../../TGA": "TGA"
} ],
CreateTileHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "283deeici9FgbmtSUgcf4li", "CreateTileHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TileOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Game/Player/Mng"), s = e("../../Game/World/Tile"), r = e("../../GameData/GameTypeDefine"), l = e("../../Role"), c = e("./CreateCommonHelper");
o.TileOptionHelper = class extends c.CreateCommonHelper {
constructor() {
super(...arguments);
this.tileConf = null;
this.imageFileType = n.ImageFileType.tile;
this.displayName = "地块";
this.refreshMsgName = "refreshTileList";
}
buildConf() {
return i(this, void 0, void 0, function*() {
this.tileConf = {
type: r.CommonDataType.Tile,
id: "",
tileType: r.TileType.All,
name: "自定义地块",
author: l.default.Ins.userName,
textureName: "",
tilePhyType: r.TilePhysicType.Block,
shape: r.TileShape.Normal
};
return this.tileConf;
});
}
setConf(e) {
this.tileConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
return yield a.Mng.Ins.tileMng.create(this.tileConf);
});
}
initInspector(e) {
e.reset();
s.default.displayInspector(e, this.tileConf, () => {
this.initInspector(e);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Role": "Role",
"./CreateCommonHelper": "CreateCommonHelper"
} ],
CreateTilePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "45a8adrwXhC26WFLUNRs9n9", "CreateTilePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../CustomUI/ScrollList"), l = e("../../CustomUI/Toggle"), c = e("../../Frame/Panel"), d = e("../../Frame/Util"), h = e("../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
let m = class extends c.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.sprite = null;
this.typeDropDownBox = null;
this.blockToggle = null;
this.canDrstroyToggle = null;
this.hpEditBox = null;
this.shapeList = null;
this.okBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtnClick, this);
this.canDrstroyToggle.node.on(l.default.STATE_CHANGE, this.onCanDestroyToggleChange, this);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.conf = d.Util.deepCopy(e);
this.nameEditBox.string = e.name;
this.blockToggle.isChecked = e.block;
this.canDrstroyToggle.isChecked = e.canDestroy;
this.hpEditBox.node.active = e.canDestroy;
this.hpEditBox.string = e.hp + "";
this.setSpriteByPixels(t);
this.typeDropDownBox.setDataArr([ {
str: "侧视地块",
type: h.TileType.Jump
}, {
str: "俯视地块",
type: h.TileType.RPG
} ]);
this.typeDropDownBox.selectByIdx(e.tileType == h.TileType.Jump ? 0 : 1);
let o = [ h.TileShape.Normal, h.TileShape.Half_Btm, h.TileShape.Half_Top, h.TileShape.Slope_45, h.TileShape.Slope_45_Flip, h.TileShape.Slope_135, h.TileShape.Slope_135_Flip ], i = o.findIndex(t => t == e.shape);
i <= 0 && (i = 0);
this.shapeList.setDataArr(o);
this.shapeList.selectByIdx(i);
});
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
if (this.sprite) {
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
}
onCanDestroyToggleChange(e) {
this.hpEditBox.node.active = e;
}
onOkBtnClick() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
e.block = this.blockToggle.isChecked;
e.canDestroy = this.canDrstroyToggle.isChecked;
e.hp = Number.parseInt(this.hpEditBox.textLabel.string);
e.type = h.CommonDataType.Tile;
e.tileType = this.typeDropDownBox.getCurData().type;
e.shape = this.shapeList.getCurData();
this.closePanel();
this.confirmCall && this.confirmCall(e);
}
};
m.TILE_CONF_CHANGE = "TILE_CONF_CHANGE";
i([ u(cc.EditBox) ], m.prototype, "nameEditBox", void 0);
i([ u(cc.Sprite) ], m.prototype, "sprite", void 0);
i([ u(s.default) ], m.prototype, "typeDropDownBox", void 0);
i([ u(l.default) ], m.prototype, "blockToggle", void 0);
i([ u(l.default) ], m.prototype, "canDrstroyToggle", void 0);
i([ u(cc.EditBox) ], m.prototype, "hpEditBox", void 0);
i([ u(r.default) ], m.prototype, "shapeList", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
CreateVariablePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a919caNByJMVqS76qt7cv0S", "CreateVariablePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/DropDownBox"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/Top"), c = e("../../GameScript/index"), {ccclass: d, property: h} = cc._decorator;
let p = class extends r.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.dropDownBox = null;
this.valueEditBox = null;
this.valueToggle = null;
this.okBtn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onClick, this);
this.valueToggle.node.on(s.default.STATE_CHANGE, this.onToggleChange, this);
this.dropDownBox.node.on(a.default.SELECT_CHANGE, this.onTypeChange, this);
this.dropDownBox.setDataArr([ {
str: "数字",
type: c.GSValueType.FLOAT
}, {
str: "开关",
type: c.GSValueType.BOOL
} ]);
this.dropDownBox.selectByIdx(0);
this.valueEditBox.string = "0";
let e = c.GSVariableMng.instance.getDefaultNameNum();
this.nameEditBox.textLabel.string = "变量" + e;
}
onTypeChange(e, t, o) {
this.valueToggle.node.active = t.type == c.GSValueType.BOOL;
this.valueEditBox.node.active = t.type == c.GSValueType.FLOAT;
}
onToggleChange(e) {
this.valueToggle.label.string = e ? "开" : "关";
}
onClick() {
let e = this.dropDownBox.getCurData().type, t = {
id: "",
idx: 0,
name: this.nameEditBox.textLabel.string,
desc: "",
valueType: e,
defaultValue: "0"
};
t.name.length > 20 && (t.name = t.name.substr(0, 20));
if (c.GSVariableMng.instance.hasName(t.name)) l.default.showToast("变量名已经存在"); else {
this.closePanel();
if (e == c.GSValueType.FLOAT) {
let e = Number.parseFloat(this.valueEditBox.string);
Number.isNaN(e) && (e = 0);
t.defaultValue = e + "";
}
e == c.GSValueType.BOOL && (t.defaultValue = this.valueToggle.isChecked ? "1" : "0");
this.call && this.call(t);
}
}
};
i([ h(cc.EditBox) ], p.prototype, "nameEditBox", void 0);
i([ h(a.default) ], p.prototype, "dropDownBox", void 0);
i([ h(cc.EditBox) ], p.prototype, "valueEditBox", void 0);
i([ h(s.default) ], p.prototype, "valueToggle", void 0);
i([ h(n.default) ], p.prototype, "okBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
CreateWeaponHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6bf18DNQstC/JNpbcDEjhwM", "CreateWeaponHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CreateWeaponHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/SceneManager"), s = e("../../Frame/Util"), r = e("../../Game/Player/Mng"), l = e("../../Game/World/Tile"), c = e("../../GameData/GameTypeDefine"), d = e("../../Role"), h = e("./CreateCommonHelper");
o.CreateWeaponHelper = class extends h.CreateCommonHelper {
constructor() {
super(...arguments);
this.weaponType = c.WeaponType.Gun;
this.weaponConf = null;
this.bulletConf = null;
this.imageFileType = n.ImageFileType.weapon;
this.displayName = "武器";
this.refreshMsgName = "refreshWeaponList";
}
buildConf() {
return i(this, void 0, void 0, function*() {
this.weaponType = c.WeaponType.Gun;
this.params && this.params.length > 0 && (this.weaponType = this.params[0]);
let e, t = yield r.Mng.Ins.weaponMng.loadAll(), o = 1;
do {
e = "武器" + o;
o++;
} while (t.find(t => t.name == e));
this.weaponType == c.WeaponType.Gun ? this.weaponConf = {
author: d.default.Ins.userName,
type: c.CommonDataType.Weapon,
id: "",
name: e,
textureName: "Weapon/BuildIn1/gun",
ROF: 5,
weaponType: c.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "1",
bulletSpeed: 5 * l.default.SIZE,
bulletRange: 5 * l.default.SIZE
}
} : this.weaponType == c.WeaponType.Melee ? this.weaponConf = {
author: d.default.Ins.userName,
type: c.CommonDataType.Weapon,
id: "",
name: e,
textureName: "Weapon/BuildIn2/melee1",
ROF: 2,
weaponType: c.WeaponType.Melee,
melee: {
damage: 1,
scale: 1.5,
actType: c.MeleeActType.Swing
}
} : this.weaponType == c.WeaponType.Cast && (this.weaponConf = {
author: d.default.Ins.userName,
type: c.CommonDataType.Weapon,
id: "",
name: e,
textureName: "Weapon/BuildIn3/cast1",
ROF: 1,
weaponType: c.WeaponType.Cast,
cast: {
fireShake: !1,
bulletId: "1",
outSpeed: 18 * l.default.SIZE,
flyDistance: 16 * l.default.SIZE,
airResistanceCof: .1,
defaultAngle: 70,
dragInverse: !1
}
});
return this.weaponConf;
});
}
setConf(e) {
this.weaponConf = e;
this.weaponType = e.weaponType;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
if (this.weaponConf) return yield r.Mng.Ins.weaponMng.create(this.weaponConf);
});
}
paintCall(e) {
e.toPaintWeapon(this.weaponType);
}
initInspector(e) {
e.reset();
this.weaponConf.weaponType == c.WeaponType.Gun ? this.drawGunInspector(e) : this.weaponConf.weaponType == c.WeaponType.Melee ? this.drawMeleeInspector(e) : this.weaponConf.weaponType == c.WeaponType.Cast && this.drawCastInspector(e);
}
loadBullet(e) {
return i(this, void 0, void 0, function*() {
if (e) {
let t = yield r.Mng.Ins.bulletMng.loadOne(e);
if (t != this.bulletConf) {
this.bulletConf = t;
this.isDirty = !0;
}
}
});
}
drawGunInspector(e) {
this.loadBullet(this.weaponConf.gun.bulletId);
if (this.bulletConf) {
null == this.weaponConf.gun.bulletRange && (this.weaponConf.gun.bulletRange = this.bulletConf.range);
null == this.weaponConf.gun.bulletSpeed && (this.weaponConf.gun.bulletSpeed = this.bulletConf.speed);
}
let t = e.addButton("子弹", this.bulletConf ? this.bulletConf.name : this.weaponConf.gun.bulletId, () => {
a.default.ins.OpenPanelByName("SelectBulletPanel", e => {
e.setData(this.weaponConf.gun.bulletId);
e.selectCall = e => {
this.bulletConf = e;
this.weaponConf.gun.bulletId = e.id;
t.button.label.string = e.name;
};
});
});
e.addNumberEditBox("子弹速度(格/秒)", this.weaponConf.gun.bulletSpeed / l.default.SIZE, 0, 64, e => {
let t = Number.parseFloat(e) || 0;
t = s.Util.clamp(t, 0, 64);
this.weaponConf.gun.bulletSpeed = t * l.default.SIZE;
});
e.addNumberEditBox("射速(发/秒)", this.weaponConf.ROF, 0, 2, e => {
this.weaponConf.ROF = e;
});
e.addNumberEditBox("射程(格)", this.weaponConf.gun.bulletRange / l.default.SIZE, 0, 16, e => {
this.weaponConf.gun.bulletRange = e * l.default.SIZE;
});
e.addNumberEditBox("散射(度)", this.weaponConf.gun.scatter, 0, 360, e => {
this.weaponConf.gun.scatter = e;
});
this.weaponConf.gun.onFire = this.weaponConf.gun.onFire || [];
e.addTrigger("发射时", this.weaponConf.gun.onFire, !1);
}
drawMeleeInspector(e) {
let t = [ {
str: "突刺",
type: c.MeleeActType.Jab
}, {
str: "挥舞",
type: c.MeleeActType.Swing
} ], o = t.findIndex(e => e.type == this.weaponConf.melee.actType);
-1 == o && (o = 0);
e.addDropDownBox("动作", t, o, (e, t) => i(this, void 0, void 0, function*() {
this.weaponConf.melee.actType = t.type;
}));
e.addNumberEditBox("伤害值", this.weaponConf.melee.damage, 0, 999999, e => {
this.weaponConf.melee.damage = e;
});
e.addNumberEditBox("缩放", this.weaponConf.melee.scale, 0, 10, e => {
this.weaponConf.melee.scale = e;
});
e.addNumberEditBox("攻速(次/秒)", this.weaponConf.ROF, 0, 50, e => {
this.weaponConf.ROF = e;
});
this.weaponConf.melee.onAttack = this.weaponConf.melee.onAttack || [];
e.addTrigger("攻击时", this.weaponConf.melee.onAttack, !1);
}
drawCastInspector(e) {
this.loadBullet(this.weaponConf.cast.bulletId);
if (this.bulletConf) {
null == this.weaponConf.cast.flyDistance && (this.weaponConf.cast.flyDistance = this.bulletConf.range);
null == this.weaponConf.cast.outSpeed && (this.weaponConf.cast.outSpeed = this.bulletConf.speed);
}
let t = e.addButton("子弹", this.bulletConf ? this.bulletConf.name : this.weaponConf.cast.bulletId, () => {
a.default.ins.OpenPanelByName("SelectBulletPanel", e => {
e.setData(this.weaponConf.cast.bulletId);
e.selectCall = e => {
this.bulletConf = e;
this.weaponConf.cast.bulletId = e.id;
t.button.label.string = e.name;
};
});
});
e.addNumberEditBox("子弹速度(格/秒)", this.weaponConf.cast.outSpeed / l.default.SIZE, 0, 64, e => {
this.weaponConf.cast.outSpeed = e * l.default.SIZE;
});
e.addNumberEditBox("射速(发/秒)", this.weaponConf.ROF, 0, 50, e => {
this.weaponConf.ROF = e;
});
e.addNumberEditBox("射程(格)", this.weaponConf.cast.flyDistance / l.default.SIZE, 0, 32, e => {
this.weaponConf.cast.flyDistance = e * l.default.SIZE;
});
e.addNumberEditBox("空气阻力系数", this.weaponConf.cast.airResistanceCof, 0, 10, e => {
this.weaponConf.cast.airResistanceCof = e;
});
e.addNumberEditBox("默认角度", this.weaponConf.cast.defaultAngle, 0, 360, e => {
this.weaponConf.cast.defaultAngle = e;
});
e.addToggle("操作反转", this.weaponConf.cast.dragInverse, e => {
this.weaponConf.cast.dragInverse = e;
});
this.weaponConf.cast.onFire = this.weaponConf.cast.onFire || [];
e.addTrigger("发射时", this.weaponConf.cast.onFire, !1);
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Role": "Role",
"./CreateCommonHelper": "CreateCommonHelper"
} ],
CreateWeaponPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "73761g7QI5Kgqolj16Lb8vD", "CreateWeaponPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.sprite = null;
this.confirmBtn = null;
this.conf = null;
this.confirmCall = null;
}
onLoad() {
super.onLoad();
this.confirmBtn.node.on(n.default.CLICK, this.onConfitmBtn5, this);
}
setData(e, t) {
this.conf = e;
this.nameEditBox.string = e.name;
this.setSpriteByPixels(t);
}
setSpriteByPixels(e) {
let t = new cc.RenderTexture();
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
t.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, 256, 256);
this.sprite.spriteFrame = new cc.SpriteFrame(t);
this.sprite.node.width = this.sprite.node.height = 192;
}
onPaintBtnClick() {
s.default.ins.Enter("PaintScene");
}
onConfitmBtn5() {
let e = this.conf;
e.name = this.nameEditBox.textLabel.string;
this.confirmCall && this.confirmCall(e);
this.closePanel();
}
};
i([ l(cc.EditBox) ], c.prototype, "nameEditBox", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(n.default) ], c.prototype, "confirmBtn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager"
} ],
CreateWorldInfoPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f8b8dfTJmZF45KKyNWmuAoZ", "CreateWorldInfoPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../i18n/i18nMgr"), r = e("../../../scripts/_autogen/cmd/cmd"), l = e("../../CustomUI/Button"), c = e("../../CustomUI/ColorBox"), d = e("../../Frame/Config"), h = e("../../Frame/NetworkMgr"), p = e("../../Frame/Panel"), u = e("../../Frame/SceneManager"), m = e("../../Frame/Top"), f = e("../../Frame/Util"), g = e("../../Game/Player/Mng"), y = e("../../GameData/GameTypeDefine"), {ccclass: v, property: C} = cc._decorator;
let _ = i = class extends p.default {
constructor() {
super(...arguments);
this.nameEditbox = null;
this.colBtn = null;
this.rowBtn = null;
this.createBtn = null;
this.typeLabel = null;
this.colorBox = null;
this.gameData = null;
this.type = 0;
this.onCreate = null;
}
onLoad() {
super.onLoad();
this.createBtn.node.on("click", this.onCreateBtnTap, this);
this.colBtn.node.on(l.default.CLICK, this.onColBtnTap, this);
this.rowBtn.node.on(l.default.CLICK, this.onRowBtnTap, this);
}
openAnim(e) {
cc.game.emit(i.CreateWorldInfoPanel_Open, this);
super.openAnim(e);
}
onOpend() {
cc.game.emit(i.CreateWorldInfoPanel_Opend, this);
}
setData(e, t) {
return a(this, void 0, void 0, function*() {
this.type = e;
this.typeLabel.string = s.I18nMgr.exceI18nStringByZh("创建【${Config.getWorldTypeActName(type)}】地图", [ {
paramName: "Config.getWorldTypeActName(type)",
param: s.I18nMgr.getI18nStringByZh(d.Config.getWorldTypeActName(e))
} ]);
this.gameData = t;
let o, i = [];
for (let e = 0; e < t.worldIds.length; e++) {
let o = t.worldIds[e], n = yield g.Mng.Ins.worldMng.loadOne(o);
n && i.push(n.info.name);
}
let n = 1;
do {
o = "我的地图" + n;
n++;
} while (i.indexOf(o) >= 0);
this.nameEditbox.string = o;
this.colorBox.setDataArr(d.Config.colors);
this.colorBox.select(19);
});
}
onColBtnTap() {
u.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("宽", this.colBtn.label.string, e => a(this, void 0, void 0, function*() {
this.colBtn.label.string = e;
}));
});
}
onRowBtnTap() {
u.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("高", this.rowBtn.label.string, e => a(this, void 0, void 0, function*() {
this.rowBtn.label.string = e;
}));
});
}
onCreateBtnTap() {
return a(this, void 0, void 0, function*() {
let e = this.nameEditbox.textLabel.string, t = this.colBtn.label.string, o = this.rowBtn.label.string;
if ("" == e.trim()) {
m.default.showToast("必须填写名字");
return;
}
let i = Number.parseInt(t) || 8, n = Number.parseInt(o) || 8;
if (i > 64 || n > 64) {
m.default.showToast("尺寸超出范围64*64");
return;
}
if (i < 8 || n < 8) {
m.default.showToast("尺寸太小，至少8*8");
return;
}
let a = {
msg: e
}, s = yield h.NetIns.SendCmdAsync({
cmd: r.CMDS.Game_SensitiveMsg,
params: a
}, r.Game_RSensitiveMsg);
if (s && s.sensitiveWords && s.sensitiveWords.length) {
m.default.showToast("名称违规");
return;
}
m.default.showLoading("正在创建");
let l = this.colorBox.getColor(), c = {
id: "",
info: {
name: e,
type: this.type,
size: {
col: i,
row: n
}
},
layoutMin: null
}, d = null;
if (this.type == y.WorldType.Jump) {
let e = yield f.Util.loadBundleRes("DefaultWorld/PlatformJump", cc.JsonAsset);
d = new Uint8Array(e.json);
} else if (this.type == y.WorldType.Rpg) {
let e = yield f.Util.loadBundleRes("DefaultWorld/RPG", cc.JsonAsset);
d = new Uint8Array(e.json);
}
let p = f.Util.unzip(d);
if (0 !== this.gameData.worldIds.length) {
let e = p.actors.findIndex(e => e.data.team == y.Team.Hero);
if (e >= 0) {
let t = p.actors[e];
p.startPoint = {
pos: t.pos,
data: {
heroConfId: t.data.confId
}
};
p.actors.splice(e, 1);
}
}
p.size = c.info.size;
p.bgColor = {
r: l.r,
g: l.g,
b: l.b,
a: l.a
};
c.layoutMin = f.Util.zip(p);
c.worldLayout = p;
m.default.hideLoading();
this.closePanel();
this.onCreate && this.onCreate(c);
});
}
};
_.CreateWorldInfoPanel_Open = "CreateWorldInfoPanel_Open";
_.CreateWorldInfoPanel_Opend = "CreateWorldInfoPanel_Opend";
n([ C(cc.EditBox) ], _.prototype, "nameEditbox", void 0);
n([ C(l.default) ], _.prototype, "colBtn", void 0);
n([ C(l.default) ], _.prototype, "rowBtn", void 0);
n([ C(l.default) ], _.prototype, "createBtn", void 0);
n([ C(cc.Label) ], _.prototype, "typeLabel", void 0);
n([ C(c.default) ], _.prototype, "colorBox", void 0);
_ = i = n([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../CustomUI/ColorBox": "ColorBox",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
CreateWorldTypePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "06730sVyxhGnpA1NFrjbWPs", "CreateWorldTypePanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Config"), r = e("../../Frame/Panel"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/GuideMng"), p = e("../../GameData/GameTypeDefine"), {ccclass: u, property: m} = cc._decorator;
let f = i = class extends r.default {
constructor() {
super(...arguments);
this.jumpBtn = null;
this.rpgBtn = null;
this.shootBtn = null;
this.moreBtn = null;
this.onSeleteType = null;
}
onLoad() {
super.onLoad();
this.jumpBtn.node.on(a.default.CLICK, this.onJumpBtnTap, this);
this.rpgBtn.node.on(a.default.CLICK, this.onRpgBtnTap, this);
this.shootBtn.node.on(a.default.CLICK, this.onShootBtnTap, this);
this.moreBtn.node.on(a.default.CLICK, this.onMoreBtnTap, this);
this.jumpBtn.label.string = s.Config.getWorldTypeActName(p.WorldType.Jump);
this.rpgBtn.label.string = s.Config.getWorldTypeActName(p.WorldType.Rpg);
this.shootBtn.label.string = s.Config.getWorldTypeActName(p.WorldType.Shoot);
this.lockBtn(this.rpgBtn, h.default.Ins.isComplete(h.GuideId.EditWorld));
}
openAnim(e) {
super.openAnim(() => {
e && e();
cc.game.emit(i.CreateWorldTypePanel_Opend, this);
});
}
onJumpBtnTap() {
this.select(p.WorldType.Jump);
}
onRpgBtnTap() {
h.default.Ins.isComplete(h.GuideId.EditWorld) ? this.select(p.WorldType.Rpg) : l.default.showToast("请先在‘平台跳跃’里完成基础教程");
}
onShootBtnTap() {
this.select(p.WorldType.Shoot);
}
onMoreBtnTap() {
l.default.showToast("佛系开发中");
}
select(e) {
this.closePanel();
this.onSeleteType && this.onSeleteType(e);
}
lockBtn(e, t) {
e.background.node.color = t ? c.UIColor.white : c.UIColor.gray;
let o = d.Util.searchChild(e.node, "lock");
o && (o.active = !t);
}
};
f.CreateWorldTypePanel_Opend = "CreateWorldTypePanel_Opend";
n([ m(a.default) ], f.prototype, "jumpBtn", void 0);
n([ m(a.default) ], f.prototype, "rpgBtn", void 0);
n([ m(a.default) ], f.prototype, "shootBtn", void 0);
n([ m(a.default) ], f.prototype, "moreBtn", void 0);
f = i = n([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/GuideMng": "GuideMng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
CreativeGamesSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ed237RuN+5EWKqtqPTw4Ond", "CreativeGamesSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../Game/Player/DiscoverMng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.list = null;
this.emptyLabel = null;
}
onLoad() {
return n(this, void 0, void 0, function*() {
yield this.refresh();
});
}
onEnable() {
this.emptyLabel.string = "还没有任何作品";
}
refresh() {
return n(this, void 0, void 0, function*() {
yield s.default.Ins.initLoadCreativeGames(20);
let e = s.default.Ins.creativeGameDatas;
this.list.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield s.default.Ins.appendLoadCreativeGames(20);
this.refresh();
}
});
}
};
i([ l(a.default) ], c.prototype, "list", void 0);
i([ l(cc.Label) ], c.prototype, "emptyLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Game/Player/DiscoverMng": "DiscoverMng"
} ],
CreativeRankMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c03f0+U86lLUbNCl9NQHLvN", "CreativeRankMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/NetworkMgr");
class r {
constructor() {
this.cache = new Map();
}
get(e, t) {
let o = this.getKey(e, t);
return this.cache.get(o) || [];
}
appendLoad(e, t) {
return i(this, void 0, void 0, function*() {
let o = this.getKey(e, t), i = this.cache.get(o) || [], a = {
gameId: e,
sortType: t,
start: i.length,
end: i.length + 12
}, r = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetCreativeRank,
params: a
}, n.Game_RGetCreativeRank);
if (0 == i.length && r.sourceReleaseGame) {
i.push(r.sourceReleaseGame);
r.sourceReleaseGame.isFirst = !0;
}
if (r && r.gameDatas) for (let e = 0; e < r.gameDatas.length; e++) i.push(r.gameDatas[e]);
this.cache.set(o, i);
return i;
});
}
getKey(e, t) {
return e + ":" + t;
}
deleteCache(e) {
this.cache.delete(this.getKey(e, a.CreativeGameSortType.comprehensive));
this.cache.delete(this.getKey(e, a.CreativeGameSortType.creativeGameUpStampDesc));
}
}
o.default = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
CreativeResMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b0f69wvitPv4zL0apVPJNS", "CreativeResMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
class i {}
o.default = i;
i.Ins = new i();
cc._RF.pop();
}, {} ],
CreativeSpaceCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "beb3eUOrthJa5sNRXBTHn46", "CreativeSpaceCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/GameIcon"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/NetworkMgr"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/Util"), u = e("../../Game/Player/GamePackageMng"), m = e("../../Game/Player/Mng"), f = e("../GameCoverScene/GameCoverScene"), {ccclass: g, property: y} = cc._decorator;
let v = class extends cc.Component {
constructor() {
super(...arguments);
this.gameIcon = null;
this.dot = null;
this.dotLabel = null;
this.nameLabel = null;
this.select = null;
this.playBtn = null;
this.detailBtn = null;
this.data = null;
}
onLoad() {
this.node.on(l.default.SET_DATA, this.setData, this);
this.node.on(l.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtn, this);
this.detailBtn.node.on(s.default.CLICK, this.onDetailBtn, this);
}
setData(e) {
this.data = e;
this.gameIcon.loadUrl(e.iconTextureName);
this.nameLabel.string = p.Util.clampStr(e.name, 7, "..");
this.dot.node.active = e.isFirst;
}
onStateChange(e) {
this.select.active = e;
this.playBtn.node.active = e;
this.detailBtn.node.active = e;
}
onPlayBtn() {
return n(this, void 0, void 0, function*() {
let e = yield u.default.Ins.load(this.data.gameDataCdnUrl);
if (!e) {
h.default.hideLoading();
return;
}
if (!e) return;
m.Mng.switchGamePackage(e);
let t = yield m.Mng.Ins.gameMng.loadOne(this.data.id);
yield m.Mng.Ins.variableMng.switchGame(t);
d.default.ins.Enter("GameScene", e => {
e.mode = "Prod";
e.play(t);
let o = orange.TimeUtil.serverTime;
e.backCall = () => n(this, void 0, void 0, function*() {
let t = orange.TimeUtil.serverTime, i = {
id: this.data.id,
playTime: (t - o) / 1e3
};
yield c.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_PlayGameStatistics,
params: i
}, a.Game_RPlayGameStatistics);
e.backCall = null;
});
});
if (!this.data.isPlay) {
let e = {
ids: [ this.data.id ]
}, t = yield c.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_PlayGames,
params: e
}, a.Game_RPlayGames);
if (t) {
this.data.playCnt = t.playCntList[0] || 0;
this.data.isPlay = !0;
}
}
});
}
onDetailBtn() {
d.default.ins.Enter("GameCoverScene", e => {
e instanceof f.default && e.setData(this.data.id);
}, d.ShiftAnima.moveRightShift);
}
};
i([ y(r.default) ], v.prototype, "gameIcon", void 0);
i([ y(cc.Sprite) ], v.prototype, "dot", void 0);
i([ y(cc.Label) ], v.prototype, "dotLabel", void 0);
i([ y(cc.Label) ], v.prototype, "nameLabel", void 0);
i([ y(cc.Node) ], v.prototype, "select", void 0);
i([ y(s.default) ], v.prototype, "playBtn", void 0);
i([ y(s.default) ], v.prototype, "detailBtn", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/GamePackageMng": "GamePackageMng",
"../../Game/Player/Mng": "Mng",
"../GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
CreativeSpaceScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ccd5fn2fVBIIJvKUzlB75qz", "CreativeSpaceScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/DropDownBox"), l = e("../../CustomUI/GameIcon"), c = e("../../CustomUI/ScrollList"), d = e("../../Frame/Scene"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Util"), u = e("../../Game/Player/CreativeRankMng"), m = e("../../Game/Player/DynamicMng"), f = e("../../Game/Player/Mng"), g = e("../GameCoverScene/GameCoverScene"), y = e("../../Frame/Top"), v = e("../../Game/Player/GuideMng"), C = e("../../Role"), _ = e("../../Game/Hortor"), S = e("../../Game/OperationFlow"), I = e("../../../i18n/i18nMgr"), {ccclass: G, property: T} = cc._decorator;
let b = class extends d.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.gameIcon = null;
this.gameNameLabel = null;
this.followCntLabel = null;
this.authorNameLabel = null;
this.sortDropDown = null;
this.scrollList = null;
this.emptyNode = null;
this.res = null;
this.createBtn = null;
this.previewBtn = null;
this.detail = null;
this.myGame = null;
this.releaseGameData = null;
}
onLoad() {
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.createBtn.node.on(s.default.CLICK, this.onCreateBtn, this);
this.previewBtn.node.on(s.default.CLICK, this.onPreviewBtn, this);
this.scrollList.node.on(c.default.SELECT_ITEM, this.onSelectCell, this);
this.sortDropDown.node.on(r.default.SELECT_CHANGE, this.onSortChange, this);
}
onBackBtn() {
h.default.ins.Back(null, h.ShiftAnima.moveRightShift);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.detail = e;
let t = e.creativeGameData;
this.gameNameLabel.string = t.name;
this.gameIcon.loadUrl(t.iconTextureName);
this.authorNameLabel.string = `creator：${e.authorMsg.userName}`;
this.followCntLabel.string = `${Math.max(t.secondaryCnt, 0)}${I.I18nMgr.getI18nStringByZh("人二次创作")}`;
this.sortDropDown.setDataArr([ {
str: "综合",
sort: a.CreativeGameSortType.comprehensive
}, {
str: "最新",
sort: a.CreativeGameSortType.creativeGameUpStampDesc
} ]);
});
}
onSortChange(e, t, o) {
return n(this, void 0, void 0, function*() {
let e = this.detail.creativeGameData, o = u.default.Ins.get(e.id, t.sort);
o.length <= 0 && (o = yield u.default.Ins.appendLoad(e.id, t.sort));
this.scrollList.setDataArr(o);
this.emptyNode.active = 0 == o.length;
this.scrollList.selectByIdx(0);
});
}
onSelectCell(e, t) {
this.setupCreate(t);
}
setupCreate(e) {
this.releaseGameData = e;
let t = e.openData.creativeResList || [];
this.previewBtn.label.string = `All assets \n(Total ${t.length})`;
t = t.slice(0, 10);
p.Util.makeBro(this.res, t.length, (e, o) => {
let i = e.getComponentInChildren(cc.Sprite), n = t[o];
f.Mng.Ins.spriteMng.setSprite(i, n.textureName, 64);
});
}
onCreateBtn() {
return n(this, void 0, void 0, function*() {
if (!v.default.Ins.isComplete(v.GuideId.EditWorld)) {
y.default.showToast("暂未解锁，需要完成基础教程");
return;
}
if (m.DynamicMng.Ins.isDisable(m.FunctionEnum.PublishGame, !0)) return;
if (_.Hortor.isVisitor()) {
S.OperationFlow.openVisitorPanel();
return;
}
if ((yield f.Mng.Ins.gameMng.loadAll()).length > C.default.Ins.role.myGameMaxCnt) {
y.default.showToast("游戏数量达到上限");
return;
}
let e = this.releaseGameData;
e && h.default.ins.OpenPanelByName("CreateGamePanel", t => n(this, void 0, void 0, function*() {
t.setData("Modified " + e.name, {
id: e.id,
packUrl: e.gameDataCdnUrl,
worldIds: e.openData.openWorldIds
});
}));
});
}
onMyEditBtn() {
this.myGame && h.default.ins.Enter("EditGameScene", e => n(this, void 0, void 0, function*() {
e.setData(this.myGame);
}));
}
onMyDetailBtn() {
h.default.ins.Back(e => {
e instanceof g.default && e.setData(this.myGame.id);
});
}
onPreviewBtn() {
let e = this.releaseGameData.openData.creativeResList || [];
h.default.ins.OpenPanelByName("AssetPreviewPanel", t => {
t.setData(e);
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
let e = this.sortDropDown.getCurData().sort, o = yield u.default.Ins.appendLoad(this.detail.creativeGameData.id, e);
this.scrollList.setDataArr(o);
this.emptyNode.active = 0 == o.length;
}
});
}
};
i([ T(s.default) ], b.prototype, "backBtn", void 0);
i([ T(l.default) ], b.prototype, "gameIcon", void 0);
i([ T(cc.Label) ], b.prototype, "gameNameLabel", void 0);
i([ T(cc.Label) ], b.prototype, "followCntLabel", void 0);
i([ T(cc.Label) ], b.prototype, "authorNameLabel", void 0);
i([ T(r.default) ], b.prototype, "sortDropDown", void 0);
i([ T(c.default) ], b.prototype, "scrollList", void 0);
i([ T(cc.Node) ], b.prototype, "emptyNode", void 0);
i([ T(cc.Node) ], b.prototype, "res", void 0);
i([ T(s.default) ], b.prototype, "createBtn", void 0);
i([ T(s.default) ], b.prototype, "previewBtn", void 0);
b = i([ G ], b);
o.default = b;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CreativeRankMng": "CreativeRankMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"../../Role": "Role",
"../GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
CreditChangeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ac17eZtaE1LkacztYcB4FXZ", "CreditChangeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/UIColor"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.reasonLabel = null;
this.timeLabel = null;
this.scoreLabel = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.reasonLabel.string = e.reason;
this.timeLabel.string = s.Util.parseDataString(e.stamp);
if (e.score > 0) {
this.scoreLabel.string = "+" + e.score;
this.scoreLabel.node.color = a.UIColor.green;
} else {
this.scoreLabel.string = "" + e.score;
this.scoreLabel.node.color = a.UIColor.red;
}
}
};
i([ l(cc.Label) ], c.prototype, "reasonLabel", void 0);
i([ l(cc.Label) ], c.prototype, "timeLabel", void 0);
i([ l(cc.Label) ], c.prototype, "scoreLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util"
} ],
CreditMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "249e3ZXBpVBi7+NJ7Y6AxKD", "CreditMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CreditMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr");
class s {
constructor() {
this.credit = 3;
this.max = 3;
this.creditScoreRecoverProcess = 0;
this.userCreditMsgList = null;
}
loadData() {
return i(this, void 0, void 0, function*() {
if (null == this.userCreditMsgList) {
let e = {}, t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetUserCreditMsg,
params: e
}, n.Game_RGetUserCreditMsg);
if (t) {
this.creditScoreRecoverProcess = t.creditScoreRecoverProcess;
this.userCreditMsgList = t.userCreditMsgList || [];
}
}
});
}
}
o.CreditMng = s;
s.Ins = new s();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
CreditScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "46916uZ63ZBr70nIq2oMbTv", "CreditScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ProgressBar"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/OperationFlow"), u = e("../../Game/Player/CreditMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends l.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.aboutBtn = null;
this.list = null;
this.progressBar = null;
this.cridtPoint = null;
}
onLoad() {
return n(this, void 0, void 0, function*() {
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
this.aboutBtn.node.on(a.default.CLICK, this.onAboutBtn, this);
this.cridtPoint.parent.on(cc.Node.EventType.TOUCH_END, this.onAboutBtn, this);
yield u.CreditMng.Ins.loadData();
h.Util.makeBro(this.cridtPoint, 3, (e, t) => {
e.color = t < u.CreditMng.Ins.credit ? d.UIColor.green : d.UIColor.gray;
});
this.list.setDataArr(u.CreditMng.Ins.userCreditMsgList);
this.progressBar.node.active = u.CreditMng.Ins.credit < 3;
this.progressBar.setRange(0, 1);
this.progressBar.setValue(u.CreditMng.Ins.creditScoreRecoverProcess);
});
}
onShow(e) {
p.OperationFlow.deelOnShow(e);
}
onBackBtn() {
c.default.ins.Back(() => {}, c.ShiftAnima.moveRightShift);
}
onAboutBtn() {
c.default.ins.OpenPanelByName("AboutPanel", e => {
e.setData("信誉积分说明", "    \n    发布以下违规内容将会被扣除积分：  \n        1.色情低俗,\n        2.政治敏感,\n        3.挑拨引战,\n        4.引人不适,\n    当缺失1个积分时，不可发布或编辑游戏，不可更改头像。\n    当缺失2个积分时，不可搜索，评论，点赞，收藏，催更。\n    当缺失3个积分时，封号。\n");
});
}
};
i([ f(a.default) ], g.prototype, "backBtn", void 0);
i([ f(a.default) ], g.prototype, "aboutBtn", void 0);
i([ f(r.default) ], g.prototype, "list", void 0);
i([ f(s.default) ], g.prototype, "progressBar", void 0);
i([ f(cc.Node) ], g.prototype, "cridtPoint", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ProgressBar": "ProgressBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CreditMng": "CreditMng"
} ],
CrossPlatform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f31afLwAaJFtKZ515YyWkgj", "CrossPlatform");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.systemInfo = o.tt = o.wx = o.crossPlatform = o.CrossPlatform = o.AppName = o.Image = o.Context = o.Canvas = o.GameRecorderShareButton = o.DownloadTask = o.UploadTask = o.UserGameData = o.KVData = o.SystemInfo = o.BannerAd = o.VideoAd = void 0;
class i {
show() {
return new Promise(e => {
e(null);
});
}
load() {
return new Promise(e => {
e(null);
});
}
onLoad(e) {}
offLoad(e) {}
onError(e) {}
offError(e) {}
onClose(e) {}
offClose(e) {}
}
o.VideoAd = i;
class n {
show() {
return new Promise(e => {
e(null);
});
}
hide() {}
destroy() {}
onLoad(e) {}
offLoad(e) {}
onError(e) {}
offError(e) {}
onResize(e) {}
offResize(e) {}
}
o.BannerAd = n;
class a {}
o.SystemInfo = a;
o.KVData = class {};
o.UserGameData = class {};
o.UploadTask = class {
abort() {}
onProgressUpdate(e) {}
offProgressUpdate(e) {}
onHeadersReceived(e) {}
offHeadersReceived(e) {}
};
class s {
onProgressUpdate(e) {}
offProgressUpdate(e) {}
onHeadersReceived(e) {}
offHeadersReceived(e) {}
}
o.DownloadTask = s;
class r {
show() {}
hide() {}
onTap(e) {}
offTap(e) {}
}
o.GameRecorderShareButton = r;
class l {
getContext(e) {
return new c();
}
toTempFilePath(e) {
e.success({
tempFilePath: ""
});
}
toTempFilePathSync(e) {
return "#tempFilePath#";
}
}
o.Canvas = l;
class c {
fillRect(e, t, o, i) {}
drawImage(e, t, o, i, n, a, s, r, l) {}
}
o.Context = c;
class d {
onload(e) {}
onerror(e) {}
}
o.Image = d;
(function(e) {
e.Toutiao = "Toutiao";
e.Douyin = "Douyin";
e.XiGua = "XiGua";
e.NewsLite = "news_article_lite";
})(o.AppName || (o.AppName = {}));
class h {
constructor() {
this.isDebug = !0;
this.env = {
USER_DATA_PATH: "Root:"
};
this.onShowListeners = [];
this.onHideListeners = [];
this._onKeyboardConfirmIdx = 0;
}
onNetworkStatusChange(e) {
throw new Error("onNetworkStatusChange not implemented.");
}
fakeLeaveAndBack(e) {
for (let e = 0; e < this.onHideListeners.length; e++) this.onHideListeners[e]();
setTimeout(() => {
for (let t = 0; t < this.onShowListeners.length; t++) this.onShowListeners[t](e);
}, 400);
}
onShow(e) {
this.onShowListeners.push(e);
}
onHide(e) {
this.onHideListeners.push(e);
}
getLaunchOptionsSync() {
return {
scene: 1e3,
query: null,
shareTicket: "",
referrerInfo: null
};
}
shareAppMessage(e) {
e.success && e.success({});
console.log("分享", e);
}
setStorage(e) {
this.setStorageSync(e.key, e.data);
}
setStorageSync(e, t) {
localStorage.setItem(e, JSON.stringify(t));
}
getStorage(e) {
let t = this.getStorageSync(e.key);
e.success(t);
}
getStorageSync(e) {
let t = localStorage.getItem(e);
null == (t = JSON.parse(t)) && (t = "");
return t;
}
removeStorageSync(e) {
localStorage.removeItem(e);
}
clearStorageSync() {
localStorage.clear();
}
exitMiniProgram() {
console.log("退出游戏");
}
getFileSystemManager() {
return {
saveFile(e) {
e.success(e.filePath);
},
saveFileSync: (e, t) => t + ":" + e,
accessSync(e) {},
mkdirSync(e, t) {},
writeFileSync(e, t, o = "binary") {},
readFileSync: () => "",
unlinkSync(e) {}
};
}
createGameRecorderShareButton(e) {
return new r();
}
getGameRecorder() {
return {
start(e) {
console.log("开始录屏");
return new Promise(() => {});
},
stop() {
console.log("结束录屏");
return new Promise(() => {});
},
pause() {},
resume() {},
on(e, t) {},
off(e, t) {},
recordClip(e) {},
clipVideo(e) {},
onInterruptionBegin(e) {},
onInterruptionEnd(e) {}
};
}
getGameRecorderManager() {
return {
start(e) {
console.log("开始录屏");
},
pause() {},
recordClip(e) {},
clipVideo(e) {},
resume() {},
stop() {
console.log("结束录屏");
return "视频地址";
},
onStart(e) {},
onResume(e) {},
onPause(e) {},
onStop(e) {},
onError(e) {},
onInterruptionBegin(e) {},
onInterruptionEnd(e) {}
};
}
createCanvas() {
return new l();
}
createImage() {
return new d();
}
getOpenDataContext() {
return {
postMessage(e) {}
};
}
getSystemInfoSync() {
let e = new a();
e.system = "Android";
e.SDKVersion = "99.99.99";
return e;
}
createRewardedVideoAd(e) {
return new i();
}
createBannerAd(e) {
return new n();
}
reportAnalytics(e, t) {
console.log("Analytics", e, t);
}
vibrateShort() {}
vibrateLong() {}
login(e) {
e.success({
code: 1
});
}
setUserGroup(e) {}
setUserCloudStorage(e) {
e.success && e.success();
}
getFriendCloudStorage(e) {
e.success([]);
}
downloadFile(e) {
return new s();
}
uploadFile(e) {
return new s();
}
showKeyboard(e) {}
hideKeyboard(e) {}
offKeyboardConfirm(e) {}
onKeyboardConfirm(e) {
e && e({
value: "哈哈哈" + this._onKeyboardConfirmIdx++
});
}
getSetting(e) {}
authorize(e) {}
getUserInfo(e) {}
onShareAppMessage(e) {}
onShareTimeline(e) {}
showShareMenu(e) {}
getUpdateManager() {
return {
onCheckForUpdate: () => {},
onUpdateReady: () => {},
applyUpdate: () => {},
onUpdateFailed: () => {}
};
}
saveImageToPhotosAlbum(e) {
e.success();
}
openSetting(e) {}
showModal(e) {}
request(e) {}
openAwemeUserProfile() {}
navigateToVideoView(e) {
e.success({});
}
setClipboardData(e) {
e.success && e.success(null);
navigator.clipboard.writeText(e.data);
}
getMenuButtonLayout() {
return {
width: 84,
height: 32,
top: 26,
bottom: 58,
left: 280,
right: 369
};
}
}
o.CrossPlatform = h;
o.crossPlatform = new h();
o.wx = window.wx;
o.tt = window.tt;
if (o.tt) {
o.crossPlatform = o.tt;
o.wx = null;
}
o.wx && (o.crossPlatform = o.wx);
o.systemInfo = o.crossPlatform.getSystemInfoSync();
cc._RF.pop();
}, {} ],
CustomSpriteLine: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "81c4615zxVGbIXqwfjUXAv2", "CustomSpriteLine");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, menu: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.sp = null;
this._isReady = !1;
this._sx = 0;
this._sy = 0;
this._dir = new cc.Vec2();
this._lineWidth = 0;
this._lineLen = 0;
this._tilingOffset = new cc.Vec4();
}
onLoad() {
this.node.anchorX = 0;
this.node.anchorY = .5;
this._mat = this.sp.getMaterial(0);
}
start() {
this._isReady = !0;
this.onRender();
}
drawLine(e, t, o, i, n, a) {
this._sx = e;
this._sy = t;
let s = o - e, r = i - t, l = Math.sqrt(s * s + r * r);
if (l > 0) {
this._dir.x = s / l;
this._dir.y = r / l;
}
this._lineWidth = n;
this._lineLen = a;
this._isReady && this.onRender();
}
onRender() {
this.node.x = this._sx;
this.node.y = this._sy;
let e = 180 * this._dir.angle(cc.Vec2.RIGHT) / Math.PI;
this.node.angle = e;
this.node.height = this._lineWidth;
this.node.width = this._lineLen;
let t = this.sp.spriteFrame.getTexture().height / this.sp.spriteFrame.getTexture().width;
if (this._mat && this._lineWidth > 0) {
this._tilingOffset.x = this._lineLen / this._lineWidth * t;
this._tilingOffset.y = 1;
this._mat.setProperty("tilingOffset", this._tilingOffset);
}
}
};
i([ s(cc.Sprite) ], r.prototype, "sp", void 0);
r = i([ n, a("自定义UI/Line") ], r);
o.default = r;
cc._RF.pop();
}, {} ],
Damager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f06e40UkqRJrqhcl4LUX6na", "Damager");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../Game/World/WorldNodeBody"), a = e("../GameData/GameTypeDefine"), {ccclass: s, property: r} = cc._decorator;
let l = class extends n.default {
constructor() {
super(...arguments);
this.team = 0;
this.emitTarget = null;
this.dmg = 1;
this.remainTimes = 1;
this.ignoreTeam = 0;
this.avoidContinuesDmg = !1;
this._damagedTargetRecords = [];
}
tryDmgTarget(e) {
if (!this.avoidContinuesDmg) return !0;
if (this._damagedTargetRecords.findIndex(t => t.target == e) < 0) {
this._damagedTargetRecords.push({
target: e
});
return !0;
}
return !1;
}
clearRecord() {
this._damagedTargetRecords.length = 0;
}
};
i([ r({
type: cc.Enum(a.Team),
displayName: "Team"
}) ], l.prototype, "team", void 0);
i([ r(cc.Node) ], l.prototype, "emitTarget", void 0);
i([ r ], l.prototype, "dmg", void 0);
i([ r ], l.prototype, "remainTimes", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../Game/World/WorldNodeBody": "WorldNodeBody",
"../GameData/GameTypeDefine": "GameTypeDefine"
} ],
DataBind: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1984dhOa9NBJ4wOhVJRu7p7", "DataBind");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.DB = void 0;
const i = e("./Local");
(function(e) {
class t {
constructor() {
this.value = null;
this.listeners = [];
}
Invoke(e) {
let t, o = this.listeners.length;
if (e) {
t = [];
for (let e = 0; e < o; e++) t.push(this.listeners[e]);
} else t = this.listeners;
for (let e = 0; e < o; e++) t[e](this.value);
}
}
e.Data = t;
let o, n = new Map();
function a(e, o, i = !0) {
let a = n.get(e);
if (!a) {
a = new t();
n.set(e, a);
}
a.listeners.indexOf(o) <= 0 && a.listeners.push(o);
i && o(a.value);
}
e.Bind = a;
e.BindRemote = function(e, t) {
a(e, t);
};
e.UnBind = function(e, t) {
let o = n.get(e);
if (o) {
let e = o.listeners.indexOf(t);
e >= 0 && o.listeners.splice(e, 1);
}
};
e.Set = function(e, o, a = !1) {
e.startsWith("temp/") || i.Local.Set(e, o);
let s = n.get(e);
if (s) {
s.value = o;
s.Invoke(a);
} else {
(s = new t()).value = o;
n.set(e, s);
}
};
e.Get = function(e) {
let t = n.get(e);
return t ? t.value : null;
};
e.Invoke = function(e, t = !1) {
let o = n.get(e);
o && o.Invoke(t);
};
e.DataBindComponent = class extends cc.Component {
constructor() {
super(...arguments);
this.map = new Map();
}
Bind(t, o, i = !0) {
let n = o.bind(this);
this.map.set(t, n);
e.Bind(t, n, i);
}
UnBind(t) {
let o = this.map.get(t);
if (o) {
this.map.delete(t);
e.UnBind(t, o);
}
}
onDestroy() {
this.map.forEach((t, o) => {
e.UnBind(o, t);
});
}
};
o = e.Event || (e.Event = {});
})(o.DB || (o.DB = {}));
cc._RF.pop();
}, {
"./Local": "Local"
} ],
DataUpgrader: [ function(e, t) {
"use strict";
cc._RF.push(t, "3a53ctmDv1A1Y0yfsq5LwOB", "DataUpgrader");
cc._RF.pop();
}, {} ],
Data_0_0_0: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9c7bb6dK5pMgLI4FtRgpRRN", "Data_0_0_0");
Object.defineProperty(o, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
Data_1_0_0: [ function(e, t) {
"use strict";
cc._RF.push(t, "cfc7dwQaoFPR5ycbvHQeQ7L", "Data_1_0_0");
cc._RF.pop();
}, {} ],
Decorator: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cab07B0HgpF/rhJG8FzX05B", "Decorator");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../GameData/GameTypeDefine"), r = e("../Player/Mng"), l = e("../World/Device"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends l.default {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
super.onLoad();
}
getBoundingBox() {
let e = this.width, t = this.height, o = this.node.x + this.node.parent.x - this.node.width * Math.abs(this.node.scaleX) * this.node.anchorX, i = this.node.y + this.node.parent.y - this.node.height * Math.abs(this.node.scaleY) * this.node.anchorY;
this._boundingBox.x = o;
this._boundingBox.y = i;
this._boundingBox.width = e;
this._boundingBox.height = t;
return this._boundingBox;
}
setData(e, t) {
super.setData(e, t);
e = this.data;
r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
layer: s.DecoratorLayerType.Background02,
scale: 8,
flipx: !1,
flipy: !1,
angle: 0,
opacity: 255
});
this.node.angle = e.extra.angle;
this.node.scale = e.extra.scale;
this.sprite.node.scaleX = this.data.extra.flipx ? -1 : 1;
this.sprite.node.scaleY = this.data.extra.flipy ? -1 : 1;
this.sprite.node.opacity = this.data.extra.opacity || 255;
this.world.addToLayer(this.data.extra.layer, this.node);
}
getLayer() {
let e = s.DecoratorLayerType.MapFore;
this.data && this.data.extra && (e = this.data.extra.layer);
return e;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
layer: s.DecoratorLayerType.Background02,
scale: 8,
flipx: !1,
flipy: !1,
angle: 0
};
o && e.addHead(t.name, t.textureName);
let r = null, l = [], c = [ {
str: "超远景",
type: s.DecoratorLayerType.Background02
}, {
str: "远景",
type: s.DecoratorLayerType.Background01
}, {
str: "地图后面",
type: s.DecoratorLayerType.MapBack
}, {
str: "角色后",
type: s.DecoratorLayerType.Map
}, {
str: "地图前面",
type: s.DecoratorLayerType.MapFore
}, {
str: "近景",
type: s.DecoratorLayerType.Foreground01
} ], d = [ {
str: "超远景",
type: s.DecoratorLayerType.Background02
}, {
str: "远景",
type: s.DecoratorLayerType.Background01
}, {
str: "地图后面",
type: s.DecoratorLayerType.MapBack
}, {
str: "与角色排序",
type: s.DecoratorLayerType.Map
}, {
str: "地图前面",
type: s.DecoratorLayerType.MapFore
}, {
str: "近景",
type: s.DecoratorLayerType.Foreground01
} ];
o ? (r = o.world).worldLayout.type == s.WorldType.Jump ? l = c : r.worldLayout.type == s.WorldType.Rpg && (l = d) : l = d;
let h = l.findIndex(e => e.type == n.extra.layer);
-1 == h && (h = 0);
e.addDropDownBox("所在层", l, h, (e, t) => a(this, void 0, void 0, function*() {
n.extra.layer = t.type;
r && o && r.addToLayer(n.extra.layer, o.node);
}));
e.addNumberEditBox("透明度", n.extra.opacity || 255, 0, 255, e => {
n.extra.opacity = e;
o && (o.sprite.node.opacity = e);
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 16, e => {
n.extra.scale = e;
if (r && o) {
o.node.scale = e;
r.placeGizmos.setScale(e);
}
});
e.addNumberEditBox("角度", n.extra.angle, 0, 360, e => {
n.extra.angle = e;
o && (o.node.angle = e);
});
e.addToggle("水平翻转", n.extra.flipx, e => {
n.extra.flipx = e;
o && (o.sprite.node.scaleX = e ? -1 : 1);
});
e.addToggle("上下翻转", n.extra.flipy, e => {
n.extra.flipy = e;
o && (o.sprite.node.scaleY = e ? -1 : 1);
});
}
};
n([ d({
override: !0,
type: cc.Sprite
}) ], h.prototype, "sprite", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../World/Device": "Device"
} ],
DeelReportCommentCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "97aebVfo/RPf718GGmvFr2/", "DeelReportCommentCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.introLabel = null;
this.reportCntLabel = null;
this.banBtn = null;
this.headIcon = null;
this.data = null;
}
onLoad() {
this.banBtn.node.on(a.default.CLICK, this.onBanBtn, this);
this.node.on(r.default.SET_DATA, this.setData, this);
this.headIcon.node.on(a.default.CLICK, this.onIcon, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel.string = e.userName;
this.introLabel.string = e.msg;
this.reportCntLabel.string = e.reportCnt + "";
this.headIcon.loadUrl(e.userImg);
});
}
onBanBtn() {
this.data.id && l.default.ins.OpenPanelByName("BanCommentPanel", e => {
e.setData(this.data);
});
}
onIcon() {
l.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.gameId);
e.backAnima = l.ShiftAnima.moveRightShift;
}, l.ShiftAnima.moveLeftShift);
}
};
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "introLabel", void 0);
i([ d(cc.Label) ], h.prototype, "reportCntLabel", void 0);
i([ d(a.default) ], h.prototype, "banBtn", void 0);
i([ d(s.default) ], h.prototype, "headIcon", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager"
} ],
DeelReportGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d32c3OYne5PE54eyX3B4XrY", "DeelReportGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/GameIconMng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.reportCntLabel = null;
this.icon = null;
this.banBtn = null;
this.playBtn = null;
this.data = null;
}
onLoad() {
this.playBtn.node.on(a.default.CLICK, this.onPlayBtn, this);
this.banBtn.node.on(a.default.CLICK, this.onBanBtn, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel.string = e.name;
this.reportCntLabel.string = e.reportCnt;
l.GameIconMng.Ins.setSprite(this.icon, e.iconTextureName, 120);
});
}
getReasonStr(e) {
let t = e.info.reports || [], o = new Map();
for (let e = 0; e < t.length; e++) {
let i = t[e];
for (let e in i.item) {
let t = o.get(e) || 0;
o.set(e, t + 1);
}
}
let i = "";
o.forEach((e, t) => {
i += `${t}(${e}),`;
});
return i;
}
onPlayBtn() {
this.data && r.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id);
});
}
onBanBtn() {
this.data && r.default.ins.OpenPanelByName("BanGamePanel", e => {
e.setData(this.data);
});
}
};
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "reportCntLabel", void 0);
i([ d(cc.Sprite) ], h.prototype, "icon", void 0);
i([ d(a.default) ], h.prototype, "banBtn", void 0);
i([ d(a.default) ], h.prototype, "playBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/GameIconMng": "GameIconMng"
} ],
DeelReportGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6a06813ak5Ny50IeejV2+c0", "DeelReportGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/Mng"), c = e("../../Game/Player/ShopMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.introLabel = null;
this.reportCntLabel = null;
this.banBtn = null;
this.sprite = null;
this.data = null;
}
onLoad() {
this.banBtn.node.on(a.default.CLICK, this.onBanBtn, this);
this.node.on(s.default.SET_DATA, this.setData, this);
this.sprite.node.on(a.default.CLICK, this.onIcon, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel.string = e.name;
this.reportCntLabel.string = e.reportCnt;
l.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 120);
});
}
onBanBtn() {
this.data.id && r.default.ins.OpenPanelByName("BanGoodsPanel", e => {
e.setData(this.data.id);
});
}
onIcon() {
return n(this, void 0, void 0, function*() {
let e = yield c.default.Ins.loadGoodsInfos([ this.data.id ]);
e && e[0] && r.default.ins.OpenPanelByName("BuyGoodsPanel", t => {
t.setData(e[0]);
t.buyCall = () => {
cc.game.emit("RefreshShopList");
};
});
});
}
};
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "introLabel", void 0);
i([ h(cc.Label) ], p.prototype, "reportCntLabel", void 0);
i([ h(a.default) ], p.prototype, "banBtn", void 0);
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/ShopMng": "ShopMng"
} ],
DeelReportPlayerCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e6cfd45LrhC9JE4QX+Ls95U", "DeelReportPlayerCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.introLabel = null;
this.reportCntLabel = null;
this.banBtn = null;
this.headIcon = null;
this.data = null;
}
onLoad() {
this.banBtn.node.on(a.default.CLICK, this.onBanBtn, this);
this.node.on(r.default.SET_DATA, this.setData, this);
this.headIcon.node.on(a.default.CLICK, this.onHeadIcon, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel.string = e.userName;
this.introLabel.string = e.userIntro;
this.reportCntLabel.string = e.reportCnt;
this.headIcon.loadUrl(e.userImg);
});
}
getReasonStr(e) {
let t = e.info.reports || [], o = new Map();
for (let e = 0; e < t.length; e++) {
let i = t[e];
for (let e in i.item) {
let t = o.get(e) || 0;
o.set(e, t + 1);
}
}
let i = "";
o.forEach((e, t) => {
i += `${t}(${e}),`;
});
return i;
}
onBanBtn() {
this.data.playerId && l.default.ins.OpenPanelByName("BanPlayerPanel", e => {
e.setData(this.data.playerId);
});
}
onHeadIcon() {
l.default.ins.Enter("FriendScene", e => {
e.setData(this.data.playerId);
}, l.ShiftAnima.moveLeftShift);
}
};
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "introLabel", void 0);
i([ d(cc.Label) ], h.prototype, "reportCntLabel", void 0);
i([ d(a.default) ], h.prototype, "banBtn", void 0);
i([ d(s.default) ], h.prototype, "headIcon", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager"
} ],
DeelReportScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "74afdEDfhNMDK7TT0NU6r+I", "DeelReportScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/UIColor"), h = e("../../Game/Player/ReportMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.list = null;
this.backBtn = null;
this.titleLabel = null;
this.clearBtn = null;
this.reportType = h.ReportType.game;
}
onLoad() {
super.onLoad();
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.clearBtn.node.on(s.default.CLICK, this.onClearBtn, this);
this.node.on("refreshList", this.refreshList, this);
this.list.getPrefabName = e => e instanceof a.GameCellData ? "DeelReportGameCell" : e instanceof a.UserSimpleMsg ? "DeelReportPlayerCell" : e instanceof a.GoodsCellData ? "DeelReportGoodsCell" : e instanceof a.GameComment ? "DeelReportCommentCell" : e instanceof a.TalkData ? "DeelReportTalkCell" : void 0;
}
onBackBtn() {
c.default.ins.Back();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.reportType = e;
this.refreshList();
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = [];
if (this.reportType == h.ReportType.game) {
this.titleLabel.string = "违规游戏";
e = yield h.ReportMng.Ins.loadGames();
}
if (this.reportType == h.ReportType.player) {
this.titleLabel.string = "违规玩家";
e = yield h.ReportMng.Ins.loadPlayer();
}
if (this.reportType == h.ReportType.goods) {
this.titleLabel.string = "违规商品";
e = yield h.ReportMng.Ins.loadGoods();
}
if (this.reportType == h.ReportType.comment) {
this.titleLabel.string = "违规评论";
e = yield h.ReportMng.Ins.loadComments();
}
if (this.reportType == h.ReportType.talk) {
this.titleLabel.string = "违规帖子";
e = yield h.ReportMng.Ins.loadTalks();
}
this.list.setDataArr(e);
});
}
onClearBtn() {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "真的要重新计数吗？";
e.setLeftBtn({
text: "是的",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
this.reportType == h.ReportType.game && (yield h.ReportMng.Ins.clearGame());
this.reportType == h.ReportType.player && (yield h.ReportMng.Ins.clearPlayer());
this.reportType == h.ReportType.goods && (yield h.ReportMng.Ins.clearGoods());
this.reportType == h.ReportType.comment && (yield h.ReportMng.Ins.clearComments());
this.reportType == h.ReportType.comment && (yield h.ReportMng.Ins.clearTalks());
this.refreshList();
})
});
e.setRightBtn({
text: "关闭",
color: d.UIColor.blue
});
});
}
};
i([ u(r.default) ], m.prototype, "list", void 0);
i([ u(s.default) ], m.prototype, "backBtn", void 0);
i([ u(cc.Label) ], m.prototype, "titleLabel", void 0);
i([ u(s.default) ], m.prototype, "clearBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/ReportMng": "ReportMng"
} ],
DeelReportTalkCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "57ae17KkItED7rJp1zwJjT3", "DeelReportTalkCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.titleLabel = null;
this.reportCntLabel = null;
this.banBtn = null;
this.headIcon = null;
this.data = null;
}
onLoad() {
this.banBtn.node.on(a.default.CLICK, this.onBanBtn, this);
this.node.on(r.default.SET_DATA, this.setData, this);
this.headIcon.node.on(a.default.CLICK, this.onIcon, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.nameLabel.string = e.userName;
this.titleLabel.string = e.title;
this.reportCntLabel.string = e.reportCnt + "";
this.headIcon.loadUrl(e.userImg);
});
}
onBanBtn() {
this.data.uId && l.default.ins.OpenPanelByName("BanTalkPanel", e => {
e.setData(this.data);
});
}
onIcon() {
l.default.ins.Enter("TalkScene", e => {
e.setData(this.data.uId);
}, l.ShiftAnima.moveLeftShift);
}
};
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "titleLabel", void 0);
i([ d(cc.Label) ], h.prototype, "reportCntLabel", void 0);
i([ d(a.default) ], h.prototype, "banBtn", void 0);
i([ d(s.default) ], h.prototype, "headIcon", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager"
} ],
DeviceButton: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "16bc0JW3SVPp4Jq94ThhJXM", "DeviceButton");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Player/Mng"), s = e("../Player/TriggerMng"), r = e("../World/Device"), l = e("../World/Interactable"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends r.default {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
super.onLoad();
this.node.on(l.default.INTERACT, this.onInteract, this);
}
setData(e, t) {
super.setData(e, t);
e = this.data;
a.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
scale: 1,
onInteract: []
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = this.data.extra.scale;
let o = this.getComponent(l.default);
o && (o.canInteract = !0);
}
onInteract() {
s.default.Ins.emitTrigger(this.data.extra.onInteract, this.node);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
onInteract: []
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addTrigger("点击时：", n.extra.onInteract, !0);
}
};
n([ d({
override: !0,
type: cc.Sprite
}) ], h.prototype, "sprite", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device",
"../World/Interactable": "Interactable"
} ],
DeviceCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cbec431HilIIa5H4gZQbHJ/", "DeviceCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.optionBtn = null;
this.createNewNode = null;
this.conf = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.optionBtn.node.on(s.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.optionBtn.node.active = !e.createNew;
this.createNewNode.active = e.createNew;
e.createNew ? a.I18nMgr.getSprite("createNewBtn", e => {
cc.isValid(this.sprite) && (this.sprite.spriteFrame = e);
}) : c.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, e.textureName, 100);
});
}
onOptionBtnTap() {
l.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(s.default) ], p.prototype, "optionBtn", void 0);
i([ h(cc.Node) ], p.prototype, "createNewNode", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng"
} ],
DeviceMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "00683E6zjFD7Y2zwameb5Tj", "DeviceMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Config"), r = e("../../../scripts/_autogen/data/data"), l = e("../../GameData/GameTypeDefine"), c = e("./BaseConfMng");
o.default = class extends c.BaseConfMng {
constructor() {
super();
this.confType = l.CommonDataType.Device;
this.creativeConfType = r.CreativeConfType.device;
this.appendBuildIn(s.Config.deviceConfs);
}
upgradeConf(e) {
if (e) {
e.type = l.CommonDataType.Device;
"Door" == e.prefabName && (e.prefabName = "DeviceButton");
"Device/Door" == e.textureName && (e.textureName = "Device/DeviceButton");
"ToggleThorn" == e.prefabName && (e.prefabName = "Lurker");
"Device/ToggleThorn" == e.textureName && (e.textureName = "Device/Lurker");
}
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleDeviceConf,
params: t
}, n.Game_RGetRoleDeviceConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleDeviceConf,
params: t
}, n.Game_RSaveRoleDeviceConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleDeviceConf,
params: t
}, n.Game_RSaveRoleDeviceConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleDeviceConf,
params: t
}, n.Game_RDelRoleDeviceConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
DeviceOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "35f10R/d5NP+JFm6avx5yTY", "DeviceOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.DeviceOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/Top"), s = e("../../Game/Device/Billboard"), r = e("../../Game/Device/Bomb"), l = e("../../Game/Device/ConveyorPlatform"), c = e("../../Game/Device/Decorator"), d = e("../../Game/Device/DeviceButton"), h = e("../../Game/Device/DeviceToggle"), p = e("../../Game/Device/FireBallLine"), u = e("../../Game/Device/Flag"), m = e("../../Game/Device/IceCone"), f = e("../../Game/Device/Ladder"), g = e("../../Game/Device/LoadPoint"), y = e("../../Game/Device/Lurker"), v = e("../../Game/Device/MonsterSpawner"), C = e("../../Game/Device/MovePlatform"), _ = e("../../Game/Device/SavePoint"), S = e("../../Game/Device/Saw"), I = e("../../Game/Device/Spring"), G = e("../../Game/Device/TrapPlatform"), T = e("../../Game/Player/Mng"), b = e("../../GameData/GameTypeDefine"), M = e("./CommonOptionHelper");
o.DeviceOptionHelper = class extends M.CommonOptionHelper {
constructor() {
super(...arguments);
this.deviceConf = null;
this.imageFileType = n.ImageFileType.device;
this.optionName = "装置";
this.refreshMsgName = "refreshDeviceList";
this.changeDataMsgName = "deviceDataChange";
}
setConf(e) {
super.setConf(e);
this.deviceConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
a.default.showLoading("正在上传(1/2)");
yield T.Mng.Ins.deviceMng.save(this.deviceConf);
a.default.hideLoading("上传成功");
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield T.Mng.Ins.deviceMng.delete(this.deviceConf);
});
}
displayWorldType() {
return !1;
}
initInspector(e) {
e.reset();
this.deviceConf.deviceType == b.DeviceType.Saw ? S.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.FireBallLine ? p.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Lurker ? y.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.IceCone ? m.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.MonsterSpawner ? v.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Button ? d.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Spring ? I.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Flag ? u.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Bomb ? r.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.TrapPlatform ? G.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.ConveyorPlatform ? l.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.MovePlatform ? C.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Ladder ? f.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Decorator ? c.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.SavePoint ? _.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.LoadPoint ? g.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Toggle ? h.default.initInspector(e, this.deviceConf) : this.deviceConf.deviceType == b.DeviceType.Billboard && s.default.initInspector(e, this.deviceConf);
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Top": "Top",
"../../Game/Device/Billboard": "Billboard",
"../../Game/Device/Bomb": "Bomb",
"../../Game/Device/ConveyorPlatform": "ConveyorPlatform",
"../../Game/Device/Decorator": "Decorator",
"../../Game/Device/DeviceButton": "DeviceButton",
"../../Game/Device/DeviceToggle": "DeviceToggle",
"../../Game/Device/FireBallLine": "FireBallLine",
"../../Game/Device/Flag": "Flag",
"../../Game/Device/IceCone": "IceCone",
"../../Game/Device/Ladder": "Ladder",
"../../Game/Device/LoadPoint": "LoadPoint",
"../../Game/Device/Lurker": "Lurker",
"../../Game/Device/MonsterSpawner": "MonsterSpawner",
"../../Game/Device/MovePlatform": "MovePlatform",
"../../Game/Device/SavePoint": "SavePoint",
"../../Game/Device/Saw": "Saw",
"../../Game/Device/Spring": "Spring",
"../../Game/Device/TrapPlatform": "TrapPlatform",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
DevicePage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "55f88DYu0lEg4vpxt95ZxZt", "DevicePage");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/Util"), l = e("../../../Game/OperationFlow"), c = e("../../../Game/Player/DynamicMng"), d = e("../../../Game/Player/Mng"), h = e("../../../Game/World/Tile"), p = e("../../../GameData/GameTypeDefine"), u = e("../EditWorldScene"), m = e("../TouchWorldShowGizmos"), f = e("./EditPageBase"), {ccclass: g, property: y} = cc._decorator;
let v = i = class extends f.EditPageBase {
constructor() {
super(...arguments);
this.editWorldScene = null;
this.list = null;
}
onLoad() {
this.list.node.on(s.default.CLICK_ITEM, this.onClickCell, this);
this.node.on("refreshDeviceList", this.refreshList, this);
}
onEnable() {
return a(this, void 0, void 0, function*() {
cc.game.on("refreshDeviceList", this.refreshList, this);
yield this.refreshList();
this.editWorldScene.gameData.parnetGame || cc.game.emit(i.DevicePage_Enable, this);
});
}
onDisable() {
cc.game.off("refreshDeviceList", this.refreshList, this);
}
refreshList() {
return a(this, void 0, void 0, function*() {
this.editWorldScene.elementBox.emptyLabel.node.active = !1;
let e = this.editWorldScene.elementBox.filter.getCurData(), t = yield d.Mng.Ins.assetGroupMng.findGroup(e.str);
t || (t = d.Mng.Ins.assetGroupMng.all);
let o = [];
for (let e of t.refDataList) e.confType == p.CommonDataType.Device && o.push(e.confId);
let i = yield d.Mng.Ins.deviceMng.loadMany(o), n = [];
c.DynamicMng.Ins.isDisable(c.FunctionEnum.PaintAsset, !1) || n.push({
createNew: !0
});
n = n.concat(i);
this.list.setDataArr(n);
this.list.selectByIdx(0);
this.editWorldScene.elementBox.emptyLabel.node.active = 1 == n.length;
});
}
onClickCell(e, t) {
return a(this, void 0, void 0, function*() {
if (t.createNew) l.OperationFlow.paintDevice(() => {
this.refreshList();
}); else {
this.instanceDevice(t);
cc.game.emit(i.DevicePage_PUT_DEVICE, t);
}
});
}
instanceDevice(e) {
return a(this, void 0, void 0, function*() {
let t = this.editWorldScene.world, o = t.camera.node.position, i = Math.round(o.x / h.default.SIZE), n = Math.round(o.y / h.default.SIZE), a = "device" + t.worldLayout.incId++, s = {
confId: e.id,
id: a,
isBuildIn: e.isBuildIn,
rotateIdx: e.rotateIdx,
ignoreDmgEnemy: e.ignoreDmgEnemy,
extra: e.extra ? r.Util.deepCopy(e.extra) : void 0
}, l = yield t.addDevice({
iCol: i,
iRow: n
}, e.prefabName);
l.setData(s, e);
m.default.Ins.clickDevice(l);
});
}
};
v.DevicePage_Enable = "DevicePage_Enable";
v.DevicePage_PUT_DEVICE = "DevicePage_PUT_DEVICE";
v.DevicePage_DEL_DEVICE = "DevicePage_DEL_DEVICE";
n([ y(u.default) ], v.prototype, "editWorldScene", void 0);
n([ y(s.default) ], v.prototype, "list", void 0);
v = i = n([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Util": "Util",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/World/Tile": "Tile",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../EditWorldScene": "EditWorldScene",
"../TouchWorldShowGizmos": "TouchWorldShowGizmos",
"./EditPageBase": "EditPageBase"
} ],
DeviceToggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3d8bd53sGRFH6xcShplYxQ7", "DeviceToggle");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Player/Mng"), s = e("../Player/TriggerMng"), r = e("../World/Device"), l = e("../World/Interactable"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends r.default {
constructor() {
super(...arguments);
this.sprite = null;
this.state = !1;
}
onLoad() {
super.onLoad();
this.node.on(l.default.INTERACT, this.onInteract, this);
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
state: !1,
scale: 1,
onOpen: [],
onClose: []
});
e.extra.scale = e.extra.scale || 1;
this.setState(e.extra.state);
this.node.scale = e.extra.scale;
let o = this.getComponent(l.default);
o && (o.canInteract = !0);
}
setState(e) {
this.state = e;
e ? a.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, this.conf.textureName, 64) : a.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, this.conf.textureName2, 64);
}
onInteract() {
this.setState(!this.state);
this.state ? s.default.Ins.emitTrigger(this.data.extra.onOpen, this.node) : s.default.Ins.emitTrigger(this.data.extra.onClose, this.node);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
state: !1,
onOpen: [],
onClose: []
};
o && e.addHead(t.name, t.textureName);
e.addToggle("初始状态：", n.extra.state, e => {
n.extra.state = e;
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
});
e.addTrigger("打开时：", n.extra.onOpen, !0);
e.addTrigger("关闭时：", n.extra.onClose, !0);
}
};
n([ d({
override: !0,
type: cc.Sprite
}) ], h.prototype, "sprite", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device",
"../World/Interactable": "Interactable"
} ],
DeviceTypeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "210fcmwg8tMoJXBYHhQVmx8", "DeviceTypeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/Config"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.label = null;
this.call = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.label.string = a.Config.getDeviceTypeName(e.deviceType);
s.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, e.textureName, 100);
}
};
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Game/Player/Mng": "Mng"
} ],
DeviceTypePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3a169xzA3RIp6ge0Rab7bf/", "DeviceTypePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../TypeScript/Frame/Panel"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Config"), {ccclass: r, property: l} = cc._decorator;
let c = class extends n.default {
constructor() {
super(...arguments);
this.list = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.list.node.on(a.default.CLICK_ITEM, this.onClickCell, this);
let e = s.Config.deviceConfs.filter(e => !e.forbidCustomCreate);
this.list.setDataArr(e);
}
closeAnim(e) {
e();
}
onClickCell(e, t) {
this.closePanel();
this.call && this.call(t);
}
};
i([ l(a.default) ], c.prototype, "list", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../TypeScript/Frame/Panel": "Panel",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config"
} ],
Device: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d95f1MtFmhJ6Y8n2X4kQm0W", "Device");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Util"), s = e("../Player/Mng"), r = e("../Player/SpriteMng"), l = e("./Tile"), c = e("./WorldNodeBody"), {ccclass: d, property: h} = cc._decorator;
let p = class extends c.default {
constructor() {
super(...arguments);
this.sprite = null;
this.conf = null;
this.data = null;
this.rotateAngles = [];
}
initInspector(e) {
throw new Error("Method not implemented.");
}
get dataId() {
return this.data.id;
}
onLoad() {
super.onLoad();
this.sprite && cc.game.on(r.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
}
get width() {
return this.sprite ? this.sprite.node.width * Math.abs(this.node.scaleX) : this.node.width * Math.abs(this.node.scaleX);
}
get height() {
return this.sprite ? this.sprite.node.height * Math.abs(this.node.scaleY) : this.node.height * Math.abs(this.node.scaleY);
}
onDestroy() {
this.sprite && cc.game.off(r.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
}
onPixelsUpdate(e, t) {
return n(this, void 0, void 0, function*() {
this.conf && this.conf.id == e && this.sprite && s.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t, 64);
});
}
setCutting(e) {
this.sprite && (this.sprite.enabled = !e);
}
setProperty(e, t, o, i, n) {
let a = typeof this.data[e];
if ("boolean" == a) {
let o = "true" == t || "1" == t;
this.data[e] = o;
"isShow" == e && (this.node.active = o);
} else if ("number" == a) {
let a = parseFloat(t);
Number.isNaN(a) && (a = 0);
o && (a *= -1);
n && (a *= l.default.SIZE);
(i || o) && (a += this.data[e]);
this.data[e] = a;
"scale" == e && (this.node.scale = a);
} else "string" == a ? this.data[e] = t : console.error(`>>not support device property[${e}] type[${a}]`);
}
setData(e, t) {
this.world.isGameScene && (e = a.Util.deepCopy(e));
this.data = e;
this.data.isShow = this.data.isShow || !0;
this.node.active = this.data.isShow;
this.conf = t;
if (this.rotateAngles.length > 0) {
let e = this.data.rotateIdx || 0;
this.node.angle = this.rotateAngles[e];
}
}
applyConf(e) {
this.conf = e;
}
isHeroActor(e) {
return this.world.isHeroActor(e.node);
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h({
displayName: "rotateAngles",
type: [ cc.Integer ]
}) ], p.prototype, "rotateAngles", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../Player/Mng": "Mng",
"../Player/SpriteMng": "SpriteMng",
"./Tile": "Tile",
"./WorldNodeBody": "WorldNodeBody"
} ],
DialogBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5966Y6STxIcaDJDIwJvKuI", "DialogBox");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../CustomUI/Button"), s = e("../Frame/Util"), r = e("./Player/Mng"), l = e("./Player/TriggerMng"), c = e("../GameScript/commands/GSCmdDialogue"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.dialogLabel = null;
this.continueLabel = null;
this.itemBtn = null;
this.touchNode = null;
this.triggerSource = null;
this.timePerWorld = .05;
this.str = "";
this.items = [];
this.timer = 0;
this.charIdx = 0;
this.lineIdx = 0;
this.playing = !1;
this.showing = !1;
this.closeCall = null;
this.lines = [];
}
onLoad() {
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
s.Util.makeBro(this.itemBtn.node, 0);
}
playLine(e) {
return n(this, void 0, void 0, function*() {
this.timer = 0;
this.charIdx = 0;
this.str = c.GSCmdDialogue.parseDialogue(e.str);
this.items = e.items || [];
if (e.evts) {
this.items.push({
str: "点击屏幕继续",
evts: e.evts
});
delete e.evts;
}
this.playing = !0;
this.dialogLabel.string = "";
this.continueLabel.node.active = !1;
let t = yield r.Mng.Ins.actorMng.loadOne(e.actorConfId);
if (t) {
this.sprite.node.active = !0;
this.nameLabel.string = t.name + "：";
r.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 140);
} else {
this.sprite.node.active = !1;
this.nameLabel.string = "";
}
});
}
update(e) {
if (this.playing) {
this.timer += e;
if (this.timer > this.timePerWorld) {
this.timer -= this.timePerWorld;
this.charIdx++;
this.charIdx <= this.str.length ? this.dialogLabel.string = this.str.substr(0, this.charIdx) : this.endLine();
}
}
}
endLine() {
this.dialogLabel.string = this.str;
this.playing = !1;
this.continueLabel.node.active = !0;
if (this.items && this.items.length >= 2) {
this.continueLabel.string = "请选择..";
s.Util.makeBro(this.itemBtn.node, this.items.length, (e, t) => {
let o = this.items[t], i = e.getComponent(a.default);
i.label.string = `${t + 1}.  ${o.str}`;
i.node.off(a.default.CLICK, this.onItemBtn, this);
i.node.on(a.default.CLICK, this.onItemBtn, this);
});
} else this.items && 1 == this.items.length ? this.continueLabel.string = this.items[0].str + ".." : this.continueLabel.string = "点击屏幕继续..";
}
nextLine() {
this.lineIdx++;
this.lineIdx < this.lines.length ? this.playLine(this.lines[this.lineIdx]) : this.hide();
}
onItemBtn(e) {
let t = e.target.getSiblingIndex(), o = this.items[t];
if (o && o.evts) {
l.default.Ins.emitTrigger(o.evts, this.triggerSource);
this.nextLine();
}
s.Util.makeBro(this.itemBtn.node, 0);
}
onTouchEnd() {
if (this.lines) if (this.playing) this.endLine(); else {
if (this.items && this.items.length >= 2) return;
this.items && 1 == this.items.length && l.default.Ins.emitTrigger(this.items[0].evts, this.triggerSource);
this.nextLine();
} else this.hide();
}
show(e, t) {
this.showing = !0;
this.lines = e.lines.concat();
this.triggerSource = t;
this.node.active = !0;
this.lineIdx = 0;
if (e.lines.length > 0) {
let t = e.lines[0];
this.playLine(t);
}
}
insert(e) {
let t = this.lineIdx + 1, o = this.lines.slice(0, t), i = this.lines.slice(t, this.lines.length);
this.lines = o.concat(e.lines).concat(i);
}
hide() {
this.showing = !1;
this.playing = !1;
this.lines = null;
this.node.active = !1;
this.closeCall && this.closeCall();
this.triggerSource = null;
}
check(e) {
return e && e.lines && e.lines.length > 0;
}
};
p.SHOW_DIALOG_BOX = "SHOW_DIALOG_BOX";
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "dialogLabel", void 0);
i([ h(cc.Label) ], p.prototype, "continueLabel", void 0);
i([ h(a.default) ], p.prototype, "itemBtn", void 0);
i([ h(cc.Node) ], p.prototype, "touchNode", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../CustomUI/Button": "Button",
"../Frame/Util": "Util",
"../GameScript/commands/GSCmdDialogue": "GSCmdDialogue",
"./Player/Mng": "Mng",
"./Player/TriggerMng": "TriggerMng"
} ],
DirBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5b7272AlGNFw4PSp0cNrj9K", "DirBtn");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator;
let r = i = class extends cc.Component {
constructor() {
super(...arguments);
this.up = null;
this.left = null;
this.down = null;
this.right = null;
this.touching = !1;
this.dir = cc.Vec2.ZERO;
}
onLoad() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove1, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd1, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd1, this);
}
onTouchStart(e) {
this.touching = !0;
this.dir = this.getDir(e);
}
onTouchMove1(e) {
this.dir = this.getDir(e);
}
onTouchEnd1(e) {
this.dir.x = 0;
this.dir.y = 0;
this.touching = !1;
}
update() {
this.touching && this.node.emit(i.DIR, this.dir);
}
getDir(e) {
let t = e.getLocation();
this.node.convertToNodeSpaceAR(t, t);
let o = t.x, i = t.y, n = Math.abs(o), a = Math.abs(i);
if (o > 0 && n > a) {
this.dir.x = 1;
this.dir.y = 0;
return this.dir;
}
if (o < 0 && n > a) {
this.dir.x = -1;
this.dir.y = 0;
return this.dir;
}
if (i > 0 && n < a) {
this.dir.x = 0;
this.dir.y = 1;
return this.dir;
}
if (i < 0 && n < a) {
this.dir.x = 0;
this.dir.y = -1;
return this.dir;
}
this.dir.x = 0;
this.dir.y = 0;
return this.dir;
}
};
r.DIR = "DIR";
n([ s(cc.Node) ], r.prototype, "up", void 0);
n([ s(cc.Node) ], r.prototype, "left", void 0);
n([ s(cc.Node) ], r.prototype, "down", void 0);
n([ s(cc.Node) ], r.prototype, "right", void 0);
r = i = n([ a ], r);
o.default = r;
cc._RF.pop();
}, {} ],
DiscoverMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e3773JFPBlEBLo4qeWyaSH9", "DiscoverMng");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../Frame/CrossPlatform"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Util"), d = e("./DynamicMng"), h = e("./GameCellDataMng"), p = e("./RcmdMng"), {ccclass: u, property: m} = cc._decorator;
let f = i = class extends cc.Component {
constructor() {
super(...arguments);
this.data = null;
this.ids = [ "GD:6480222:4", "GD:5752094:4", "GD:105104:87", "GD:1573118:45", "GD:87704:7", "GD:332828:12", "GD:2024199:53", "GD:4360969:10", "GD:349221:17", "GD:28939:29", "GD:2829101:9", "GD:6949682:2", "GD:363049:27", "GD:956653:2", "GD:2192113:12", "GD:202631:65", "GD:1451169:37", "GD:2922683:8", "GD:293378:11", "GD:235658:11", "GD:1405045:1", "GD:4457553:15", "GD:862722:15", "GD:1363747:4", "GD:4169726:4", "GD:5421578:16", "GD:3237816:5", "GD:104358:12", "GD:4316218:4", "GD:520296:1", "GD:4316218:6", "GD:4478617:6", "GD:601700:7", "GD:14327:13", "GD:4334986:9", "GD:49939:8", "GD:1777449:2", "GD:213720:5", "GD:88568:26", "GD:745658:1", "GD:4289370:1", "GD:2981787:2", "GD:18623:12", "GD:523140:12", "GD:90819:27", "GD:818203:19", "GD:60682:62", "GD:717699:1", "GD:3922352:1", "GD:2789310:3", "GD:3078773:6", "GD:18301:2", "GD:1728739:7", "GD:862722:12", "GD:1329319:7", "GD:1364672:19" ];
this.hotGameIds = [];
this.hotOpenCnt = 0;
this.freshGames = [];
this.followGameDatas = [];
this.creativeGameDatas = [];
this.rcmdGames = [];
}
loadHotGameIds() {
return a(this, void 0, void 0, function*() {
if (0 == this.hotGameIds.length) {
let e = r.crossPlatform.getStorageSync("hotGameIds") || [], t = r.crossPlatform.getStorageSync("hotGameIdsStamp") || 0;
if (c.Util.isToday(t) && e.length > 0) this.hotGameIds = e; else {
let e = {
gameTag: "ZongBang",
start: 0,
end: 500
}, t = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetGameIdListByGameTag,
params: e
}, s.Game_RGetGameIdListByGameTag);
if (t) {
this.hotGameIds = t.gameIdList;
c.Util.shuffle(this.hotGameIds);
this.hotGameIds = this.hotGameIds.slice(0, 20);
r.crossPlatform.setStorageSync("hotGameIds", this.hotGameIds);
r.crossPlatform.setStorageSync("hotGameIdsStamp", orange.TimeUtil.serverTime);
}
}
}
return this.hotGameIds;
});
}
initLoadHotGames(e) {
return a(this, void 0, void 0, function*() {
let t = yield this.loadHotGameIds();
t = t.slice(0, e);
this.hotOpenCnt = e;
return h.default.Ins.loadGames(t);
});
}
appendLoadHotGames(e) {
return a(this, void 0, void 0, function*() {
let t = this.hotOpenCnt, o = t + e;
o = Math.min(o, this.hotGameIds.length);
this.hotOpenCnt = o;
let i = this.hotGameIds.slice(t, o);
return h.default.Ins.loadGames(i);
});
}
loadOpenHotGames() {
return a(this, void 0, void 0, function*() {
let e = this.hotGameIds.slice(0, this.hotOpenCnt);
return h.default.Ins.loadGames(e);
});
}
initLoadFreshGames(e) {
return a(this, void 0, void 0, function*() {
this.freshGames.length < e && (yield this.appendLoadFreshGames(e));
return this.freshGames.slice(0, e);
});
}
appendLoadFreshGames(e) {
return a(this, void 0, void 0, function*() {
let t = "";
this.freshGames.length > 0 && (t = this.freshGames[0].id);
let o = this.freshGames.length, i = o + e, n = {
start: o,
end: i = Math.min(i, 20),
startMember: t
}, a = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetNewGameList,
params: n
}, s.Game_RGetNewGameList);
if (a) {
for (let e = 0; e < a.gameDatas.length; e++) {
let t = a.gameDatas[e];
this.freshGames.push(t);
h.default.Ins.cache.set(t.id, t);
}
return a.gameDatas;
}
return [];
});
}
appendLoadFollowGames(e) {
return a(this, void 0, void 0, function*() {
let t = {
startIndex: this.followGameDatas.length,
endIndex: this.followGameDatas.length + e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetHomepageFollowUserGames,
params: t
}, s.Game_RGetHomepageFollowUserGames);
if (o) {
for (let e = 0; e < o.gameDatas.length; e++) this.followGameDatas.push(o.gameDatas[e]);
return o.gameDatas;
}
return [];
});
}
initLoadCreativeGames(e) {
return a(this, void 0, void 0, function*() {
if (d.DynamicMng.Ins.isInspectVersion()) return [];
this.creativeGameDatas.length < e && (yield this.appendLoadCreativeGames(e));
return this.creativeGameDatas.slice(0, e);
});
}
appendLoadCreativeGames(e) {
return a(this, void 0, void 0, function*() {
let t = {
start: this.creativeGameDatas.length,
end: this.creativeGameDatas.length + e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetSourceCreativeGameRank,
params: t
}, s.Game_RGetSourceCreativeGameRank);
if (o) {
for (let e = 0; e < o.gameDatas.length; e++) this.creativeGameDatas.push(o.gameDatas[e]);
return o.gameDatas;
}
return [];
});
}
appendLoadRcmdGames(e) {
return a(this, void 0, void 0, function*() {
if (p.default.Ins.tempGameShowDatas.length > 0) {
console.log("julian", p.default.Ins.tempGameShowDatas.length);
yield p.default.Ins.checkUploadGameShow();
}
let t = {
count: e,
showType: "RecommendComp"
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetRecommendGameIdList,
params: t
}, s.Game_RGetRecommendGameIdList);
if (o) {
let e = [];
for (let t = 0; t < o.recommendList.length; t++) {
let i = o.recommendList[t];
e.push(i.id);
}
let t = yield h.default.Ins.loadGames(e), i = orange.TimeUtil.serverTime;
for (let e = 0; e < o.recommendList.length; e++) {
let n = o.recommendList[e], a = t.find(e => e.id == n.id);
a ? this.rcmdGames.push({
gameCellData: a,
bk: n.bk,
st: n.st
}) : p.default.Ins.gameShow(n.id, "RecommendComp", i, n.bk, n.st);
}
}
return this.rcmdGames;
});
}
};
f.Ins = new i();
f = i = n([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Util": "Util",
"./DynamicMng": "DynamicMng",
"./GameCellDataMng": "GameCellDataMng",
"./RcmdMng": "RcmdMng"
} ],
DiscoverPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "035946IyPpJjLQK82gd6jAE", "DiscoverPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Toggle"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/CrossPlatform"), c = e("../../Frame/Util"), d = e("../../Game/GameEnv"), h = e("../../Game/Player/DynamicMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.toggle = null;
this.toggleGroup = null;
this.scrollView = null;
this.top = null;
this.content = null;
this.pageMap = new Map();
this.datas = [];
this.promiseCache = new Map();
}
onLoad() {
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
h.DynamicMng.Ins.isDisable(h.FunctionEnum.DiscoverPage, !1) || l.wx && d.gameEnv.isWxReviewCity ? this.datas = [ {
name: "精选",
prefab: "ChosenSubPage"
}, {
name: "关注",
prefab: "FollowGamesSubPage"
} ] : this.datas = [ {
name: "发现",
prefab: "DiscoverSubPage"
}, {
name: "精选",
prefab: "ChosenSubPage"
}, {
name: "新游",
prefab: "FreshSubPage"
}, {
name: "关注",
prefab: "FollowGamesSubPage"
} ];
c.Util.makeBro(this.toggle.node, this.datas.length, (e, t) => {
let o = e.getComponent(s.default), i = this.datas[t];
o.label.string = a.I18nMgr.getI18nStringByZh(i.name);
c.Util.updateLabel(o.label);
o.node.width = o.label.node.width + 40;
c.Util.updateAllWidget(o.node);
});
}
onToggleChange(e, t, o) {
return n(this, void 0, void 0, function*() {
this.pageMap.forEach(e => {
e.active = !1;
});
let t = this.datas[e].prefab, o = this.pageMap.get(t);
if (!o) {
let i = this.promiseCache.get(t);
if (!i) {
i = c.Util.loadBundleRes("Scene/HomeScene/DiscoverPage/" + t);
this.promiseCache.set(t, i);
}
let n = yield i;
if (e !== this.toggleGroup.idx) return;
if (!(o = this.pageMap.get(t))) {
o = cc.instantiate(n);
this.content.addChild(o);
this.pageMap.set(t, o);
}
}
o.active = !0;
let i = this.toggleGroup.toggleItems[e], n = this.scrollView.node.width, a = this.scrollView.content.width, s = (i.node.x - n / 2) / (a - n);
this.scrollView.scrollToPercentHorizontal(s, .3);
});
}
selectPage(e) {
this.toggleGroup.selectIdx(e);
}
};
i([ u(s.default) ], m.prototype, "toggle", void 0);
i([ u(r.default) ], m.prototype, "toggleGroup", void 0);
i([ u(cc.ScrollView) ], m.prototype, "scrollView", void 0);
i([ u(cc.Node) ], m.prototype, "top", void 0);
i([ u(cc.Node) ], m.prototype, "content", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Toggle": "Toggle",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Player/DynamicMng": "DynamicMng"
} ],
DiscoverSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c22d6KkE+NMwp96oFCATDIg", "DiscoverSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/CrossPlatform"), r = e("../../../Game/Player/DiscoverMng"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/GameCellDataMng"), d = e("../../../Game/Player/GiftRankMng"), h = e("../../../CustomUI/Button"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.loading = null;
this.list = null;
this.bannerBtn = null;
}
onLoad() {
this.loading.width = this.loading.height = 0;
this.list.getPrefabName = e => e.prefabName;
this.list.calculateSizeFunc = (e, t) => {
if ("GiftRankComp" == e.prefabName) {
let o = Math.min(e.ranks.length, 3);
return {
w: t.prefab.width,
h: 135 * o + 120
};
}
return {
w: t.prefab.width,
h: t.prefab.height
};
};
this.bannerBtn && this.bannerBtn.node.on(h.default.CLICK, this.onBannerClick, this);
this.refresh();
}
refresh() {
return n(this, void 0, void 0, function*() {
if (l.DynamicMng.Ins.isInspectVersion()) {
this.initFakeData();
return;
}
let e = [];
e.push({
prefabName: "GameTagComp"
});
e.push({
prefabName: "Space",
w: 0,
h: 50
});
let t = (yield l.DynamicMng.Ins.loadOne("GameChosenIds")) || [];
if (s.wx) {
let e = (yield l.DynamicMng.Ins.loadOne("IpGameIds")) || [];
t = t.filter(t => !e.includes(t));
}
t = t.slice(0, 12);
e.push({
prefabName: "ChosenComp",
games: yield c.default.Ins.loadGames(t)
});
e.push({
prefabName: "Space",
w: 0,
h: 50
});
let o = yield l.DynamicMng.Ins.loadOne("GiftRank");
if (o) {
let t = o.DiscoverSubPage;
if (t) {
let o = t.rankType, i = t.rankName, n = [];
(n = d.GiftRankMng.Ins.getGiftRank(o)).length < 3 && (n = yield d.GiftRankMng.Ins.appendLoadGiftRank(o, 3));
n.length && e.push({
name: i,
rankType: o,
prefabName: "GiftRankComp",
ranks: n
});
}
}
e.push({
prefabName: "Space",
w: 0,
h: 50
});
e.push({
prefabName: "RecommendHeadComp"
});
let i = r.default.Ins.rcmdGames;
i.length < 12 && (i = yield r.default.Ins.appendLoadRcmdGames(12));
for (let t = 0; t < i.length; t += 3) {
let o = {
prefabName: "RecommendComp",
games: [ i[t], i[t + 1], i[t + 2] ]
};
e.push(o);
}
this.list.setDataArr(e);
});
}
initFakeData() {
return n(this, void 0, void 0, function*() {
let e = yield c.default.Ins.loadGames(l.DynamicMng.Ins.inspectGameIds), t = [];
t.push({
prefabName: "GameBannerComp",
games: e
});
t.push({
prefabName: "Space",
w: 0,
h: 50
});
t.push({
prefabName: "RecommendHeadComp"
});
t.push({
prefabName: "RecommendComp",
games: [ e[0], e[1], e[2] ]
});
t.push({
prefabName: "RecommendComp",
games: [ e[3], e[4], e[5] ]
});
this.list.setDataArr(t);
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (o > 100) {
let e = 0, t = yield l.DynamicMng.Ins.loadOne("GiftRankActivity");
t && (e = t.rankType);
d.GiftRankMng.Ins.deleteGiftRank(e);
this.refresh();
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield r.default.Ins.appendLoadRcmdGames(12);
this.refresh();
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loading.width = this.loading.height = Math.min(o, 100);
this.loading.angle = o;
} else this.loading.width = this.loading.height = 0;
}
});
}
onBannerClick() {
return n(this, void 0, void 0, function*() {
cc.sys.openURL("https://discord.gg/m98qqFeQAM");
});
}
};
i([ u(cc.Node) ], m.prototype, "loading", void 0);
i([ u(a.default) ], m.prototype, "list", void 0);
i([ u(h.default) ], m.prototype, "bannerBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Game/Player/DiscoverMng": "DiscoverMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../../Game/Player/GiftRankMng": "GiftRankMng"
} ],
DocumentScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9608fXjiXFKvItk89zxUPRP", "DocumentScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Scene"), s = e("../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.contentLabel = null;
this.backBtn = null;
}
onLoad() {
this.backBtn.node.on(n.default.CLICK, this.onBackBtn, this);
}
onBackBtn() {
s.default.ins.Back(() => {}, s.ShiftAnima.moveRightShift);
}
setData(e, t) {
this.titleLabel.string = e;
this.contentLabel.string = t;
}
};
i([ l(cc.Label) ], c.prototype, "titleLabel", void 0);
i([ l(cc.Label) ], c.prototype, "contentLabel", void 0);
i([ l(n.default) ], c.prototype, "backBtn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager"
} ],
DownloadNewVerPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b3e706PYXNMHphFJ0/jgOZ1", "DownloadNewVerPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ProgressBar"), a = e("../../Frame/Panel"), s = e("../../Game/Hortor"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.downloadProgressBar = null;
this._retryTimer = 0;
this._downloadUrl = "";
this._isDownloading = !1;
this._isDownloadingOver = !1;
}
canRetry() {
return this._retryTimer < cc.director.getTotalTime();
}
setData(e) {
this._downloadUrl = e;
this.downloadProgressBar.node.active = !0;
this.downloadProgressBar.setRange(0, 1);
this.downloadProgressBar.setValue(0);
this._retryTimer = 0;
this._isDownloadingOver = !1;
this.onStartDownload();
}
ReStartDownload() {
console.log(">>ReStartDownload");
this.onStartDownload();
}
onStartDownload() {
this._isDownloading = !0;
this._retryTimer = cc.director.getTotalTime() + 2e3;
s.Hortor.downloadNewPkg(this._downloadUrl, this.onProgress.bind(this), this.onComplete.bind(this));
}
onProgress(e) {
this._isDownloading && this.downloadProgressBar.setValue(e);
}
onComplete(e) {
this._isDownloading = !1;
if (e) {
this._isDownloadingOver = !0;
this.closePanel();
this.callComplete && this.callComplete(e);
}
}
update() {
this._isDownloadingOver || this._isDownloading || cc.sys.getNetworkType() == cc.sys.NetworkType.NONE || !this.canRetry() || this.ReStartDownload();
}
};
i([ l(n.default) ], c.prototype, "downloadProgressBar", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ProgressBar": "ProgressBar",
"../../Frame/Panel": "Panel",
"../../Game/Hortor": "Hortor"
} ],
DragMoverCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "10dc7aLq9hGOK96NWG1VOb+", "DragMoverCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./BaseMoveCtrl"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
constructor() {
super(...arguments);
this.mover = null;
}
onLoad() {
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove7, this);
}
setMover(e) {
this.mover = e;
}
onTouchMove7(e) {
let t = e.getDelta();
this.mover.move(t);
}
setMoveDir(e) {
this.mover && this.mover.move(e);
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"./BaseMoveCtrl": "BaseMoveCtrl"
} ],
DragMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e013alHuq5GKpwkkROkiYKX", "DragMover");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./Mover"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
constructor() {
super(...arguments);
this.box = null;
}
onLoad() {
this.box = this.getComponent(cc.BoxCollider);
}
move(e) {
let t = this.node.position;
t.addSelf(e);
this.node.position = t;
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"./Mover": "Mover"
} ],
DropDownBoxItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "58a8aouBrdNHZ6gcoHZlQlQ", "DropDownBoxItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/DropDownBox"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.dropDownBox = null;
this.onChange = null;
}
onLoad() {
this.dropDownBox.node.on(n.default.SELECT_CHANGE, this.onSelectChange, this);
}
setData(e, t, o, i) {
this.onChange = i;
this.nameLabel && (this.nameLabel.string = e);
this.dropDownBox.setDataArr(t);
this.dropDownBox.selectByIdx(o);
}
onSelectChange(e, t, o) {
this.onChange && this.onChange(e, t, o);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(n.default) ], r.prototype, "dropDownBox", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../CustomUI/DropDownBox": "DropDownBox"
} ],
DropDownBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "02a1aDcXZVM+7uwCjFFirPg", "DropDownBox");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Top"), s = e("../Frame/Util"), r = e("../Game/Player/Mng"), l = e("./Button"), c = e("./ScrollList"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.icon = null;
this.triangle = null;
this.list = null;
this.openDisplayNode = null;
this.strLenLimit = -1;
this.curSelectIdx = 0;
this.dataArr = [];
this.oriPos = null;
}
onLoad() {
this.node.on(l.default.CLICK, this.onClick, this);
this.list.node.on(c.default.SELECT_ITEM, this.onSelectItem, this);
this.list.node.on(c.default.CLICK_ITEM, this.onClcikItem, this);
this.openDisplayNode || (this.openDisplayNode = this.list.node);
this.openDisplayNode.active = !1;
}
onDestroy() {
this.openDisplayNode && this.openDisplayNode.removeFromParent();
}
setDataArr(e, t = 0) {
this.openDisplayNode || (this.openDisplayNode = this.list.node);
this.dataArr = e || [];
this.openDisplayNode.active = !1;
this.selectByIdx(t);
}
getDataArr() {
return this.dataArr;
}
selectByIdx(e, t = !1) {
this.curSelectIdx = e;
let o = this.dataArr[e];
if (o) {
if (this.label) {
this.label.node.active = !!o.str;
this.strLenLimit > 0 ? this.label.string = s.Util.clampStr(o.str, this.strLenLimit, "..") : this.label.string = o.str;
}
if (this.icon) {
let e = o.img;
this.icon.node.active = !!e;
e && r.Mng.Ins.spriteMng.setSprite(this.icon, e, 50);
}
this.node.emit(i.SELECT_CHANGE, e, o, t);
} else {
this.label && (this.label.node.active = !1);
this.icon && (this.icon.node.active = !1);
this.node.emit(i.SELECT_CHANGE, e, null, t);
}
}
getCurData() {
return this.curSelectIdx < 0 || this.curSelectIdx >= this.dataArr.length ? null : this.dataArr[this.curSelectIdx];
}
open() {
this.openDisplayNode.active = !0;
let e = this.list.getComponent(cc.Widget);
e && (e.enabled = !1);
this.triangle.angle = 90;
a.default.blockInput(!0, "DropDownBox");
a.default.node.on(cc.Node.EventType.TOUCH_END, this.onTopNodeTouch, this);
this.oriPos = this.openDisplayNode.position;
s.Util.moveNode(this.openDisplayNode, a.default.node);
this.list.setDataArr(this.dataArr);
this.list.selectByIdx(this.curSelectIdx);
}
close() {
this.openDisplayNode.active = !1;
this.triangle.angle = 0;
a.default.blockInput(!1, "DropDownBox");
a.default.node.off(cc.Node.EventType.TOUCH_END, this.onTopNodeTouch, this);
s.Util.moveNode(this.openDisplayNode, this.node);
this.openDisplayNode.position = this.oriPos;
}
onTopNodeTouch() {
this.close();
}
onClick() {
this.openDisplayNode.active ? this.close() : this.open();
}
onSelectItem(e, t) {
this.selectByIdx(e, !0);
}
onClcikItem(e, t) {
this.close();
this.node.emit(i.CLICK_ITEM, e, t);
}
};
p.SELECT_CHANGE = "SELECT_CHANGE";
p.CLICK_ITEM = "CLICK_ITEM";
n([ h(cc.Label) ], p.prototype, "label", void 0);
n([ h(cc.Sprite) ], p.prototype, "icon", void 0);
n([ h(cc.Node) ], p.prototype, "triangle", void 0);
n([ h(c.default) ], p.prototype, "list", void 0);
n([ h(cc.Node) ], p.prototype, "openDisplayNode", void 0);
n([ h ], p.prototype, "strLenLimit", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../Frame/Top": "Top",
"../Frame/Util": "Util",
"../Game/Player/Mng": "Mng",
"./Button": "Button",
"./ScrollList": "ScrollList"
} ],
DropDownItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5bda4RsswxEUZe8chU6dsCA", "DropDownItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../Frame/UIColor"), a = e("../Game/Player/Mng"), s = e("./ScrollList"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.icon = null;
}
onLoad() {
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
let t = this.node.getComponent(cc.Widget);
t && (t.enabled = !1);
if (this.label) {
this.label.node.active = !!e.str;
this.label.string = e.str;
}
if (this.icon) {
let t = e.img;
this.icon.node.active = !!t;
t && a.Mng.Ins.spriteMng.setSprite(this.icon, t, 50, 1);
}
}
onStateChange(e) {
this.node.color = e ? n.UIColor.blue : n.UIColor.white;
}
};
i([ l(cc.Label) ], c.prototype, "label", void 0);
i([ l(cc.Sprite) ], c.prototype, "icon", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../Frame/UIColor": "UIColor",
"../Game/Player/Mng": "Mng",
"./ScrollList": "ScrollList"
} ],
DynamicMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c20a9fdZG1H5pWWijDXF7KB", "DynamicMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.DynamicMng = o.FunctionEnum = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/CrossPlatform"), s = e("../../Frame/NetworkMgr"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Role"), d = e("../GameEnv"), h = e("../Hortor");
(function(e) {
e.PublishGame = "PublishGame2";
e.PublishTalk = "PublishTalk";
e.PublishGoods = "PublishGoods";
e.PublishGameTag = "PublishGameTag";
e.PublishGameComment = "PublishGameComment";
e.PublishTalkComment = "PublishTalkComment";
e.PublishUserInfo = "PublishUserInfo";
e.UserImg = "UserImg";
e.UserName = "UserName";
e.FriendScene = "FriendScene";
e.DiscoverPage = "DiscoverPage";
e.GoodsPage = "GoodsPage";
e.GameComment = "GameComment";
e.TalkComment = "TalkComment";
e.CreativeGame = "CreativeGame";
e.PaintAsset = "PaintAsset";
})(o.FunctionEnum || (o.FunctionEnum = {}));
class p {
constructor() {
this.map = new Map();
this.inspectGameIds = [ "GD:14408:27", "GD:5070497:53", "GD:1024699:314", "8877198:1", "GD:6480222:26", "GD:5070497:33", "GD:5070497:24", "GD:6480222:19", "GD:8447584:7", "GD:5070497:15", "GD:5070497:9" ];
this.inspectGoodsIds = [ "GI:1338721:1", "GI:239686:1", "GI:93877:1", "GI:175121:2", "GI:33792:1", "GI:1644064:1" ];
}
init(e) {
this.map = e;
}
loadOne(e) {
return i(this, void 0, void 0, function*() {
let t = this.map.get(e);
if (!t) {
let o = {
id: e
}, i = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetOneDynamicConfig,
params: o
}, n.Game_RGetOneDynamicConfig);
if (i) {
t = i.dynamicConfig;
0 == Object.keys(t).length && "object" == typeof t && (t = null);
this.map.set(e, t);
}
}
return t;
});
}
isViolationsName(e) {
if (!e) return !1;
let t = e.toLowerCase(), o = this.map.get("ViolationsNames") || new Map(), i = o.all || [];
if (h.Hortor.isApp()) {
let e = h.Hortor.platformSysBigType == h.PlatformSysBigType.Android ? d.gameEnv.androidChannel : "apple";
i = i.concat(o[e] || []);
} else a.tt ? i = i.concat(o.tt || []) : a.wx && (i = i.concat(o.wx || []));
for (let e = 0; e < i.length; e++) {
let o = i[e];
if (t.indexOf(o) >= 0) return !0;
}
return !1;
}
isDisable(e, t) {
let o = this.map.get("DisableFunction") || {}, i = null;
h.Hortor.isApp() ? i = o[d.gameEnv.androidChannel] : a.tt ? i = o.tt : a.wx && (i = o.wx);
let n = !1 === (null == (i = i || {}) ? void 0 : i[e]);
n && t && r.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "提示";
e.label.string = i.reason || "";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "好的",
color: l.UIColor.blue
});
});
return n;
}
isGmPlayer() {
return (this.map.get("GmPlayerIds") || []).indexOf(c.default.Ins.role.id) >= 0;
}
isGmDebug() {
return !h.Hortor.isApp() && !h.Hortor.isMiniGame();
}
isInspectVersion() {
let e = this.map.get("InspectVersionData") || {};
return h.Hortor.isApp() ? h.Hortor.platformSysBigType == h.PlatformSysBigType.IOS ? e.apple == d.gameEnv.creatorVersion : e[d.gameEnv.androidChannel] == d.gameEnv.creatorVersion : a.tt ? e.tt == d.gameEnv.creatorVersion : void 0;
}
isGameSwitchOpen(e) {
let t = this.map.get("GameSwitchs") || [];
for (let o of t) if (o.key == e) return o.open;
return !0;
}
}
o.DynamicMng = p;
p.Ins = new p();
p.SW_GS = "SW_GS";
p.SW_GS_REF_NOTCHECK = "SW_GS_REF_NOTCHECK";
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Role": "Role",
"../GameEnv": "GameEnv",
"../Hortor": "Hortor"
} ],
EditAssetGroupCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6a4bbAeIAVG5Y/ov0xqLlmU", "EditAssetGroupCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/DataBind"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.DB.DataBindComponent {
constructor() {
super(...arguments);
this.checkNoe = null;
this.spIcon = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.checkNoe.active = e.check;
r.Mng.Ins.spriteMng.setSprite(this.spIcon, e.textureName, 100);
});
}
};
i([ c(cc.Node) ], d.prototype, "checkNoe", void 0);
i([ c(cc.Sprite) ], d.prototype, "spIcon", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/DataBind": "DataBind",
"../../Game/Player/Mng": "Mng"
} ],
EditAssetGroupPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "067262bbuVMeb5o3fd10kXN", "EditAssetGroupPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../CustomUI/ToggleGroup"), c = e("../../Frame/Panel"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/UIColor"), u = e("../../Game/Player/Mng"), m = e("../../GameData/GameTypeDefine"), {ccclass: f, property: g} = cc._decorator;
let y = class extends c.default {
constructor() {
super(...arguments);
this.labelSelectInfo = null;
this.editGroupName = null;
this.toggleGroup = null;
this.scrollList = null;
this.btnOk = null;
this.btnDel = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.scrollList.node.on(r.default.CLICK_ITEM, this.onClickItem, this);
this.toggleGroup.node.on(l.default.TOGGLE_CHANGE, this.refreshPage, this);
this.btnOk.node.on(s.default.CLICK, this.onOkBtn, this);
this.btnDel.node.on(s.default.CLICK, this.onDeletBtn, this);
}
refreshPage() {
return n(this, void 0, void 0, function*() {
let e = [];
switch (this.toggleGroup.idx) {
case 0:
e = yield u.Mng.Ins.tileMng.loadAll();
break;

case 1:
e = yield u.Mng.Ins.actorMng.loadAll();
break;

case 2:
e = yield u.Mng.Ins.deviceMng.loadAll();
break;

case 3:
e = yield u.Mng.Ins.propMng.loadAll();
}
e = e.filter(e => !e.belongGameId && !e.importOthersImg && !e.goodsUId);
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o], n = this.data.refDataList.find(e => e.confId == i.id);
t.push({
id: i.id,
type: i.type,
textureName: i.textureName,
check: !!n
});
}
this.scrollList.setDataArr(t);
});
}
onClickItem(e, t) {
let o = this.data.refDataList.findIndex(e => e.confId == t.id);
if (o >= 0) this.data.refDataList.splice(o, 1); else {
let e = new a.ActorGroupRefData();
e.confId = t.id;
e.confType = t.type;
this.data.refDataList.unshift(e);
}
this.refreshPage();
this.refreshCnt();
}
setData(e) {
this.data = e;
this.editGroupName.string = e.groupName;
this.toggleGroup.selectIdx(0);
this.refreshCnt();
}
refreshCnt() {
return n(this, void 0, void 0, function*() {
let e = 0;
for (let t = 0; t < this.data.refDataList.length; t++) {
let o = this.data.refDataList[t];
(yield this.getConf(o.confType, o.confId)) && e++;
}
this.labelSelectInfo.string = `Selected（${e}）`;
});
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.groupName, t = this.editGroupName.textLabel.string;
if (t) if (e != t && u.Mng.Ins.assetGroupMng.isGroupNameExist(t)) h.default.showToast("分组名已存在"); else {
this.closePanel();
for (let e = 0; e < this.data.refDataList.length; e++) {
let t = this.data.refDataList[e];
(yield this.getConf(t.confType, t.confId)) || this.data.refDataList.splice(e--, 1);
}
if (e != t) {
yield u.Mng.Ins.assetGroupMng.delete(e);
this.data.groupName = t;
}
yield u.Mng.Ins.assetGroupMng.save(this.data);
u.Mng.Ins.assetGroupMng.curGroupName = t;
cc.game.emit("refreshElementBox");
} else h.default.showToast("请输入分组名");
});
}
onDeletBtn() {
d.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否确定删除分组？";
e.setLeftBtn({
text: "是",
color: p.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield u.Mng.Ins.assetGroupMng.delete(this.data.groupName);
this.closePanel();
cc.game.emit("EditAssetGroupPanel.deleteGroup");
})
});
e.setRightBtn({
text: "点错了",
color: p.UIColor.blue
});
});
}
getConf(e, t) {
return n(this, void 0, void 0, function*() {
switch (e) {
case m.CommonDataType.Tile:
return yield u.Mng.Ins.tileMng.loadOne(t);

case m.CommonDataType.Actor:
return yield u.Mng.Ins.actorMng.loadOne(t);

case m.CommonDataType.Device:
return yield u.Mng.Ins.deviceMng.loadOne(t);

case m.CommonDataType.Prop:
return yield u.Mng.Ins.propMng.loadOne(t);

case m.CommonDataType.Weapon:
return yield u.Mng.Ins.weaponMng.loadOne(t);

case m.CommonDataType.Bullet:
return yield u.Mng.Ins.bulletMng.loadOne(t);
}
});
}
};
i([ g(cc.Label) ], y.prototype, "labelSelectInfo", void 0);
i([ g(cc.EditBox) ], y.prototype, "editGroupName", void 0);
i([ g(l.default) ], y.prototype, "toggleGroup", void 0);
i([ g(r.default) ], y.prototype, "scrollList", void 0);
i([ g(s.default) ], y.prototype, "btnOk", void 0);
i([ g(s.default) ], y.prototype, "btnDel", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
EditBoxItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "61f883msDlEFoEVofR+eneT", "EditBoxItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.editBox = null;
this.onChange = null;
}
setData(e, t, o) {
this.onChange = o;
this.nameLabel.string = e;
this.editBox.string = t;
}
onTextChange() {
this.onChange && this.onChange(this.editBox.textLabel.string);
}
};
i([ a(cc.Label) ], s.prototype, "nameLabel", void 0);
i([ a(cc.EditBox) ], s.prototype, "editBox", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
EditColorBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6b5a3TGKc9FgKXZVuPbZvMc", "EditColorBtn");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/SceneManager"), s = e("../../Frame/Panel"), r = e("./PaintScene"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
onLoad() {
this.node.on(n.default.CLICK, this.onClick, this);
}
onClick() {
let e = cc.color(128, 128, 128), t = a.default.ins.findScene(r.default);
t && (e = t.pencilColor);
a.default.ins.OpenPanelByName("EditColorPanel", () => {});
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"./PaintScene": "PaintScene"
} ],
EditColorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b007fkZGIdPUIaKIFCRMdbT", "EditColorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), l = e("../../Scene/PaintScene/PaintScene"), c = e("../../Frame/Util"), d = e("../../Frame/SceneManager"), h = e("../../Game/Player/ColorMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.okBtn = null;
this.list = null;
this.addBtn = null;
this.deleteBtn = null;
this.moveUpBtn = null;
this.moveDownBtn = null;
this.emptyNode = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.closePanel, this);
let e = c.Util.deepCopy(h.ColorMng.Ins.customColors);
this.emptyNode.active = 0 == e.length;
this.list.setDataArr(e);
if (e.length > 0) {
this.list.scrollTo(cc.Vec2.ZERO, .2);
this.list.selectByIdx(e.length - 1);
}
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.addBtn.node.on(a.default.CLICK, this.onAddBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
this.moveUpBtn.node.on(a.default.CLICK, this.onMoveUpBtn, this);
this.moveDownBtn.node.on(a.default.CLICK, this.onMoveDownBtn, this);
}
onAddBtn() {
let e = cc.color(0, 0, 0), t = this.list.getCurData();
if (t) {
e.r = t.data.r;
e.g = t.data.g;
e.b = t.data.b;
}
d.default.ins.OpenPanelByName("CreateColorPanel", t => {
t.setColor(0, e);
t.setSaveStyle(!0);
t.call = e => {
let t = this.list.getDataArr();
t.splice(this.list.curSelectIdx + 1, 0, e);
this.list.setDataArr(t);
this.emptyNode.active = 0 == t.length;
};
});
}
setData() {
let e = c.Util.deepCopy(h.ColorMng.Ins.customColors);
this.list.setDataArr(e);
this.emptyNode.active = 0 == e.length;
e.length > 0 && this.list.selectByIdx(0);
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
let e = this.list.getDataArr();
yield h.ColorMng.Ins.saveAll(e);
let t = d.default.ins.findScene(l.default), o = this.list.getCurData();
if (o) {
let e = cc.color(o.data.r, o.data.g, o.data.b);
t.refreshColorList(o.id);
t.pencilColor = e;
} else t.refreshColorList(0);
this.closePanel();
});
}
onDeleteBtn() {
let e = this.list.curSelectIdx, t = this.list.getDataArr();
t.splice(e, 1);
this.list.setDataArr(t);
this.emptyNode.active = 0 == t.length;
}
onMoveUpBtn() {
let e = this.list.curSelectIdx, t = this.list.getDataArr();
if (e > 0) {
let o = t[e], i = t[e - 1];
t[e] = i;
t[e - 1] = o;
this.list.setDataArr(t);
this.list.selectByIdx(e - 1);
}
}
onMoveDownBtn() {
let e = this.list.curSelectIdx, t = this.list.getDataArr();
if (e < t.length - 1) {
let o = t[e], i = t[e + 1];
t[e] = i;
t[e + 1] = o;
this.list.setDataArr(t);
this.list.selectByIdx(e + 1);
}
}
closePanel() {
super.closePanel();
}
};
i([ u(a.default) ], m.prototype, "okBtn", void 0);
i([ u(s.default) ], m.prototype, "list", void 0);
i([ u(a.default) ], m.prototype, "addBtn", void 0);
i([ u(a.default) ], m.prototype, "deleteBtn", void 0);
i([ u(a.default) ], m.prototype, "moveUpBtn", void 0);
i([ u(a.default) ], m.prototype, "moveDownBtn", void 0);
i([ u(cc.Node) ], m.prototype, "emptyNode", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/ColorMng": "ColorMng",
"../../Scene/PaintScene/PaintScene": "PaintScene"
} ],
EditGameScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a7dbduvO/9LSLLgjgaF0WkU", "EditGameScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../Frame/EngineManager"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/TweenUtil"), p = e("../../Frame/UIColor"), u = e("../../Frame/Util"), m = e("../../Game/Player/Mng"), f = e("../../TGA"), g = e("../HomeScene/HomeScene"), y = e("./WorldCell"), v = e("./WorldCellMenu"), C = e("../../Game/OperationFlow"), _ = e("../../Game/Player/DynamicMng"), S = e("../../Game/World/CameraDragCtrl"), I = e("../../../scripts/_autogen/data/data"), G = e("../../Game/Player/GuideMng"), T = e("../../Game/Hortor"), {ccclass: b, property: M} = cc._decorator;
let P = i = class extends l.default {
constructor() {
super(...arguments);
this.touchNode = null;
this.backBtn = null;
this.deleteBtn = null;
this.gameNameLabel = null;
this.newWorldBtn = null;
this.playBtn = null;
this.variablesBtn = null;
this.publishBtn = null;
this.guideBtn = null;
this.offBtn = null;
this.cameraDragCtrl = null;
this.content = null;
this.worldCell = null;
this.menu = null;
this.examBtn = null;
this.gameData = null;
}
onLoad() {
super.onLoad();
cc.game.on("GameDataChange", this.onGameDataChange, this);
this.backBtn.node.on(s.default.CLICK, this.onBackBtnTap, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtnClick, this);
this.newWorldBtn.node.on(s.default.CLICK, this.onNewWorldBtn, this);
this.publishBtn.node.on(s.default.CLICK, this.onPublishBtn, this);
this.guideBtn.node.on(s.default.CLICK, this.onGuideBtn, this);
this.offBtn.node.on(s.default.CLICK, this.onOffBtn, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtn, this);
this.variablesBtn.node.on(s.default.CLICK, this.onVariablesBtn, this);
this.examBtn.node.on(s.default.CLICK, this.onExamBtn, this);
this.menu.hide();
}
onShow(e) {
C.OperationFlow.deelOnShow(e);
}
onEnable() {
this.examBtn.node.active = !1;
this.guideBtn.node.active = !1;
}
onDestroy() {
cc.game.off("GameDataChange", this.onGameDataChange, this);
}
onGameDataChange(e) {
if (e && e.id == this.gameData.id) {
this.gameNameLabel.string = e.name;
this.offBtn.node.active = e.status == I.GameStatus.success;
this.deleteBtn.node.active = e.status !== I.GameStatus.success;
}
}
onBackBtnTap() {
return a(this, void 0, void 0, function*() {
yield m.Mng.Ins.gameMng.save(this.gameData);
m.Mng.resetExtra();
c.default.ins.BackTo("HomeScene", e => {
e instanceof g.default && e.seletePage(g.HomePageIdx.Mine);
});
});
}
onNewWorldBtn() {
c.default.ins.OpenPanelByName("CreateWorldTypePanel", e => {
e.onSeleteType = e => {
c.default.ins.OpenPanelByName("CreateWorldInfoPanel", t => {
t.setData(e, this.gameData);
t.onCreate = e => a(this, void 0, void 0, function*() {
yield m.Mng.Ins.worldMng.create(e, this.gameData);
this.createWorldCell(e.id);
});
});
};
});
}
createWorldCell(e) {
return a(this, void 0, void 0, function*() {
let t = cc.instantiate(this.worldCell.node);
this.worldCell.node.parent.addChild(t);
t.active = !0;
let o = t.getComponent(y.default);
yield o.setData(e, this.gameData);
h.TweenUtil.applyAppear({
node: t
});
this.gameData.worldIds.indexOf(this.gameData.firstWorldId) < 0 && this.setFirstWorld(e);
cc.game.emit(i.EditGameScene_CreateWorldCell, o);
});
}
onExamBtn() {
c.default.ins.OpenPanelByName("BeginExamPanel");
}
onPlayBtn() {
this.gameData.worldIds.length <= 0 ? d.default.showToast("游戏至少包含一个地图") : c.default.ins.Enter("GameScene", e => {
e.mode = "Prod";
e.play(this.gameData);
});
}
onVariablesBtn() {
c.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(this.gameData, -1, !1);
});
}
onGuideBtn() {
c.default.ins.OpenPanelByName("GuidePanel");
}
onPublishBtn() {
_.DynamicMng.Ins.isDisable(_.FunctionEnum.PublishGame, !0) || (T.Hortor.isVisitor() ? C.OperationFlow.openVisitorPanel() : this.gameData.worldIds.length <= 0 ? d.default.showToast("游戏至少包含一个地图") : c.default.ins.OpenPanelByName("PublishGamePanel", e => {
e.setData(this.gameData);
}));
}
onOffBtn() {
let e = () => {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "真的真的真的真的真的\n真的要下架这个游戏吗？";
e.setLeftBtn({
text: "确定下架",
color: p.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
let e = this.gameData;
d.default.showLoading("正在下架");
yield m.Mng.Ins.gameMng.off(e.id);
this.deleteBtn.node.active = !0;
this.offBtn.node.active = !1;
d.default.hideLoading("下架成功");
f.TGA.track("gameOperate", {
gameId: e.id,
name: e.name,
ver: e.version,
step: "off"
});
})
});
e.setRightBtn({
text: "刚刚点错了",
color: p.UIColor.blue
});
});
};
c.default.ins.OpenPanelByName("MessageBox", t => {
t.label.string = "是否下架游戏？（游玩、点赞等数据将会清零）\n";
t.setLeftBtn({
text: "下架",
color: p.UIColor.pink,
call: e
});
t.setRightBtn({
text: "点错了",
color: p.UIColor.blue
});
});
}
onDeleteBtnClick() {
let e = () => {
c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "真的真的真的真的真的\n真的要删除这个游戏吗？";
e.setLeftBtn({
text: "确定删除",
color: p.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
let e = this.gameData;
d.default.showLoading("正在删除");
yield m.Mng.Ins.gameMng.delete(e.id);
d.default.hideLoading("删除成功");
c.default.ins.Back(e => {
e.seletePage(g.HomePageIdx.Mine);
});
f.TGA.track("gameOperate", {
gameId: e.id,
name: e.name,
ver: e.version,
step: "delete"
});
})
});
e.setRightBtn({
text: "刚刚点错了",
color: p.UIColor.blue
});
});
};
c.default.ins.OpenPanelByName("MessageBox", t => {
t.label.string = "真的要删除这个游戏吗？\n";
t.setLeftBtn({
text: "删除",
color: p.UIColor.pink,
call: e
});
t.setRightBtn({
text: "点错了",
color: p.UIColor.blue
});
});
}
onEnterScene() {
r.default.Ins.mainCamera.node.active = !1;
}
onExitScene() {
r.default.Ins.mainCamera.node.active = !0;
}
setData(e) {
return a(this, void 0, void 0, function*() {
cc.game.emit(i.EditGameScene_Entered, this);
yield m.Mng.switchMineGame(e.id);
this.gameData = e;
this.gameNameLabel.string = e.name;
this.menu.gameData = e;
this.offBtn.node.active = e.status == I.GameStatus.success;
this.deleteBtn.node.active = e.status !== I.GameStatus.success;
u.Util.makeBro(this.worldCell.node, 0);
d.default.showLoading("加载地图数据");
yield m.Mng.Ins.variableMng.switchGame(e);
let t = e.worldIds.concat(m.Mng.Ins.worldMng.extraIds);
yield m.Mng.Ins.worldMng.loadMany(t);
this.cameraDragCtrl.camera.node.position = cc.v2(330, 500);
let o = 0, n = 0;
u.Util.makeBro(this.worldCell.node, t.length, (i, s) => a(this, void 0, void 0, function*() {
let a = t[s], r = i.getComponent(y.default);
yield r.setData(a, e);
h.TweenUtil.applyAppear({
node: i
});
o += r.node.x;
n += r.node.y;
s == t.length - 1 && (this.cameraDragCtrl.camera.node.position = cc.v2(o / t.length, n / t.length));
}));
d.default.hideLoading();
0 == t.length && G.default.Ins.isComplete(G.GuideId.CreateWorld) && this.onNewWorldBtn();
});
}
setFirstWorld(e) {
return a(this, void 0, void 0, function*() {
let t = this.gameData.firstWorldId;
this.gameData.firstWorldId = e;
let o = this.worldCell.node.parent;
for (let i = 0; i < o.childrenCount; i++) {
let n = o.children[i].getComponent(y.default);
n.worldId == t && (n.firstFlag.active = !1);
n.worldId == e && (n.firstFlag.active = !0);
}
yield m.Mng.Ins.gameMng.save(this.gameData);
});
}
};
P.EditGameScene_Entered = "EditGameScene_Entered";
P.EditGameScene_CreateWorldCell = "EditGameScene_CreateWorldCell";
n([ M(cc.Node) ], P.prototype, "touchNode", void 0);
n([ M(s.default) ], P.prototype, "backBtn", void 0);
n([ M(s.default) ], P.prototype, "deleteBtn", void 0);
n([ M(cc.Label) ], P.prototype, "gameNameLabel", void 0);
n([ M(s.default) ], P.prototype, "newWorldBtn", void 0);
n([ M(s.default) ], P.prototype, "playBtn", void 0);
n([ M(s.default) ], P.prototype, "variablesBtn", void 0);
n([ M(s.default) ], P.prototype, "publishBtn", void 0);
n([ M(s.default) ], P.prototype, "guideBtn", void 0);
n([ M(s.default) ], P.prototype, "offBtn", void 0);
n([ M(S.default) ], P.prototype, "cameraDragCtrl", void 0);
n([ M(cc.Node) ], P.prototype, "content", void 0);
n([ M(y.default) ], P.prototype, "worldCell", void 0);
n([ M(v.default) ], P.prototype, "menu", void 0);
n([ M(s.default) ], P.prototype, "examBtn", void 0);
P = i = n([ b ], P);
o.default = P;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../Frame/EngineManager": "EngineManager",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"../../Game/World/CameraDragCtrl": "CameraDragCtrl",
"../../TGA": "TGA",
"../HomeScene/HomeScene": "HomeScene",
"./WorldCell": "WorldCell",
"./WorldCellMenu": "WorldCellMenu"
} ],
EditGameScriptPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7a6a642c2JEV5XPwxGzOlU1", "EditGameScriptPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../CustomUI/Button"), r = e("../../Frame/Panel"), l = e("./SimpleNodeList"), c = e("./GSUIItemNodeCell"), d = e("../../CustomUI/Layout/AutoFixedSizeByTargetNode"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Scene/EditWorldScene/EditWorldScene"), m = e("../../Frame/Util"), f = e("../../Frame/UIColor"), g = e("../../Game/Player/Mng"), {ccclass: y, property: v} = cc._decorator;
let C = class extends r.default {
constructor() {
super(...arguments);
this.returnBtn = null;
this.scriptBtn = null;
this.nameEditbox = null;
this.selectBg = null;
this.selectFg = null;
this.nodeList = null;
this.itemCellContent = null;
this.itemCell = null;
this.upBtn = null;
this.downBtn = null;
this.addBtn = null;
this.delBtn = null;
this.saveBtn = null;
this._scriptData = null;
this.oriScript = null;
this.evt = null;
this.saveCall = null;
this._maxNodeId = 0;
this._selectId = -1;
this._selectBgY = 0;
}
onLoad() {
super.onLoad();
this.itemCell && (this.itemCell.node.active = !1);
this.nodeList.SetItemPrefab(this.itemCell.node, c.default);
this.nodeList.itemRender = this.onRenderNodeItem;
this.nodeList.itemSize = (e, t) => {
let o, i = 0;
if (0 == e) i = this.itemCell.node.height; else {
o = this._scriptData.data.childs[e - 1];
i = a.GSUtil.caculateNodeRenderHeight(o, this.itemCell.node.height, 2);
}
t.x = 0;
t.y = i;
};
this.nodeList.callThis = this;
this.scriptBtn.node.active = !1;
this.returnBtn.node.on(s.default.CLICK, this.onClickReturn, this);
this.scriptBtn.node.on(s.default.CLICK, this.onClickScript, this);
this.upBtn.node.on(s.default.CLICK, this.onClickUp, this);
this.downBtn.node.on(s.default.CLICK, this.onClickDown, this);
this.addBtn.node.on(s.default.CLICK, this.onClickAdd, this);
this.delBtn.node.on(s.default.CLICK, this.onClickDel, this);
this.saveBtn.node.on(s.default.CLICK, this.onClickSave, this);
this.nodeList.node.on(l.default.SELECT_ITEM_NODE, this.onSelectNodeItem, this);
this.node.on(l.default.ADD_NEW_ITEM, e => {
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
}, this);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
yield g.Mng.Ins.actorMng.loadAll();
yield g.Mng.Ins.propMng.loadAll();
this.evt = t;
this.evt.extra = t.extra || -1;
this._worldId = e;
this.oriScript = a.GSMng.instance.GetScriptData(e, this.evt.extra);
let o = m.Util.deepCopy(this.oriScript);
o = this.oriScript ? m.Util.deepCopy(this.oriScript) : a.GSMng.instance.CreateNewScript(e);
this._scriptData = o;
this._maxNodeId = 1;
this.dfsTreeGetMaxNodeId(o.data);
a.GSDataNodeBuildHelper.ResetDataNodeIdx(this._maxNodeId + 1);
0 != o.data.childs.length && o.data.childs[o.data.childs.length - 1].type == a.GSDataNodeType.G_Add || o.data.childs.push(a.GSDataNodeBuildHelper.NewGSDataNode(a.GSDataNodeType.G_Add));
this.nodeList.numberItems = o.data.childs.length + 1;
this.selectBg.height = 0;
this.selectFg.height = 0;
this.nameEditbox.string = o.name;
});
}
onClickReturn() {
let e = h.default.ins.findScene(u.default);
if (e && e.world && e.world.worldData && e.world.worldData.belongGameId) {
this.closePanel();
return;
}
let t = !0;
this.oriScript && (t = !m.Util.deepCompare(this.oriScript, this._scriptData));
t ? h.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "保存退出？";
e.setLeftBtn({
text: "放弃修改",
color: f.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
this.closePanel();
})
});
e.setRightBtn({
text: "保存",
color: f.UIColor.blue,
call: () => {
this.onClickSave();
}
});
}) : this.closePanel();
}
onClickSave() {
return n(this, void 0, void 0, function*() {
this._scriptData.name = this.nameEditbox.string;
this.evt.extra = this._scriptData.id;
this.closePanel();
this.saveCall && this.saveCall(this.evt);
let e = h.default.ins.findScene(u.default);
if (e && e.world && e.world.worldData && e.world.worldData.belongGameId) {
p.default.showToast("模版地图不能保存");
return;
}
let t = a.GSMng.instance.GetScriptData(this._worldId, this._scriptData.id);
if (t) {
t.name = this._scriptData.name;
t.data = this._scriptData.data;
} else a.GSMng.instance.AddScript(this._worldId, this._scriptData);
p.default.showToast("已保存");
if (e && e.world && e.world.worldLayout) {
e.world.worldLayout.gsData || (e.world.worldLayout.gsData = {
worldId: this._worldId,
scriptArray: []
});
let t = e.world.worldLayout.gsData.scriptArray, o = t.length, i = !1;
if (o > 0) for (let e = 0; e < o; ++e) if (t[e].id == this._scriptData.id) {
t[e] = this._scriptData;
i = !0;
break;
}
i || t.push(this._scriptData);
}
});
}
setSelectNodeData(e) {
if (!this._scriptData || !this._scriptData.data || !this._scriptData.data.childs) return;
let t = this._scriptData.data.childs, o = t.length, i = -1;
if (0 == o) i = 0; else for (let n = 0; n < o; ++n) if (t[n].id == e) {
i = n + 1;
break;
}
i >= 0 ? this.scheduleOnce(() => {
this.nodeList.selectItem(i);
}, .1) : this.scheduleOnce(() => {
this.nodeList.node.emit(l.default.SET_SELECT_ITEM_NODE, e);
}, .1);
}
onClickScript() {}
onClickUp() {
this.moveNodeUp(this._selectId, null, -1);
}
onClickDown() {
this.moveNodeDown(this._selectId, null, -1);
}
moveNodeUp(e, t, o) {
let i = null, n = null, s = -1;
if (i && e <= 0) {
i = this._scriptData.data.childs;
e < 0 && (s = i.length - 1);
} else {
let o = a.GSUtil.getTargetNodeStayedInChilds(e, this._scriptData.data);
i = o && o.childs;
n = o && o.parent;
i || t || (i = this._scriptData.data.childs);
}
if (i) {
for (let t = 0; t < i.length; ++t) if (i[t].id == e) {
s = t;
break;
}
if (t && t.length > 0 && o >= 0 && o < t.length) {
s < 0 && (s = 0);
let e = t[o];
i.splice(s, 0, t[o]);
t.splice(o, 1);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e.id);
} else if (s >= 0 && s < i.length) {
if (i[s].type == a.GSDataNodeType.G_Add) return;
if (0 == s) {
if (n) {
let t = a.GSUtil.getNodeChildsInfo(n);
if (t && t.childs1 && t.childs1 != i) {
let o = i[s];
i.splice(s, 1);
t.childs1[t.childs1.length - 1].type == a.GSDataNodeType.G_Add ? t.childs1.splice(t.childs1.length - 1, 0, o) : t.childs1.push(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else n.id > 0 && this.moveNodeUp(n.id, i, s);
}
} else {
let t = a.GSUtil.getNodeChildsInfo(i[s - 1]);
if (t.childs2) {
let o = i[s];
i.splice(s, 1);
t.childs2[t.childs2.length - 1].type == a.GSDataNodeType.G_Add ? t.childs2.splice(t.childs2.length - 1, 0, o) : t.childs2.push(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else if (t.childs1) {
let o = i[s];
i.splice(s, 1);
t.childs1[t.childs1.length - 1].type == a.GSDataNodeType.G_Add ? t.childs1.splice(t.childs1.length - 1, 0, o) : t.childs1.push(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else if (s - 1 >= 0 && i[s].type != a.GSDataNodeType.G_Add) {
let t = i[s];
i[s] = i[s - 1];
i[s - 1] = t;
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
}
}
}
}
}
moveNodeDown(e, t, o) {
let i = null, n = null, s = -1;
if (e <= 0) (i = this._scriptData.data.childs) && e < 0 && (s = i.length - 1); else {
let o = a.GSUtil.getTargetNodeStayedInChilds(e, this._scriptData.data);
i = o && o.childs;
n = o && o.parent;
i || t || (i = this._scriptData.data.childs);
}
if (i) {
for (let t = 0; t < i.length; ++t) if (i[t].id == e) {
s = t;
break;
}
if (t && t.length > 0 && o >= 0 && o < t.length) {
let e = t[o];
s < 0 && (s = 0);
i[s].type == a.GSDataNodeType.G_Add && --s;
i.splice(s + 1, 0, t[o]);
t.splice(o, 1);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e.id);
} else if (s >= 0 && s < i.length) {
if (i[s].type == a.GSDataNodeType.G_Add) return;
let t = s == i.length - 1;
!t && s + 1 < i.length && i[s + 1].type == a.GSDataNodeType.G_Add && (t = !0);
if (t) {
if (n) {
let t = a.GSUtil.getNodeChildsInfo(n);
if (t && t.childs2 && t.childs2 != i) {
let o = i[s];
i.splice(s, 1);
t.childs2.unshift(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else n.id > 0 && this.moveNodeDown(n.id, i, s);
}
} else {
let t = a.GSUtil.getNodeChildsInfo(i[s + 1]);
if (t.childs1) {
let o = i[s];
i.splice(s, 1);
t.childs1.unshift(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else if (t.childs2) {
let o = i[s];
i.splice(s, 1);
t.childs2.unshift(o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
} else {
let t = i[s];
i[s] = i[s + 1];
i[s + 1] = t;
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(e);
}
}
}
}
}
dfsTreeGetMaxNodeId(e) {
if (!e) return;
this._maxNodeId < e.id && (this._maxNodeId = e.id);
let t = a.GSUtil.getNodeChildsInfo(e), o = t.childs1, i = t.childs2;
if (o) for (let e of o) this.dfsTreeGetMaxNodeId(e);
if (i) for (let e of i) this.dfsTreeGetMaxNodeId(e);
}
onAddNew() {
let e = this._scriptData.data.childs.length - 1, t = this._scriptData.data.childs, o = o => {
t.splice(e, 0, o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(o.id);
};
o.bind(this);
h.default.ins.OpenPanelByName("GSSelectDataNodePanel", e => {
e.setData(null, o);
});
}
onClickAdd() {
let e = null, t = -1;
if (this._selectId <= 0) {
e = this._scriptData.data.childs;
this._selectId < 0 && (t = e.length - 1);
} else {
let t = a.GSUtil.getTargetNodeStayedInChilds(this._selectId, this._scriptData.data);
(e = t && t.childs) || (e = this._scriptData.data.childs);
}
if (e) {
for (let o = 0; o < e.length; ++o) if (e[o].id == this._selectId) {
t = o;
break;
}
t >= 0 && e[t].type == a.GSDataNodeType.G_Add && --t;
let o = o => {
e.splice(t + 1, 0, o);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
this.setSelectNodeData(o.id);
};
o.bind(this);
h.default.ins.OpenPanelByName("GSSelectDataNodePanel", e => {
e.setData(null, o);
});
}
}
onClickDel() {
let e = a.GSUtil.getTargetNodeStayedInChilds(this._selectId, this._scriptData.data), t = e && e.childs;
t || (t = this._scriptData.data.childs);
let o = -1;
if (t) {
for (let e = 0; e < t.length; ++e) if (t[e].id == this._selectId) {
o = e;
break;
}
if (o >= 0) {
if (t[o].type == a.GSDataNodeType.G_Add) return;
t.splice(o, 1);
this.nodeList.numberItems = this._scriptData.data.childs.length + 1;
let i = -1;
if (t.length > 0) {
o >= t.length && (o = t.length - 1);
i = t[o].id;
} else e.parent && (i = e.parent.id);
this.setSelectNodeData(i);
}
}
}
onRenderNodeItem(e, t) {
0 == e ? t.setData(0, this._scriptData.data, null) : t.setData(0, this._scriptData.data.childs[e - 1], this);
}
onSelectNodeItem(e, t) {
if (!t) {
this._selectBgY = 0;
this.selectBg.height = 0;
this.selectFg.height = 0;
return;
}
let o = t.getComponent(d.default);
o && o.updateNodeSizeByChild(!0);
this._selectId = t.dataNodeId;
let i = t, n = i.position.y, a = t.height + 10;
for (;i && i.parent != this.nodeList.node; ) n += (i = i.parent).position.y;
this.selectBg.height = a;
this.selectFg.height = a;
this._selectBgY = n - .5 * a + 5;
this.selectBg.y = this._selectBgY;
this.selectFg.y = this._selectBgY;
}
lateUpdate() {
this.selectBg.y = this._selectBgY + this.itemCellContent.position.y;
this.selectFg.y = this._selectBgY + this.itemCellContent.position.y;
this.selectBg.x = this.itemCellContent.position.x + this.itemCellContent.width * (this.selectBg.anchorX - this.itemCellContent.anchorX);
this.selectFg.x = this.itemCellContent.position.x + this.itemCellContent.width * (this.selectBg.anchorX - this.itemCellContent.anchorX);
}
onSelectScript(e) {}
};
i([ v(s.default) ], C.prototype, "returnBtn", void 0);
i([ v(s.default) ], C.prototype, "scriptBtn", void 0);
i([ v(cc.EditBox) ], C.prototype, "nameEditbox", void 0);
i([ v(cc.Node) ], C.prototype, "selectBg", void 0);
i([ v(cc.Node) ], C.prototype, "selectFg", void 0);
i([ v(l.default) ], C.prototype, "nodeList", void 0);
i([ v(cc.Node) ], C.prototype, "itemCellContent", void 0);
i([ v(c.default) ], C.prototype, "itemCell", void 0);
i([ v(s.default) ], C.prototype, "upBtn", void 0);
i([ v(s.default) ], C.prototype, "downBtn", void 0);
i([ v(s.default) ], C.prototype, "addBtn", void 0);
i([ v(s.default) ], C.prototype, "delBtn", void 0);
i([ v(s.default) ], C.prototype, "saveBtn", void 0);
C = i([ y ], C);
o.default = C;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Layout/AutoFixedSizeByTargetNode": "AutoFixedSizeByTargetNode",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"./GSUIItemNodeCell": "GSUIItemNodeCell",
"./SimpleNodeList": "SimpleNodeList"
} ],
EditPageBase: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eba2b4Nyx5CzIYxNCK+8nUd", "EditPageBase");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.EditPageBase = void 0;
o.EditPageBase = class extends cc.Component {
refreshList() {}
};
cc._RF.pop();
}, {} ],
EditTalkScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9803560wPhBgKHwU/PXHvoi", "EditTalkScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../Frame/CrossPlatform"), l = e("../../Frame/Pool"), c = e("../../Frame/Scene"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/UIColor"), u = e("../../Frame/Util"), m = e("../../Game/Player/DynamicMng"), f = e("../../Game/Player/TalkDraftMng"), g = e("../../Game/Player/TalkMng"), y = e("./TalkSectionEditorBase"), {ccclass: v, property: C} = cc._decorator;
let _ = class extends c.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.titleLabel = null;
this.titleEditBox = null;
this.scrollView = null;
this.appendBtn = null;
this.draftBtn = null;
this.menu = null;
this.closeMenuBtn = null;
this.textBtn = null;
this.imgBtn = null;
this.gameBtn = null;
this.goodsBtn = null;
this.projectBtn = null;
this.publishBtn = null;
this.officePublishBtn = null;
this.textPool = null;
this.imgsPool = null;
this.gamePool = null;
this.goodsPool = null;
this.projectPool = null;
this.block = null;
this.backCall = null;
this.publishCall = null;
this.cancelCall = null;
this.talkData = null;
this.draft = null;
}
onLoad() {
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.appendBtn.node.on(s.default.CLICK, this.onAppendBtn, this);
this.draftBtn.node.on(s.default.CLICK, this.onDraftBtn, this);
this.textBtn.node.on(s.default.CLICK, this.onTextBtn, this);
this.imgBtn.node.on(s.default.CLICK, this.onImgBtn, this);
this.gameBtn.node.on(s.default.CLICK, this.onGameBtn, this);
this.goodsBtn.node.on(s.default.CLICK, this.onGoodsBtn, this);
this.projectBtn.node.on(s.default.CLICK, this.onProjectBtn, this);
this.closeMenuBtn.node.on(s.default.CLICK, this.hideAppendMenu, this);
this.block.node.on(s.default.CLICK, () => {
r.crossPlatform.hideKeyboard({});
this.block.node.active = !1;
}, this);
this.publishBtn.node.on(s.default.CLICK, () => {
this.onPublishBtn(!1);
}, this);
this.officePublishBtn.node.on(s.default.CLICK, () => {
this.onPublishBtn(!0);
}, this);
this.officePublishBtn.node.active = m.DynamicMng.Ins.isGmPlayer();
this.hideAppendMenu();
this.block.node.active = !1;
}
onBackBtn() {
this.backScene(!1);
}
backScene(e) {
r.crossPlatform.hideKeyboard({});
d.default.ins.Back(() => {
this.backCall && this.backCall();
e ? this.publishCall && this.publishCall() : this.cancelCall && this.cancelCall();
}, d.ShiftAnima.moveRightShift);
}
toCreateStyle() {
this.titleLabel.string = "创建新帖";
}
toModifyStyleByDraft(e) {
this.draft = e;
let t = new a.TalkData();
t.uId = e.talkId;
t.title = e.title;
let o = {
sections: e.sections
};
t.content = o;
this.toModifyStyle(t);
}
toModifyStyleTitleSections(e, t) {
let o = new a.TalkData();
o.title = e;
let i = {
sections: t || []
};
o.content = i;
this.toModifyStyle(o);
}
toModifyStyle(e) {
this.titleLabel.string = "编辑帖子";
this.talkData = e;
this.titleEditBox.string = e.title;
let t = e.content;
for (let e = 0; e < t.sections.length; e++) {
let o = t.sections[e], i = null;
switch (o.type) {
case g.TalkSectionType.Text:
i = this.textPool.get();
break;

case g.TalkSectionType.Imgs:
i = this.imgsPool.get();
break;

case g.TalkSectionType.Game:
i = this.gamePool.get();
break;

case g.TalkSectionType.Goods:
i = this.goodsPool.get();
break;

case g.TalkSectionType.Project:
i = this.projectPool.get();
}
let n = i.getComponent(y.default);
n.menuBtn.node.on(s.default.CLICK, () => {
this.showMenu(n);
}, this);
this.scrollView.content.addChild(i);
n.setData(o);
this.appendBtn.node.setSiblingIndex(this.scrollView.content.childrenCount - 1);
}
}
onAppendBtn() {
r.crossPlatform.hideKeyboard({});
this.showAppendMenu(this.appendBtn.node.getSiblingIndex());
this.scrollView.scrollTo(cc.Vec2.ZERO, .3);
}
showAppendMenu(e) {
this.appendBtn.node.active = !1;
this.menu.active = !0;
this.scrollView.content.insertChild(this.menu, e);
u.Util.updateAllLayout(this.scrollView.content);
}
hideAppendMenu() {
this.appendBtn.node.active = !0;
this.menu.active = !1;
this.menu.removeFromParent(!1);
}
onTextBtn() {
this.appendSectionEditor(this.textPool.get());
}
onImgBtn() {
this.appendSectionEditor(this.imgsPool.get());
}
onGameBtn() {
this.appendSectionEditor(this.gamePool.get());
}
onGoodsBtn() {
this.appendSectionEditor(this.goodsPool.get());
}
onProjectBtn() {
this.appendSectionEditor(this.projectPool.get());
}
makeSections() {
let e = [], t = this.scrollView.content.getComponentsInChildren(y.default);
for (let o = 0; o < t.length; o++) {
let i = t[o].getData();
i.type == g.TalkSectionType.Text && "" == i.text.trim() || i.type == g.TalkSectionType.Imgs && 0 == i.imgDatas.length || (i.type != g.TalkSectionType.Game || i.gameId) && (i.type != g.TalkSectionType.Goods || i.goodsId) && e.push(i);
}
return e;
}
onDraftBtn() {
let e = this.titleEditBox.textLabel.string;
e && "" != e.trim() ? this.draft ? d.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "提示";
e.label.string = "是否更新草稿？";
e.setLeftBtn({
text: "点错了",
color: p.UIColor.blue
});
e.setRightBtn({
text: "是",
color: p.UIColor.green,
call: () => {
this.draft.title = this.titleEditBox.textLabel.string;
this.draft.sections = this.makeSections();
f.default.Ins.saveDraft(this.draft);
this.backScene(!1);
}
});
}) : d.default.ins.OpenPanelByName("MessageBox", t => {
t.titleLabel.string = "提示";
t.label.string = "是否保存为草稿？";
t.setLeftBtn({
text: "点错了",
color: p.UIColor.blue
});
t.setRightBtn({
text: "是",
color: p.UIColor.green,
call: () => {
var t;
this.draft = {
id: orange.TimeUtil.serverTime,
talkId: null === (t = this.talkData) || void 0 === t ? void 0 : t.uId,
title: e,
sections: this.makeSections()
};
f.default.Ins.addDraft(this.draft);
this.backScene(!1);
}
});
}) : h.default.showToast("还没有写标题～");
}
onPublishBtn(e) {
let t = this.titleEditBox.textLabel.string;
t && "" != t.trim() ? d.default.ins.OpenPanelByName("MessageBox", o => {
o.titleLabel.string = "提示";
o.label.string = "是否确认发布？";
o.setLeftBtn({
text: "再改改",
color: p.UIColor.blue
});
o.setRightBtn({
text: "确定",
color: p.UIColor.green,
call: () => n(this, void 0, void 0, function*() {
var o;
let i = this.makeSections(), n = null === (o = this.talkData) || void 0 === o ? void 0 : o.uId, a = yield g.default.Ins.publishTalk(e, n, t, i);
if (a && a.sensitiveWords) {
a.msg && h.default.showToast(a.msg);
a.checkStrItems && a.sensitiveWords && d.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "发布失败";
e.label.string = "检测到敏感词,请修改后重新发布";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "定位敏感词",
color: p.UIColor.pink,
call: () => {
d.default.ins.OpenPanelByName("SensitiveCheckPanel", e => {
e.setData(a.checkStrItems, a.sensitiveWords);
});
}
});
});
} else {
this.draft && f.default.Ins.deleteDraft(this.draft.id);
this.backScene(!0);
}
})
});
}) : h.default.showToast("还没有写标题～");
}
appendSectionEditor(e) {
let t = this.menu.getSiblingIndex();
this.hideAppendMenu();
this.scrollView.content.insertChild(e, t);
let o = e.getComponent(y.default);
o.reset();
o.menuBtn.node.targetOff(this);
o.menuBtn.node.on(s.default.CLICK, () => {
this.showMenu(o);
}, this);
}
showMenu(e) {
let t = e.node.getSiblingIndex(), o = e.node.parent.childrenCount, i = [ {
str: "删除",
color: p.UIColor.pink,
icon: {
url: "Atlas/UI/closeBtn",
color: p.UIColor.green,
w: 40,
h: 40
},
call: () => {
d.default.ins.OpenPanelByName("MessageBox", t => {
t.titleLabel.string = "提醒";
t.label.string = "是否删除该段落？";
t.setLeftBtn({
text: "删除",
color: p.UIColor.pink,
call: () => {
e.node.emit(l.default.PUT);
}
});
t.setRightBtn({
text: "点错了",
color: p.UIColor.blue
});
});
}
}, {
str: "添加",
color: p.UIColor.blue,
icon: {
url: "Atlas/UI/plusBtn",
color: p.UIColor.green,
w: 40,
h: 40
},
call: () => {
this.menu.parent && this.hideAppendMenu();
this.showAppendMenu(e.node.getSiblingIndex() + 1);
}
} ];
t > 1 && i.push({
str: "上移",
color: p.UIColor.blue,
icon: {
url: "Atlas/UI/moveUp",
color: p.UIColor.green,
w: 40,
h: 40
},
call: () => {
e.node.setSiblingIndex(t - 1);
}
});
t < o - 2 && i.push({
str: "下移",
color: p.UIColor.blue,
icon: {
url: "Atlas/UI/moveDown",
color: p.UIColor.green,
w: 40,
h: 40
},
call: () => {
e.node.setSiblingIndex(t + 1);
}
});
h.default.showMenu(e.menuBtn.node, i);
}
onEditingDigBegin() {
console.log("onEditingDigBegin");
this.block.node.active = !0;
}
onEditingDigEnd() {
console.log("onEditingDigEnd");
this.block.node.active = !1;
}
};
i([ C(s.default) ], _.prototype, "backBtn", void 0);
i([ C(cc.Label) ], _.prototype, "titleLabel", void 0);
i([ C(cc.EditBox) ], _.prototype, "titleEditBox", void 0);
i([ C(cc.ScrollView) ], _.prototype, "scrollView", void 0);
i([ C(s.default) ], _.prototype, "appendBtn", void 0);
i([ C(s.default) ], _.prototype, "draftBtn", void 0);
i([ C(cc.Node) ], _.prototype, "menu", void 0);
i([ C(s.default) ], _.prototype, "closeMenuBtn", void 0);
i([ C(s.default) ], _.prototype, "textBtn", void 0);
i([ C(s.default) ], _.prototype, "imgBtn", void 0);
i([ C(s.default) ], _.prototype, "gameBtn", void 0);
i([ C(s.default) ], _.prototype, "goodsBtn", void 0);
i([ C(s.default) ], _.prototype, "projectBtn", void 0);
i([ C(s.default) ], _.prototype, "publishBtn", void 0);
i([ C(s.default) ], _.prototype, "officePublishBtn", void 0);
i([ C(l.default) ], _.prototype, "textPool", void 0);
i([ C(l.default) ], _.prototype, "imgsPool", void 0);
i([ C(l.default) ], _.prototype, "gamePool", void 0);
i([ C(l.default) ], _.prototype, "goodsPool", void 0);
i([ C(l.default) ], _.prototype, "projectPool", void 0);
i([ C(cc.BlockInputEvents) ], _.prototype, "block", void 0);
_ = i([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Pool": "Pool",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/TalkDraftMng": "TalkDraftMng",
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase"
} ],
EditUserInfoPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3702c7hqvNMxbp9OA6Z/xp6", "EditUserInfoPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../../scripts/_autogen/data/data"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/HeadIcon"), c = e("../../Frame/NetworkMgr"), d = e("../../Frame/Panel"), h = e("../../Frame/Top"), p = e("../../Game/OperationFlow"), u = e("../../Role"), {ccclass: m, property: f} = cc._decorator;
let g = class extends d.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.introEditBox = null;
this.headIcon = null;
this.paintBtn = null;
this.okBtn = null;
this.tipLabel = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(r.default.CLICK, this.onBtnClick, this);
this.paintBtn.node.on(r.default.CLICK, this.onPaintBnt, this);
this.headIcon.node.on(r.default.CLICK, this.onPaintBnt, this);
this.tipLabel.node.on(r.default.CLICK, this.onTipLabel, this);
this.updateUI();
}
updateUI() {
this.nameEditBox.string = u.default.Ins.userName;
this.introEditBox.string = u.default.Ins.userIntro;
this.tipLabel.node.active = !1;
console.log(u.default.Ins.role.newUserImgReviewStatus);
switch (u.default.Ins.role.newUserImgReviewStatus) {
case s.ManReviewStatus.inReview:
this.headIcon.loadUrl(u.default.Ins.role.newUserImg);
this.tipLabel.node.active = !0;
this.tipLabel.string = "新头像审核中";
break;

case s.ManReviewStatus.success:
this.headIcon.loadUrl(u.default.Ins.role.userImg);
break;

case s.ManReviewStatus.fail:
this.headIcon.loadUrl(u.default.Ins.role.userImg);
this.tipLabel.node.active = !0;
this.tipLabel.string = "新头像审核失败";
break;

default:
this.headIcon.loadUrl(u.default.Ins.role.userImg);
}
}
onBtnClick() {
return n(this, void 0, void 0, function*() {
let e = this.nameEditBox.textLabel.string, t = this.introEditBox.textLabel.string;
h.default.showLoading("修改中");
let o = {
userName: e,
userImg: null,
userIntro: t
}, i = yield c.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_UpdateUserInfo,
params: o
}, a.Game_RUpdateUserInfo);
if (i) if (i.sensitiveWords && i.sensitiveWords.length > 0) h.default.hideLoading("审核失败：" + i.sensitiveWords.join(",")); else {
u.default.Ins.userName = e;
u.default.Ins.userIntro = t;
cc.game.emit(u.default.UserInfoChange);
this.closePanel();
h.default.hideLoading("修改成功");
} else h.default.hideLoading("网络错误，保存失败!");
});
}
onPaintBnt() {
p.OperationFlow.paintHeadIcon(u.default.Ins.userImg, () => {
this.updateUI();
});
}
onTipLabel() {}
};
i([ f(cc.EditBox) ], g.prototype, "nameEditBox", void 0);
i([ f(cc.EditBox) ], g.prototype, "introEditBox", void 0);
i([ f(l.default) ], g.prototype, "headIcon", void 0);
i([ f(r.default) ], g.prototype, "paintBtn", void 0);
i([ f(r.default) ], g.prototype, "okBtn", void 0);
i([ f(cc.Label) ], g.prototype, "tipLabel", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/OperationFlow": "OperationFlow",
"../../Role": "Role"
} ],
EditVariablePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5dee2nkKC5Jkq914WIC3ref", "EditVariablePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../CustomUI/Toggle"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Game/Player/Mng"), p = e("../../GameScript/index"), {ccclass: u, property: m} = cc._decorator;
let f = class extends l.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.dropDownBox = null;
this.valueEditBox = null;
this.valueToggle = null;
this.okBtn = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onClick, this);
this.dropDownBox.setDataArr([ {
str: "数字",
type: p.GSValueType.FLOAT
}, {
str: "开关",
type: p.GSValueType.BOOL
} ]);
this.valueEditBox.string = "0";
this.valueToggle.node.on(r.default.STATE_CHANGE, this.onToggleChange, this);
}
setData(e) {
this._vid = e;
let t = p.GSVariableMng.instance.getVariable(this._vid), o = 0;
for (let e = 0; e < this.dropDownBox.dataArr.length; ++e) if (this.dropDownBox.dataArr[e].type == t.valueType) {
o = e;
break;
}
this.dropDownBox.selectByIdx(o);
this.valueToggle.node.active = t.valueType == p.GSValueType.BOOL;
this.valueEditBox.node.active = t.valueType == p.GSValueType.FLOAT;
this.nameEditBox.string = t.name;
t.valueType == p.GSValueType.BOOL ? this.valueToggle.isChecked = "1" == t.defaultValue : t.valueType == p.GSValueType.FLOAT && (this.valueEditBox.string = t.defaultValue);
}
onToggleChange(e) {
this.valueToggle.label.string = e ? "开" : "关";
this.valueToggle.background.node.color = e ? d.UIColor.blue : d.UIColor.white;
}
onClick() {
return n(this, void 0, void 0, function*() {
let e = p.GSVariableMng.instance.getVariable(this._vid);
e.name = this.nameEditBox.string;
e.name.length > 20 && (e.name = e.name.substr(0, 20));
if (!p.GSVariableMng.instance.changeName(this._vid, e.name)) {
c.default.showToast("变量名已经存在");
return;
}
this.closePanel();
let t = e.valueType;
if (t == p.GSValueType.FLOAT) {
let t = Number.parseFloat(this.valueEditBox.string);
Number.isNaN(t) && (t = 0);
e.defaultValue = t + "";
}
t == p.GSValueType.BOOL && (e.defaultValue = this.valueToggle.isChecked ? "1" : "0");
let o = p.GSVariableMng.instance.getVariableData(e.idstr);
o && (yield h.Mng.Ins.variableMng.save(e.idstr, o));
cc.game.emit("editVaribleComplete");
});
}
};
i([ m(cc.EditBox) ], f.prototype, "nameEditBox", void 0);
i([ m(s.default) ], f.prototype, "dropDownBox", void 0);
i([ m(cc.EditBox) ], f.prototype, "valueEditBox", void 0);
i([ m(r.default) ], f.prototype, "valueToggle", void 0);
i([ m(a.default) ], f.prototype, "okBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
EditWorldScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "36034qFCrtIxaDvx304jmnK", "EditWorldScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../Frame/EngineManager"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/UIColor"), p = e("../../Frame/Util"), u = e("../../Game/GameBoard"), m = e("../../Game/Player/Mng"), f = e("../../Game/World/CameraDragCtrl"), g = e("../../Game/World/TouchWorldCtrl"), y = e("../../Game/World/World"), v = e("./ElementBox"), C = e("./Inspector"), _ = e("../../Game/OperationFlow"), S = e("../../Frame/CrossPlatform"), I = e("../../Game/Player/LifeMng"), G = e("../../CustomUI/DropDownBox"), T = e("../../Game/World/Actor"), b = e("../../Game/Player/TriggerMng"), M = e("../../GameData/GameTypeDefine"), {ccclass: P, property: D} = cc._decorator;
let w = i = class extends l.default {
constructor() {
super(...arguments);
this.cameraDragCtrl = null;
this.touchWorldCtrl = null;
this.backBtn = null;
this.guideBtn = null;
this.playBtn = null;
this.saveBtn = null;
this.submitBtn = null;
this.applyBtn = null;
this.inspector = null;
this.elementBox = null;
this.optionBtn = null;
this.worldNameLabel = null;
this.dropDownTileMapLayer = null;
this.world = null;
this.gameData = null;
this.worldData = null;
this.mode = "Mine";
this.submitCall = null;
this.applyCall = null;
this._testHeroData = null;
}
onLoad() {
b.default.init();
this.backBtn.node.on(s.default.CLICK, this.onBackBtnTap, this);
this.guideBtn.node.on(s.default.CLICK, this.onGuideBtn, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtnTap, this);
this.saveBtn.node.on(s.default.CLICK, this.onSaveBtnTap, this);
this.optionBtn.node.on(s.default.CLICK, this.onOptionBtn, this);
this.submitBtn.node.on(s.default.CLICK, this.onSubmitBtn, this);
this.applyBtn.node.on(s.default.CLICK, this.onApplyBtn, this);
this.cameraDragCtrl.node.on(f.default.ZOOM_CHANGE, this.onCameraZoom, this);
this.inspector.node.active = !1;
this.submitBtn.node.active = !1;
this.applyBtn.node.active = !1;
this.schedule(this.saveToLocal, 60);
this.dropDownTileMapLayer.node.on(G.default.SELECT_CHANGE, this.onDropDownTileMapLayerChange, this);
}
onDropDownTileMapLayerChange(e, t, o) {
this.world.tiledMap.selectedLayerIdx = t.layerIdx;
this.world.tiledMap.setLayerVisable(t.layerIdx, !0);
}
selectTileMapLayer(e) {
this.world.tiledMap.selectedLayerIdx = e;
this.world.tiledMap.setLayerVisable(e, !0);
this.dropDownTileMapLayer.selectByIdx(this.world.tiledMap.tileLayers.length - 1 - e);
}
isTileMapLayerVisable(e) {
return this.world.tiledMap.isLayerVisable(e);
}
setTileMapLayerVisable(e, t) {
this.world.tiledMap.setLayerVisable(e, t);
}
onShow(e) {
_.OperationFlow.deelOnShow(e);
}
onOptionBtn() {
c.default.ins.OpenPanelByName("WorldOptionPanel", e => {
e.setData(this.worldData, this.world.worldLayout);
e.call = () => {
this.world.setBgColor(this.world.worldLayout.bgColor);
this.world.repaintGrid();
};
});
}
onCameraZoom(e) {
if (this.world) {
this.world.graphics.lineWidth = 2 / e;
this.world.repaintGrid();
}
}
onEnterScene() {
u.GameBoard.IS_EDITOR_MODE = !0;
r.default.Ins.mainCamera.node.active = !1;
this.inspector.node.active ? this.inspector.show() : this.elementBox.show(!0);
}
onExitScene() {
u.GameBoard.IS_EDITOR_MODE = !1;
r.default.Ins.mainCamera.node.active = !0;
S.crossPlatform.removeStorageSync("EditWorldSceneTempSave");
}
setDataByTalkProject(e, t, o) {
return a(this, void 0, void 0, function*() {
this.mode = "TalkProject";
this.submitBtn.node.active = !e;
this.applyBtn.node.active = e;
yield this.setData(t, o);
this.saveBtn.node.active = !1;
});
}
setData(e, t, o = null) {
return a(this, void 0, void 0, function*() {
d.default.blockInput(!0, "loadWorld");
this.gameData = e;
this.worldData = t;
m.Mng.Ins.assetGroupMng.curGroupName = t.info.selectedActorGroup;
this.elementBox.refresh();
this.saveBtn.node.active = !t.belongGameId;
this.worldNameLabel.string = t.info.name;
let n = yield p.Util.loadBundleRes("Prefab/World"), s = cc.instantiate(n);
this.node.insertChild(s, 1);
let r = s.getComponent(y.default);
this.world = r;
o || (o = t.worldLayout);
o || (o = {
type: t.info.type,
size: t.info.size,
bgColor: {
r: 255,
g: 255,
b: 255,
a: 255
},
tiles: [],
actors: [],
devices: [],
props: [],
incId: 0,
onStart: [],
gsData: {
worldId: this.worldData.id,
scriptArray: []
},
cameraRatio: 1
});
o = p.Util.deepCopy(o);
r.setWorldData(t);
yield r.initByWorldLayout(o);
r.actors.forEach(e => a(this, void 0, void 0, function*() {
(yield e.getTeamGizmo()).setTeam(e.data.team);
}));
this.touchWorldCtrl.setWorld(r);
this.cameraDragCtrl.setCamera(r.camera, r.node);
let l = r.findHeroActor();
l ? this.cameraDragCtrl.centerOn(l.node) : this.cameraDragCtrl.centerOn(this.world.startPoint.node);
r.hero = l;
d.default.blockInput(!1, "loadWorld");
this.worldData.belongGameId && (S.crossPlatform.getStorageSync("templateWorldTip") || c.default.ins.OpenPanelByName("TemplateWorldTipPanel", e => {
e.call = e => {
e && S.crossPlatform.setStorageSync("templateWorldTip", !0);
};
}));
let h = [ {
str: "顶层",
layerIdx: 2,
delSetVisable: this.setTileMapLayerVisable.bind(this),
delIsVisable: this.isTileMapLayerVisable.bind(this)
}, {
str: "中层",
layerIdx: 1,
delSetVisable: this.setTileMapLayerVisable.bind(this),
delIsVisable: this.isTileMapLayerVisable.bind(this)
}, {
str: "底层",
layerIdx: 0,
delSetVisable: this.setTileMapLayerVisable.bind(this),
delIsVisable: this.isTileMapLayerVisable.bind(this)
} ], u = 50 * h.length + 1;
this.dropDownTileMapLayer.list.node.height = u;
this.dropDownTileMapLayer.list.node.y = u - 10;
p.Util.updateAllWidget(this.dropDownTileMapLayer.node);
this.dropDownTileMapLayer.setDataArr(h);
t.info.type == M.WorldType.Jump ? this.dropDownTileMapLayer.selectByIdx(1) : t.info.type == M.WorldType.Rpg && this.dropDownTileMapLayer.selectByIdx(2);
cc.game.emit(i.EditWorldScene_Entered, this);
});
}
onBackBtnTap() {
return a(this, void 0, void 0, function*() {
this.worldData.info.selectedActorGroup = m.Mng.Ins.assetGroupMng.curGroupName;
if (this.worldData.belongGameId) {
c.default.ins.Back();
return;
}
let e = this.worldData.worldLayout, t = this.world.makeWorldLayout();
p.Util.deepCompare(e, t) ? c.default.ins.Back() : c.default.ins.OpenPanelByName("MessageBox", e => {
if ("Mine" == this.mode) {
e.label.string = "是否保存地图？";
e.setLeftBtn({
text: "放弃修改",
color: h.UIColor.pink,
call: () => {
c.default.ins.Back();
}
});
e.setRightBtn({
text: "保存退出",
color: h.UIColor.blue,
call: () => a(this, void 0, void 0, function*() {
yield this.onSaveBtnTap();
c.default.ins.Back();
})
});
} else if ("TalkProject" == this.mode) {
e.label.string = "是否放弃修改？";
e.setLeftBtn({
text: "放弃修改",
color: h.UIColor.pink,
call: () => {
c.default.ins.Back();
}
});
e.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
}
});
});
}
onGuideBtn() {}
onPlayBtnTap() {
this.world.findHeroActor() ? this.testPlay() : c.default.ins.OpenPanelByName("SelectHeroPanel", e => {
e.titleLabel.string = "选择主角，开始测试";
e.setData(this._testHeroData ? this._testHeroData.confId : null);
e.selectCall = e => {
this._testHeroData = T.default.createActorData(e, M.Team.Hero, this.world.worldLayout);
this.testPlay();
};
});
}
testPlay() {
let e = this.saveToTempWorldDataMap();
c.default.ins.Enter("GameScene", t => {
t.mode = "Test";
I.LifeMng.Ins.setLife(this.gameData.id, I.LifeMng.Ins.max);
t.play(this.gameData, e.id, this._testHeroData);
});
}
saveToTempWorldDataMap() {
let e = {
id: this.worldData.id,
info: this.worldData.info,
layoutMin: null,
worldLayout: this.world.makeWorldLayout(),
belongGameId: this.worldData.belongGameId
};
m.Mng.Ins.worldMng.tempCache.set(e.id, e);
return e;
}
onSaveBtnTap() {
return a(this, void 0, void 0, function*() {
d.default.showLoading("正在保存");
this.worldData.info.selectedActorGroup = m.Mng.Ins.assetGroupMng.curGroupName;
let e = this.world.makeWorldLayout();
this.worldData.layoutMin = p.Util.zip(e);
if (yield m.Mng.Ins.worldMng.save(this.worldData, !0)) {
S.crossPlatform.removeStorageSync("EditWorldSceneTempSave");
this.worldData.worldLayout = e;
d.default.hideLoading("保存成功");
cc.game.emit(i.EditWorldScene_Save, this);
} else d.default.hideLoading("保存失败");
});
}
onSubmitBtn() {
return a(this, void 0, void 0, function*() {
let e = this.world.makeWorldLayout();
p.Util.deepCompare(e, this.world.worldLayout) ? d.default.showToast("没有任何改动") : c.default.ins.OpenPanelByName("SubmitWorldPanel", e => {
e.call = e => a(this, void 0, void 0, function*() {
let t = this.submitCall, o = this.world.makeWorldLayout();
c.default.ins.Back(() => {
t && t(e, o);
});
});
});
});
}
onApplyBtn() {
return a(this, void 0, void 0, function*() {
c.default.ins.OpenPanelByName("ApplyWorldPanel", e => {
"test" == this.worldData.id ? e.tipLabel.string = `此地图【${this.worldData.info.name}】将会添加到你的游戏中` : e.tipLabel.string = `将会覆盖你原来的地图【${this.worldData.info.name}】`;
e.call = e => {
let t = this.applyCall, o = this.world.makeWorldLayout();
c.default.ins.Back(() => {
t && t(e, o);
});
};
});
});
}
saveToLocal() {
if (!this.worldData || this.worldData.belongGameId) return;
if ("Mine" !== this.mode) return;
let e = this.world.makeWorldLayout();
S.crossPlatform.setStorage({
key: "EditWorldSceneTempSave",
data: {
gameId: this.gameData.id,
worldId: this.worldData.id,
worldLayout: e
}
});
}
setHero(e) {
return a(this, void 0, void 0, function*() {
for (let t = 0; t < this.world.actors.length; t++) {
let o = this.world.actors[t];
o.data.id == e && (yield o.getTeamGizmo()).setTeam(M.Team.Hero);
}
});
}
hideUnuseBtns() {
this.dropDownTileMapLayer.node.active = !1;
this.worldNameLabel.node.active = !1;
this.backBtn.node.active = !1;
this.optionBtn.node.active = !1;
this.saveBtn.node.active = !1;
this.playBtn.node.active = !1;
}
showUnuseBtns() {
this.dropDownTileMapLayer.node.active = !0;
this.worldNameLabel.node.active = !0;
this.backBtn.node.active = !0;
this.optionBtn.node.active = !0;
this.saveBtn.node.active = !0;
this.playBtn.node.active = !0;
}
};
w.EditWorldScene_Entered = "EditWorldScene_Entered";
w.EditWorldScene_Save = "EditWorldScene_Save";
n([ D(f.default) ], w.prototype, "cameraDragCtrl", void 0);
n([ D(g.default) ], w.prototype, "touchWorldCtrl", void 0);
n([ D(s.default) ], w.prototype, "backBtn", void 0);
n([ D(s.default) ], w.prototype, "guideBtn", void 0);
n([ D(s.default) ], w.prototype, "playBtn", void 0);
n([ D(s.default) ], w.prototype, "saveBtn", void 0);
n([ D(s.default) ], w.prototype, "submitBtn", void 0);
n([ D(s.default) ], w.prototype, "applyBtn", void 0);
n([ D(C.default) ], w.prototype, "inspector", void 0);
n([ D(v.default) ], w.prototype, "elementBox", void 0);
n([ D(s.default) ], w.prototype, "optionBtn", void 0);
n([ D(cc.Label) ], w.prototype, "worldNameLabel", void 0);
n([ D(G.default) ], w.prototype, "dropDownTileMapLayer", void 0);
w = i = n([ P ], w);
o.default = w;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/EngineManager": "EngineManager",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/GameBoard": "GameBoard",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/LifeMng": "LifeMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../Game/World/Actor": "Actor",
"../../Game/World/CameraDragCtrl": "CameraDragCtrl",
"../../Game/World/TouchWorldCtrl": "TouchWorldCtrl",
"../../Game/World/World": "World",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./ElementBox": "ElementBox",
"./Inspector": "Inspector"
} ],
ElementBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "26417Huc75GgaNQM/RBRiMe", "ElementBox");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/DropDownBox"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/SceneManager"), c = e("../../Frame/ScreenRect"), d = e("../../Frame/Top"), h = e("../../Frame/TweenUtil"), p = e("../../Frame/Util"), u = e("../../Game/Player/AssetGroupMng"), m = e("../../Game/Player/Mng"), f = e("../../Game/World/TouchWorldCtrl"), g = e("../../GameData/GameTypeDefine"), y = e("./EditWorldScene"), v = e("./Page/EditPageBase"), {ccclass: C, property: _} = cc._decorator;
let S = i = class extends cc.Component {
constructor() {
super(...arguments);
this.pageToggleGroup = null;
this.touchWorldCtrl = null;
this.emptyLabel = null;
this.pageNodes = [];
this.filter = null;
this._editPages = [];
}
onLoad() {
this.pageToggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onPageToggleChange, this);
this.touchWorldCtrl.node.on(f.default.BRUSH_TILE, this.onBrushTile, this);
this.filter.node.on(a.default.SELECT_CHANGE, this.onGroupChange, this);
this.filter.list.node.on(s.default.CLICK_ITEM, this.onClickCreate, this);
this.filter.list.canSelect = e => !e.isCreate;
cc.game.on("refreshElementBox", this.refresh, this);
cc.game.on("EditAssetGroupPanel.deleteGroup", this.onGroupDeleted, this);
cc.game.on("ActorGroupFilterCell.onClickEdit", this.onClickEdit, this);
for (let e of this.pageNodes) this._editPages.push(e.getComponent(v.EditPageBase));
}
onDestroy() {
cc.game.off("refreshElementBox", this.refresh, this);
cc.game.off("EditAssetGroupPanel.deleteGroup", this.onGroupDeleted, this);
cc.game.off("ActorGroupFilterCell.onClickEdit", this.onClickEdit, this);
}
onClickEdit() {
this.filter.close();
}
onGroupDeleted() {
this.refrershFilter();
let e = this.filter.dataArr;
this.filter.selectByIdx(e.length - 1);
}
onEnable() {
this.node.height = .32 * c.default.height;
}
onPageToggleChange(e) {
for (let t = 0; t < this.pageNodes.length; t++) this.pageNodes[t].active = t == e;
}
onBrushTile(e) {
this.pageNodes[this.pageToggleGroup.idx].emit(f.default.BRUSH_TILE, e);
}
show(e = !1) {
if (e || !this.node.active) {
this.getComponent(cc.Widget).bottom = -this.node.height;
p.Util.updateAllWidget(this.node);
d.default.blockInput(!0, "showElementBox");
this.node.active = !0;
cc.tween(this.node).to(.2, {
y: this.node.y + this.node.height
}, {
easing: h.Easing.backIn
}).call(() => {
d.default.blockInput(!1, "showElementBox");
cc.game.emit(i.ElementBox_ShowEnd);
}).start();
}
}
hide() {
if (!this.node.active) return;
let e = this.getComponent(cc.Widget);
e.bottom = 0;
e.updateAlignment();
d.default.blockInput(!0, "hideElementBox");
cc.tween(this.node).to(.2, {
y: this.node.y - this.node.height
}, {
easing: h.Easing.backOut
}).call(() => {
this.node.active = !1;
d.default.blockInput(!1, "hideElementBox");
}).start();
}
refrershFilter() {
let e = l.default.ins.findScene(y.default), t = [];
t.push({
str: "创建新分组",
isCreate: !0,
canEdit: !1,
delCreate: null
});
let o = m.Mng.Ins.assetGroupMng.customGroups;
for (let e of o) t.push({
str: e.groupName,
canEdit: !0
});
let i = m.Mng.Ins.assetGroupMng.extra.groupName;
i && t.push({
str: i,
canEdit: !1
});
t.push({
str: u.default.RpgGroupName,
canEdit: !1
});
t.push({
str: u.default.JumpGroupName,
canEdit: !1
});
t.push({
str: u.default.AllGroupName,
canEdit: !1
});
let n = this.filter.list.prefabs[0].height, a = t.length * n;
a = Math.min(a, 440);
this.filter.list.node.height = a;
this.getComponent(cc.Widget).bottom = 0;
p.Util.updateAllWidget(this.filter.list.node);
let s = t.findIndex(e => e.str == m.Mng.Ins.assetGroupMng.curGroupName);
if (s < 0) {
e.worldData.info.type == g.WorldType.Jump && (s = t.findIndex(e => e.str == u.default.JumpGroupName));
e.worldData.info.type == g.WorldType.Rpg && (s = t.findIndex(e => e.str == u.default.RpgGroupName));
}
this.filter.setDataArr(t, s);
}
refreshCurPage() {
this._editPages[this.pageToggleGroup.idx].refreshList();
}
onGroupChange(e, t, o) {
if (o) {
m.Mng.Ins.assetGroupMng.curGroupName = t.str;
this.refreshCurPage();
}
}
onClickCreate(e, t, o) {
if (t && t.isCreate) {
this.filter.close();
if (m.Mng.Ins.assetGroupMng.customGroups.length >= 10) {
d.default.showToast("最多可创建10个分组");
return;
}
l.default.ins.OpenPanelByName("ActorGroupCreatePanel", e => {
e.setData(!0, e => {
e && this.refresh();
});
});
}
}
refresh() {
this.refrershFilter();
this.refreshCurPage();
}
};
S.ElementBox_ShowEnd = "ElementBox_ShowEnd";
n([ _(r.default) ], S.prototype, "pageToggleGroup", void 0);
n([ _(f.default) ], S.prototype, "touchWorldCtrl", void 0);
n([ _(cc.Label) ], S.prototype, "emptyLabel", void 0);
n([ _({
type: [ cc.Node ],
displayName: "pageNodes"
}) ], S.prototype, "pageNodes", void 0);
n([ _(a.default) ], S.prototype, "filter", void 0);
S = i = n([ C ], S);
o.default = S;
cc._RF.pop();
}, {
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../Game/Player/AssetGroupMng": "AssetGroupMng",
"../../Game/Player/Mng": "Mng",
"../../Game/World/TouchWorldCtrl": "TouchWorldCtrl",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./EditWorldScene": "EditWorldScene",
"./Page/EditPageBase": "EditPageBase"
} ],
EngineManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "52a43NoUtBHhZxr+bdyQQGW", "EngineManager");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("./Util"), {ccclass: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.mainCamera = null;
this.staticEditbox = null;
this.updatelisteners = [];
}
onLoad() {
i.Ins = this;
a.Util.initCcKeyBoard(this.staticEditbox);
}
setupTimeScale() {
let e = cc.director._scheduler, t = e.update;
e.update = function(o) {
t.call(e, 0 === this._timeScale ? 0 : o / this._timeScale);
};
let o = 0;
Object.defineProperty(cc.director, "_deltaTime", {
get: () => o * cc.director.getScheduler().getTimeScale(),
set: e => {
o = e;
},
enumerable: !0,
configurable: !0
});
}
startSchedule(e, t, o, i) {
this.schedule(e, t, o, i);
}
endSchedule(e) {
this.unschedule(e);
}
update(e) {
for (let t = 0; t < this.updatelisteners.length; t++) {
let o = this.updatelisteners[t];
o.call.apply(o.obj, e);
}
}
addUpdateListener(e, t) {
this.updatelisteners.push({
call: e,
obj: t
});
}
removeListener(e, t) {
let o = this.updatelisteners.findIndex(o => o.call == e && o.obj == t);
o >= 0 && this.updatelisteners.splice(o, 1);
}
};
n([ r(cc.Camera) ], l.prototype, "mainCamera", void 0);
n([ r(cc.EditBox) ], l.prototype, "staticEditbox", void 0);
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"./Util": "Util"
} ],
ErrorDevice: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d7fe3VvXVVMT6mTaX/cqkeY", "ErrorDevice");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../World/Device"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
onLoad() {
super.onLoad();
}
setData(e, t) {
super.setData(e, t);
}
initInspector(e) {
e.addHead("错误装置", "UI/error");
e.addLabel("装置模版已被删除");
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../World/Device": "Device"
} ],
ExamPrepareCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7dd5eaWgFRLeZNqyo90Zie1", "ExamPrepareCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.label = null;
this.sprite = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.titleLabel.string = e.title;
this.label.string = e.str;
if (e.img) {
this.sprite.node.active = !0;
this.sprite.spriteFrame = yield s.Util.loadBundleRes("Atlas/Exam/" + e.img, cc.SpriteFrame);
} else this.sprite.node.active = !1;
});
}
};
i([ l(cc.Label) ], c.prototype, "titleLabel", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util"
} ],
ExamScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f7fdbHXthFNgan/az0TTsr7", "ExamScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/ScrollList"), c = e("../../CustomUI/Toggle"), d = e("../../CustomUI/ToggleGroup"), h = e("../../Frame/NetworkMgr"), p = e("../../Frame/Scene"), u = e("../../Frame/SceneManager"), m = e("../../Frame/Top"), f = e("../../Frame/TweenUtil"), g = e("../../Frame/UIColor"), y = e("../../Frame/Util"), v = e("../../Role"), C = e("../../Scene/HomeScene/DiscoverSubPage/GameBanner"), {ccclass: _, property: S} = cc._decorator;
let I = class extends p.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.titleLabel = null;
this.prepare = null;
this.exam = null;
this.result = null;
this.scrollList = null;
this.toggleGroup = null;
this.preBtn = null;
this.nextBtn = null;
this.examBtn = null;
this.questionLabel = null;
this.questionSprite = null;
this.anwserLayout = null;
this.anwserToggle = null;
this.preQuestionBtn = null;
this.nextQuestionBtn = null;
this.submitBtn = null;
this.questionToggleGroup = null;
this.scoreLabel = null;
this.tipLabel = null;
this.resultLabel = null;
this.reviewBtn = null;
this.exitBtn = null;
this.questionIdx = 0;
this.anwserArr = [];
this.prepareDatas = [ {
title: "转正测试规则",
str: "        你好！在你准备大展身手之前，建议先来个小测试。转正成为正式开发者！\n        你可以在“测前准备”中学习平台规则，了解平台的提倡行为和禁止行为，请各位开发者一定要详细阅读哦，接下来测试的考点都在这了！\n        在测试中，获得100分，即可转正成为正式开发者！加油！",
img: ""
}, {
title: "正式开发者可以做什么？",
str: "        1. 发布游戏，通过你精致的画风和有创意的玩法，收获大批粉丝。\n        2. 上传素材，帮助别人更快更好的做出游戏，同时，你也可以赚取大量的G币。",
img: "image2"
}, {
title: "什么样的作品是被禁止的？",
str: "        以下内容属于严重禁止的内容，如果你提交了这类内容，我们有权删除你的游戏工程，并以封号处理：\n        1. 色情低俗。\n        2. 政治敏感：近现代国家的国旗、国徽，军事战争等。例如，苏联徽章、国家球动画、二战。\n        3. 挑拨引战：例如，我的世界与迷你互喷。\n        4. 引人不适：在游戏中出现粗俗文字或素材，辱骂他人，竖中指等。",
img: "image3"
}, {
title: "特殊提醒",
str: "        在创游中，以下内容因涉及恐怖文化，也被禁止：\n        1. SCP（如：096，173，警笛头）\n        2. 恐怖暗黑游戏（比如：脑叶公司、玩具熊的五夜后宫）\n        如果遇到上述类型游戏，请举报。",
img: "image4"
}, {
title: "Bug反馈",
str: "        游戏过程中遇到bug，请到“我的”-“bug”反馈：",
img: "image5"
}, {
title: "投稿“小编精选”的正确姿势：",
str: "        抖音小游戏的用户，可以录制你的游戏视频，并@创游小助手，这样小助手可以更快找到你的游戏！\n        App的用户可以去应用商店的评论区，发布你的游戏截图并@小助手！",
img: "image6"
}, {
title: "如何获得G币？",
str: "        1. 看广告，不过广告数量有限制哦，每天最多15个。\n        2. 上架自己的素材。\n        3.在游戏内放置道具商店和广告点\n        4.玩家在你游戏内复活你也可以收到G币",
img: ""
}, {
title: "如何做合格的创游公民",
str: "        1. 发现好游戏时，请不要吝惜赞美之言，一键三连，送TA上推荐!\n        2.发现违规的游戏，请马上点举报。",
img: "image8"
} ];
this.questionDatas = [ {
question: "以下哪个游戏作品是创游不允许的？",
anwserIdxs: [ 3 ],
score: 10,
anwsers: [ {
str: "我的冒险",
img: "我的冒险"
}, {
str: "小道李自然",
img: "小道李自然"
}, {
str: "狗头卡包",
img: "狗头卡包"
}, {
str: "scp",
img: "秘密实验室"
} ]
}, {
question: "遇到这个游戏，你应该怎么做？",
img: "炸掉迷你世界",
anwserIdxs: [ 0 ],
score: 10,
anwsers: [ {
str: "举报",
img: ""
}, {
str: "点赞收藏",
img: ""
}, {
str: "转发给身边的朋友",
img: ""
} ]
}, {
question: "在游戏里遇到了bug，应该怎么处理？",
anwserIdxs: [ 1 ],
score: 10,
anwsers: [ {
str: "在评论区破口大骂",
img: ""
}, {
str: "点击“我的”页面中bug反馈",
img: ""
}, {
str: "去创游小助手的抖音账号喷他",
img: ""
} ]
}, {
question: "创游会优先推荐哪种游戏？",
anwserIdxs: [ 2 ],
score: 10,
anwsers: [ {
str: "剧情精彩的恐怖游戏",
img: ""
}, {
str: "画质绝美的引战游戏",
img: ""
}, {
str: "极具创意的原创游戏",
img: ""
} ]
}, {
question: "以下哪些游戏是创游禁止的？<color=#F18AA5>（多选）</color>",
anwserIdxs: [ 0, 1, 3 ],
score: 10,
anwsers: [ {
str: "波兰球",
img: "波兰球"
}, {
str: "sb",
img: "快火起来"
}, {
str: "对战游戏",
img: "vs"
}, {
str: "诺曼底登陆战",
img: "诺曼底登陆战"
} ]
}, {
question: "以下哪个人物是创游世界里不能出现的？",
anwserIdxs: [ 0 ],
score: 10,
anwsers: [ {
str: "警笛头",
img: "警笛头"
}, {
str: "太空人",
img: "太空人"
}, {
str: "狗头",
img: "狗头"
}, {
str: "兽设",
img: "兽设"
} ]
}, {
question: "表达对一个作品的喜爱，可以采用哪些方式？<color=#F18AA5>（多选）</color>",
anwserIdxs: [ 0, 1, 3 ],
score: 10,
anwsers: [ {
str: "点赞",
img: ""
}, {
str: "收藏",
img: ""
}, {
str: "照抄",
img: ""
}, {
str: "催更",
img: ""
} ]
}, {
question: "想让自己的游戏上精选，应该怎么做？<color=#F18AA5>（多选）</color>",
anwserIdxs: [ 0, 2 ],
score: 10,
anwsers: [ {
str: "@创游小助手投稿",
img: ""
}, {
str: "去别人的评论区里刷屏宣传",
img: ""
}, {
str: "分享给自己的朋友玩，提升游戏热度",
img: ""
} ]
}, {
question: "素材没人买，可能是什么原因？<color=#F18AA5>（多选）</color>",
anwserIdxs: [ 0, 1 ],
score: 10,
anwsers: [ {
str: "定价太高",
img: ""
}, {
str: "画的太丑",
img: ""
}, {
str: "别人没眼光",
img: ""
} ]
}, {
question: "如何获得G币？<color=#F18AA5>（多选）</color>",
anwserIdxs: [ 0, 1, 2 ],
score: 10,
anwsers: [ {
str: "看广告",
img: ""
}, {
str: "去商店卖素材",
img: ""
}, {
str: "制作游戏赚G币",
img: ""
}, {
str: "外挂刷G币",
img: ""
} ]
} ];
}
onLoad() {
this.toggleGroup.node.on(d.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd10, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd10, this);
this.backBtn.node.on(r.default.CLICK, this.onBackBtn, this);
this.preBtn.node.on(r.default.CLICK, this.onPreBtn, this);
this.nextBtn.node.on(r.default.CLICK, this.onNextBtn, this);
this.examBtn.node.on(r.default.CLICK, this.onExamBtn, this);
this.preQuestionBtn.node.on(r.default.CLICK, this.onPreQuestionBtn, this);
this.nextQuestionBtn.node.on(r.default.CLICK, this.onNextQuestionBtn, this);
this.submitBtn.node.on(r.default.CLICK, this.onSubmitBtn, this);
this.reviewBtn.node.on(r.default.CLICK, this.onReviewBtn, this);
this.exitBtn.node.on(r.default.CLICK, this.onBackBtn, this);
this.questionToggleGroup.node.on(d.default.TOGGLE_CHANGE, this.onQuestionToggleChange, this);
}
onBackBtn() {
u.default.ins.Back();
}
start() {
this.setPrepareState();
}
setPrepareState() {
this.prepare.active = !0;
this.exam.active = !1;
this.result.active = !1;
this.titleLabel.string = "测前准备";
y.Util.makeBro(this.toggleGroup.node.children[0], this.prepareDatas.length);
this.scrollList.setDataArr(this.prepareDatas);
this.toggleGroup.selectIdx(0);
}
onPreBtn() {
return n(this, void 0, void 0, function*() {
let e = this.scrollList.curSelectIdx;
e > 0 && this.toggleGroup.selectIdx(e - 1);
});
}
onNextBtn() {
return n(this, void 0, void 0, function*() {
let e = this.scrollList.curSelectIdx;
e < this.scrollList.getDataArr().length - 1 && this.toggleGroup.selectIdx(e + 1);
});
}
onExamBtn() {
return n(this, void 0, void 0, function*() {
u.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否开始测试？";
e.setLeftBtn({
text: "再准备一下",
color: g.UIColor.blue
});
e.setRightBtn({
text: "开始测试",
color: g.UIColor.pink,
call: () => {
this.setExamState();
}
});
});
});
}
onToggleChange(e) {
this.scrollList.centerToIdx(e, .3);
this.scrollList.selectByIdx(e);
let t = e == this.scrollList.getDataArr().length - 1;
this.examBtn.node.active = t;
this.nextBtn.node.active = !t;
}
onTouchEnd10(e) {
let t = e.target, o = t.convertToWorldSpaceAR(e.getStartLocation()), i = t.convertToWorldSpaceAR(e.getLocation()).sub(o), n = this.scrollList.curSelectIdx;
if (i.x > 50 && n > 0) this.toggleGroup.selectIdx(n - 1); else if (i.x < -50 && n < this.scrollList.getDataArr().length - 1) this.toggleGroup.selectIdx(n + 1); else {
this.onToggleChange(n);
if (i.magSqr() < 10) {
let e = this.scrollList.getExtraData(n);
if (e && e.item) {
let t = e.item.getComponent(C.default);
t && t.onClick();
}
}
}
}
setExamState() {
this.prepare.active = !1;
this.exam.active = !0;
this.result.active = !1;
this.titleLabel.string = "测试";
this.anwserArr = [];
for (let e = 0; e < this.questionDatas.length; e++) this.anwserArr.push([ !1, !1, !1, !1 ]);
this.initQuestion(this.questionIdx);
y.Util.makeBro(this.questionToggleGroup.node.children[0], this.questionDatas.length);
this.questionToggleGroup.selectIdx(0);
}
onQuestionToggleChange(e, t, o) {
o && this.initQuestion(e);
}
initQuestion(e) {
return n(this, void 0, void 0, function*() {
this.questionIdx = e;
let t = this.questionDatas[e], o = 1 == t.anwserIdxs.length;
this.questionLabel.string = `${e + 1}. ${t.question}`;
if (t.img) {
this.questionSprite.node.active = !0;
this.questionSprite.spriteFrame = yield y.Util.loadBundleRes("Atlas/Exam/Question/" + t.img, cc.SpriteFrame);
} else this.questionSprite.node.active = !1;
let i = e == this.questionDatas.length - 1;
this.nextQuestionBtn.node.active = !i;
this.submitBtn.node.active = i;
let a = this.anwserArr[e];
y.Util.makeBro(this.anwserToggle.node, t.anwsers.length, (i, s) => n(this, void 0, void 0, function*() {
let n = i.getComponent(c.default);
n.isChecked = a[s];
let l = t.anwsers[s];
n.label.string = `${[ "A", "B", "C", "D" ][s]}. ${l.str}`;
n.background.spriteFrame = null;
if (l.img) {
this.anwserLayout.spacingY = 80;
n.label.node.y = -160;
n.node.width = 250;
n.node.height = 250;
n.background.node.active = !0;
n.background.spriteFrame = yield y.Util.loadBundleRes("Atlas/Exam/Anwser/" + l.img, cc.SpriteFrame);
} else {
this.anwserLayout.spacingY = 10;
n.label.node.y = 0;
n.node.width = 550;
n.node.height = 100;
n.background.node.active = !1;
}
y.Util.updateAllWidget(n.node);
n.node.targetOff(this);
n.node.on(r.default.CLICK, () => {
if (o) {
let e = this.anwserLayout.node.parent.getComponentsInChildren(c.default);
for (let o = 0; o < t.anwsers.length; o++) if (o != s) {
this.anwserArr[this.questionIdx][o] = !1;
e[o].isChecked = !1;
}
}
this.anwserArr[this.questionIdx][s] = n.isChecked;
this.questionToggleGroup.node.children[e].getComponent(c.default).background.node.color = g.UIColor.white;
}, this);
}));
});
}
onPreQuestionBtn() {
this.questionIdx > 0 && this.questionToggleGroup.selectIdx(this.questionIdx - 1);
}
onNextQuestionBtn() {
this.questionIdx < this.questionDatas.length && this.questionToggleGroup.selectIdx(this.questionIdx + 1);
}
onSubmitBtn() {
let e = [];
for (let t = 0; t < this.anwserArr.length; t++) this.anwserArr[t].every(e => 0 == e) && e.push(t);
if (e.length > 0) {
for (let t = 0; t < this.questionToggleGroup.node.childrenCount; t++) this.questionToggleGroup.node.children[t].getComponent(c.default).background.node.color = e.includes(t) ? g.UIColor.red : g.UIColor.white;
for (let t = 0; t < e.length; t++) e[t]++;
m.default.showToast(`还未作答第${e.join(",")}题`);
} else u.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否交卷？";
e.setLeftBtn({
text: "再检查一下",
color: g.UIColor.blue
});
e.setRightBtn({
text: "交卷",
color: g.UIColor.pink,
call: () => {
m.default.showLoading("提交中");
this.scheduleOnce(() => n(this, void 0, void 0, function*() {
m.default.hideLoading();
let e = 0, t = [];
for (let o = 0; o < this.questionDatas.length; o++) {
let i = this.anwserArr[o], n = this.questionDatas[o], a = !0;
for (let e = 0; e < n.anwsers.length; e++) n.anwserIdxs.includes(e) !== i[e] && (a = !1);
if (a) e += this.questionDatas[o].score; else {
t.push(o + 1);
console.log("第" + o + "错了", i, n.anwserIdxs);
}
}
let o = {
score: e
};
yield h.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_UploadTakeExamScore,
params: o
}, s.Game_RUploadTakeExamScore);
v.default.Ins.role.examScore = e;
this.setResultState(e, t);
}), .4);
}
});
});
}
setResultState(e, t) {
this.prepare.active = !1;
this.exam.active = !1;
this.result.active = !0;
this.titleLabel.string = "结果公布";
this.scoreLabel.string = "" + e;
let o = "";
o = e >= 100 ? "恭喜您通过了测试！" : e >= 90 ? "好遗憾啊，就差一点！" : e >= 60 ? "及格了，满分才可以哦" : "啊这，乱答是不行的哦";
let i = 100 == e;
this.tipLabel.string = i ? "已转正！获得发布游戏的能力" : a.I18nMgr.exceI18nStringByZh('第${errorIdxs.join(",")}题答错了', [ {
paramName: 'errorIdxs.join(",")',
param: t.join(",")
} ]);
f.TweenUtil.applayTextAnim(this.resultLabel, a.I18nMgr.getI18nStringByZh(o), .1);
this.reviewBtn.node.active = !i;
this.exitBtn.node.active = i;
}
onReviewBtn() {
this.setPrepareState();
}
};
i([ S(r.default) ], I.prototype, "backBtn", void 0);
i([ S(cc.Label) ], I.prototype, "titleLabel", void 0);
i([ S(cc.Node) ], I.prototype, "prepare", void 0);
i([ S(cc.Node) ], I.prototype, "exam", void 0);
i([ S(cc.Node) ], I.prototype, "result", void 0);
i([ S(l.default) ], I.prototype, "scrollList", void 0);
i([ S(d.default) ], I.prototype, "toggleGroup", void 0);
i([ S(r.default) ], I.prototype, "preBtn", void 0);
i([ S(r.default) ], I.prototype, "nextBtn", void 0);
i([ S(r.default) ], I.prototype, "examBtn", void 0);
i([ S(cc.RichText) ], I.prototype, "questionLabel", void 0);
i([ S(cc.Sprite) ], I.prototype, "questionSprite", void 0);
i([ S(cc.Layout) ], I.prototype, "anwserLayout", void 0);
i([ S(c.default) ], I.prototype, "anwserToggle", void 0);
i([ S(r.default) ], I.prototype, "preQuestionBtn", void 0);
i([ S(r.default) ], I.prototype, "nextQuestionBtn", void 0);
i([ S(r.default) ], I.prototype, "submitBtn", void 0);
i([ S(d.default) ], I.prototype, "questionToggleGroup", void 0);
i([ S(cc.Label) ], I.prototype, "scoreLabel", void 0);
i([ S(cc.Label) ], I.prototype, "tipLabel", void 0);
i([ S(cc.Label) ], I.prototype, "resultLabel", void 0);
i([ S(r.default) ], I.prototype, "reviewBtn", void 0);
i([ S(r.default) ], I.prototype, "exitBtn", void 0);
I = i([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Toggle": "Toggle",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Role": "Role",
"../../Scene/HomeScene/DiscoverSubPage/GameBanner": "GameBanner"
} ],
FansCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e53306G++BAZIyOOKJbN27F", "FansCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Game/Player/FollowMng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.introLabel = null;
this.headIcon = null;
this.followBtn = null;
this.dot = null;
this.info = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.followBtn.node.on(a.default.CLICK, this.onFollowBtn, this);
this.node.on(a.default.CLICK, this.enterFriendScene, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
if (e) {
d.FollowMng.Ins.isSelf() || (this.followBtn.node.active = !1);
this.info = e;
this.nameLabel.string = e.userName;
this.introLabel && (this.introLabel.string = c.Util.clampStr(e.userIntro, 12, ".."));
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.level);
this.followBtn.label.string = e.isFollow ? "互相关注" : "回关";
this.dot && (this.dot.active = e.isNew);
}
});
}
onFollowBtn() {
return n(this, void 0, void 0, function*() {
if (this.info) if (this.info.isFollow) {
if (1 == (yield d.FollowMng.Ins.unFollow(this.info.playerId))) {
this.info.isFollow = !1;
this.followBtn.label.string = "回关";
}
} else if (1 == (yield d.FollowMng.Ins.follow(this.info.playerId))) {
this.info.isFollow = !0;
this.followBtn.label.string = "互相关注";
}
});
}
enterFriendScene() {
if (this.info) {
if (this.dot) {
this.info.isNew = !1;
this.dot.active = !1;
}
l.default.ins.Enter("FriendScene", e => {
e.setData(this.info.playerId);
}, l.ShiftAnima.moveLeftShift);
}
}
};
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "introLabel", void 0);
i([ p(s.default) ], u.prototype, "headIcon", void 0);
i([ p(a.default) ], u.prototype, "followBtn", void 0);
i([ p(cc.Node) ], u.prototype, "dot", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/FollowMng": "FollowMng"
} ],
FightSystem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "25a969sEb1DeZi5FnPrS8DN", "FightSystem");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.FightSystem = void 0;
const i = e("../GameData/GameTypeDefine"), n = e("./Damager"), a = e("./Hper");
(function(e) {
e.enable = !1;
e.BeatData = class {};
let t;
(function(e) {
e.BeatHper = "BeatHper";
e.KillHper = "KillHper";
e.Beaten = "Beaten";
e.Killed = "Killed";
e.HpChange = "HpChange";
e.HpMaxChange = "HpMaxChange";
})(t = e.Event || (e.Event = {}));
let o = [];
e.init = function() {
for (let e = 0; e < 10; e++) {
let e = [];
for (let t = 0; t < 10; t++) e.push(!1);
o.push(e);
}
o[i.Team.HeroBullet][i.Team.Enemy] = !0;
o[i.Team.HeroBullet][i.Team.Tile] = !0;
o[i.Team.Enemy][i.Team.Hero] = !0;
o[i.Team.Enemy][i.Team.Ally] = !0;
o[i.Team.EnemyBullet][i.Team.Hero] = !0;
o[i.Team.EnemyBullet][i.Team.Ally] = !0;
o[i.Team.EnemyBullet][i.Team.Tile] = !0;
o[i.Team.AllyBullet][i.Team.Enemy] = !0;
o[i.Team.AllyBullet][i.Team.Tile] = !0;
o[i.Team.Device][i.Team.Hero] = !0;
o[i.Team.Device][i.Team.Enemy] = !0;
o[i.Team.Device][i.Team.Ally] = !0;
o[i.Team.Device][i.Team.Tile] = !0;
let t = cc.director.getCollisionManager(), r = t._doCollide;
t._doCollide = function(i, l) {
r.call(t, i, l);
if ((1 === i || 2 === i) && e.enable) {
var c, d, h, p = l.collider1, u = l.collider2, m = p.node._components, f = u.node._components, g = null, y = null, v = null, C = null;
for (c = 0, d = m.length; c < d; c++) {
(h = m[c]) instanceof a.default && (g = h);
h instanceof n.default && (y = h);
}
for (c = 0, d = f.length; c < d; c++) {
(h = f[c]) instanceof a.default && (v = h);
h instanceof n.default && (C = h);
}
g && C && g.enabled && C.enabled && o[C.team][g.team] && s(C, g);
v && y && v.enabled && y.enabled && o[y.team][v.team] && s(y, v);
}
};
};
e.doCollisionTile = function(e, t) {
var i, r, l, c = e._components, d = t._components, h = null, p = null, u = null, m = null;
for (i = 0, r = c.length; i < r; i++) {
(l = c[i]) instanceof a.default && (h = l);
l instanceof n.default && (p = l);
}
for (i = 0, r = d.length; i < r; i++) {
(l = d[i]) instanceof a.default && (u = l);
l instanceof n.default && (m = l);
}
h && m && h.enabled && m.enabled && o[m.team][h.team] && s(m, h);
u && p && u.enabled && p.enabled && o[p.team][u.team] && s(p, u);
};
function s(e, o) {
if (e.ignoreTeam == o.team) return;
if (o.hp <= 0) return;
if (e.remainTimes <= 0) return;
if (!e.tryDmgTarget(o)) return;
let i = e.dmg;
o.lockHp && (i = 0);
let n = o.hp - i, a = {
hper: o,
damager: e,
dmg: i,
isCrit: !1,
causeDeath: n <= 0
};
e.remainTimes--;
(e.emitTarget || e.node).emit(t.BeatHper, a);
if (!o.lockHp) {
o.hp = Math.max(0, n);
(o.emitTarget || o.node).emit(t.Beaten, a);
if (o.hp <= 0) {
(e.emitTarget || e.node).emit(t.KillHper, a);
(o.emitTarget || o.node).emit(t.Killed, a);
}
}
}
})(o.FightSystem || (o.FightSystem = {}));
cc._RF.pop();
}, {
"../GameData/GameTypeDefine": "GameTypeDefine",
"./Damager": "Damager",
"./Hper": "Hper"
} ],
FireBallLine: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "436c0QJaKpKCLAg6Gb9TVYV", "FireBallLine");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Damager"), s = e("../../Frame/Util"), r = e("../../GameData/GameTypeDefine"), l = e("../Player/Mng"), c = e("../World/Device"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends c.default {
constructor() {
super(...arguments);
this.ball = null;
this.content = null;
this._width = 0;
this._height = 0;
}
onLoad() {
super.onLoad();
s.Util.makeBro(this.ball, 0);
}
setCutting(e) {
if (this.content) {
let t = this.data.extra.cnt;
t > this.content.childrenCount && (t = this.content.childrenCount);
for (let o = 0; o < t; ++o) this.content.children[o].active = !e;
}
}
get width() {
return this._width;
}
get height() {
return this._height;
}
update(e) {
if (!this.world.playing) return;
let t = this.data.extra.speed * e;
this.content.angle += t;
for (let e = 0; e < this.content.childrenCount; e++) this.content.children[e].angle -= t;
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
speed: 300,
dmg: 1,
cnt: 3,
angle: 0
});
this.refresh(e, t);
}
refresh(e, t) {
s.Util.makeBro(this.ball, e.extra.cnt, (o, i) => {
let n = s.Util.angleToVec2(e.extra.angle).mulSelf(50 * i);
o.position = n;
let c = o.getComponent(a.default);
c.dmg = e.extra.dmg;
c.ignoreTeam = this.data.ignoreDmgEnemy ? r.Team.Enemy : r.Team.None;
let d = o.getComponent(cc.Sprite);
l.Mng.Ins.spriteMng.setDeviceSprite(d, t.textureName, 64);
});
this._width = this.node.width * e.extra.cnt;
this._height = this.node.height;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
speed: 300,
dmg: 1,
cnt: 3,
angle: 0
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("转速(度/秒)", n.extra.speed, -999999, 999999, e => {
n.extra.speed = e;
});
e.addNumberEditBox("个数", n.extra.cnt, 1, 64, e => {
n.extra.cnt = e;
o && o.refresh(i, t);
});
e.addNumberEditBox("初始角度", n.extra.angle, -999999, 999999, e => {
n.extra.angle = e;
o && o.refresh(i, t);
});
e.addToggle("伤害敌人", !n.ignoreDmgEnemy, e => {
n.ignoreDmgEnemy = !e;
});
e.addNumberEditBox("伤害", n.extra.dmg, 0, 999999, e => {
n.extra.dmg = e;
});
}
};
n([ h(cc.Node) ], p.prototype, "ball", void 0);
n([ h(cc.Node) ], p.prototype, "content", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../Frame/Damager": "Damager",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../World/Device": "Device"
} ],
Flag: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "39f48u6emdHbLh8fzudECnO", "Flag");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameData/GameTypeDefine"), s = e("../Player/Mng"), r = e("../Player/TriggerMng"), l = e("../World/Device"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends l.default {
constructor() {
super(...arguments);
this.sprite = null;
}
onCollisionEnter(e, t) {
this.world.playing && this.isHeroActor(e) && r.default.Ins.emitTrigger(this.data.extra.onActorEnter, this.node);
}
isHeroActor(e) {
return this.world.isHeroActor(e.node);
}
setData(e, t) {
super.setData(e, t);
e = this.data;
s.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
scale: 1,
onActorEnter: [ {
act: a.TriggerAct.GameWin,
extra: {
str: "恭喜过关!"
}
} ]
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
onActorEnter: [ {
act: a.TriggerAct.GameWin,
extra: {
str: "恭喜过关!"
}
} ]
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addTrigger("当接触主角时：", n.extra.onActorEnter, !0);
}
};
n([ d({
override: !0,
type: cc.Sprite
}) ], h.prototype, "sprite", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device"
} ],
FloatLabel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bdadcyEsIlAmqpQVR9+pn/K", "FloatLabel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Pool"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.anim = null;
}
onLoad() {
this.label = this.node.getComponentInChildren(cc.Label);
this.anim = this.node.getComponent(cc.Animation);
this.anim.on(cc.Animation.EventType.FINISHED, this.onAnimFinish, this);
}
play(e) {
this.anim.play(e);
}
onAnimFinish() {
this.node.emit(n.default.PUT);
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Pool": "Pool"
} ],
FollowBanner: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "59e19c2YU9LVIusFSne5ZAz", "FollowBanner");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../Frame/CrossPlatform"), s = e("../../../Frame/Top"), r = e("../../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
onLoad() {
this.node.on(n.default.CLICK, this.onClickFollow, this);
}
onClickFollow() {
let e = a.systemInfo.SDKVersion;
if (a.tt && a.crossPlatform.openAwemeUserProfile) {
if (r.Util.compareVersion(e, "1.84.0") < 0) {
s.default.showToast("您的版本过低,请更新客户端");
return;
}
a.crossPlatform.openAwemeUserProfile();
}
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/Top": "Top",
"../../../Frame/Util": "Util"
} ],
FollowCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb566i1+rxLubcDsXCNrUQq", "FollowCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Game/Player/FollowMng"), d = e("../../Role"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.headIcon = null;
this.followBtn = null;
this.info = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.followBtn.node.on(a.default.CLICK, this.onFollowBtn, this);
this.node.on(a.default.CLICK, this.enterFriendScene, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
if (e) {
this.info = e;
this.nameLabel.string = e.userName;
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.level);
if (c.FollowMng.Ins.isSelf()) {
this.followBtn.label.string = e.isFollow ? "已关注" : "关注";
this.followBtn.node.active = e.playerId != d.default.Ins.role.id;
} else this.followBtn.node.active = !1;
}
});
}
onFollowBtn() {
return n(this, void 0, void 0, function*() {
if (this.info) if (this.info.isFollow) {
if (1 == (yield c.FollowMng.Ins.unFollow(this.info.playerId))) {
this.info.isFollow = !1;
this.followBtn.label.string = "关注";
}
} else if (1 == (yield c.FollowMng.Ins.follow(this.info.playerId))) {
this.info.isFollow = !0;
this.followBtn.label.string = "已关注";
}
});
}
enterFriendScene() {
this.info && l.default.ins.Enter("FriendScene", e => {
e.setData(this.info.playerId);
}, l.ShiftAnima.moveLeftShift);
}
};
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(s.default) ], u.prototype, "headIcon", void 0);
i([ p(a.default) ], u.prototype, "followBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/FollowMng": "FollowMng",
"../../Role": "Role"
} ],
FollowGamesSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7cb1f5ZUihMEo08NTKbJmjC", "FollowGamesSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Game/Player/DiscoverMng"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/FollowMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.list = null;
this.loadingNode = null;
this.emptyLabel = null;
}
onLoad() {
return n(this, void 0, void 0, function*() {
this.loadingNode.width = this.loadingNode.height = 0;
yield this.refresh();
});
}
onEnable() {
this.emptyLabel.string = a.I18nMgr.getI18nStringByZh(c.FollowMng.Ins.followIds.length > 0 ? "暂无游戏" : "您还未关注任何作者");
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = r.default.Ins.followGameDatas;
l.DynamicMng.Ins.isInspectVersion() && (e = []);
this.list.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield r.default.Ins.appendLoadFollowGames(20);
this.refresh();
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(o, 100);
this.loadingNode.angle = o;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
};
i([ h(s.default) ], p.prototype, "list", void 0);
i([ h(cc.Node) ], p.prototype, "loadingNode", void 0);
i([ h(cc.Label) ], p.prototype, "emptyLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Game/Player/DiscoverMng": "DiscoverMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/FollowMng": "FollowMng"
} ],
FollowMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "91d2dZzMcVBy5kl72irHfHK", "FollowMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.FollowMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Role"), r = e("./DynamicMng"), l = e("./GameCoverMng"), c = e("./PlayerDetailMng");
class d {
constructor() {
this.playerId = -1;
this.followIds = null;
this.fansIds = [];
this.otherFollowIdsMap = new Map();
this.otherFansIdsMap = new Map();
this.newFansCnt = 0;
this.playerInfoMap = new Map();
}
follow(e) {
return i(this, void 0, void 0, function*() {
try {
let t = {
followId: e
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_FollowUser,
params: t
}, n.Game_RFollowUser))) return -1;
this.followIds.unshift(e);
let o = this.playerInfoMap.get(e);
o && (o.isFollow = !0);
let i = c.default.Ins.cache.get(e);
if (i) {
i.isFollow = !0;
i.fansCount++;
}
l.default.Ins.cache.forEach(t => {
if (t.authorMsg && t.authorMsg.id == e) {
t.authorMsg.isFollow = !0;
t.authorMsg.fansCount++;
}
});
} catch (e) {}
return 1;
});
}
unFollow(e) {
return i(this, void 0, void 0, function*() {
try {
let t = {
followId: e
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelFollowUser,
params: t
}, n.Game_RFollowUser))) return -1;
let o = this.followIds.indexOf(e);
o >= 0 && this.followIds.splice(o, 1);
let i = this.playerInfoMap.get(e);
i && (i.isFollow = !1);
let s = c.default.Ins.cache.get(e);
if (s) {
s.isFollow = !1;
s.fansCount--;
}
l.default.Ins.cache.forEach(t => {
if (t.authorMsg && t.authorMsg.id == e) {
t.authorMsg.isFollow = !1;
t.authorMsg.fansCount--;
}
});
} catch (e) {}
return 1;
});
}
loadInfos(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
this.playerInfoMap.has(i) || t.push(i);
}
if (t.length > 0) {
let e = {
ids: t
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetUserSimpleMsg,
params: e
}, n.Game_RGetUserSimpleMsg);
if (o) for (let e = 0; e < o.userSimpleMsgList.length; e++) {
let t = o.userSimpleMsgList[e];
this.playerInfoMap.set(t.playerId, t);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = this.playerInfoMap.get(e[t]);
i && o.push(i);
}
return o;
});
}
isSelf() {
return this.playerId == s.default.Ins.role.uId;
}
getFollowIds() {
return i(this, void 0, void 0, function*() {
if (this.playerId == s.default.Ins.role.uId) return this.followIds;
this.otherFollowIdsMap.has(this.playerId) || (yield this.loadOtherFollowIds());
return this.otherFollowIdsMap.get(this.playerId);
});
}
getFansIds() {
if (this.playerId == s.default.Ins.role.uId) return this.fansIds;
this.otherFansIdsMap.has(this.playerId) || this.otherFansIdsMap.set(this.playerId, []);
return this.otherFansIdsMap.get(this.playerId);
}
loadOtherFollowIds() {
return i(this, void 0, void 0, function*() {
let e = {
rid: this.playerId
}, t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetFollow,
params: e
}, n.Game_RGetFollow);
t && this.otherFollowIdsMap.set(this.playerId, t.ids);
});
}
appendLoadFansIds(e = 10) {
return i(this, void 0, void 0, function*() {
this.playerId = s.default.Ins.role.uId;
return yield this.appendOtherLoadFansIds(e);
});
}
appendOtherLoadFansIds(e = 10) {
return i(this, void 0, void 0, function*() {
if (r.DynamicMng.Ins.isInspectVersion()) return [];
let t = this.getFansIds().length, o = t + e;
if (t >= o) return this.getFansIds();
let i = {
startIndex: t,
endIndex: o,
rid: this.playerId
}, s = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetFans,
params: i
}, n.Game_RGetFans);
if (s) {
let e = s.ids;
if (this.isSelf()) {
this.fansIds = this.fansIds.concat(e);
this.newFansCnt = s.newFansCnt;
} else if (this.otherFansIdsMap.has(this.playerId)) {
let t = this.otherFansIdsMap.get(this.playerId);
t = t.concat(e);
this.otherFansIdsMap.set(this.playerId, t);
} else this.otherFansIdsMap.set(this.playerId, e);
}
return this.getFansIds();
});
}
clearFansIds() {
this.fansIds = [];
}
clearOtherIdsMap() {
this.otherFollowIdsMap = new Map();
this.otherFansIdsMap = new Map();
}
clearFansDot() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearNewFans,
params: {}
}, n.Game_RClearNewFans);
this.newFansCnt = 0;
});
}
}
o.FollowMng = d;
d.Ins = new d();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Role": "Role",
"./DynamicMng": "DynamicMng",
"./GameCoverMng": "GameCoverMng",
"./PlayerDetailMng": "PlayerDetailMng"
} ],
FollowScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "499baZc89dP+oKx2hc3EPbi", "FollowScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Util"), h = e("../../Game/OperationFlow"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/FollowMng"), m = e("../../Game/Player/PlayerDetailMng"), f = e("../../Role"), {ccclass: g, property: y} = cc._decorator;
let v = class extends l.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.nameLabel = null;
this.toggleGroup = null;
this.followList = null;
this.fansList = null;
this.emptyLabel = null;
this.backCall = null;
this.playerId = -1;
this.countPreLoad = 10;
}
onLoad() {
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.emptyLabel.node.active = !1;
d.Util.updateAllWidget(this.node);
}
onShow(e) {
h.OperationFlow.deelOnShow(e);
}
init(e, t) {
return n(this, void 0, void 0, function*() {
if (t == f.default.Ins.role.uId) {
this.playerId = f.default.Ins.role.uId;
this.nameLabel.string = f.default.Ins.userName;
} else {
this.playerId = t;
let e = yield m.default.Ins.load(t);
this.nameLabel.string = d.Util.clampStr(e.userName, 6, "..");
}
u.FollowMng.Ins.playerId = this.playerId;
if ("follow" == e) {
this.toggleGroup.selectIdx(0);
this.onToggleChange(0, -1, !0);
} else "fans" == e ? this.toggleGroup.selectIdx(1) : cc.error("FollowScene Open Failed: #Which# Not In Range");
});
}
onBackBtn() {
u.FollowMng.Ins.playerId = -1;
c.default.ins.Back(() => {
this.backCall && this.backCall();
}, c.ShiftAnima.moveRightShift);
}
onToggleChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
u.FollowMng.Ins.playerId = this.playerId;
this.followList.node.active = !1;
this.fansList.node.active = !1;
if (0 == e) {
this.followList.node.active = !0;
let e = yield u.FollowMng.Ins.loadInfos(yield u.FollowMng.Ins.getFollowIds());
p.DynamicMng.Ins.isInspectVersion() && (e = []);
this.followList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
this.emptyLabel.string = "暂无关注数据";
}
if (1 == e) {
this.fansList.node.active = !0;
let e = u.FollowMng.Ins.getFansIds();
e.length < this.countPreLoad && (e = yield u.FollowMng.Ins.appendOtherLoadFansIds());
let t = yield u.FollowMng.Ins.loadInfos(e);
this.fansList.setDataArr(t);
this.emptyLabel.node.active = 0 == t.length;
this.emptyLabel.string = "暂无粉丝数据";
}
}
});
}
onScrollFansEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
if (t != cc.ScrollView.EventType.BOUNCE_BOTTOM) return;
let e = yield u.FollowMng.Ins.appendOtherLoadFansIds(), o = yield u.FollowMng.Ins.loadInfos(e);
this.fansList.setDataArr(o);
});
}
};
i([ y(a.default) ], v.prototype, "backBtn", void 0);
i([ y(cc.Label) ], v.prototype, "nameLabel", void 0);
i([ y(r.default) ], v.prototype, "toggleGroup", void 0);
i([ y(s.default) ], v.prototype, "followList", void 0);
i([ y(s.default) ], v.prototype, "fansList", void 0);
i([ y(cc.Label) ], v.prototype, "emptyLabel", void 0);
i([ y ], v.prototype, "countPreLoad", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/FollowMng": "FollowMng",
"../../Game/Player/PlayerDetailMng": "PlayerDetailMng",
"../../Role": "Role"
} ],
FreshComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9974fYnt5JAhJIJwtv5hO05", "FreshComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/DiscoverMng"), d = e("../GameCell"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.gameCell = null;
this.moreBtn = null;
this.spaceX = 10;
this.spcaeY = 10;
this.speed = 20;
this.data = null;
this.colMax = 5;
}
onLoad() {
this.moreBtn.node.on(a.default.CLICK, this.onMoreBtn, this);
this.node.on(s.default.SET_DATA, this.setData, this);
let e = 0, t = -this.gameCell.node.height / 2, o = 0, i = 0;
l.Util.makeBro(this.gameCell.node, 10, n => {
if (i >= this.colMax) {
i = 0;
e = ++o % 2 ? -(n.width + this.spaceX) / 2 : 0;
t -= n.height + this.spcaeY;
}
e += n.width / 2;
n.x = e;
n.y = t;
e += n.width / 2 + this.spaceX;
i++;
});
}
setData(e) {
this.data = e;
l.Util.makeBro(this.gameCell.node, e.games.length, (t, o) => {
let i = t.getComponent(d.default), n = e.games[o], a = orange.TimeUtil.serverTime;
i.setData(n, a);
});
}
update(e) {
let t = this.gameCell.node.parent;
for (let o = 0; o < t.childrenCount; o++) {
let i = t.children[o];
i.x -= e * this.speed;
i.x + i.width / 2 < 0 && (i.x += this.colMax * (i.width + this.spaceX));
}
}
onMoreBtn() {
r.default.ins.Enter("GameListScene", e => n(this, void 0, void 0, function*() {
e.setData({
title: "新鲜出炉",
games: c.default.Ins.freshGames.concat(),
from: "FreshCompMore",
appendFunc: () => n(this, void 0, void 0, function*() {
return c.default.Ins.appendLoadFreshGames(20);
})
});
}));
}
};
i([ p(d.default) ], u.prototype, "gameCell", void 0);
i([ p(a.default) ], u.prototype, "moreBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/DiscoverMng": "DiscoverMng",
"../GameCell": "GameCell"
} ],
FreshGameMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "be6afr+rFBLoqZmFLmVMCTp", "FreshGameMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./DynamicMng"), r = e("./GameCellDataMng");
class l {
constructor() {
this.games = [];
this._startMember = "";
this.fakeGames = [];
}
loadIds(e) {
return i(this, void 0, void 0, function*() {
if (s.DynamicMng.Ins.isInspectVersion()) return [];
let t = this.games || [], o = t.length, i = o + 100;
if (o >= (i = Math.min(i, 1999))) return t;
let l = this._startMember;
e && (l = "");
let c = {
start: o,
end: i,
startMember: l
}, d = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetNewGameList,
params: c
}, n.Game_RGetNewGameList);
if (d) {
this._startMember = d.startMember;
for (let e = 0; e < d.gameDatas.length; e++) {
let t = d.gameDatas[e];
this.games.push(t);
r.default.Ins.cache.set(t.id, t);
}
}
return this.games;
});
}
clear() {
this.games = [];
}
}
o.default = l;
l.Ins = new l();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"./DynamicMng": "DynamicMng",
"./GameCellDataMng": "GameCellDataMng"
} ],
FreshSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "edab7F96iBK+K/WwyAjsH1r", "FreshSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/Top"), r = e("../../../Game/Player/FreshGameMng"), l = e("../../../Game/Player/GameCellDataMng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.list = null;
this.loadingNode = null;
this.emptyNode = null;
}
onLoad() {
return n(this, void 0, void 0, function*() {
this.loadingNode.width = this.loadingNode.height = 0;
yield this.refresh(!0);
});
}
refresh(e) {
return n(this, void 0, void 0, function*() {
let t = yield r.default.Ins.loadIds(e);
this.list.setDataArr(t);
this.emptyNode.active = 0 == t.length;
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (o > 100) {
r.default.Ins.clear();
l.default.Ins.deleteAllCache();
yield this.refresh(!0);
s.default.showToast("已刷新");
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
this.refresh(!1);
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(o, 100);
this.loadingNode.angle = o;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
};
i([ d(a.default) ], h.prototype, "list", void 0);
i([ d(cc.Node) ], h.prototype, "loadingNode", void 0);
i([ d(cc.Node) ], h.prototype, "emptyNode", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Top": "Top",
"../../../Game/Player/FreshGameMng": "FreshGameMng",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng"
} ],
FriendGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b334anaR1pIOJotI1xmVDbU", "FriendGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), r = e("../../CustomUI/Button"), l = e("../../Frame/SceneManager"), c = e("../../TGA"), d = e("../../CustomUI/GameIcon"), h = e("../../Game/Player/RcmdMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.playLabel = null;
this.playBtn = null;
this.gameIcon = null;
this.gameData = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(r.default.CLICK, this.onPlayBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.gameData = e;
this.nameLabel.string = "";
if (e) {
h.default.Ins.gameShow(e.id, "FriendGame");
this.nameLabel.string = s.Util.clampStr(e.name, 6, "..");
this.gameIcon.loadUrl(e.iconTextureName);
this.gameIcon.showSubIcon(e.openCreativeGame);
let t = e.playCnt || 0;
this.playLabel.string = "" + t;
this.playLabel.node.parent.active = 0 != t;
} else this.gameIcon.loadUrl("icon1");
});
}
onPlayBtn() {
return n(this, void 0, void 0, function*() {
l.default.ins.Enter("GameCoverScene", e => {
e.setData(this.gameData.id);
}, l.ShiftAnima.moveLeftShift);
c.TGA.track("clickGameCell", {
gameId: this.gameData.id,
from: "FriendGameCell"
});
});
}
};
i([ u(cc.Label) ], m.prototype, "nameLabel", void 0);
i([ u(cc.Label) ], m.prototype, "playLabel", void 0);
i([ u(r.default) ], m.prototype, "playBtn", void 0);
i([ u(d.default) ], m.prototype, "gameIcon", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/RcmdMng": "RcmdMng",
"../../TGA": "TGA"
} ],
FriendGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "336afzbVdhDsJePQvl0Qdq9", "FriendGoodsCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/Mng"), c = e("../../Game/Player/RcmdMng"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.priceLabel = null;
this.saleCntLabel = null;
this.buyBtn = null;
this.info = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(a.default.CLICK, this.onBuyBtn, this);
}
setData(e) {
this.info = e;
c.default.Ins.goodsShow(e.id, "FriendGameCell");
this.nameLabel.string = e.name;
this.priceLabel.string = e.price + "";
this.saleCntLabel.string = e.saleCnt + "";
l.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 160);
}
onBuyBtn() {
if (!i.clickLock) {
i.clickLock = !0;
r.default.ins.OpenPanelByName("BuyGoodsPanel", e => {
i.clickLock = !1;
e.setData(this.info);
});
}
}
};
p.clickLock = !1;
n([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
n([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
n([ h(cc.Label) ], p.prototype, "priceLabel", void 0);
n([ h(cc.Label) ], p.prototype, "saleCntLabel", void 0);
n([ h(a.default) ], p.prototype, "buyBtn", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/RcmdMng": "RcmdMng"
} ],
FriendScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "848cepesh5HP7xGA478NGxL", "FriendScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/HeadIcon"), l = e("../../CustomUI/ScrollList"), c = e("../../CustomUI/ToggleGroup"), d = e("../../Frame/Scene"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Frame/UIColor"), m = e("../../Frame/Util"), f = e("../../Game/OperationFlow"), g = e("../../Game/Player/DynamicMng"), y = e("../../Game/Player/FollowMng"), v = e("../../Game/Player/PlayerDetailMng"), C = e("../../Game/Player/ShopMng"), _ = e("../../Game/Player/TalkMng"), S = e("../../Role"), I = e("../../TGA"), G = e("../HomeScene/TalkPage/TalkCell"), {ccclass: T, property: b} = cc._decorator;
let M = class extends d.default {
constructor() {
super(...arguments);
this.idLabel = null;
this.nameLabel = null;
this.introLabel = null;
this.headIcon = null;
this.followBtn = null;
this.fansBtn = null;
this.menuBtn = null;
this.followHeBtn = null;
this.toggleGroup = null;
this.gameList = null;
this.goodsList = null;
this.talksList = null;
this.emptyLabel = null;
this.backBtn = null;
this.detail = null;
this.playerId = 0;
this.followChangeCall = null;
}
onLoad() {
super.onLoad();
cc.game.on(_.default.Talk_Refresh, this.refreshList, this);
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.menuBtn.node.on(s.default.CLICK, this.onMenuBtn, this);
this.followHeBtn.node.on(s.default.CLICK, this.onFollowBtn, this);
this.toggleGroup.node.on(c.default.TOGGLE_CHANGE, this.refreshList, this);
this.headIcon.node.on(s.default.CLICK, this.onHeadIcon, this);
this.fansBtn.node.on(s.default.CLICK, this.onShowFansBtn, this);
this.followBtn.node.on(s.default.CLICK, this.onShowFollowsBtn, this);
}
onShow(e) {
f.OperationFlow.deelOnShow(e);
}
setData(e) {
return n(this, void 0, void 0, function*() {
if (g.DynamicMng.Ins.isDisable(g.FunctionEnum.FriendScene, !0)) return;
this.playerId = e;
this.idLabel.string = "ID:" + e;
let t = yield v.default.Ins.load(e);
this.detail = t;
this.nameLabel.string = m.Util.clampStr(t.userName, 12, "..");
this.introLabel.string = t.userIntro || a.I18nMgr.getI18nStringByZh("这个人很懒，什么也没有留下");
this.headIcon.loadUrl(t.userImg);
this.headIcon.setLevel(t.level);
this.followBtn.label.string = t.followCount + "";
this.fansBtn.label.string = t.fansCount + "";
this.followHeBtn.node.active = e != S.default.Ins.role.id;
this.followHeBtn.label.string = t.isFollow ? "已关注" : "关注";
this.refreshList();
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
if (!this.detail) return;
let e = this.toggleGroup.idx;
this.talksList.node.active = !1;
this.gameList.node.active = !1;
this.goodsList.node.active = !1;
switch (e) {
case 0:
this.gameList.node.active = !0;
this.gameList.setDataArr(this.detail.gameDatas);
this.emptyLabel.node.active = 0 == this.detail.gameDatas.length;
this.emptyLabel.string = "暂无游戏";
break;

case 1:
{
this.goodsList.node.active = !0;
let e = yield C.default.Ins.loadGoodsInfos(this.detail.goodsIds);
this.goodsList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
this.emptyLabel.string = "暂无素材";
break;
}

case 2:
{
this.talksList.node.active = !0;
if (0 == this.talksList.prefabs.length) {
p.default.showLoading("加载中");
let e = yield m.Util.loadBundleRes("Scene/HomeScene/TalkCell"), t = cc.instantiate(e);
this.talksList.node.addChild(t);
t.x = -2e3;
let o = t.getComponent(G.default);
this.talksList.prefabs.push(t);
this.talksList.calculateSizeFunc = e => ({
w: 710,
h: o.calcuHeight(e)
});
p.default.hideLoading();
}
let e = yield _.default.Ins.loadTalksByUserId(this.playerId);
this.talksList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
this.emptyLabel.string = "暂无帖子";
break;
}
}
});
}
onFollowBtn() {
return n(this, void 0, void 0, function*() {
if (this.detail.isFollow) {
if (1 == (yield y.FollowMng.Ins.unFollow(this.detail.playerId))) {
this.detail.isFollow = !1;
this.followHeBtn.label.string = "关注";
this.fansBtn.label.string = this.detail.fansCount.toString();
}
} else if (1 == (yield y.FollowMng.Ins.follow(this.detail.playerId))) {
this.detail.isFollow = !0;
this.followHeBtn.label.string = "已关注";
this.fansBtn.label.string = this.detail.fansCount.toString();
I.TGA.track("follow", {
target: this.detail.playerId
});
}
this.followChangeCall && this.followChangeCall();
});
}
onMenuBtn() {
let e = [];
S.default.Ins.role.id != this.playerId && e.push({
str: "举报",
icon: {
url: "Atlas/UI/reportBtn",
color: u.UIColor.white,
w: 50,
h: 40
},
call: () => {
this.onReportBtn();
}
});
g.DynamicMng.Ins.isGmPlayer() && e.push({
str: "封号",
color: u.UIColor.pink,
icon: {
url: "Atlas/UI/closeBtn",
color: u.UIColor.green,
w: 40,
h: 40
},
call: () => {
h.default.ins.OpenPanelByName("BanPlayerPanel", e => {
e.setData(this.playerId);
});
}
});
p.default.showMenu(this.menuBtn.node, e);
}
onReportBtn() {
h.default.ins.Enter("ReportScene", e => {
e.initReportPlayer(this.playerId);
}, h.ShiftAnima.moveLeftShift);
I.TGA.track("reportPlayer", {
target: this.playerId,
name: this.nameLabel.string,
step: "clickBtn"
});
}
onBackBtn() {
h.default.ins.Back(() => {}, h.ShiftAnima.moveRightShift);
}
onHeadIcon() {
this.detail.userImg && h.default.ins.OpenPanelByName("ImagePreviewPanel", e => {
e.setData(this.detail.userName, this.detail.userImg);
});
}
onShowFansBtn() {
h.default.ins.Enter("FollowScene", e => n(this, void 0, void 0, function*() {
e.init("fans", this.playerId);
}), h.ShiftAnima.moveLeftShift);
}
onShowFollowsBtn() {
h.default.ins.Enter("FollowScene", e => n(this, void 0, void 0, function*() {
e.init("follow", this.playerId);
}), h.ShiftAnima.moveLeftShift);
}
};
i([ b(cc.Label) ], M.prototype, "idLabel", void 0);
i([ b(cc.Label) ], M.prototype, "nameLabel", void 0);
i([ b(cc.Label) ], M.prototype, "introLabel", void 0);
i([ b(r.default) ], M.prototype, "headIcon", void 0);
i([ b(s.default) ], M.prototype, "followBtn", void 0);
i([ b(s.default) ], M.prototype, "fansBtn", void 0);
i([ b(s.default) ], M.prototype, "menuBtn", void 0);
i([ b(s.default) ], M.prototype, "followHeBtn", void 0);
i([ b(c.default) ], M.prototype, "toggleGroup", void 0);
i([ b(l.default) ], M.prototype, "gameList", void 0);
i([ b(l.default) ], M.prototype, "goodsList", void 0);
i([ b(l.default) ], M.prototype, "talksList", void 0);
i([ b(cc.Label) ], M.prototype, "emptyLabel", void 0);
i([ b(s.default) ], M.prototype, "backBtn", void 0);
M = i([ T ], M);
o.default = M;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/FollowMng": "FollowMng",
"../../Game/Player/PlayerDetailMng": "PlayerDetailMng",
"../../Game/Player/ShopMng": "ShopMng",
"../../Game/Player/TalkMng": "TalkMng",
"../../Role": "Role",
"../../TGA": "TGA",
"../HomeScene/TalkPage/TalkCell": "TalkCell"
} ],
GMLoginPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "03f9fFlDiNAbrazZJ2XhYnN", "GMLoginPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../i18n/i18nMgr"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Pool"), l = e("../../Scene/EditWorldScene/Inspector/ButtonItem"), c = e("../../Scene/EditWorldScene/Inspector/EditBoxItem"), {ccclass: d, property: h} = cc._decorator;
let p = class extends s.default {
constructor() {
super(...arguments);
this.okBtn = null;
this.content = null;
this.buttonPool = null;
this.editBoxPool = null;
this._roleId = 0;
this._secret = "";
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
reset() {
for (let e = this.content.childrenCount - 1; e >= 0; e--) {
let t = this.content.children[e];
t.emit(r.default.PUT);
t.scale = 1;
}
}
Show(e) {
this.reset();
this._setCallBack = e;
this.addEditBox(n.I18nMgr.getI18nStringByZh("用户ID"), "", e => {
this._roleId = parseInt(e);
});
this.addEditBox(n.I18nMgr.getI18nStringByZh("密码"), "", e => {
this._secret = e;
});
}
closePanel() {
super.closePanel();
this._setCallBack && this._setCallBack(this._roleId, this._secret);
}
onOkBtn() {
this.closePanel();
}
addButton(e, t, o) {
let i = this.buttonPool.get().getComponent(l.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
addEditBox(e, t, o) {
let i = this.editBoxPool.get().getComponent(c.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
};
i([ h(cc.Button) ], p.prototype, "okBtn", void 0);
i([ h(cc.Node) ], p.prototype, "content", void 0);
i([ h(r.default) ], p.prototype, "buttonPool", void 0);
i([ h(r.default) ], p.prototype, "editBoxPool", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Pool": "Pool",
"../../Scene/EditWorldScene/Inspector/ButtonItem": "ButtonItem",
"../../Scene/EditWorldScene/Inspector/EditBoxItem": "EditBoxItem"
} ],
GM: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dad251z3RVCAb6Pjzu5jx4c", "GM");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/CrossPlatform"), s = e("../Frame/Util"), r = e("../Frame/AD"), l = e("../Scene/EditWorldScene/EditWorldScene"), c = e("../Frame/SceneManager"), d = e("../Frame/Top"), h = e("../../scripts/_autogen/cmd/cmd"), p = e("../Frame/NetworkMgr"), u = e("./Player/ShopMng"), m = e("./Player/ReportMng"), f = e("./Player/DynamicMng"), g = e("../Role"), y = e("./Player/GuideMng"), v = e("./Player/GameRankDataMng"), {ccclass: C, property: _} = cc._decorator;
let S = class extends cc.Component {
constructor() {
super(...arguments);
this.openBtn = null;
this.closeBtn = null;
this.buttonPrefab = null;
this.panel = null;
this.content = null;
}
onLoad() {
this.openBtn.node.on("click", () => {
this.panel.active = !this.panel.active;
}, this);
this.closeBtn.node.on("click", () => {
this.closePanel();
}, this);
this.buttonPrefab.active = !1;
this.closePanel();
this.initBtn();
}
initBtn() {
this.addBtn("清空缓存", () => {
a.crossPlatform.clearStorageSync();
a.crossPlatform.exitMiniProgram();
});
this.addBtn("大退", () => {
a.crossPlatform.exitMiniProgram();
});
this.addBtn("跳过广告", () => {
r.AD.skip = !r.AD.skip;
}, () => r.AD.skip ? "跳过广告" : "正常广告");
this.addBtn("输出压缩关卡", () => n(this, void 0, void 0, function*() {
let e = c.default.ins.findScene(l.default);
if (e) {
let t = e.world.makeWorldLayout(), o = s.Util.zip(t), i = Array.from(o);
console.log(JSON.stringify(i));
}
}));
this.addBtn("恢复信誉分", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("ID", "", e => n(this, void 0, void 0, function*() {
let t = {
playerId: e,
incScore: 3
};
yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_IncCreditScore,
params: t
}, h.Game_RIncCreditScore);
d.default.showToast("恢复成功");
}));
});
}));
this.addBtn("处理违规游戏", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("DeelReportScene", e => {
e.setData(m.ReportType.game);
});
}));
this.addBtn("处理违规玩家", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("DeelReportScene", e => {
e.setData(m.ReportType.player);
});
}));
this.addBtn("处理违规商品", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("DeelReportScene", e => {
e.setData(m.ReportType.goods);
});
}));
this.addBtn("处理违规评论", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("DeelReportScene", e => {
e.setData(m.ReportType.comment);
});
}));
this.addBtn("处理违规帖子", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("DeelReportScene", e => {
e.setData(m.ReportType.talk);
});
}));
this.addBtn("输出Ip", () => n(this, void 0, void 0, function*() {
this.closePanel();
let e = (yield f.DynamicMng.Ins.loadOne("IpGameIds")) || [], t = (yield f.DynamicMng.Ins.loadOne("IpGoodsIds")) || [];
console.log("IpGameIds", JSON.stringify(e));
console.log("IpGoodsIds", JSON.stringify(t));
}));
this.addBtn("上传精选游戏", () => n(this, void 0, void 0, function*() {
this.closePanel();
let e = {
gameIds: (yield f.DynamicMng.Ins.loadOne("GameChosenIds")) || []
};
(yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_ResetChosenGames,
params: e
}, h.Game_RResetChosenGames)) && d.default.showToast("上传成功");
}));
this.addBtn("上传精选商品", () => n(this, void 0, void 0, function*() {
this.closePanel();
let e = yield u.default.Ins.gmLoadAllChosenGoodsIds(), t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
"string" == typeof i && t.push(i);
}
let o = {
goodsIds: t
};
(yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_ResetChosenGoods,
params: o
}, h.Game_RResetChosenGoods)) && d.default.showToast("上传成功");
}));
this.addBtn("统计", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.Enter("GameStatisticsScene");
}));
this.addBtn("重置考试", () => n(this, void 0, void 0, function*() {
this.closePanel();
yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_UploadTakeExamScore,
params: {
score: 0
}
}, h.Game_RUploadTakeExamScore);
g.default.Ins.role.examScore = 0;
d.default.showToast("已重置");
}));
this.addBtn("通过考试", () => n(this, void 0, void 0, function*() {
this.closePanel();
yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_UploadTakeExamScore,
params: {
score: 100
}
}, h.Game_RUploadTakeExamScore);
g.default.Ins.role.examScore = 100;
d.default.showToast("已通过");
}));
this.addBtn("加减G币", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("请输入ID", "", e => n(this, void 0, void 0, function*() {
c.default.ins.OpenPanelByName("NumberInputPanel", t => {
t.setData("请输入G币", "0", t => n(this, void 0, void 0, function*() {
let o = {
targetId: e,
incCoin: t
}, i = yield p.NetIns.SendCmdAsync({
cmd: h.CMDS.Game_GMIncOtherCoin,
params: o
}, h.Game_RGMIncOtherCoin);
i ? d.default.showToast("玩家" + e + "还剩coin" + i.coin) : d.default.showToast("操作失败");
}));
});
}));
});
}));
let e = (e, t) => {
this.addBtn(e, () => n(this, void 0, void 0, function*() {
this.closePanel();
y.default.Ins.completeTaskIds = [];
for (let e = 0; e < t; e++) y.default.Ins.completeTaskIds.push(e);
y.default.Ins.save();
}));
};
e("重置到最初", y.GuideId.Intro);
e("重置到创建游戏", y.GuideId.CreateGame);
e("重置到创建地图", y.GuideId.CreateWorld);
e("重置到编辑地图", y.GuideId.EditWorld);
e("完成教学", y.GuideId.EditWorld + 1);
this.addBtn("排行榜大小", () => n(this, void 0, void 0, function*() {
this.closePanel();
c.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("大小", v.default.Ins.max, e => n(this, void 0, void 0, function*() {
v.default.Ins.max = e;
}));
});
}));
this.addBtn("实名认证", () => n(this, void 0, void 0, function*() {
this.closePanel();
a.tt.authenticateRealName({
success(e) {
console.log("用户实名认证成功");
},
fail(e) {
console.log("用户实名认证失败", e.errMsg);
}
});
}));
}
closePanel() {
this.panel.active = !1;
}
addBtn(e, t, o = null) {
let i = cc.instantiate(this.buttonPrefab);
i.active = !0;
i.on("click", t, this);
let n = i.getComponentInChildren(cc.Label);
if (o) {
n.string = o();
i.on("click", () => {
n.string = o();
}, this);
} else n.string = e;
this.content.addChild(i);
return i;
}
};
i([ _(cc.Button) ], S.prototype, "openBtn", void 0);
i([ _(cc.Button) ], S.prototype, "closeBtn", void 0);
i([ _(cc.Node) ], S.prototype, "buttonPrefab", void 0);
i([ _(cc.Node) ], S.prototype, "panel", void 0);
i([ _(cc.Node) ], S.prototype, "content", void 0);
S = i([ C ], S);
o.default = S;
cc._RF.pop();
}, {
"../../scripts/_autogen/cmd/cmd": "cmd",
"../Frame/AD": "AD",
"../Frame/CrossPlatform": "CrossPlatform",
"../Frame/NetworkMgr": "NetworkMgr",
"../Frame/SceneManager": "SceneManager",
"../Frame/Top": "Top",
"../Frame/Util": "Util",
"../Role": "Role",
"../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"./Player/DynamicMng": "DynamicMng",
"./Player/GameRankDataMng": "GameRankDataMng",
"./Player/GuideMng": "GuideMng",
"./Player/ReportMng": "ReportMng",
"./Player/ShopMng": "ShopMng"
} ],
GSCmdAwait: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d0e9b9ekKVITbgqWCwMjiUD", "GSCmdAwait");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdAwait = void 0;
const i = e("../GSRunnerMng");
o.GSCmdAwait = class {
constructor() {}
setParam(e) {
this._waitTime = e;
}
excute() {
let e = i.GSRunnerMng.instance.getRunner(this.runnerId);
e && e.log(">>call game script await command!wait..", this._waitTime, "秒");
this._isComplete = !1;
this._timer = 1e3 * this._waitTime + cc.director.getTotalTime();
}
setp() {
this._timer < cc.director.getTotalTime() && (this._isComplete = !0);
}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdCameraShake: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e8743p6oztGm4Bb+/rbit3J", "GSCmdCameraShake");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdCameraShake = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Frame/TweenUtil"), a = e("../../Scene/GameScene/GameScene"), s = e("../GSRunnerMng");
o.GSCmdCameraShake = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = s.GSRunnerMng.instance.getRunner(this.runnerId);
if (t) {
t.log(`>>call game script camera shake command!speed[${!e.speed}], range[${e.range}], times[${e.times}]`);
let o = i.default.ins.findScene(a.default);
if (o) {
let t = o.world;
n.TweenUtil.applyShake(t.camera.node, e, () => {
this._isComplete = !0;
});
}
}
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Frame/TweenUtil": "TweenUtil",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdChangeActProperty: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "282b5aUA0dKUqoBo8V1NXzU", "GSCmdChangeActProperty");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdChangeActProperty = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GameScriptData"), s = e("../GameScriptDefines"), r = e("../GSRunnerMng");
o.GSCmdChangeActProperty = class {
constructor() {}
setParam(e) {
if (!e) return;
this._isComplete = !1;
let t, o = i.default.ins.findScene(n.default), l = e.opType == s.GSComputeType.SUB, c = e.opType == s.GSComputeType.ADD;
switch (e.actType) {
case a.ActType.Tile:
{
let i = t = o.world.GetTileByDataId(e.actorId);
i && i.setProperty(e.propertyName, e.propertyValue, l, c, e.isTileUnit);
}
break;

case a.ActType.Hero:
case a.ActType.Enemy:
case a.ActType.Npc:
case a.ActType.Device:
{
let i = t = o.world.GetActNodeByDataId(e.actorId);
i && i.setProperty && i.setProperty(e.propertyName, e.propertyValue, l, c, e.isTileUnit);
}
}
let d = r.GSRunnerMng.instance.getRunner(this.runnerId);
t || d && d.error(`>>not found act[${e.actType}] actorId[${e.actorId}]`);
d && d.log(`>>call game script op[${e.opType}] act property command!act[${e.actType}] property[${e.propertyName}] value[${e.propertyValue}]`);
}
excute() {
this._isComplete = !0;
}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptData": "GameScriptData",
"../GameScriptDefines": "GameScriptDefines"
} ],
GSCmdChangeBagItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "55fdaHueeJGfJkVHqclwcgT", "GSCmdChangeBagItem");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdChangeBagItem = void 0;
const i = e("../../Game/Player/GameBagMng"), n = e("../GSRunnerMng");
o.GSCmdChangeBagItem = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = n.GSRunnerMng.instance.getRunner(this.runnerId), o = e.itemId, a = e.addValue || 0;
if (o && 0 != a) {
e.isReduce ? i.default.Ins.sub(o, a) : i.default.Ins.add(o, a);
t ? t.log(`>>call game script change bag item command!add[${!e.isReduce}] [${e.itemId}] ${a}]`) : console.log(`>>call game change bag item command!add[${!e.isReduce}] [${e.itemId}] ${a}]`);
}
}
excute() {
this._isComplete = !0;
}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Game/Player/GameBagMng": "GameBagMng",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdChangeHeroProperty: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5f90UVIMJKSL5SeBRth7Pz", "GSCmdChangeHeroProperty");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdChangeHeroProperty = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GameScriptDefines"), s = e("../GSRunnerMng");
o.GSCmdChangeHeroProperty = class {
constructor() {}
setParam(e) {
if (!e) return;
this._isComplete = !1;
let t = i.default.ins.findScene(n.default), o = e.opType == a.GSComputeType.SUB, r = e.opType == a.GSComputeType.ADD, l = t.world.hero, c = s.GSRunnerMng.instance.getRunner(this.runnerId);
if (l) {
l.setProperty && l.setProperty(e.propertyName, e.propertyValue, o, r, e.isTileUnit);
c && c.log(`>>call game script op[${e.opType}] hero property command!hero[${l.data.name}] property[${e.propertyName}] value[${e.propertyValue}]`);
} else c && c.error(">>not found hero");
}
excute() {
this._isComplete = !0;
}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines"
} ],
GSCmdDialogue: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e8ee16CzLNBzZQ/Z3oRhet8", "GSCmdDialogue");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdDialogue = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GSRunnerMng"), s = e("../GSVariableMng");
o.GSCmdDialogue = class {
constructor() {}
setParam(e) {
this._showData = {
lines: []
};
if (e) for (let t of e) {
let e = {
str: t.dialogue,
actorConfId: t.actorConfId,
items: []
};
this._showData.lines.push(e);
}
}
excute() {
let e = a.GSRunnerMng.instance.getRunner(this.runnerId);
e && e.log(">>call game script dialogue command!play dialogue..");
if (this._showData.lines.length > 0) {
this._isComplete = !1;
let e = i.default.ins.findScene(n.default);
e && e.showDialog(this._showData, null, () => {
this._isComplete = !0;
});
} else this._isComplete = !0;
}
setp() {}
isComplete() {
return this._isComplete;
}
static parseDialogue(e) {
let t = [];
t.push(e);
let o = e.indexOf("#{");
for (;o >= 0; ) {
t.pop();
t.push(e.substr(0, o));
o += 2;
let i = e.indexOf("}", o);
if (i > o) {
let n = e.substr(o, i - o), a = s.GSVariableMng.instance.getVariableByName(n);
a && t.push(a.getValue().getValue());
o = i + 1;
}
t.push(e.substr(o, e.length - o));
o = e.indexOf("#{", o);
}
return t.join("");
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng",
"../GSVariableMng": "GSVariableMng"
} ],
GSCmdDropItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "37e1eHYakBJ567sX5ahXGNK", "GSCmdDropItem");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdDropItem = void 0;
const n = e("../../Frame/SceneManager"), a = e("../../Frame/Util"), s = e("../../Game/Player/Mng"), r = e("../../Game/World/Tile"), l = e("../../Scene/GameScene/GameScene"), c = e("../GSRunnerMng");
o.GSCmdDropItem = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = c.GSRunnerMng.instance.getRunner(this.runnerId);
if (t) {
let o = t.actor, i = e.itemId, r = e.compareValue;
r = a.Util.clamp(r, 0, 99);
if (i && r && s.Mng.Ins.propMng.getOne(i)) {
let a = n.default.ins.findScene(l.default).world;
for (;r-- > 0; ) {
let t = a.addProp(o.position), n = {
id: "",
confId: i,
useGravity: e.useGravity
};
this.playPropSpawn(t, n);
}
t.log(`>>call game script drop item command!drop [${e.itemId}]`);
}
}
}
playPropSpawn(e, t) {
return i(this, void 0, void 0, function*() {
yield e.setData(t);
let o = r.default.SIZE, i = -o + Math.random() * o * 2, n = -o + Math.random() * o * 2, a = 2 * i / .4, s = 2 * n / .4;
t.useGravity && (s = 4 * (n = .5 * o + Math.random() * o * .5) / .4);
e.addImpulse(a, s, .4);
});
}
excute() {
this._isComplete = !0;
}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "80c54jEVKFLzZjt4DBH49mf", "GSCmdMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdMng = void 0;
class i {
constructor() {
this._map = new Map();
}
static get instance() {
this._instance = this._instance || new i();
return this._instance;
}
registCmd(e, t) {
this._map.set(e, t);
}
getCmd(e, t) {
let o = this._map.get(t), i = o ? new o() : null;
i && (i.runnerId = e);
return i;
}
}
o.GSCmdMng = i;
cc._RF.pop();
}, {} ],
GSCmdSetVariable: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "abe2e5XzR5G8YD+EPhaIZkF", "GSCmdSetVariable");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdSetVariable = void 0;
const i = e("../GSRunnerMng"), n = e("../GSVariableMng");
o.GSCmdSetVariable = class {
constructor() {}
setParam(e) {
this._id = e.id;
this._value = e.value;
}
excute() {
let e = i.GSRunnerMng.instance.getRunner(this.runnerId);
e && e.log(">>call game script set variable command! id=", this._id, ", value=" + this._value);
n.GSVariableMng.instance.setVariable(this._id, this._value);
this._isComplete = !1;
}
setp() {
this._isComplete = !0;
}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"../GSVariableMng": "GSVariableMng"
} ],
GSCmdShowGameOver: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e7cc77OocRJMrrUZU2nOnHr", "GSCmdShowGameOver");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdShowGameOver = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GSRunnerMng");
o.GSCmdShowGameOver = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = a.GSRunnerMng.instance.getRunner(this.runnerId);
if (t) {
t.log(`>>call game script show game over command!content[${!e.content}]`);
let o = i.default.ins.findScene(n.default);
o && o.gameOver({
str: e.content
}, () => {
t.stop();
});
}
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdShowGameWin: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6eb63WILlBM7bGPr+j4phZh", "GSCmdShowGameWin");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdShowGameWin = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GSRunnerMng");
o.GSCmdShowGameWin = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = a.GSRunnerMng.instance.getRunner(this.runnerId);
if (t) {
t.log(`>>call game script show game win command!content[${!e.content}]`);
let o = i.default.ins.findScene(n.default);
o && o.gameWin({
str: e.content
}, () => {
t.stop();
});
}
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdSwitchHero: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "890f8TokwxBd5pFQNAj7S7e", "GSCmdSwitchHero");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdSwitchHero = void 0;
const n = e("../../Frame/SceneManager"), a = e("../../Scene/GameScene/GameScene"), s = e("../GSRunnerMng");
o.GSCmdSwitchHero = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = s.GSRunnerMng.instance.getRunner(this.runnerId);
t ? t.log(`>>call game script switch hero command!hero[${!e.confId}]`) : console.log(`>>call game script switch hero command!hero[${!e.confId}]`);
this.shiftHero(e.confId);
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
shiftHero(e) {
return i(this, void 0, void 0, function*() {
let t = n.default.ins.findScene(a.default);
t && (yield t.shiftHero(e));
this._isComplete = !0;
});
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdSwitchMap: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "77745uP/zJOJqHDQnlT7/1F", "GSCmdSwitchMap");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdSwitchMap = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GSRunnerMng");
o.GSCmdSwitchMap = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = a.GSRunnerMng.instance.getRunner(this.runnerId);
if (t) {
t.log(`>>call game script switch map command!map[${!e.worldId}], coor[${e.coor.iCol}, ${e.coor.iRow}]`);
let o = i.default.ins.findScene(n.default);
o && o.shiftWorldById({
id: e.worldId,
onWorldReady: () => {
t.stop();
o.world.hero && o.world.moveActor(o.world.hero, e.coor);
}
});
}
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdTest: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb048nsJW9C9LtJ4Ln2hoL7", "GSCmdTest");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdTest = void 0;
const i = e("../GSRunnerMng");
o.GSCmdTest = class {
constructor() {}
setParam(e) {
this.param = e;
}
excute() {
let e = i.GSRunnerMng.instance.getRunner(this.runnerId);
e && e.log(">>call game script test command!", this.param);
this._isComplete = !1;
}
setp() {
this._isComplete = !0;
}
isComplete() {
return this._isComplete;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdTimeCountDownStart: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6cf2cgNXdBMO62vYlTq0oRC", "GSCmdTimeCountDownStart");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdTimeCountDownStart = void 0;
const n = e("../../Frame/SceneManager"), a = e("../../Game/Player/TriggerMng"), s = e("../../Scene/GameScene/GameScene"), r = e("../GSRunnerMng");
o.GSCmdTimeCountDownStart = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = r.GSRunnerMng.instance.getRunner(this.runnerId);
t ? t.log(`>>call game script time count down start command!timer[${e.timer}]`) : console.log(`>>call game script time count down start command!timer[${e.timer}]`);
this.startTime(e.timer, e.timerType, e.evts);
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
startTime(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = n.default.ins.findScene(s.default);
if (i) {
let n = r.GSRunnerMng.instance.getRunner(this.runnerId), s = n ? n.actor : null;
yield i.onStartGameTimer(e, t, () => {
a.default.Ins.emitTrigger(o, s);
});
}
this._isComplete = !0;
});
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSCmdTimeCountDownStop: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6b01aEuBKFPEKex1lwEEgjJ", "GSCmdTimeCountDownStop");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSCmdTimeCountDownStop = void 0;
const i = e("../../Frame/SceneManager"), n = e("../../Scene/GameScene/GameScene"), a = e("../GSRunnerMng");
o.GSCmdTimeCountDownStop = class {
constructor() {}
setParam(e) {
this._isComplete = !1;
let t = a.GSRunnerMng.instance.getRunner(this.runnerId);
t ? t.log(">>call game script time count down stop command!") : console.log(">>call game script time count down stop command!");
this.stopTime();
}
excute() {}
setp() {}
isComplete() {
return this._isComplete;
}
stopTime() {
let e = i.default.ins.findScene(n.default);
e && e.onStopGameTimer();
this._isComplete = !0;
}
};
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../GSRunnerMng": "GSRunnerMng"
} ],
GSConditionSelectItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "977b1wxViRPM5E1W3JUkWUk", "GSConditionSelectItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../CustomUI/Button"), r = e("../../Frame/Top"), l = e("../../Game/Player/Mng"), c = e("../../Frame/SceneManager"), d = e("../../CustomUI/DropDownBox"), {ccclass: h, property: p} = cc._decorator;
let u = class extends a.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.valueEdit = null;
this.compareBox = null;
this.btnItem = null;
this.btnDelete = null;
this.btnOk = null;
this._editData = null;
this._selectItemId = null;
}
onLoad() {
super.onLoad();
this.btnItem.node.on(s.default.CLICK, this.onClickItem, this);
this.btnDelete.node.on(s.default.CLICK, this.onClickDelete, this);
this.btnOk.node.on(s.default.CLICK, this.onClickOk, this);
this.compareBox.node.on(d.default.SELECT_CHANGE, this.onCompareTypeChange, this);
this._compareType = n.GSCompareType.EQUAL;
let e = [];
e = [ {
str: "等于",
type: n.GSCompareType.EQUAL
}, {
str: "大于",
type: n.GSCompareType.GREATER
}, {
str: "大于等于",
type: n.GSCompareType.GREATER_EQUAL
}, {
str: "小于",
type: n.GSCompareType.LESS
}, {
str: "小于等于",
type: n.GSCompareType.LESS_EQUAL
}, {
str: "不等于",
type: n.GSCompareType.NONEQUAL
} ];
this._compareArray = e;
this.compareBox.setDataArr(e);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._selectItemId = this._editData.itemId;
this._compareType = this._editData.compare;
this.valueEdit.string = this._editData.compareValue ? this._editData.compareValue + "" : "0";
} else {
this.btnOk.node.width = 500;
this.btnDelete.node.active = !1;
}
this.onRefresh();
}
onEditValueChange() {
let e = parseFloat(this.valueEdit.string);
isNaN(e) && (e = 0);
this.valueEdit.string = e + "";
}
onCompareTypeChange(e, t, o) {
this._compareType = t.type;
}
onRefresh() {
let e = this._selectItemId ? l.Mng.Ins.propMng.getOne(this._selectItemId) : null;
this.nameLabel.string = e ? e.name : "";
e ? l.Mng.Ins.spriteMng.setPropSprite(this.icon, e.textureName, 100) : this.icon.spriteFrame = null;
let t = this._compareArray.findIndex(e => e.type == this._compareType);
t <= 0 && (t = 0);
this.compareBox.selectByIdx(t);
}
onClickItem() {
c.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this._selectItemId);
e.selectCall = (e => {
this._selectItemId = e.id;
this.onRefresh();
}).bind(this);
});
}
onClickDelete() {
this.closePanel();
this._editData && this._opCallBack && this._opCallBack(null);
}
onClickOk() {
if (this._selectItemId && "" != this._selectItemId) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataCompareValue();
e.type = n.GSSelectValueType.Item;
e.itemId = this._selectItemId;
e.compare = this._compareType;
e.compareVariableId = -1;
let t = parseFloat(this.valueEdit.string);
isNaN(t) && (t = 0);
e.compareValue = t;
this._opCallBack(e);
}
} else r.default.showToast("请选择道具");
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.EditBox) ], u.prototype, "valueEdit", void 0);
i([ p(d.default) ], u.prototype, "compareBox", void 0);
i([ p(s.default) ], u.prototype, "btnItem", void 0);
i([ p(s.default) ], u.prototype, "btnDelete", void 0);
i([ p(s.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
GSConditionSelectTypePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "78d03esYexNB5UVbcsnO53O", "GSConditionSelectTypePanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../CustomUI/Button"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends r.default {
constructor() {
super(...arguments);
this.btnVariable = null;
this.btnItem = null;
}
static openConditionEditPanel(e, t, o) {
switch (e) {
case a.GSSelectValueType.Variable:
l.default.ins.OpenPanelByName("GSConditionSelectVariablePanel", e => {
e.setData(t, o);
});
break;

case a.GSSelectValueType.Item:
l.default.ins.OpenPanelByName("GSConditionSelectItemPanel", e => {
e.setData(t, o);
});
}
}
onLoad() {
super.onLoad();
this.btnVariable.node.on(s.default.CLICK, this.onClickVariable, this);
this.btnItem.node.on(s.default.CLICK, this.onClickItem, this);
}
setData(e) {
this._opCallBack = e;
}
onClickVariable() {
i.openConditionEditPanel(a.GSSelectValueType.Variable, null, this._opCallBack);
}
onClickItem() {
i.openConditionEditPanel(a.GSSelectValueType.Item, null, this._opCallBack);
}
};
n([ d(s.default) ], h.prototype, "btnVariable", void 0);
n([ d(s.default) ], h.prototype, "btnItem", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../GameScript/index": "index"
} ],
GSConditionSelectVariablePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c2b5cQLFpRAVJQptchNekrq", "GSConditionSelectVariablePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../CustomUI/DropDownBox"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../CustomUI/ToggleGroup"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.btnVariable = null;
this.compareBox = null;
this.nodeNumber = null;
this.nodeSwitch = null;
this.toggleGroupValue = null;
this.valueEdit = null;
this.btnValueVariable = null;
this.toggleGroupOpen = null;
this.btnDelete = null;
this.btnOk = null;
this._editData = null;
this._isNumber = !1;
this._isValue = !0;
this._selVariableId = -1;
this._selValueVariableId = -1;
this._isSwithOpen = !0;
}
onLoad() {
super.onLoad();
this.btnVariable.node.on(a.default.CLICK, this.onClickVarible, this);
this.btnValueVariable.node.on(a.default.CLICK, this.onClickValueVarible, this);
this.toggleGroupValue.node.on(d.default.TOGGLE_CHANGE, this.onToggleValueStateChange, this);
this.toggleGroupOpen.node.on(d.default.TOGGLE_CHANGE, this.onToggleOpenStateChange, this);
this.compareBox.node.on(r.default.SELECT_CHANGE, this.onCompareTypeChange, this);
this.btnDelete.node.on(a.default.CLICK, this.onClickDelete, this);
this.btnOk.node.on(a.default.CLICK, this.onClickOk, this);
this._compareType = n.GSCompareType.EQUAL;
}
setData(e, t) {
this._editData = e;
this._opCallBack = t;
if (this._editData) {
this._selVariableId = this._editData.variableId;
this._selValueVariableId = this._editData.compareVariableId;
this._compareType = this._editData.compare;
this._isValue = this._editData.compareVariableId <= 0;
this._isSwithOpen = !!this._editData.compareValue && this._editData.compareValue > 0;
this.valueEdit.string = this._editData.compareValue ? this._editData.compareValue + "" : "0";
this.toggleGroupValue.selectIdx(this._isValue ? 0 : 1);
this.toggleGroupOpen.selectIdx(this._isSwithOpen ? 0 : 1);
} else {
this.btnOk.node.width = 500;
this.btnDelete.node.active = !1;
}
this._selVariableId <= 0 && (this._selVariableId = n.GSVariableMng.instance.defaultVariableId);
this.onRefresh();
}
onRefresh() {
this.btnValueVariable.interactable = !this._isValue;
this.refreshVariable();
this.refreshValueVariable();
}
refreshVariable() {
let e = null;
if (this._selVariableId > 0) {
e = n.GSVariableMng.instance.getVariable(this._selVariableId);
this.btnVariable.label.string = e ? e.name : "";
} else this.btnVariable.label.string = "";
this._isNumber = !1;
let t = [];
if (e) if (e.valueType == n.GSValueType.FLOAT) {
this._isNumber = !0;
t = [ {
str: "等于",
type: n.GSCompareType.EQUAL
}, {
str: "大于",
type: n.GSCompareType.GREATER
}, {
str: "大于等于",
type: n.GSCompareType.GREATER_EQUAL
}, {
str: "小于",
type: n.GSCompareType.LESS
}, {
str: "小于等于",
type: n.GSCompareType.LESS_EQUAL
}, {
str: "不等于",
type: n.GSCompareType.NONEQUAL
} ];
} else t = [ {
str: "等于",
type: n.GSCompareType.EQUAL
}, {
str: "不等于",
type: n.GSCompareType.NONEQUAL
} ]; else t = [ {
str: "等于",
type: n.GSCompareType.EQUAL
}, {
str: "不等于",
type: n.GSCompareType.NONEQUAL
} ];
let o = t.findIndex(e => e.type == this._compareType);
o <= 0 && (o = 0);
this.compareBox.setDataArr(t);
this.compareBox.selectByIdx(o);
this.nodeNumber.active = this._isNumber;
this.nodeSwitch.active = !this._isNumber;
}
refreshValueVariable() {
if (this._isNumber) if (this._selValueVariableId > 0) {
let e = n.GSVariableMng.instance.getVariable(this._selValueVariableId);
this.btnValueVariable.label.string = e ? e.name : "";
} else this.btnValueVariable.label.string = "";
}
onEditValueChange() {
if (this._isValue) {
let e = parseFloat(this.valueEdit.string);
isNaN(e) && (e = 0);
this.valueEdit.string = e + "";
} else this.valueEdit.string = "";
}
onCompareTypeChange(e, t, o) {
this._compareType = t.type;
}
onToggleValueStateChange(e, t, o) {
this._isValue = 0 == e;
this.onRefresh();
}
onClickValueVarible() {
l.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(null, this._selValueVariableId, !0);
e.callSelect = e => {
this._selValueVariableId = e;
this.refreshValueVariable();
};
});
}
onClickVarible() {
l.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(null, this._selVariableId, !0);
e.callSelect = e => {
this._selVariableId = e;
this.onRefresh();
};
});
}
onToggleOpenStateChange(e, t, o) {
this._isSwithOpen = 0 == e;
}
onClickDelete() {
this.closePanel();
this._editData && this._opCallBack && this._opCallBack(null);
}
onClickOk() {
if (this._selVariableId <= 0) c.default.showToast("请正确设置变量"); else if (this._isNumber && !this._isValue && this._selValueVariableId <= 0) c.default.showToast("请正确设置值变量"); else {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataCompareValue();
e.type = n.GSSelectValueType.Variable;
e.variableId = this._selVariableId;
e.compare = this._compareType;
if (this._isNumber && !this._isValue) e.compareVariableId = this._selValueVariableId; else {
e.compareVariableId = -1;
if (this._isNumber) {
let t = parseFloat(this.valueEdit.string);
isNaN(t) && (t = 0);
e.compareValue = t;
} else e.compareValue = this._isSwithOpen ? 1 : 0;
}
this._opCallBack(e);
}
}
}
};
i([ p(a.default) ], u.prototype, "btnVariable", void 0);
i([ p(r.default) ], u.prototype, "compareBox", void 0);
i([ p(cc.Node) ], u.prototype, "nodeNumber", void 0);
i([ p(cc.Node) ], u.prototype, "nodeSwitch", void 0);
i([ p(d.default) ], u.prototype, "toggleGroupValue", void 0);
i([ p(cc.EditBox) ], u.prototype, "valueEdit", void 0);
i([ p(a.default) ], u.prototype, "btnValueVariable", void 0);
i([ p(d.default) ], u.prototype, "toggleGroupOpen", void 0);
i([ p(a.default) ], u.prototype, "btnDelete", void 0);
i([ p(a.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
GSDataNodeActPropertyHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f9b20XQu+RLrJXCnFOKsvQn", "GSDataNodeActPropertyHelper");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeActPropertyHelper = void 0;
const i = e("../../Game/Player/Mng"), n = e("../../Game/World/Tile"), a = e("../../GameScript/index");
class s {
constructor() {
this._s_tile_propertyInfos = [ {
str: "显示",
filedName: "isShow",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "true"
}, {
str: "血量",
filedName: "hp",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 999999 ],
defaultValue: "1"
}, {
str: "阻挡通行",
filedName: "block",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "true"
}, {
str: "可摧毁",
filedName: "canDestroy",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "false"
} ];
this._s_hero_propertyInfos = [ {
str: "血量",
filedName: "hp",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 999999 ],
defaultValue: "1"
}, {
str: "血量上限",
filedName: "hpMax",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 999999 ],
defaultValue: "1"
}, {
str: "移动速度(格/秒)",
filedName: "moveSpeed",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 99 ],
defaultValue: "160",
isTileUnit: !0
}, {
str: "武器",
filedName: "gunId",
valueType: a.ActPropertyValueType.Weapon,
defaultValue: ""
}, {
str: "缩放",
filedName: "scale",
valueType: a.ActPropertyValueType.Float,
valueRange: [ .1, 8 ],
defaultValue: "1"
}, {
str: "跳跃段数",
filedName: "jumpStep",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 1, 999999 ],
defaultValue: "2"
}, {
str: "跳跃高度(格)",
filedName: "jumpHight",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 10 ],
defaultValue: "160",
isTileUnit: !0
}, {
str: "爬墙跳",
filedName: "enableClimbWall",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "false"
} ];
this._s_enemy_propertyInfos = [ {
str: "显示",
filedName: "isShow",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "true"
}, {
str: "血量",
filedName: "hp",
valueType: a.ActPropertyValueType.Float,
valueRange: [ 0, 999999 ],
defaultValue: "1"
}, {
str: "武器",
filedName: "gunId",
valueType: a.ActPropertyValueType.Weapon,
defaultValue: ""
}, {
str: "缩放",
filedName: "scale",
valueType: a.ActPropertyValueType.Float,
valueRange: [ .1, 8 ],
defaultValue: "1"
} ];
this._s_npc_propertyInfos = [ {
str: "显示",
filedName: "isShow",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "true"
} ];
this._s_device_propertyInfos = [ {
str: "显示",
filedName: "isShow",
valueType: a.ActPropertyValueType.Bool,
defaultValue: "true"
} ];
}
static get instance() {
this._instance || (this._instance = new s());
return this._instance;
}
GetPropertyInfoArray(e) {
switch (e) {
case a.ActType.Tile:
return this._s_tile_propertyInfos;

case a.ActType.Hero:
return this._s_hero_propertyInfos;

case a.ActType.Enemy:
return this._s_enemy_propertyInfos;

case a.ActType.Npc:
return this._s_npc_propertyInfos;

case a.ActType.Device:
return this._s_device_propertyInfos;
}
}
GetPropertyInfo(e, t) {
let o = this.GetPropertyInfoArray(e), i = o ? o.find(e => e.filedName == t) : null;
i || console.error(`Not found actor[${a.ActType[e]}] property[${t}]`);
return i;
}
GetFieldDefaultValue(e) {
let t = "0";
if (!e) return t;
let o = e.defaultValue;
switch (e.valueType) {
case a.ActPropertyValueType.Float:
{
let i = parseFloat(o) || 0;
e.isTileUnit && (i /= n.default.SIZE);
t = i + "";
}
break;

case a.ActPropertyValueType.Bool:
o && (t = ("true" == o || parseFloat(o) > 0) + "");
break;

case a.ActPropertyValueType.Weapon:
o && (t = o + "");
}
return t;
}
GetFieldValue(e, t) {
let o = "0";
if (!t) return o;
let i = e[t.filedName];
if (i) switch (t.valueType) {
case a.ActPropertyValueType.Float:
{
let e = parseFloat(i) || 0;
t.isTileUnit && (e /= n.default.SIZE);
o = e + "";
}
break;

case a.ActPropertyValueType.Bool:
i && (o = ("true" == i || parseFloat(i) > 0) + "");
break;

case a.ActPropertyValueType.Weapon:
i && (o = i + "");
}
return o;
}
GetFieldDisplayStr(e, t) {
if (!t) return e;
let o = e;
if (t.valueType == a.ActPropertyValueType.Weapon) {
let t = i.Mng.Ins.weaponMng.getOne(e);
t && (o = t.name);
}
return o;
}
}
o.GSDataNodeActPropertyHelper = s;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameScript/index": "index"
} ],
GSDataNodeBagItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "29634Y+Pu9KLqiYGWj1mKCO", "GSDataNodeBagItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../CustomUI/Button"), r = e("../../Frame/Top"), l = e("../../Game/Player/Mng"), c = e("../../Frame/SceneManager"), d = e("../../CustomUI/DropDownBox"), {ccclass: h, property: p} = cc._decorator;
let u = class extends a.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.valueEdit = null;
this.addDownBox = null;
this.btnItem = null;
this.btnOk = null;
this._editData = null;
this._selectItemId = null;
this._addType = 1;
}
onLoad() {
super.onLoad();
this.btnItem.node.on(s.default.CLICK, this.onClickItem, this);
this.btnOk.node.on(s.default.CLICK, this.onClickOk, this);
this.addDownBox.node.on(d.default.SELECT_CHANGE, this.onAddTypeChange, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._selectItemId = this._editData.itemId;
this.valueEdit.string = this._editData.addValue ? this._editData.addValue + "" : "0";
}
this._editData ? this._addType = this._editData.isReduce ? -1 : 1 : this._addType = 1;
let o = [], i = (o = [ {
str: "增加",
type: 1
}, {
str: "减少",
type: -1
} ]).findIndex(e => e.type == this._addType);
i <= 0 && (i = 0);
this.addDownBox.setDataArr(o);
this.addDownBox.selectByIdx(i);
this.onRefresh();
}
onEditValueChange() {
let e = parseFloat(this.valueEdit.string);
isNaN(e) && (e = 0);
this.valueEdit.string = e + "";
}
onRefresh() {
let e = this._selectItemId ? l.Mng.Ins.propMng.getOne(this._selectItemId) : null;
this.nameLabel.string = e ? e.name : "";
e ? l.Mng.Ins.spriteMng.setPropSprite(this.icon, e.textureName, 100) : this.icon.spriteFrame = null;
}
onAddTypeChange(e, t, o) {
this._addType = t.type;
}
onClickItem() {
c.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this._selectItemId);
e.selectCall = (e => {
this._selectItemId = e.id;
this.onRefresh();
}).bind(this);
});
}
onClickOk() {
if (this._selectItemId && "" != this._selectItemId) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GDATA_ChangeBagItem);
e.itemId = this._selectItemId;
let t = parseFloat(this.valueEdit.string);
isNaN(t) && (t = 0);
e.isReduce = this._addType < 0;
e.addValue = t;
this._opCallBack(e);
}
} else r.default.showToast("请选择道具");
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.EditBox) ], u.prototype, "valueEdit", void 0);
i([ p(d.default) ], u.prototype, "addDownBox", void 0);
i([ p(s.default) ], u.prototype, "btnItem", void 0);
i([ p(s.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
GSDataNodeCameraShakePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f2649qA559AB6E9Sb7MIuSi", "GSDataNodeCameraShakePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), l = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), {ccclass: c, property: d} = cc._decorator;
let h = class extends s.default {
constructor() {
super(...arguments);
this.speedItem = null;
this.rangeItem = null;
this.timesItem = null;
this.okBtn = null;
this._editData = null;
this._speed = 200;
this._range = 6;
this._times = 3;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._speed = this._editData.speed;
this._range = this._editData.range;
this._times = this._editData.times;
}
this.speedItem.setData("震动速度", this._speed, e => {
let t = Number.parseFloat(e) || 0;
t = r.Util.clamp(t, 0, 1e3);
this.speedItem.label_num.string = t + "";
});
this.rangeItem.setData("震动幅度", this._range, e => {
let t = Number.parseFloat(e) || 0;
t = r.Util.clamp(t, 0, 100);
this.rangeItem.label_num.string = t + "";
});
this.timesItem.setData("震动次数", this._times, e => {
let t = Number.parseFloat(e) || 0;
t = r.Util.clamp(t, 0, 10);
this.timesItem.label_num.string = t + "";
});
}
onOkBtn() {
this.closePanel();
this._speed = Number.parseFloat(this.speedItem.label_num.string) || 0;
this._range = Number.parseFloat(this.rangeItem.label_num.string) || 0;
this._times = Number.parseFloat(this.timesItem.label_num.string) || 0;
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GSCREEN_CameraShake);
e.speed = this._speed;
e.range = this._range;
e.times = this._times;
this._opCallBack(e);
}
}
};
i([ d(l.default) ], h.prototype, "speedItem", void 0);
i([ d(l.default) ], h.prototype, "rangeItem", void 0);
i([ d(l.default) ], h.prototype, "timesItem", void 0);
i([ d(a.default) ], h.prototype, "okBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem"
} ],
GSDataNodeChangeActPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "67bd0/98NhGt5wqdaUb6rNt", "GSDataNodeChangeActPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), r = e("../../Game/Player/Mng"), l = e("../../Scene/EditWorldScene/EditWorldScene"), c = e("../../CustomUI/Button"), d = e("../../CustomUI/DropDownBox"), h = e("../../CustomUI/Toggle"), p = e("./GSDataNodeActPropertyHelper"), u = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), m = e("../../Frame/Util"), f = e("../../Frame/Top"), {ccclass: g, property: y} = cc._decorator;
let v = class extends a.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.btnSelAct = null;
this.addDropDown = null;
this.propertyDropDown = null;
this.btnOk = null;
this.editButton = null;
this.editValue = null;
this.editToggle = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.btnSelAct.node.on(c.default.CLICK, this.onClickSelAct, this);
this.btnOk.node.on(c.default.CLICK, this.onClickOk, this);
this.editButton.node.on(c.default.CLICK, this.onClickEditButton, this);
this.propertyDropDown.node.on(d.default.SELECT_CHANGE, this.onPropertyNameChange, this);
this.editToggle.node.on(h.default.STATE_CHANGE, this.onBooleanChange, this);
this._opArr = [ {
str: "设置",
type: -1
}, {
str: "增加",
type: n.GSComputeType.ADD
}, {
str: "减少",
type: n.GSComputeType.SUB
} ];
this.addDropDown.setDataArr(this._opArr);
this.addDropDown.node.on(d.default.SELECT_CHANGE, this.onAddStateChange, this);
this._opType = -1;
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
let o = s.default.ins.findScene(l.default);
o.saveToTempWorldDataMap();
this._worldId = o.worldData.id;
if (this._editData) {
this._actorId = this._editData.actorId;
this._actorType = this._editData.actType;
this._opType = this._editData.opType;
this._propertyName = this._editData.propertyName;
this.resetPropertyValue();
this._propertyValue = this._editData.propertyValue;
} else {
this._actorType = n.ActType.Hero;
this._propertyName = "hp";
this._propertyValue = "0";
this._actorIcon = null;
this._actorName = "";
}
this.onRefresh();
}
onRefresh() {
let e = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
if (!e) {
let t = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType);
this._propertyName = t && t.length > 0 && t[0].filedName;
e = t && t.length > 0 && t[0];
this._propertyValue = void 0;
if (!e) {
console.error(`error!actor[${this._actorId}] has no property`);
this.closePanel();
}
this.resetPropertyValue();
}
let t = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType), o = t.findIndex(e => e.filedName == this._propertyName);
o <= 0 && (o = 0);
this.propertyDropDown.setDataArr(t);
this.propertyDropDown.selectByIdx(o);
if (e) if (e.valueType == n.ActPropertyValueType.Float) {
this.addDropDown.node.active = !0;
let t = this._opArr.findIndex(e => e.type == this._opType);
t <= 0 && (t = 0);
this.addDropDown.selectByIdx(t);
this.editValue.node.active = !0;
this.editToggle.node.active = !1;
this.editButton.node.active = !1;
this.editValue.setData(e.str, this._propertyValue, t => {
let o = Number.parseFloat(t) || 0;
e.valueRange && 2 == e.valueRange.length && (o = m.Util.clamp(o, e.valueRange[0], e.valueRange[1]));
this._propertyValue = o + "";
this.editValue.label_num.string = this._propertyValue;
});
} else if (e.valueType == n.ActPropertyValueType.Bool) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !0;
this.editButton.node.active = !1;
let e = !1;
this._propertyValue && (e = "true" == this._propertyValue || parseFloat(this._propertyValue) > 0);
e ? this.editToggle.check() : this.editToggle.uncheck();
} else if (e.valueType == n.ActPropertyValueType.Weapon) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !1;
this.editButton.node.active = !0;
let e = r.Mng.Ins.weaponMng.getOne(this._propertyValue);
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
}
this.nameLabel.string = this._actorName;
this._actorIcon ? r.Mng.Ins.spriteMng.setPropSprite(this.icon, this._actorIcon, 100) : this.icon.spriteFrame = null;
}
resetPropertyValue() {
let e = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
switch (this._actorType) {
case n.ActType.Tile:
{
let t = r.Mng.Ins.worldMng.getTileData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.tileMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = p.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
break;

case n.ActType.Hero:
case n.ActType.Enemy:
case n.ActType.Npc:
{
let t = r.Mng.Ins.worldMng.getActorData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.actorMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = p.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
break;

case n.ActType.Device:
{
let t = r.Mng.Ins.worldMng.getDeviceData(this._worldId, this._actorId);
if (t) {
let o = r.Mng.Ins.deviceMng.getOne(t.data.confId);
this._actorIcon = o ? o.textureName : null;
this._actorName = o ? o.name : "";
this._propertyValue = p.GSDataNodeActPropertyHelper.instance.GetFieldValue(t.data, e);
}
}
}
}
onAddStateChange(e, t, o) {
o && (this._opType = t.type);
}
onPropertyNameChange(e, t, o) {
if (o) {
this._propertyName = t.filedName;
this.resetPropertyValue();
this.onRefresh();
}
}
onClickSelAct() {
s.default.ins.OpenPanelByName("ActOptionSelectWorldActPanel", e => {
e.setData("选择地图对象", this._worldId, this._actorId);
e.selectCallBack = ((e, t) => {
if (t && t != this._actorId) {
this._actorId = t;
this._actorType = e;
let o = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(this._actorType);
this._propertyName = o && o.length > 0 && o[0].filedName;
this.resetPropertyValue();
this.onRefresh();
}
}).bind(this);
});
}
onBooleanChange(e, t) {
t && (this._propertyValue = e ? "1" : "0");
}
onClickEditButton() {
let e = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
e && e.valueType == n.ActPropertyValueType.Weapon && s.default.ins.OpenPanelByName("SelectWeaponPanel", e => {
e.setData(this._propertyValue);
e.selectCall = e => {
this._propertyValue = e ? e.id : "";
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
};
});
}
onClickOk() {
if (this._actorId && "" != this._actorId) if ("" != this._propertyName) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GDATA_ChangeActorProperty);
e.actorId = this._actorId;
e.actType = this._actorType;
e.opType = this._opType;
e.propertyName = this._propertyName;
let t = p.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(this._actorType, this._propertyName);
e.isTileUnit = t.isTileUnit;
e.propertyValue = this._propertyValue;
this._opCallBack(e);
}
} else f.default.showToast("请选择要更改的属性"); else f.default.showToast("请选择要调整的对象");
}
};
i([ y(cc.Sprite) ], v.prototype, "icon", void 0);
i([ y(cc.Label) ], v.prototype, "nameLabel", void 0);
i([ y(c.default) ], v.prototype, "btnSelAct", void 0);
i([ y(d.default) ], v.prototype, "addDropDown", void 0);
i([ y(d.default) ], v.prototype, "propertyDropDown", void 0);
i([ y(c.default) ], v.prototype, "btnOk", void 0);
i([ y(c.default) ], v.prototype, "editButton", void 0);
i([ y(u.default) ], v.prototype, "editValue", void 0);
i([ y(h.default) ], v.prototype, "editToggle", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem",
"./GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper"
} ],
GSDataNodeChangeHeroPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "77881rywYNC3qevwVZczXBB", "GSDataNodeChangeHeroPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../Frame/SceneManager"), r = e("../../Game/Player/Mng"), l = e("../../CustomUI/Button"), c = e("../../CustomUI/DropDownBox"), d = e("../../CustomUI/Toggle"), h = e("../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper"), p = e("../../Scene/EditWorldScene/Inspector/NumberEditBoxItem"), u = e("../../Frame/Util"), m = e("../../Frame/Top"), {ccclass: f, property: g} = cc._decorator;
let y = class extends a.default {
constructor() {
super(...arguments);
this.addDropDown = null;
this.propertyDropDown = null;
this.btnOk = null;
this.editButton = null;
this.editValue = null;
this.editToggle = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.btnOk.node.on(l.default.CLICK, this.onClickOk, this);
this.editButton.node.on(l.default.CLICK, this.onClickEditButton, this);
this.propertyDropDown.node.on(c.default.SELECT_CHANGE, this.onPropertyNameChange, this);
this.editToggle.node.on(d.default.STATE_CHANGE, this.onBooleanChange, this);
this._opArr = [ {
str: "设置",
type: -1
}, {
str: "增加",
type: n.GSComputeType.ADD
}, {
str: "减少",
type: n.GSComputeType.SUB
} ];
this.addDropDown.setDataArr(this._opArr);
this.addDropDown.node.on(c.default.SELECT_CHANGE, this.onAddStateChange, this);
this._opType = -1;
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._opType = this._editData.opType;
this._propertyName = this._editData.propertyName;
this.resetPropertyValue();
this._propertyValue = this._editData.propertyValue;
} else {
this._propertyName = "hp";
this._propertyValue = "0";
}
this.onRefresh();
}
onRefresh() {
let e = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(n.ActType.Hero, this._propertyName);
if (!e) {
let t = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(n.ActType.Hero);
this._propertyName = t && t.length > 0 && t[0].filedName;
e = t && t.length > 0 && t[0];
this._propertyValue = void 0;
if (!e) {
console.error("error!Hero has no property");
this.closePanel();
}
this.resetPropertyValue();
}
let t = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfoArray(n.ActType.Hero), o = t.findIndex(e => e.filedName == this._propertyName);
o <= 0 && (o = 0);
this.propertyDropDown.setDataArr(t);
this.propertyDropDown.selectByIdx(o);
if (e) if (e.valueType == n.ActPropertyValueType.Float) {
this.addDropDown.node.active = !0;
let t = this._opArr.findIndex(e => e.type == this._opType);
t <= 0 && (t = 0);
this.addDropDown.selectByIdx(t);
this.editValue.node.active = !0;
this.editToggle.node.active = !1;
this.editButton.node.active = !1;
this.editValue.setData(e.str, this._propertyValue, t => {
let o = Number.parseFloat(t) || 0;
e.valueRange && 2 == e.valueRange.length && (o = u.Util.clamp(o, e.valueRange[0], e.valueRange[1]));
this._propertyValue = o + "";
this.editValue.label_num.string = this._propertyValue;
});
} else if (e.valueType == n.ActPropertyValueType.Bool) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !0;
this.editButton.node.active = !1;
let e = !1;
this._propertyValue && (e = "true" == this._propertyValue || parseFloat(this._propertyValue) > 0);
e ? this.editToggle.check() : this.editToggle.uncheck();
} else if (e.valueType == n.ActPropertyValueType.Weapon) {
this.addDropDown.node.active = !1;
this.editValue.node.active = !1;
this.editToggle.node.active = !1;
this.editButton.node.active = !0;
let e = r.Mng.Ins.weaponMng.getOne(this._propertyValue);
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
}
}
resetPropertyValue() {
let e = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(n.ActType.Hero, this._propertyName);
this._propertyValue = h.GSDataNodeActPropertyHelper.instance.GetFieldDefaultValue(e);
}
onAddStateChange(e, t, o) {
o && (this._opType = t.type);
}
onPropertyNameChange(e, t, o) {
if (o) {
this._propertyName = t.filedName;
this.resetPropertyValue();
this.onRefresh();
}
}
onBooleanChange(e, t) {
t && (this._propertyValue = e ? "1" : "0");
}
onClickEditButton() {
let e = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(n.ActType.Hero, this._propertyName);
e && e.valueType == n.ActPropertyValueType.Weapon && s.default.ins.OpenPanelByName("SelectWeaponPanel", e => {
e.setData(this._propertyValue);
e.selectCall = e => {
this._propertyValue = e ? e.id : "";
this._editBtnValue = e ? e.name : "";
this.editButton.label.string = this._editBtnValue;
};
});
}
onClickOk() {
if ("" != this._propertyName) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GDATA_ChangeHeroProperty);
e.opType = this._opType;
e.propertyName = this._propertyName;
let t = h.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(n.ActType.Hero, this._propertyName);
e.isTileUnit = t.isTileUnit;
e.propertyValue = this._propertyValue;
this._opCallBack(e);
}
} else m.default.showToast("请选择要更改的属性");
}
};
i([ g(c.default) ], y.prototype, "addDropDown", void 0);
i([ g(c.default) ], y.prototype, "propertyDropDown", void 0);
i([ g(l.default) ], y.prototype, "btnOk", void 0);
i([ g(l.default) ], y.prototype, "editButton", void 0);
i([ g(p.default) ], y.prototype, "editValue", void 0);
i([ g(d.default) ], y.prototype, "editToggle", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/Inspector/NumberEditBoxItem": "NumberEditBoxItem",
"../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper"
} ],
GSDataNodeChangeVariable: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dcf96WCoGdKKZBBsyGTegSC", "GSDataNodeChangeVariable");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../CustomUI/DropDownBox"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../CustomUI/ToggleGroup"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.btnVariable = null;
this.opBox = null;
this.nodeNumber = null;
this.nodeSwitch = null;
this.toggleGroupValue = null;
this.valueEdit = null;
this.btnValueVariable = null;
this.toggleGroupOpen = null;
this.btnMng = null;
this.btnOk = null;
this._editData = null;
this._isNumber = !1;
this._isValue = !0;
this._selVariableId = -1;
this._selValueVariableId = -1;
this._isSwithOpen = !0;
}
onLoad() {
super.onLoad();
this.btnVariable.node.on(a.default.CLICK, this.onClickVarible, this);
this.btnValueVariable.node.on(a.default.CLICK, this.onClickValueVarible, this);
this.toggleGroupValue.node.on(d.default.TOGGLE_CHANGE, this.onToggleValueStateChange, this);
this.toggleGroupOpen.node.on(d.default.TOGGLE_CHANGE, this.onToggleOpenStateChange, this);
this.opBox.node.on(r.default.SELECT_CHANGE, this.onOpTypeChange, this);
this.btnMng.node.on(a.default.CLICK, this.onClickMng, this);
this.btnOk.node.on(a.default.CLICK, this.onClickOk, this);
this._opType = -1;
}
setData(e, t) {
this._editData = e;
this._opCallBack = t;
if (this._editData) {
this._selVariableId = this._editData.v.refId;
this._selVariableId <= 0 && (this._selVariableId = n.GSVariableMng.instance.defaultVariableId);
let e = this._editData.v.refId > 0 ? n.GSVariableMng.instance.getVariable(this._editData.v.refId) : null;
e && (this._editData.v.valueType = e.valueType);
this._selValueVariableId = this._editData.a.isRef ? this._editData.a.refId : -1;
this._opType = this._editData.hasCompute ? this._editData.computeType : -1;
this._isValue = !this._editData.a.isRef;
let t = this._editData.a && this._editData.a.value ? parseFloat(this._editData.a.value) : 0;
isNaN(t) && (t = 0);
this._isSwithOpen = t > 0;
this.valueEdit.string = t + "";
this.toggleGroupValue.selectIdx(this._isValue ? 0 : 1);
this.toggleGroupOpen.selectIdx(this._isSwithOpen ? 0 : 1);
} else this._selVariableId <= 0 && (this._selVariableId = n.GSVariableMng.instance.defaultVariableId);
this.onRefresh();
}
onRefresh() {
this.btnValueVariable.interactable = !this._isValue;
this.refreshVariable();
this.refreshValueVariable();
}
refreshVariable() {
let e = null;
if (this._selVariableId > 0) {
e = n.GSVariableMng.instance.getVariable(this._selVariableId);
this.btnVariable.label.string = e ? e.name : "";
} else this.btnVariable.label.string = "";
this._isNumber = !1;
let t = [];
if (e) if (e.valueType == n.GSValueType.FLOAT) {
this._isNumber = !0;
t = [ {
str: "设置为",
type: -1
}, {
str: "加上",
type: n.GSComputeType.ADD
}, {
str: "减去",
type: n.GSComputeType.SUB
}, {
str: "乘以",
type: n.GSComputeType.MUL
}, {
str: "除以",
type: n.GSComputeType.DIV
} ];
} else t = [ {
str: "设置为",
type: -1
} ]; else t = [ {
str: "设置为",
type: -1
} ];
let o = t.findIndex(e => e.type == this._opType);
o <= 0 && (o = 0);
this.opBox.setDataArr(t);
this.opBox.selectByIdx(o);
this.nodeNumber.active = this._isNumber;
this.nodeSwitch.active = !this._isNumber;
}
refreshValueVariable() {
if (this._isNumber) if (this._selValueVariableId > 0) {
let e = n.GSVariableMng.instance.getVariable(this._selValueVariableId);
this.btnValueVariable.label.string = e ? e.name : "";
} else this.btnValueVariable.label.string = "";
}
onEditValueChange() {
if (this._isValue) {
let e = parseFloat(this.valueEdit.string);
isNaN(e) && (e = 0);
this.valueEdit.string = e + "";
} else this.valueEdit.string = "";
}
onOpTypeChange(e, t, o) {
this._opType = t.type;
}
onToggleValueStateChange(e, t, o) {
if (o) {
this._isValue = 0 == e;
this.onRefresh();
}
}
onClickValueVarible() {
l.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(null, this._selValueVariableId, !0);
e.callSelect = e => {
this._selValueVariableId = e;
this.refreshValueVariable();
};
});
}
onClickVarible() {
l.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(null, this._selVariableId, !0);
e.callSelect = e => {
this._selVariableId = e;
this.onRefresh();
};
});
}
onToggleOpenStateChange(e, t, o) {
o && (this._isSwithOpen = 0 == e);
}
onClickMng() {
l.default.ins.OpenPanelByName("VariablesPanel", e => {
e.setData(null, -1, !1);
});
}
onClickOk() {
if (this._selVariableId <= 0) c.default.showToast("请正确设置变量"); else if (this._isNumber && !this._isValue && this._selValueVariableId <= 0) c.default.showToast("请正确设置值变量"); else {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GDATA_ChangeVariable);
e.hasCompute = -1 != this._opType;
e.computeType = this._opType;
e.v.refId = this._selVariableId;
let t = e.v.isRef && e.v.refId > 0 ? n.GSVariableMng.instance.getVariable(e.v.refId) : null;
t && (e.v.valueType = t.valueType);
e.a.isRef = !this._isValue;
if (this._isNumber && !this._isValue) e.a.refId = this._selValueVariableId; else {
e.a.refId = -1;
if (this._isNumber) {
let t = parseFloat(this.valueEdit.string);
isNaN(t) && (t = 0);
e.a.valueType = n.GSValueType.FLOAT;
e.a.value = t + "";
} else {
e.a.isRef = !1;
e.a.valueType = n.GSValueType.BOOL;
e.a.value = this._isSwithOpen ? "1" : "0";
}
}
this._opCallBack(e);
}
}
}
};
i([ p(a.default) ], u.prototype, "btnVariable", void 0);
i([ p(r.default) ], u.prototype, "opBox", void 0);
i([ p(cc.Node) ], u.prototype, "nodeNumber", void 0);
i([ p(cc.Node) ], u.prototype, "nodeSwitch", void 0);
i([ p(d.default) ], u.prototype, "toggleGroupValue", void 0);
i([ p(cc.EditBox) ], u.prototype, "valueEdit", void 0);
i([ p(a.default) ], u.prototype, "btnValueVariable", void 0);
i([ p(d.default) ], u.prototype, "toggleGroupOpen", void 0);
i([ p(a.default) ], u.prototype, "btnMng", void 0);
i([ p(a.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
GSDataNodeDialogPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8ab60KUzOlGjL86z1wxnRLH", "GSDataNodeDialogPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), {ccclass: l, property: c} = cc._decorator;
let d = class extends r.default {
constructor() {
super(...arguments);
this.addBtn = null;
this.deleteBtn = null;
this.moveUpBtn = null;
this.moveDownBtn = null;
this.okBtn = null;
this.list = null;
this.emptyNode = null;
this._editData = null;
this._dialogueLines = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.addBtn.node.on(a.default.CLICK, this.onAddBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
this.moveUpBtn.node.on(a.default.CLICK, this.onMoveUpBtn, this);
this.moveDownBtn.node.on(a.default.CLICK, this.onMoveDownBtn, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
this._dialogueLines = this._editData ? this._editData.dialogueLines : [];
this.list.setDataArr(this._dialogueLines);
this.emptyNode.active = 0 == this._dialogueLines.length;
this.list.selectByIdx(0);
}
onOkBtn() {
this.closePanel();
if (!this._editData) {
this._editData = n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GINTERACTION_Dialog);
this._editData.dialogueLines = this._dialogueLines;
}
this._opCallBack && this._opCallBack(this._editData);
}
onAddBtn() {
let e = this.list.curSelectIdx;
this._dialogueLines.splice(e + 1, 0, {
dialogue: "Conversation",
actorConfId: "2"
});
this.list.setDataArr(this._dialogueLines);
this.list.selectByIdx(e + 1);
this.emptyNode.active = 0 == this._dialogueLines.length;
}
onDeleteBtn() {
let e = this.list.curSelectIdx;
this._dialogueLines.splice(e, 1);
this.list.setDataArr(this._dialogueLines);
this.emptyNode.active = 0 == this._dialogueLines.length;
}
onMoveUpBtn() {
let e = this.list.curSelectIdx;
if (e > 0) {
let t = this._dialogueLines[e], o = this._dialogueLines[e - 1];
this._dialogueLines[e] = o;
this._dialogueLines[e - 1] = t;
this.list.setDataArr(this._dialogueLines);
this.list.selectByIdx(e - 1);
}
}
onMoveDownBtn() {
let e = this.list.curSelectIdx;
if (e < this._dialogueLines.length - 1) {
let t = this._dialogueLines[e], o = this._dialogueLines[e + 1];
this._dialogueLines[e] = o;
this._dialogueLines[e + 1] = t;
this.list.setDataArr(this._dialogueLines);
this.list.selectByIdx(e + 1);
}
}
};
i([ c(a.default) ], d.prototype, "addBtn", void 0);
i([ c(a.default) ], d.prototype, "deleteBtn", void 0);
i([ c(a.default) ], d.prototype, "moveUpBtn", void 0);
i([ c(a.default) ], d.prototype, "moveDownBtn", void 0);
i([ c(a.default) ], d.prototype, "okBtn", void 0);
i([ c(s.default) ], d.prototype, "list", void 0);
i([ c(cc.Node) ], d.prototype, "emptyNode", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../GameScript/index": "index"
} ],
GSDataNodeDropItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e3232seudJD/K1rWCZH+S2A", "GSDataNodeDropItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/Panel"), s = e("../../CustomUI/Button"), r = e("../../Frame/Top"), l = e("../../Game/Player/Mng"), c = e("../../Frame/SceneManager"), d = e("../../CustomUI/Toggle"), {ccclass: h, property: p} = cc._decorator;
let u = class extends a.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.valueEdit = null;
this.useGravity = null;
this.btnItem = null;
this.btnOk = null;
this._editData = null;
this._selectItemId = null;
}
onLoad() {
super.onLoad();
this.btnItem.node.on(s.default.CLICK, this.onClickItem, this);
this.btnOk.node.on(s.default.CLICK, this.onClickOk, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._selectItemId = this._editData.itemId;
this.valueEdit.string = this._editData.compareValue ? this._editData.compareValue + "" : "0";
this._editData.useGravity ? this.useGravity.check() : this.useGravity.uncheck();
}
this.onRefresh();
}
onEditValueChange() {
let e = parseFloat(this.valueEdit.string);
isNaN(e) && (e = 0);
this.valueEdit.string = e + "";
}
onRefresh() {
let e = this._selectItemId ? l.Mng.Ins.propMng.getOne(this._selectItemId) : null;
this.nameLabel.string = e ? e.name : "";
e ? l.Mng.Ins.spriteMng.setPropSprite(this.icon, e.textureName, 100) : this.icon.spriteFrame = null;
}
onClickItem() {
c.default.ins.OpenPanelByName("SelectPropPanel", e => {
e.setData(this._selectItemId);
e.selectCall = (e => {
this._selectItemId = e.id;
this.onRefresh();
}).bind(this);
});
}
onClickOk() {
if (this._selectItemId && "" != this._selectItemId) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GDATA_DropItem);
e.itemId = this._selectItemId;
let t = parseFloat(this.valueEdit.string);
isNaN(t) && (t = 0);
e.compareValue = t;
e.useGravity = this.useGravity.isChecked;
this._opCallBack(e);
}
} else r.default.showToast("请选择道具");
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.EditBox) ], u.prototype, "valueEdit", void 0);
i([ p(d.default) ], u.prototype, "useGravity", void 0);
i([ p(s.default) ], u.prototype, "btnItem", void 0);
i([ p(s.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
GSDataNodeFlowWaitPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "838eafNB4tFX6fT4WXJCbsO", "GSDataNodeFlowWaitPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.okBtn = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
this._editData ? this.editBox.string = this._editData.waitSecond + "" : this.editBox.string = "0";
}
onOkBtn() {
if ("" == this.editBox.string) {
r.default.showToast("请输入时间");
return;
}
let e = parseFloat(this.editBox.string);
if (Number.isNaN(e)) r.default.showToast("请输入数字"); else {
this.closePanel();
if (this._opCallBack) {
let t = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GFLOW_WAIT);
t.waitSecond = e;
this._opCallBack(t);
}
}
}
};
i([ c(cc.EditBox) ], d.prototype, "editBox", void 0);
i([ c(a.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
GSDataNodeGameOverPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5a84bd8ioFHzIHZGEmcAqjo", "GSDataNodeGameOverPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.okBtn = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
this._editData ? this.editBox.string = this._editData.content : this.editBox.string = "Game Over";
}
onOkBtn() {
if ("" != this.editBox.string) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GSYS_ShowGameOver);
e.content = this.editBox.string;
this._opCallBack(e);
}
} else r.default.showToast("请输入内容");
}
};
i([ c(cc.EditBox) ], d.prototype, "editBox", void 0);
i([ c(a.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
GSDataNodeGameWinPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "130bbepRvFKmbKCBZ6+/N79", "GSDataNodeGameWinPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.okBtn = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
this._editData ? this.editBox.string = this._editData.content : this.editBox.string = "恭喜过关!";
}
onOkBtn() {
if ("" != this.editBox.string) {
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GSYS_ShowGameWin);
e.content = this.editBox.string;
this._opCallBack(e);
}
} else r.default.showToast("请输入内容");
}
};
i([ c(cc.EditBox) ], d.prototype, "editBox", void 0);
i([ c(a.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../GameScript/index": "index"
} ],
GSDataNodeRenderAdd: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cf89e0BKeBIiYjtuOITfIZh", "GSDataNodeRenderAdd");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderAdd = void 0;
o.GSDataNodeRenderAdd = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = null;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: null,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
o.nodeInfo1.setData(this._info, 0);
o.nodeInfo1.newBtn.node.active = !0;
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRenderBagItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1adfaWbM0JLW6oSKlvT2pzW", "GSDataNodeRenderBagItem");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderBagItem = void 0;
const i = e("../../../Game/Player/Mng"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderBagItem = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.itemId ? i.Mng.Ins.propMng.getOne(a.itemId) : null;
this._info.error = !s;
this._info.infoDesc = s ? `${a.isReduce ? "减少" : "增加"} <color=${n.G_ValueColor.toHEX()}>${a.addValue}</c> 个${s ? `<color=${n.G_NameColor.toHEX()}>${"#" + s.name}</c>` : void 0}` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderCameraShake: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "43340PXKFFOGIMNSO1pLQZM", "GSDataNodeRenderCameraShake");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderCameraShake = void 0;
const i = e("./GSDataNodeRender");
o.GSDataNodeRenderCameraShake = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let n = this._info.data;
this._info.infoDesc = `屏幕震动 <color=${i.G_ValueColor.toHEX()}>震速${n.speed} 振幅${n.range} 次数${n.times}</c>`;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderChangeActProperty: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5708fAE63tFC6LXj6UkUhS9", "GSDataNodeRenderChangeActProperty");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderChangeActProperty = void 0;
const i = e("../../../Frame/SceneManager"), n = e("../../../Game/Player/Mng"), a = e("../../../GameScript/index"), s = e("../../../Scene/EditWorldScene/EditWorldScene"), r = e("../../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper"), l = e("./GSDataNodeRender");
o.GSDataNodeRenderChangeActProperty = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let c, d, h = i.default.ins.findScene(s.default).worldData.id, p = this._info.data, u = r.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(p.actType, p.propertyName);
switch (p.actType) {
case a.ActType.Tile:
{
let e = n.Mng.Ins.worldMng.getTileData(h, p.actorId);
if (e) {
d = n.Mng.Ins.tileMng.getOne(e.data.confId).name;
c = e;
}
}
break;

case a.ActType.Hero:
case a.ActType.Enemy:
case a.ActType.Npc:
{
let e = n.Mng.Ins.worldMng.getActorData(h, p.actorId);
if (e) {
let t = n.Mng.Ins.actorMng.getOne(e.data.confId);
d = t ? t.name : e.data.name;
c = e;
}
}
break;

case a.ActType.Device:
{
let e = n.Mng.Ins.worldMng.getDeviceData(h, p.actorId);
if (e) {
let t = n.Mng.Ins.deviceMng.getOne(e.data.confId);
d = t ? t.name : void 0;
c = e;
}
}
}
this._info.error = !c || !u;
if (c) if (u) {
let e = u.valueType == a.ActPropertyValueType.Bool ? "1" == p.propertyValue ? "是" : "否" : r.GSDataNodeActPropertyHelper.instance.GetFieldDisplayStr(p.propertyValue, u), t = `<color=${l.G_ValueColor.toHEX()}>${e}</c>`, o = u.valueType == a.ActPropertyValueType.Float ? p.opType == a.GSComputeType.SUB ? "减少" : p.opType == a.GSComputeType.ADD ? "增加" : "设置" : "设置";
u.valueType == a.ActPropertyValueType.Float && p.opType != a.GSComputeType.EQUAL ? this._info.infoDesc = `${o}对象<color=${l.G_NameColor.toHEX()}>${"#" + d}</c>的<color=${l.G_NameColor.toHEX()}>${"#" + u.str} ${t}</c>` : this._info.infoDesc = `${o}对象<color=${l.G_NameColor.toHEX()}>${"#" + d}</c>的<color=${l.G_NameColor.toHEX()}>${"#" + u.str}</c>为${t}`;
} else this._info.infoDesc = `<color=${cc.Color.RED.toHEX()}>指令无效请删除</c>`; else this._info.infoDesc = "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/Mng": "Mng",
"../../../GameScript/index": "index",
"../../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"../../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderChangeHeroProperty: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "aa9118d7wNPeoP2bkHoJgGk", "GSDataNodeRenderChangeHeroProperty");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderChangeHeroProperty = void 0;
const i = e("../../../GameScript/index"), n = e("../../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper"), a = e("./GSDataNodeRender");
o.GSDataNodeRenderChangeHeroProperty = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let s = this._info.data, r = n.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(i.ActType.Hero, s.propertyName);
this._info.error = !r;
if (r) {
let e = r.valueType == i.ActPropertyValueType.Bool ? "1" == s.propertyValue ? "是" : "否" : n.GSDataNodeActPropertyHelper.instance.GetFieldDisplayStr(s.propertyValue, r), t = `<color=${a.G_ValueColor.toHEX()}>${e}</c>`, o = r.valueType == i.ActPropertyValueType.Float ? s.opType == i.GSComputeType.SUB ? "减少" : s.opType == i.GSComputeType.ADD ? "增加" : "设置" : "设置";
r.valueType == i.ActPropertyValueType.Float && s.opType != i.GSComputeType.EQUAL ? this._info.infoDesc = `${o}<color=${a.G_NameColor.toHEX()}>主角</c>的<color=${a.G_NameColor.toHEX()}>${"#" + r.str} ${t}</c>` : this._info.infoDesc = `${o}<color=${a.G_NameColor.toHEX()}>主角</c>的<color=${a.G_NameColor.toHEX()}>${"#" + r.str}</c>为${t}`;
} else this._info.infoDesc = `<color=${cc.Color.RED.toHEX()}>指令无效请删除</c>`;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../GameScript/index": "index",
"../../GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderChangeVariable: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0251bh3zGtBjp46yh7l17cK", "GSDataNodeRenderChangeVariable");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderChangeVariable = void 0;
const i = e("../../../GameScript/index"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderChangeVariable = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.v && a.v.isRef ? i.GSVariableMng.instance.getVariable(a.v.refId) : null, r = a.a && a.a.isRef ? i.GSVariableMng.instance.getVariable(a.a.refId) : null;
this._info.error = !s || a.a.isRef && !r;
if (s) {
let e = a.a ? a.a.valueType == i.GSValueType.BOOL ? "1" == a.a.value ? "开" : "关" : a.a.value : "null", t = r ? `<color=${n.G_NameColor.toHEX()}>${"#" + r.name}</c>` : `<color=${n.G_ValueColor.toHEX()}>${e}</c>`;
this._info.infoDesc = `${s ? `<color=${n.G_NameColor.toHEX()}>${"#" + s.name}</c>` : void 0} ${i.GSComputeTypeStrMap.get(a.computeType)} ${t} `;
} else this._info.infoDesc = "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../GameScript/index": "index",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderDialogue: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "759dc5NwBlHdbo0Ry5ZTeG4", "GSDataNodeRenderDialogue");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderDialogue = void 0;
const i = e("./GSDataNodeRender"), n = e("../../../Game/Player/Mng");
o.GSDataNodeRenderDialogue = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.dialogueLines && a.dialogueLines.length > 0 ? a.dialogueLines[0] : null, r = s && s.actorConfId ? n.Mng.Ins.actorMng.getOne(s.actorConfId) : null;
this._info.error = !r || !r || !s;
this._info.infoDesc = a && s ? `${r ? `<color=${i.G_NameColor.toHEX()}>${r.name}</c>` : void 0}: ${s.dialogue}` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderDropItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "69d476ggiVHJZ9nd4AQ7ICg", "GSDataNodeRenderDropItem");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderDropItem = void 0;
const i = e("../../../Game/Player/Mng"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderDropItem = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.itemId ? i.Mng.Ins.propMng.getOne(a.itemId) : null;
this._info.error = !s;
this._info.infoDesc = s ? `掉落 ${`<color=${n.G_ValueColor.toHEX()}>${a.compareValue}</c>`} 个${s ? `<color=${n.G_NameColor.toHEX()}>${s.name}</c>` : void 0}` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderFactory: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "86994+UbBBAFKQ0RYCqtOzn", "GSDataNodeRenderFactory");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderFactory = void 0;
const i = e("../../../GameScript/index"), n = e("./GSDataNodeRenderAdd"), a = e("./GSDataNodeRenderBagItem"), s = e("./GSDataNodeRenderCameraShake"), r = e("./GSDataNodeRenderChangeActProperty"), l = e("./GSDataNodeRenderChangeHeroProperty"), c = e("./GSDataNodeRenderChangeVariable"), d = e("./GSDataNodeRenderDialogue"), h = e("./GSDataNodeRenderDropItem"), p = e("./GSDataNodeRenderFlowIf"), u = e("./GSDataNodeRenderFlowIfElse"), m = e("./GSDataNodeRenderFlowWait"), f = e("./GSDataNodeRenderShowGameOver"), g = e("./GSDataNodeRenderShowGameWin"), y = e("./GSDataNodeRenderStart"), v = e("./GSDataNodeRenderSwitchHero"), C = e("./GSDataNodeRenderSwitchWorld"), _ = e("./GSDataNodeRenderTimeCountDownStart"), S = e("./GSDataNodeRenderTimeCountDownStop");
class I {
constructor() {
this._renderInsMap = new Map();
}
static get instance() {
this._instance || (this._instance = new I());
return this._instance;
}
GetRender(e) {
let t = null;
switch (e) {
case i.GSDataNodeType.G_Start:
t = new y.GSDataNodeRenderStart();
break;

case i.GSDataNodeType.G_Add:
t = new n.GSDataNodeRenderAdd();
break;

case i.GSDataNodeType.GFLOW_If:
t = new p.GSDataNodeRenderFlowIf();
break;

case i.GSDataNodeType.GFLOW_IfElse:
t = new u.GSDataNodeRenderFlowIfElse();
break;

case i.GSDataNodeType.GFLOW_WAIT:
t = new m.GSDataNodeRenderFlowWait();
break;

case i.GSDataNodeType.GINTERACTION_Dialog:
t = new d.GSDataNodeRenderDialogue();
break;

case i.GSDataNodeType.GDATA_DropItem:
t = new h.GSDataNodeRenderDropItem();
break;

case i.GSDataNodeType.GDATA_ChangeBagItem:
t = new a.GSDataNodeRenderBagItem();
break;

case i.GSDataNodeType.GDATA_ChangeVariable:
t = new c.GSDataNodeRenderChangeVariable();
break;

case i.GSDataNodeType.GDATA_ChangeActorProperty:
t = new r.GSDataNodeRenderChangeActProperty();
break;

case i.GSDataNodeType.GDATA_ChangeHeroProperty:
t = new l.GSDataNodeRenderChangeHeroProperty();
break;

case i.GSDataNodeType.GSYS_ShowGameWin:
t = new g.GSDataNodeRenderShowGameWin();
break;

case i.GSDataNodeType.GSYS_ShowGameOver:
t = new f.GSDataNodeRenderShowGameOver();
break;

case i.GSDataNodeType.GSYS_SwitchMap:
t = new C.GSDataNodeRenderSwitchWorld();
break;

case i.GSDataNodeType.GSYS_SwitchHero:
t = new v.GSDataNodeRenderSwitchHero();
break;

case i.GSDataNodeType.GSYS_TimeCountDownStart:
t = new _.GSDataNodeRenderTimeCountDownStart();
break;

case i.GSDataNodeType.GSYS_TimeCountDownStop:
t = new S.GSDataNodeRenderTimeCountDownStop();
break;

case i.GSDataNodeType.GSCREEN_CameraShake:
t = new s.GSDataNodeRenderCameraShake();
break;

case i.GSDataNodeType.GSOUND_PlaySfx:
}
return t;
}
}
o.GSDataNodeRenderFactory = I;
cc._RF.pop();
}, {
"../../../GameScript/index": "index",
"./GSDataNodeRenderAdd": "GSDataNodeRenderAdd",
"./GSDataNodeRenderBagItem": "GSDataNodeRenderBagItem",
"./GSDataNodeRenderCameraShake": "GSDataNodeRenderCameraShake",
"./GSDataNodeRenderChangeActProperty": "GSDataNodeRenderChangeActProperty",
"./GSDataNodeRenderChangeHeroProperty": "GSDataNodeRenderChangeHeroProperty",
"./GSDataNodeRenderChangeVariable": "GSDataNodeRenderChangeVariable",
"./GSDataNodeRenderDialogue": "GSDataNodeRenderDialogue",
"./GSDataNodeRenderDropItem": "GSDataNodeRenderDropItem",
"./GSDataNodeRenderFlowIf": "GSDataNodeRenderFlowIf",
"./GSDataNodeRenderFlowIfElse": "GSDataNodeRenderFlowIfElse",
"./GSDataNodeRenderFlowWait": "GSDataNodeRenderFlowWait",
"./GSDataNodeRenderShowGameOver": "GSDataNodeRenderShowGameOver",
"./GSDataNodeRenderShowGameWin": "GSDataNodeRenderShowGameWin",
"./GSDataNodeRenderStart": "GSDataNodeRenderStart",
"./GSDataNodeRenderSwitchHero": "GSDataNodeRenderSwitchHero",
"./GSDataNodeRenderSwitchWorld": "GSDataNodeRenderSwitchWorld",
"./GSDataNodeRenderTimeCountDownStart": "GSDataNodeRenderTimeCountDownStart",
"./GSDataNodeRenderTimeCountDownStop": "GSDataNodeRenderTimeCountDownStop"
} ],
GSDataNodeRenderFlowIfElse: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7a08aHZ7DdPGZZ4l/MQnVXf", "GSDataNodeRenderFlowIfElse");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderFlowIfElse = void 0;
const i = e("../../../GameScript/index");
o.GSDataNodeRenderFlowIfElse = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
let n = this._info.data;
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !0;
o.nodeInfo1.hasCondition = !0;
o.nodeInfo2.hasCondition = !0;
let a = 72;
if (n.childs_true && n.childs_true.length > 0) for (let e of n.childs_true) a += i.GSUtil.caculateNodeRenderHeight(e, 70, 2) + 2;
o.nodeInfo2.node.y = -a;
o.nodeInfo1.setData(this._info, 0, n.condition, n.childs_true);
o.nodeInfo2.setData(this._info, 1, null, n.childs_false);
}
};
cc._RF.pop();
}, {
"../../../GameScript/index": "index"
} ],
GSDataNodeRenderFlowIf: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b80e70ejCNAmb+K98ApJGUM", "GSDataNodeRenderFlowIf");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderFlowIf = void 0;
o.GSDataNodeRenderFlowIf = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
let i = this._info.data;
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !0;
o.nodeInfo1.setData(this._info, 0, i.condition, i.childs);
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRenderFlowWait: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ca59ft/uV1MuaIOp7guEN6d", "GSDataNodeRenderFlowWait");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderFlowWait = void 0;
const i = e("./GSDataNodeRender");
o.GSDataNodeRenderFlowWait = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let n = this._info.data;
this._info.infoDesc = `等待 <color=${i.G_ValueColor.toHEX()}>${n.waitSecond}</c>秒`;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderShowGameOver: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d0d20MIC8VI6ao8s6yXjLvZ", "GSDataNodeRenderShowGameOver");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderShowGameOver = void 0;
o.GSDataNodeRenderShowGameOver = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let i = this._info.data;
this._info.infoDesc = i.content;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRenderShowGameWin: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2ec6cI5MEhKMbuEnm54BnuU", "GSDataNodeRenderShowGameWin");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderShowGameWin = void 0;
o.GSDataNodeRenderShowGameWin = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let i = this._info.data;
this._info.infoDesc = i.content;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRenderStart: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "91061kuYStGWZXDBbNScdcW", "GSDataNodeRenderStart");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderStart = void 0;
o.GSDataNodeRenderStart = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: "在下方添加脚本指令"
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRenderSwitchHero: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8322ciP6S1FlIG0qBPvtfPW", "GSDataNodeRenderSwitchHero");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderSwitchHero = void 0;
const i = e("../../../Game/Player/Mng"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderSwitchHero = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.confId ? i.Mng.Ins.actorMng.getOne(a.confId) : null;
this._info.error = !s;
this._info.infoDesc = s ? `切换主角为：<color=${n.G_NameColor.toHEX()}>${"#" + s.name}</c>` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderSwitchWorld: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a6a4/CEXRFv43FmsZ+o96+", "GSDataNodeRenderSwitchWorld");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderSwitchWorld = void 0;
const i = e("../../../Game/Player/Mng"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderSwitchWorld = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.worldId ? i.Mng.Ins.worldMng.getOne(a.worldId) : null;
this._info.error = !s;
this._info.infoDesc = s ? `进入地图<color=${n.G_NameColor.toHEX()}>${"#" + s.info.name}</c> <color=${n.G_ValueColor.toHEX()}>坐标:[${a.coor.iCol}, ${a.coor.iCol}]</c>` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderTimeCountDownStart: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "48995rHlc9ATKVaCD0e3ZOj", "GSDataNodeRenderTimeCountDownStart");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderTimeCountDownStart = void 0;
const i = e("../../../Frame/Util"), n = e("./GSDataNodeRender");
o.GSDataNodeRenderTimeCountDownStart = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
let a = this._info.data, s = a.timer, r = a.timerType || 0;
this._info.error = !a;
this._info.infoDesc = a ? 0 == r ? `开始倒计时：<color=${n.G_NameColor.toHEX()}>${i.Util.parseLeftTime(s)}</c>` : `开始正计时：<color=${n.G_NameColor.toHEX()}>${i.Util.parseLeftTime(s)}</c>` : "...";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {
"../../../Frame/Util": "Util",
"./GSDataNodeRender": "GSDataNodeRender"
} ],
GSDataNodeRenderTimeCountDownStop: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3bb56MYUWJLSo+pADccoq5i", "GSDataNodeRenderTimeCountDownStop");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeRenderTimeCountDownStop = void 0;
o.GSDataNodeRenderTimeCountDownStop = class {
render(e, t, o) {
if (this._info) {
this._info.depth = e;
this._info.data = t;
this._info.error = !1;
this._info.root = o.node;
} else this._info = {
render: this,
depth: e,
error: !1,
data: t,
root: o.node,
infoDesc: ""
};
o.nodeInfo1.node.active = !0;
o.nodeInfo2.node.active = !1;
o.nodeInfo1.hasCondition = !1;
this._info.infoDesc = "停止倒计时";
o.nodeInfo1.setData(this._info, 0);
}
};
cc._RF.pop();
}, {} ],
GSDataNodeRender: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ed3b1NyCBJKRIW3K33l+o/y", "GSDataNodeRender");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.G_ValueColor = o.G_NameColor = o.GSDataNodeRenderEvent_Refresh = void 0;
o.GSDataNodeRenderEvent_Refresh = "GSDataNodeRenderEvent_Refresh";
o.G_NameColor = cc.Color.ORANGE;
o.G_ValueColor = new cc.Color(128, 0, 255, 255);
cc._RF.pop();
}, {} ],
GSDataNodeShiftWorldCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7f846Gp+7RKRbNFxO8pZb2J", "GSDataNodeShiftWorldCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/UIColor"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield r.Mng.Ins.worldMng.loadOne(e);
this.nameLabel.string = t.info.name;
});
}
onStateChange(e) {
this.node.color = e ? s.UIColor.blue : cc.Color.WHITE;
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
GSDataNodeShiftWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "85cddXBGj5JMLKoXzPw3cVv", "GSDataNodeShiftWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: c, property: d} = cc._decorator;
let h = class extends s.default {
constructor() {
super(...arguments);
this.list = null;
this.emptyNode = null;
this._editData = null;
this._coor = {
iCol: 0,
iRow: 0
};
}
onLoad() {
super.onLoad();
this.list.node.on(a.default.CLICK_ITEM, this.onClickItem, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._worldId = this._editData.worldId;
this._coor = this._editData.coor;
}
let o = r.default.ins.findScene(l.default);
if (o) {
let e = o.gameData, t = e.worldIds;
t = e.worldIds.filter(e => e != o.worldData.id);
this.list.setDataArr(t);
this.emptyNode.active = 0 == t.length;
let i = this._worldId ? t.indexOf(this._worldId) : 0;
i < 0 && (i = 0);
this.list.selectByIdx(i);
}
}
onClickItem(e, t) {
r.default.ins.OpenPanelByName("ActOptionSelectWorldCoorPanel", e => {
let o = this._coor;
e.setData(t, o);
e.selectCall = e => {
this._worldId = t;
this._coor = e;
this.closePanel();
if (this._opCallBack) {
let e = this._editData || n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.GSYS_SwitchMap);
e.worldId = this._worldId;
e.coor = this._coor;
this._opCallBack(e);
}
};
});
}
};
i([ d(a.default) ], h.prototype, "list", void 0);
i([ d(cc.Node) ], h.prototype, "emptyNode", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
GSDataNodeSwitchHeroPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6b9d9hB2BBM34ZW0QrwxGgR", "GSDataNodeSwitchHeroPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/Mng"), c = e("../../CustomUI/Button"), d = e("../../Frame/Top"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.btnSelHero = null;
this.btnOk = null;
this._editData = null;
}
onLoad() {
super.onLoad();
this.btnSelHero.node.on(c.default.CLICK, this.onClickSelHero, this);
this.btnOk.node.on(c.default.CLICK, this.onClickOk, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
this._editData ? this._confId = this._editData.confId : this._confId = null;
this.onRefresh();
}
onRefresh() {
return n(this, void 0, void 0, function*() {
let e = yield l.Mng.Ins.actorMng.loadOne(this._confId);
if (e) {
this.nameLabel.string = e.name;
l.Mng.Ins.spriteMng.setPropSprite(this.icon, e.textureName, 160);
} else {
this.nameLabel.string = "";
this.icon.spriteFrame = null;
}
});
}
onClickSelHero() {
r.default.ins.OpenPanelByName("SelectHeroPanel", e => {
e.setData(null);
e.selectCall = (e => {
if (e) {
this._confId = e.id;
this.onRefresh();
}
}).bind(this);
});
}
onClickOk() {
if (!this._confId || "" == this._confId) {
d.default.showToast("请选择英雄");
return;
}
this.closePanel();
let e = this._editData || a.GSDataNodeBuildHelper.NewGSDataNode(a.GSDataNodeType.GSYS_SwitchHero);
e.confId = this._confId;
this._opCallBack && this._opCallBack(e);
}
};
i([ p(cc.Sprite) ], u.prototype, "icon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(c.default) ], u.prototype, "btnSelHero", void 0);
i([ p(c.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index"
} ],
GSDataNodeTimeCountDownStartPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eadd3b+oBRKO4yp6Px0z55n", "GSDataNodeTimeCountDownStartPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../Frame/Panel"), r = e("../../CustomUI/Button"), l = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), c = e("../../Frame/SceneManager"), d = e("../../CustomUI/ToggleGroup"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.secondBtn = null;
this.triggerItem = null;
this.toggleGroup = null;
this.btnOk = null;
this._second = 0;
this._editData = null;
}
onLoad() {
super.onLoad();
this.secondBtn.node.on(r.default.CLICK, this.onSecondBtn, this);
this.btnOk.node.on(r.default.CLICK, this.onClickOk, this);
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
if (this._editData) {
this._evts = this._editData.evts;
this._second = this._editData.timer;
let e = 0;
e = null != this._editData.timerType ? this._editData.timerType : this._editData.type || 0;
this.toggleGroup.selectIdx(e);
} else {
this._evts = [];
this._second = 10;
}
this.onRefresh();
}
onRefresh() {
return n(this, void 0, void 0, function*() {
this.secondBtn.label.string = this._second + "";
this.triggerItem.setData("计时结束时", this._evts, !1);
});
}
onSecondBtn() {
c.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData("时间（秒）", this.secondBtn.label.string, e => n(this, void 0, void 0, function*() {
e = Math.max(e, 1);
this.secondBtn.label.string = e;
this._second = e;
}));
});
}
onClickOk() {
this._evts = this.triggerItem.evts;
this.closePanel();
let e = this._editData || a.GSDataNodeBuildHelper.NewGSDataNode(a.GSDataNodeType.GSYS_TimeCountDownStart);
e.evts = this._evts;
e.timer = this._second;
e.timerType = this.toggleGroup.idx;
this._opCallBack && this._opCallBack(e);
}
};
i([ p(r.default) ], u.prototype, "secondBtn", void 0);
i([ p(l.default) ], u.prototype, "triggerItem", void 0);
i([ p(d.default) ], u.prototype, "toggleGroup", void 0);
i([ p(r.default) ], u.prototype, "btnOk", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../GameScript/index": "index",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
GSDialogCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fd97b/fAtNNCIvd4JIbOXDC", "GSDialogCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.editBox = null;
this.headBtn = null;
this.nameLabel = null;
this._data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.headBtn.node.on(a.default.CLICK, this.onHeadBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this._data = e;
this.editBox.string = e.dialogue;
let t = yield c.Mng.Ins.actorMng.loadOne(e.actorConfId);
if (t) {
this.nameLabel.string = t.name;
c.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 120);
} else this.nameLabel.string = "";
});
}
onEditBoxTextChange() {
this._data.dialogue = this.editBox.textLabel.string;
}
onStateChange(e) {
this.node.color = e ? l.UIColor.blue : cc.color(230, 230, 230);
}
onHeadBtn() {
r.default.ins.OpenPanelByName("SelectActorPanel", e => {
e.setData(this._data.actorConfId);
e.selectCall = e => {
this._data.actorConfId = e.id;
this.setData(this._data);
};
});
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(cc.EditBox) ], p.prototype, "editBox", void 0);
i([ h(a.default) ], p.prototype, "headBtn", void 0);
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
GSExecuteAssign: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "58141x128lMb7krrI0Hn6BE", "GSExecuteAssign");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteAssign = void 0;
const i = e("../GameScriptDefines"), n = e("./GSInstructionHelper"), a = e("../GSRunnerMng");
o.GSExecuteAssign = class {
constructor(e, t) {
this.isLoop = !1;
this.reset(e, t);
}
reset(e, t) {
this._a = n.GSInstructionHelper.CreateExecute(e, this.runnerId).p;
this._b = t;
this._isExcute = !1;
}
excute() {
let e = a.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = e.getLastResult(), o = t ? t.getValue() : null;
this._a.setValue(o + "");
e.log(`>>assign a = ${o}`);
} else {
this._isExcute = !0;
if (this._b && i.HaseReturnValue(this._b.nodeType)) {
e.pushInstruction(this);
n.GSInstructionHelper.ProcessGSNode(e, this._b);
}
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteBlock: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "51249bQ8GZPkqk23fj+VElo", "GSExecuteBlock");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteBlock = void 0;
const i = e("./GSInstructionHelper"), n = e("../GSRunnerMng");
o.GSExecuteBlock = class {
constructor(e) {
this.isLoop = !1;
this._executeList = [];
this._exeIdx = 0;
this.reset(e);
}
reset(e) {
this._childs = e;
this._isExcute = !1;
}
excute() {
let e = n.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (!this._isExcute) {
this._isExcute = !0;
this._exeIdx = 0;
this._executeList.length = 0;
if (n.GSRunnerMng.instance.getRunner(this.runnerId) && this._childs && this._childs.length > 0) {
let e = this._childs.length;
for (let t = 0; t < e; ++t) {
let e = i.GSInstructionHelper.CreateExecute(this._childs[t], this.runnerId);
this._executeList.push(e);
}
}
}
if (this._exeIdx < this._executeList.length) {
let t = this._executeList[this._exeIdx++];
this._exeIdx < this._executeList.length && e.pushInstruction(this);
t.e && e.pushInstruction(t.e);
t.p && e.pushParam(t.p);
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteBreak: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "44a1aaCzeBDLr5UpRdBuYoB", "GSExecuteBreak");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteBreak = void 0;
const i = e("../GSRunnerMng");
o.GSExecuteBreak = class {
constructor() {
this.isLoop = !1;
this.reset();
}
reset() {}
excute() {
let e = i.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
e.break();
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng"
} ],
GSExecuteCall: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "288f6CeVfRN77yoYA4FEQ2t", "GSExecuteCall");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteCall = void 0;
const i = e("../GSCmdMng");
o.GSExecuteCall = class {
constructor(e, t) {
this.isLoop = !1;
this.reset(e, t);
}
reset(e, t) {
this._cmdType = e;
this._param = t;
this._isExcute = !1;
}
excute() {
if (this._isExcute) this._cmd && this._cmd.setp(); else {
this._isExcute = !0;
this._cmd = i.GSCmdMng.instance.getCmd(this.runnerId, this._cmdType);
this._cmd.setParam(this._param);
this._cmd.excute();
}
return null;
}
isComplete() {
return !this._cmd || this._cmd.isComplete();
}
};
cc._RF.pop();
}, {
"../GSCmdMng": "GSCmdMng"
} ],
GSExecuteCompare: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef3aev2CuNCG7kaTfy2UWto", "GSExecuteCompare");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteCompare = void 0;
const i = e("../GameScriptDefines"), n = e("../GameScriptValueType"), a = e("../GSParam"), s = e("../GSRunnerMng"), r = e("./GSInstructionHelper");
o.GSExecuteCompare = class {
constructor(e, t, o) {
this.isLoop = !1;
this.reset(e, t, o);
}
reset(e, t, o) {
this._compareType = e;
this._a = t;
this._b = o;
this._isExcute = !1;
}
excute() {
let e = s.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = e.getLastResult(), o = t ? t.getValue() : null, s = (t = e.getLastResult()) ? t.getValue() : null, r = !1;
null == s || null == o ? r = !1 : this._compareType == i.GSCompareType.NONEQUAL ? r = s != o : this._compareType == i.GSCompareType.EQUAL ? r = s == o : this._compareType == i.GSCompareType.GREATER ? r = s > o : this._compareType == i.GSCompareType.GREATER_EQUAL ? r = s >= o : this._compareType == i.GSCompareType.LESS ? r = s < o : this._compareType == i.GSCompareType.LESS_EQUAL && (r = s <= o);
e.log(`>>compare ${s} ${i.GSCompareType[this._compareType]} ${o} result = ${r}`);
return new a.GSParam(!1, n.NewGSValue(i.GSValueType.BOOL, r + ""));
}
this._isExcute = !0;
e.pushInstruction(this);
this._a && i.HaseReturnValue(this._a.nodeType) ? r.GSInstructionHelper.ProcessGSNode(e, this._a) : r.GSInstructionHelper.ProcessGSNode(e, i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.BOOL, "1"));
this._b && i.HaseReturnValue(this._b.nodeType) ? r.GSInstructionHelper.ProcessGSNode(e, this._b) : r.GSInstructionHelper.ProcessGSNode(e, i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.BOOL, "1"));
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSParam": "GSParam",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines",
"../GameScriptValueType": "GameScriptValueType",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteCompute: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9bc57Kzax5LCpQeZ9uSVr0H", "GSExecuteCompute");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteCompute = void 0;
const i = e("../GameScriptDefines"), n = e("./GSInstructionHelper"), a = e("../GSRunnerMng"), s = e("../GSParam"), r = e("../GameScriptValueType");
o.GSExecuteCompute = class {
constructor(e, t, o) {
this.isLoop = !1;
this.reset(e, t, o);
}
reset(e, t, o) {
this._computeType = e;
this._a = t;
this._b = o;
this._isExcute = !1;
}
excute() {
let e = a.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t, o;
this._b && i.HaseReturnValue(this._b.nodeType) && (o = e.getLastResult());
this._a && i.HaseReturnValue(this._a.nodeType) && (t = e.getLastResult());
let n = null;
t && o ? n = new s.GSParam(!1, r.NewGSValue(t.getValueType(), r.GSComputeValue(t, o, this._computeType))) : t ? n = new s.GSParam(!1, r.NewGSValue(t.getValueType(), t.getValue())) : o && (n = new s.GSParam(!1, r.NewGSValue(o.getValueType(), o.getValue())));
e.log(`>>compute: ${n ? n.getValue() : null} = ${t.getValue()} ${i.GSComputeType[this._computeType]} ${o.getValue()}`);
return n;
}
this._isExcute = !0;
if (this._a && i.HaseReturnValue(this._a.nodeType) || this._b && i.HaseReturnValue(this._b.nodeType)) {
e.pushInstruction(this);
this._a && i.HaseReturnValue(this._a.nodeType) && n.GSInstructionHelper.ProcessGSNode(e, this._a);
this._b && i.HaseReturnValue(this._b.nodeType) && n.GSInstructionHelper.ProcessGSNode(e, this._b);
} else {
e.warn(`>>compute a[${i.GSNodeType[this._a.nodeType]}] ${this._computeType} b[${i.GSNodeType[this._a.nodeType]}] error!!!`);
n.GSInstructionHelper.ProcessGSNode(e, i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.INT, "0"));
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSParam": "GSParam",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines",
"../GameScriptValueType": "GameScriptValueType",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteIfElse: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7d026p6duFB+qQZPQtl55LB", "GSExecuteIfElse");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteIfElse = void 0;
const i = e("./GSInstructionHelper"), n = e("../GSRunnerMng");
o.GSExecuteIfElse = class {
constructor(e, t, o, i) {
this.isLoop = !1;
this.reset(e, t, o, i);
}
reset(e, t, o, i) {
this._compare = e;
this._logic = t;
this._block1 = o;
this._block2 = i;
this._isExcute = !1;
}
excute() {
let e = n.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = !1;
if (e) {
let o = e.getLastResult();
o && (t = o.getValue());
}
t ? this._block1 && i.GSInstructionHelper.ProcessGSNode(e, this._block1) : this._block2 && i.GSInstructionHelper.ProcessGSNode(e, this._block2);
} else {
this._isExcute = !0;
if (this._compare) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._compare);
} else if (this._logic) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._logic);
}
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteIf: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c54adizdnVB0ZGdTaEVLd9e", "GSExecuteIf");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteIf = void 0;
const i = e("./GSInstructionHelper"), n = e("../GSRunnerMng");
o.GSExecuteIf = class {
constructor(e, t, o) {
this.isLoop = !1;
this.reset(e, t, o);
}
reset(e, t, o) {
this._compare = e;
this._logic = t;
this._block = o;
this._isExcute = !1;
}
excute() {
let e = n.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = !1;
if (e) {
let o = e.getLastResult();
o && (t = o.getValue());
}
t && this._block && i.GSInstructionHelper.ProcessGSNode(e, this._block);
} else {
this._isExcute = !0;
if (this._compare) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._compare);
} else if (this._logic) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._logic);
}
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteLogic: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "87733WS7GtOUJj1clB5xi2S", "GSExecuteLogic");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteLogic = void 0;
const i = e("../GameScriptDefines"), n = e("../GameScriptValueType"), a = e("./GSInstructionHelper"), s = e("../GSParam"), r = e("../GSRunnerMng");
o.GSExecuteLogic = class {
constructor(e, t, o) {
this.isLoop = !1;
this.reset(e, t, o);
}
reset(e, t, o) {
this._logicType = e;
this._a = t;
this._b = o;
this._isExcute = !1;
}
excute() {
let e = r.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = e.getLastResult(), o = !t || t.getValue(), a = !(t = e.getLastResult()) || t.getValue(), r = !1;
this._logicType == i.GSLogicType.AND ? r = a && o : this._logicType == i.GSLogicType.OR && (r = a || o);
e.log(`>>logic ${a} ${i.GSLogicType[this._logicType]} ${o} result = ${r}`);
return new s.GSParam(!1, n.NewGSValue(i.GSValueType.BOOL, r + ""));
}
this._isExcute = !0;
e.pushInstruction(this);
this._a && i.HaseReturnValue(this._a.nodeType) ? a.GSInstructionHelper.ProcessGSNode(e, this._a) : a.GSInstructionHelper.ProcessGSNode(e, i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.BOOL, "1"));
this._b && i.HaseReturnValue(this._b.nodeType) ? a.GSInstructionHelper.ProcessGSNode(e, this._b) : a.GSInstructionHelper.ProcessGSNode(e, i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.BOOL, "1"));
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSParam": "GSParam",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines",
"../GameScriptValueType": "GameScriptValueType",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteWhileCount: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "80113N6HOBOPp423HGZOWGR", "GSExecuteWhileCount");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteWhileCount = void 0;
const i = e("./GSInstructionHelper"), n = e("../GSRunnerMng");
o.GSExecuteWhileCount = class {
constructor(e, t) {
this.isLoop = !0;
this._count = 0;
this.reset(e, t);
}
reset(e, t) {
this._pcount = e;
this._block = t;
this._isExcute = !1;
}
excute() {
if (!n.GSRunnerMng.instance.getRunner(this.runnerId)) return null;
if (this._isExcute) this._count > 0 && this.do(); else {
this._isExcute = !0;
this._count = this._pcount;
this.do();
}
return null;
}
isComplete() {
return !0;
}
do() {
let e = n.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
e.pushInstruction(this);
this._block && i.GSInstructionHelper.ProcessGSNode(e, this._block);
--this._count;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSExecuteWhile: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a5c3bdaNxhATJCpZ5YvWrfX", "GSExecuteWhile");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSExecuteWhile = void 0;
const i = e("./GSInstructionHelper"), n = e("../GSRunnerMng");
o.GSExecuteWhile = class {
constructor(e, t, o) {
this.isLoop = !0;
this.reset(e, t, o);
}
reset(e, t, o) {
this._compare = e;
this._logic = t;
this._block = o;
this._isExcute = !1;
}
excute() {
let e = n.GSRunnerMng.instance.getRunner(this.runnerId);
if (!e) return null;
if (this._isExcute) {
let t = !1;
if (e) {
let o = e.getLastResult();
o && (t = o.getValue());
}
if (t && this._block) {
this._isExcute = !1;
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._block);
}
} else {
this._isExcute = !0;
if (this._compare) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._compare);
} else if (this._logic) {
e.pushInstruction(this);
i.GSInstructionHelper.ProcessGSNode(e, this._logic);
}
}
return null;
}
isComplete() {
return !0;
}
};
cc._RF.pop();
}, {
"../GSRunnerMng": "GSRunnerMng",
"./GSInstructionHelper": "GSInstructionHelper"
} ],
GSInstructionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b62550xB+dFDYSpCO8Scu0e", "GSInstructionHelper");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSInstructionHelper = void 0;
const i = e("../GameScriptDefines"), n = e("../GameScriptValueType"), a = e("./GSExecuteBlock"), s = e("./GSExecuteCall"), r = e("./GSExecuteCompare"), l = e("./GSExecuteIf"), c = e("./GSExecuteIfElse"), d = e("./GSExecuteLogic"), h = e("./GSExecuteWhile"), p = e("./GSExecuteWhileCount"), u = e("../GSParam"), m = e("./GSExecuteBreak"), f = e("./GSExecuteAssign"), g = e("./GSExecuteCompute");
o.GSInstructionHelper = class {
static ProcessGSNode(e, t) {
if (!e || !t) return;
let o = this.CreateExecute(t, e.id);
if (o) {
o.e && e.pushInstruction(o.e);
o.p && e.pushParam(o.p);
}
}
static CreateExecute(e, t) {
if (!e) return null;
let o = {
e: null,
p: null
};
switch (e.nodeType) {
case i.GSNodeType.BLOCK:
{
let t = e;
o.e = new a.GSExecuteBlock(t.childs);
}
break;

case i.GSNodeType.VALUE:
{
let t, a = e;
t = a.isRef ? a.refType == i.GSValueRefType.ITEM ? n.NewGSValue(i.GSValueType.STRING, a.value) : n.NewGSValue(i.GSValueType.INT, a.refId + "") : n.NewGSValue(a.valueType, a.value);
o.p = new u.GSParam(a.isRef, t, a.refType);
}
break;

case i.GSNodeType.ASSIGN:
{
let t = e;
o.e = new f.GSExecuteAssign(t.a, t.b);
}
break;

case i.GSNodeType.COMPUTE:
{
let t = e;
o.e = new g.GSExecuteCompute(t.computeType, t.a, t.b);
}
break;

case i.GSNodeType.COMPARE:
{
let t = e;
o.e = new r.GSExecuteCompare(t.compareType, t.a, t.b);
}
break;

case i.GSNodeType.LOGIC:
{
let t = e;
o.e = new d.GSExecuteLogic(t.logicType, t.a, t.b);
}
break;

case i.GSNodeType.CALL:
{
let t = e;
o.e = new s.GSExecuteCall(t.cmdType, t.param);
}
break;

case i.GSNodeType.IF:
{
let t = e;
o.e = new l.GSExecuteIf(t.compare, t.logic, t.block);
}
break;

case i.GSNodeType.IF_ELSE:
{
let t = e;
o.e = new c.GSExecuteIfElse(t.compare, t.logic, t.block1, t.block2);
}
break;

case i.GSNodeType.WHILE_COUNT:
{
let t = e;
o.e = new p.GSExecuteWhileCount(t.count, t.block);
}
break;

case i.GSNodeType.WHILE:
{
let t = e;
o.e = new h.GSExecuteWhile(t.compare, t.logic, t.block);
}
break;

case i.GSNodeType.BREAK:
o.e = new m.GSExecuteBreak();
break;

default:
console.warn(`>>GSNode ${e.nodeType} not implements excute class.`);
}
o.e && (o.e.runnerId = t);
return o;
}
};
cc._RF.pop();
}, {
"../GSParam": "GSParam",
"../GameScriptDefines": "GameScriptDefines",
"../GameScriptValueType": "GameScriptValueType",
"./GSExecuteAssign": "GSExecuteAssign",
"./GSExecuteBlock": "GSExecuteBlock",
"./GSExecuteBreak": "GSExecuteBreak",
"./GSExecuteCall": "GSExecuteCall",
"./GSExecuteCompare": "GSExecuteCompare",
"./GSExecuteCompute": "GSExecuteCompute",
"./GSExecuteIf": "GSExecuteIf",
"./GSExecuteIfElse": "GSExecuteIfElse",
"./GSExecuteLogic": "GSExecuteLogic",
"./GSExecuteWhile": "GSExecuteWhile",
"./GSExecuteWhileCount": "GSExecuteWhileCount"
} ],
GSMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5bdd9gME+5DGoZtpVTS2cgn", "GSMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSMng = void 0;
const i = e("../Frame/Util"), n = e("./commands/GSCmdAwait"), a = e("./commands/GSCmdCameraShake"), s = e("./commands/GSCmdChangeActProperty"), r = e("./commands/GSCmdChangeBagItem"), l = e("./commands/GSCmdChangeHeroProperty"), c = e("./commands/GSCmdDialogue"), d = e("./commands/GSCmdDropItem"), h = e("./commands/GSCmdSetVariable"), p = e("./commands/GSCmdShowGameOver"), u = e("./commands/GSCmdShowGameWin"), m = e("./commands/GSCmdSwitchHero"), f = e("./commands/GSCmdSwitchMap"), g = e("./commands/GSCmdTest"), y = e("./commands/GSCmdTimeCountDownStart"), v = e("./commands/GSCmdTimeCountDownStop"), C = e("./GameScriptData"), _ = e("./GameScriptDefines"), S = e("./GSCmdMng"), I = e("./GSRunnerMng"), G = e("./GSUtil");
class T {
constructor() {
this._idMaxMap = new Map();
this._map = new Map();
}
static get instance() {
if (!this._instance) {
this._instance = new T();
S.GSCmdMng.instance.registCmd(_.GSCmdType.Test, g.GSCmdTest);
S.GSCmdMng.instance.registCmd(_.GSCmdType.Wait, n.GSCmdAwait);
S.GSCmdMng.instance.registCmd(_.GSCmdType.SetVariable, h.GSCmdSetVariable);
S.GSCmdMng.instance.registCmd(_.GSCmdType.Dialog, c.GSCmdDialogue);
S.GSCmdMng.instance.registCmd(_.GSCmdType.DropItem, d.GSCmdDropItem);
S.GSCmdMng.instance.registCmd(_.GSCmdType.ChangeBagItem, r.GSCmdChangeBagItem);
S.GSCmdMng.instance.registCmd(_.GSCmdType.ChangeActorProperty, s.GSCmdChangeActProperty);
S.GSCmdMng.instance.registCmd(_.GSCmdType.ShowGameWin, u.GSCmdShowGameWin);
S.GSCmdMng.instance.registCmd(_.GSCmdType.ShowGameOver, p.GSCmdShowGameOver);
S.GSCmdMng.instance.registCmd(_.GSCmdType.SwitchMap, f.GSCmdSwitchMap);
S.GSCmdMng.instance.registCmd(_.GSCmdType.CameraShake, a.GSCmdCameraShake);
S.GSCmdMng.instance.registCmd(_.GSCmdType.SwitchHero, m.GSCmdSwitchHero);
S.GSCmdMng.instance.registCmd(_.GSCmdType.ChangeHeroProperty, l.GSCmdChangeHeroProperty);
S.GSCmdMng.instance.registCmd(_.GSCmdType.TimeCountDownStart, y.GSCmdTimeCountDownStart);
S.GSCmdMng.instance.registCmd(_.GSCmdType.TimeCountDownStop, v.GSCmdTimeCountDownStop);
}
return this._instance;
}
_idMax(e) {
this._idMaxMap.has(e) || this._idMaxMap.set(e, 1);
return this._idMaxMap.get(e);
}
_idxMaxPlus(e) {
if (this._idMaxMap.has(e)) {
let t = this._idMaxMap.get(e);
this._idMaxMap.set(e, t + 1);
}
}
_restIdxMaxUseBigger(e, t) {
this._idMax(e) <= t && this._idMaxMap.set(e, t + 1);
}
load(e) {
if (e) {
this._map.has(e.worldId) && this._map.delete(e.worldId);
this._map.set(e.worldId, new Map());
if (e.scriptArray) for (let t of e.scriptArray) this.AddScript(e.worldId, t);
}
}
getNodesByType(e, t) {
let o = this._map.get(e);
if (!o) return null;
let i = [], n = Array.from(o.values());
for (let e of n) {
let o = [];
o.push(e.data);
for (;o.length > 0; ) {
let e = o.length;
for (let n = 0; n < e; ++n) {
let e = o.shift();
if (null == e) continue;
e.type == t && i.push(e);
let n = G.GSUtil.getNodeChildsInfo(e), a = n.childs1, s = n.childs2;
if (a) for (let e of a) o.push(e);
if (s) for (let e of s) o.push(e);
}
}
}
return i;
}
getWorldSaveData(e, t) {
if (!this._map.has(e)) return null;
let o = [], i = this._map.get(e), n = Array.from(i.keys());
for (let e of n) {
if (t && t.indexOf(e) < 0) continue;
let n = i.get(e);
n && o.push(n);
}
return o;
}
CreateNewScript(e) {
this._map.has(e) || this._map.set(e, new Map());
let t = this.getWorldScriptDefaultNameNum(e);
return {
id: this._idMax(e),
name: "Script " + t,
data: C.GSDataNodeBuildHelper.NewGSDataNode(C.GSDataNodeType.G_Start)
};
}
getWorldScriptDefaultNameNum(e) {
if (!this._map.has(e)) return 1;
let t = Array.from(this._map.get(e).values()), o = [];
for (let e of t) o.push(e.name);
return i.Util.getDefaultNameNum("Scripts", o);
}
AddScript(e, t) {
if (t && t.data && t.data.childs && 0 != t.data.childs.length) {
this._map.has(e) || this._map.set(e, new Map());
if (-1 == t.id || this._map.get(e).has(t.id)) {
t.id = this._idMax(e);
this._idxMaxPlus(e);
} else this._restIdxMaxUseBigger(e, t.id);
this._map.get(e).set(t.id, t);
}
}
RemoveScript(e, t) {
this._map.has(e) && this._map.get(e).has(t) && this._map.get(e).delete(t);
}
GetScriptData(e, t) {
return this._map.has(e) && this._map.get(e).get(t) ? this._map.get(e).get(t) : null;
}
ExcuteScript(e, t, o) {
let i = this.GetScriptData(t, o);
I.GSRunnerMng.instance.excuteByScriptData(e, i, !1);
}
}
o.GSMng = T;
cc._RF.pop();
}, {
"../Frame/Util": "Util",
"./GSCmdMng": "GSCmdMng",
"./GSRunnerMng": "GSRunnerMng",
"./GSUtil": "GSUtil",
"./GameScriptData": "GameScriptData",
"./GameScriptDefines": "GameScriptDefines",
"./commands/GSCmdAwait": "GSCmdAwait",
"./commands/GSCmdCameraShake": "GSCmdCameraShake",
"./commands/GSCmdChangeActProperty": "GSCmdChangeActProperty",
"./commands/GSCmdChangeBagItem": "GSCmdChangeBagItem",
"./commands/GSCmdChangeHeroProperty": "GSCmdChangeHeroProperty",
"./commands/GSCmdDialogue": "GSCmdDialogue",
"./commands/GSCmdDropItem": "GSCmdDropItem",
"./commands/GSCmdSetVariable": "GSCmdSetVariable",
"./commands/GSCmdShowGameOver": "GSCmdShowGameOver",
"./commands/GSCmdShowGameWin": "GSCmdShowGameWin",
"./commands/GSCmdSwitchHero": "GSCmdSwitchHero",
"./commands/GSCmdSwitchMap": "GSCmdSwitchMap",
"./commands/GSCmdTest": "GSCmdTest",
"./commands/GSCmdTimeCountDownStart": "GSCmdTimeCountDownStart",
"./commands/GSCmdTimeCountDownStop": "GSCmdTimeCountDownStop"
} ],
GSParam: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef7490PN3lGabR0lVct4XTs", "GSParam");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSParam = void 0;
const i = e("./GameScriptDefines"), n = e("./GSVariableMng");
o.GSParam = class {
constructor(e, t, o = i.GSValueRefType.VARIABLE) {
this._isRef = e;
this._value = t;
this._refType = o;
}
getValueType() {
return this._value.valueType;
}
getValue() {
if (this._isRef) {
let e = this._value.getValue();
if (this._refType == i.GSValueRefType.ITEM) return n.GSVariableMng.instance.getItemVariable(e);
{
let t = n.GSVariableMng.instance.getValue(e);
return t ? t.getValue() : null;
}
}
return this._value.getValue();
}
setValue(e) {
if (this._isRef) {
let t = this._value.getValue();
if (this._refType == i.GSValueRefType.ITEM) {
let o = parseFloat(e);
Number.isNaN(o) || n.GSVariableMng.instance.setItemVariable(t, o);
} else {
let o = n.GSVariableMng.instance.getValue(t);
o && o.setValue(e);
}
} else this._value.setValue(e);
}
};
cc._RF.pop();
}, {
"./GSVariableMng": "GSVariableMng",
"./GameScriptDefines": "GameScriptDefines"
} ],
GSRunnerMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1a6649l0bxHlq5u7TchI1Fz", "GSRunnerMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSRunnerMng = void 0;
const i = e("./GameScriptDefines"), n = e("./executes/GSInstructionHelper"), a = e("./GSRunner"), s = e("./GameScriptData"), r = e("./GSVariableMng");
class l {
constructor() {
this._idMax = 1;
this._runnerMap = new Map();
this._isDirty = !1;
}
static get instance() {
this._instance = this._instance || new l();
return this._instance;
}
excuteScript(e, t, o) {
null == o && (o = null);
let i = this._idMax++, s = new a.GSRunner(i, t);
s.actor = o;
for (let t = e.length - 1; t >= 0; --t) n.GSInstructionHelper.ProcessGSNode(s, e[t]);
this._runnerMap.set(i, s);
this._isDirty = !0;
s.excute();
}
excuteByScriptData(e, t, o) {
if (!t) return;
if (!o) {
let o = Array.from(this._runnerMap.values());
if (o) for (let i of o) if (i.actor == e && i.scriptDataId == t.id) return;
}
let i = this.parseDataNode(t.data);
i && this.excuteScript([ i ], t.id, e);
}
getRunner(e) {
return this._runnerMap.has(e) ? this._runnerMap.get(e) : null;
}
step() {
!this._isDirty && this._runnerArray || (this._runnerArray = Array.from(this._runnerMap.values()));
for (let e of this._runnerArray) {
e.step();
if (e.isComplete()) {
this._runnerMap.delete(e.id);
this._isDirty = !0;
}
}
}
parseDataCondition(e) {
let t = [], o = e;
for (;o; ) {
t.push(o);
o = o.next;
}
let n, a = [];
for (;t.length > 0; ) {
let e = t.pop(), o = e.a;
if (e.a) {
let t, l = i.GSValueType.FLOAT;
if (e.a.type == s.GSSelectValueType.Item) t = i.GSNodeBuildHelper.NewIGSNodeRefValue(-1, i.GSValueRefType.ITEM, o.itemId); else {
t = i.GSNodeBuildHelper.NewIGSNodeValue(!0, o.variableId, i.GSValueType.FLOAT, null);
let e = r.GSVariableMng.instance.getVariable(t.refId);
e && (l = e.valueType);
}
let c = null;
o.compareVariableId > 0 ? r.GSVariableMng.instance.getVariable(o.compareVariableId) && (c = i.GSNodeBuildHelper.NewIGSNodeValue(!0, o.compareVariableId, i.GSValueType.FLOAT, null)) : c = i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, l, o.compareValue + "");
let d = i.GSNodeBuildHelper.NewIGSNodeCompare(o.compare, t, c), h = i.GSNodeBuildHelper.NewIGSNodeLogic(e.logicType, d, n);
a.push(h);
n = h;
}
}
return n;
}
parseDataNode(e) {
if (!e) return null;
let t = null;
switch (e.type) {
case s.GSDataNodeType.G_Start:
{
let o = e, n = t = i.GSNodeBuildHelper.NewIGSNodeBlock();
if (o.childs) for (let e of o.childs) {
let t = this.parseDataNode(e);
t && n.childs.push(t);
}
}
break;

case s.GSDataNodeType.G_Add:
break;

case s.GSDataNodeType.GFLOW_If:
{
let o = e, n = this.parseDataCondition(o.condition), a = t = i.GSNodeBuildHelper.NewIGSNodeBlock();
if (o.childs) for (let e of o.childs) {
let t = this.parseDataNode(e);
t && a.childs.push(t);
}
t = i.GSNodeBuildHelper.NewIGSNodeIf(null, n, a);
}
break;

case s.GSDataNodeType.GFLOW_IfElse:
{
let o = e, n = this.parseDataCondition(o.condition), a = t = i.GSNodeBuildHelper.NewIGSNodeBlock();
if (o.childs_true) for (let e of o.childs_true) {
let t = this.parseDataNode(e);
t && a.childs.push(t);
}
let s = t = i.GSNodeBuildHelper.NewIGSNodeBlock();
if (o.childs_false) for (let e of o.childs_false) {
let t = this.parseDataNode(e);
t && s.childs.push(t);
}
t = i.GSNodeBuildHelper.NewIGSNodeIfElse(null, n, a, s);
}
break;

case s.GSDataNodeType.GFLOW_WAIT:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.Wait, o.waitSecond);
}
break;

case s.GSDataNodeType.GINTERACTION_Dialog:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.Dialog, o.dialogueLines);
}
break;

case s.GSDataNodeType.GDATA_DropItem:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.DropItem, {
itemId: o.itemId,
compareValue: o.compareValue,
useGravity: o.useGravity
});
}
break;

case s.GSDataNodeType.GDATA_ChangeBagItem:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.ChangeBagItem, {
itemId: o.itemId,
addValue: o.addValue,
isReduce: o.isReduce
});
}
break;

case s.GSDataNodeType.GDATA_ChangeVariable:
{
let o = e;
if (o.hasCompute) {
let e = i.GSNodeBuildHelper.NewIGSNodeCompute(o.computeType, o.v, o.a);
t = i.GSNodeBuildHelper.NewIGSNodeAsign(o.v, e);
} else t = i.GSNodeBuildHelper.NewIGSNodeAsign(o.v, o.a);
}
break;

case s.GSDataNodeType.GDATA_ChangeActorProperty:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.ChangeActorProperty, {
actorId: o.actorId,
actType: o.actType,
opType: o.opType,
propertyName: o.propertyName,
propertyValue: o.propertyValue,
isTileUnit: o.isTileUnit
});
}
break;

case s.GSDataNodeType.GDATA_ChangeHeroProperty:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.ChangeHeroProperty, {
opType: o.opType,
propertyName: o.propertyName,
propertyValue: o.propertyValue,
isTileUnit: o.isTileUnit
});
}
break;

case s.GSDataNodeType.GSYS_ShowGameWin:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.ShowGameWin, {
content: o.content
});
}
break;

case s.GSDataNodeType.GSYS_ShowGameOver:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.ShowGameOver, {
content: o.content
});
}
break;

case s.GSDataNodeType.GSYS_SwitchMap:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.SwitchMap, {
worldId: o.worldId,
coor: o.coor
});
}
break;

case s.GSDataNodeType.GSYS_SwitchHero:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.SwitchHero, {
confId: o.confId
});
}
break;

case s.GSDataNodeType.GSYS_TimeCountDownStart:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.TimeCountDownStart, {
timer: o.timer,
timerType: o.timerType,
evts: o.evts
});
}
break;

case s.GSDataNodeType.GSYS_TimeCountDownStop:
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.TimeCountDownStop, {});
break;

case s.GSDataNodeType.GSCREEN_CameraShake:
{
let o = e;
t = i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.CameraShake, {
speed: o.speed,
range: o.range,
times: o.times
});
}
break;

case s.GSDataNodeType.GSOUND_PlaySfx:
}
return t;
}
}
o.GSRunnerMng = l;
cc._RF.pop();
}, {
"./GSRunner": "GSRunner",
"./GSVariableMng": "GSVariableMng",
"./GameScriptData": "GameScriptData",
"./GameScriptDefines": "GameScriptDefines",
"./executes/GSInstructionHelper": "GSInstructionHelper"
} ],
GSRunner: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6f65bs2+jZDvYl/wi41P3rC", "GSRunner");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSRunner = void 0;
o.GSRunner = class {
constructor(e, t) {
this._instructionStack = [];
this._paramStack = [];
this._isExcute = !1;
this._isReExcuted = !1;
this.id = e;
this.scriptDataId = t;
}
log(e, ...t) {
console.log(`>>GSRunner[${this.id}]${e}`, ...t);
}
warn(e, ...t) {
console.warn(`>>GSRunner[${this.id}]${e}`, ...t);
}
error(e, ...t) {
console.error(`>>GSRunner[${this.id}]${e}`, ...t);
}
pushInstruction(e) {
if (this._instructionStack.length >= 100) {
this.error(">>instructionStack is overflow!!!");
this.stop();
} else {
e.runnerId = this.id;
this._instructionStack.push(e);
}
}
pushParam(e) {
e && this._paramStack.push(e);
}
getLastResult() {
return this._paramStack.length > 0 ? this._paramStack.pop() : null;
}
excute() {
this.log("start excute..");
this._isExcute = !0;
}
isComplete() {
return 0 == this._instructionStack.length && (!this._re || this._isReExcuted && this._re.isComplete());
}
step() {
if (this._isExcute && !this.isComplete()) {
if (this._re) {
let e = this._re.excute();
this._isReExcuted = !0;
e && this.pushParam(e);
this._re && !this._re.isComplete() || this.doNext();
} else this.doNext();
this.isComplete() && this.log("excute complete!");
}
}
break() {
this._re = null;
let e = 0;
for (let t = this._instructionStack.length - 1; t >= 0; --t) {
let o = this._instructionStack[t];
if (o && o.isLoop) {
e = t;
break;
}
}
this._instructionStack.splice(e, this._instructionStack.length - e);
this.log("excute break!");
}
stop() {
this._isExcute = !1;
this._re = null;
this._instructionStack.length = 0;
this._paramStack.length = 0;
this.log("excute stop!");
}
doNext() {
if (this._instructionStack.length > 0) {
this._re = this._instructionStack.pop();
this._isReExcuted = !1;
} else this._re = null;
}
};
cc._RF.pop();
}, {} ],
GSSelectDataNodeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0e361cy52hMsJ6xSK1pAwXq", "GSSelectDataNodeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this._dataType = e.type;
this.label.string = e.str;
}
};
i([ s(cc.Label) ], r.prototype, "label", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList"
} ],
GSSelectDataNodePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9b883fjEzBC4KYHNDwGCtkd", "GSSelectDataNodePanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../Frame/Panel"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../CustomUI/ToggleGroup"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends s.default {
constructor() {
super(...arguments);
this.toggleGroup = null;
this.list = null;
}
static openEditDataPanel(e, t, o) {
if (e == a.GSDataNodeType.GFLOW_WAIT) l.default.ins.OpenPanelByName("GSDataNodeFlowWaitPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GINTERACTION_Dialog) l.default.ins.OpenPanelByName("GSDataNodeDialogPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GDATA_ChangeActorProperty) l.default.ins.OpenPanelByName("GSDataNodeChangeActPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GDATA_ChangeHeroProperty) l.default.ins.OpenPanelByName("GSDataNodeChangeHeroPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GDATA_ChangeVariable) l.default.ins.OpenPanelByName("GSDataNodeChangeVariable", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GDATA_DropItem) l.default.ins.OpenPanelByName("GSDataNodeDropItemPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GDATA_ChangeBagItem) l.default.ins.OpenPanelByName("GSDataNodeBagItemPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GSYS_ShowGameWin) l.default.ins.OpenPanelByName("GSDataNodeGameWinPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GSYS_ShowGameOver) l.default.ins.OpenPanelByName("GSDataNodeGameOverPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GSYS_SwitchMap) l.default.ins.OpenPanelByName("GSDataNodeShiftWorldPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GSYS_SwitchHero) l.default.ins.OpenPanelByName("SelectHeroPanel", e => {
let i = t;
i = i || a.GSDataNodeBuildHelper.NewGSDataNode(a.GSDataNodeType.GSYS_SwitchHero);
e.setData(i.confId);
e.selectCall = (e => {
e && (i.confId = e.id);
o(i);
}).bind(this);
}); else if (e == a.GSDataNodeType.GSYS_TimeCountDownStart) l.default.ins.OpenPanelByName("GSDataNodeTimeCountDownStartPanel", e => {
e.setData(t, o);
}); else if (e == a.GSDataNodeType.GSCREEN_CameraShake) l.default.ins.OpenPanelByName("GSDataNodeCameraShakePanel", e => {
e.setData(t, o);
}); else if (!t) {
let t = a.GSDataNodeBuildHelper.NewGSDataNode(e);
o && o(t);
}
}
onLoad() {
super.onLoad();
this.toggleGroup.node.on(c.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.list.node.on(r.default.CLICK_ITEM, this.onClickCell, this);
}
onToggleChange(e, t, o) {
let i = [ {
str: "条件：如果",
type: a.GSDataNodeType.GFLOW_If
}, {
str: "条件：如果-否则",
type: a.GSDataNodeType.GFLOW_IfElse
}, {
str: "等待",
type: a.GSDataNodeType.GFLOW_WAIT
}, {
str: "操作变量",
type: a.GSDataNodeType.GDATA_ChangeVariable
} ], n = [ {
str: "剧情对话",
type: a.GSDataNodeType.GINTERACTION_Dialog
}, {
str: "主角属性指令",
type: a.GSDataNodeType.GDATA_ChangeHeroProperty
}, {
str: "调整属性",
type: a.GSDataNodeType.GDATA_ChangeActorProperty
}, {
str: "生成道具",
type: a.GSDataNodeType.GDATA_DropItem
}, {
str: "背包道具增减",
type: a.GSDataNodeType.GDATA_ChangeBagItem
}, {
str: "屏幕震动",
type: a.GSDataNodeType.GSCREEN_CameraShake
}, {
str: "开始计时",
type: a.GSDataNodeType.GSYS_TimeCountDownStart
}, {
str: "停止计时",
type: a.GSDataNodeType.GSYS_TimeCountDownStop
} ], s = [ {
str: "进入通关界面",
type: a.GSDataNodeType.GSYS_ShowGameWin
}, {
str: "进入失败界面",
type: a.GSDataNodeType.GSYS_ShowGameOver
}, {
str: "切换地图",
type: a.GSDataNodeType.GSYS_SwitchMap
}, {
str: "切换主角",
type: a.GSDataNodeType.GSYS_SwitchHero
} ];
switch (e) {
case 0:
this.list.setDataArr(i);
break;

case 1:
this.list.setDataArr(n);
break;

case 2:
this.list.setDataArr(s);
}
}
setData(e, t) {
this._opCallBack = t;
this._editData = e;
}
onClickCell(e, t) {
this.closePanel();
i.openEditDataPanel(t.type, this._editData, this._opCallBack);
}
};
n([ h(c.default) ], p.prototype, "toggleGroup", void 0);
n([ h(r.default) ], p.prototype, "list", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../GameScript/index": "index"
} ],
GSUIItemConditionCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "885fa/FdaxGhKqCgF51P9VF", "GSUIItemConditionCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/DropDownBox"), s = e("../../Game/Player/Mng"), r = e("../../CustomUI/Button"), l = e("../GSConditionSelectTypePanel/GSConditionSelectTypePanel"), c = e("./NodeRender/GSDataNodeRender"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.variableLabel = null;
this.logicDropDownBox = null;
this.btnDetail = null;
this._inited = !1;
this._data = null;
}
onLoad() {
if (!this._inited) {
this._inited = !0;
this.btnDetail.node.on(r.default.CLICK, this.onClickDetail, this);
this.logicDropDownBox.node.active = !0;
this.logicDropDownBox.node.on(a.default.SELECT_CHANGE, this.onLogicTypeChange, this);
this.logicDropDownBox.setDataArr([ {
str: "且",
type: n.GSLogicType.AND
}, {
str: "或",
type: n.GSLogicType.OR
} ]);
}
}
start() {
this.onRefresh();
}
setData(e) {
this._data = e;
this.onRefresh();
}
onRefresh() {
if (!this._inited) return;
let e = this._data;
if (e) {
if (e.next) {
this.logicDropDownBox.node.active = !0;
this.logicDropDownBox.selectByIdx(e.logicType == n.GSLogicType.AND ? 0 : 1);
} else this.logicDropDownBox.node.active = !1;
e.a && (this.variableLabel.string = this.getValueRenderString(e.a));
}
}
onClickDetail() {
this._data && this._data.a && l.default.openConditionEditPanel(this._data.a.type, this._data.a, (e => {
if (e) {
this._data.a = e;
this.onRefresh();
} else this.node.parent.emit("DELETECONDITION", this._data);
}).bind(this));
}
onLogicTypeChange(e, t, o) {
o && this._data && (this._data.logicType = t.type);
}
getValueRenderString(e) {
if (!e) return "";
let t = e.compareVariableId > 0 && n.GSVariableMng.instance.getVariable(e.compareVariableId);
if (e.type == n.GSSelectValueType.Variable) {
let o = e.variableId > 0 && n.GSVariableMng.instance.getVariable(e.variableId);
if (o) {
if (o.valueType == n.GSValueType.BOOL) {
let i = t.valueType == n.GSValueType.BOOL ? `<color=${c.G_NameColor.toHEX()}>${"#" + t.name}</c>` : `<color=${c.G_ValueColor.toHEX()}>${e.compareValue && e.compareValue > 0 ? "开" : "关"}</c>`;
return `<color=${c.G_NameColor.toHEX()}>${"#" + o.name}</c><color=#000000> 为 ${i}</color>`;
}
{
let i = t ? `<color=${c.G_NameColor.toHEX()}>${"#" + t.name}</c>` : `<color=${c.G_ValueColor.toHEX()}>${e.compareValue}</c>`;
return `<color=${c.G_NameColor.toHEX()}>${"#" + o.name}</c><color=#000000> ${n.GSCompareTypeStrMap.get(e.compare)} ${i}</color>`;
}
}
{
let o = t ? `<color=${c.G_NameColor.toHEX()}>${"#" + t.name}</c>` : `<color=${c.G_ValueColor.toHEX()}>${e.compareValue}</c>`;
return `<color=${c.G_NameColor.toHEX()}>undefined</c><color=#000000> ${n.GSCompareTypeStrMap.get(e.compare)} ${o}</color>`;
}
}
if (e.type == n.GSSelectValueType.Item) {
let o = e.itemId && s.Mng.Ins.propMng.getOne(e.itemId);
if (o) {
let i = t ? `<color=${c.G_NameColor.toHEX()}>${"#" + t.name}</c>` : `<color=${c.G_ValueColor.toHEX()}>${e.compareValue}</c>`;
return `<color=${c.G_NameColor.toHEX()}>${o.name}</c><color=#000000> ${n.GSCompareTypeStrMap.get(e.compare)} ${i}</color>`;
}
}
return "";
}
};
i([ h(cc.RichText) ], p.prototype, "variableLabel", void 0);
i([ h(a.default) ], p.prototype, "logicDropDownBox", void 0);
i([ h(r.default) ], p.prototype, "btnDetail", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../GSConditionSelectTypePanel/GSConditionSelectTypePanel": "GSConditionSelectTypePanel",
"./NodeRender/GSDataNodeRender": "GSDataNodeRender"
} ],
GSUIItemCondition: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9c7efTHdhxMi5IXqAR70LXk", "GSUIItemCondition");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("./GSUIItemConditionCell"), r = e("./SimpleNodeList"), l = e("../../Frame/SceneManager"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.cellList = null;
this.cell = null;
this.newBtn = null;
this.addCompareBtn = null;
this._inited = !1;
this._data = null;
this._cellDataList = [];
}
init() {
if (!this._inited) {
this._inited = !0;
this.addCompareBtn.node.on(a.default.CLICK, this.onClickAddCompare, this);
this.newBtn.node.on(a.default.CLICK, this.onClickAddNew, this);
this.cellList.node.on("DELETECONDITION", this.onClickDelete, this);
this.cellList.SetItemPrefab(this.cell.node, s.default);
this.cellList.callThis = this;
this.cellList.itemRender = this.onCellRender;
}
}
setData(e) {
this.init();
this._data = e;
this._cellDataList.length = 0;
let t = e;
for (;t && t.a; ) {
this._cellDataList.push(t);
t = t.next;
}
this.onRefresh();
}
onRefresh() {
if (this._inited) {
this.cellList.numberItems = this._cellDataList.length;
this.addCompareBtn.node.active = 0 == this._cellDataList.length;
this.newBtn.node.active = !this.addCompareBtn.node.active;
this.cellList.node.active = !this.addCompareBtn.node.active;
}
}
onClickAddCompare() {
l.default.ins.OpenPanelByName("GSConditionSelectTypePanel", e => {
e.setData((t => {
let o = this._cellDataList.length, i = o > 0 ? this._cellDataList[o - 1] : null;
if (i) {
let e = n.GSDataNodeBuildHelper.NewGSDataConditione(t);
i.next = e;
this._cellDataList.push(e);
} else {
this._data.a = t;
this._cellDataList.push(this._data);
}
this.onRefresh();
e.closePanel();
}).bind(this));
});
}
onClickAddNew() {
this.onClickAddCompare();
}
onClickDelete(e) {
if (!e) return;
let t = this._cellDataList.indexOf(e);
if (t >= 0) {
this._cellDataList.splice(t, 1);
let o = this._data;
for (;o && o.next != e; ) o = o.next;
o && o.next == e && (o.next = e.next ? e.next.next : null);
this.onRefresh();
}
}
onCellRender(e, t) {
let o = this._cellDataList[e];
t.setData(o);
}
};
i([ d(r.default) ], h.prototype, "cellList", void 0);
i([ d(s.default) ], h.prototype, "cell", void 0);
i([ d(a.default) ], h.prototype, "newBtn", void 0);
i([ d(a.default) ], h.prototype, "addCompareBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../GameScript/index": "index",
"./GSUIItemConditionCell": "GSUIItemConditionCell",
"./SimpleNodeList": "SimpleNodeList"
} ],
GSUIItemNodeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6af1dsWPQdPtamTtZF81PgH", "GSUIItemNodeCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("./GSUIItemNodeInfoCell"), r = e("./NodeRender/GSDataNodeRender"), l = e("./NodeRender/GSDataNodeRenderFactory"), c = e("./SimpleNodeList"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends cc.Component {
constructor() {
super(...arguments);
this.cellPrefab = null;
this.nodeInfo1 = null;
this.nodeInfo2 = null;
this._inited = !1;
this._depth = 0;
this._parentNodeInfo = null;
this._nodeData = null;
}
onLoad() {
if (!this._inited) {
this._inited = !0;
this.node.on(r.GSDataNodeRenderEvent_Refresh, this.onNodeChange, this);
this.node.on("OnAddNew", () => {
this._parentNodeInfo && this._parentNodeInfo.onAddNew();
}, this);
this.node.on(c.default.ADD_NEW_ITEM, e => {
this._parentNodeInfo && this._parentNodeInfo.node.emit(c.default.ADD_NEW_ITEM, e);
}, this);
this.node.on(c.default.SET_SELECT_ITEM_NODE, e => {
if (this._nodeData) {
if (this.nodeInfo1.node.active && this.nodeInfo1.childNodeDatas && this.nodeInfo1.childNodeDatas.length > 0) {
let t = this.nodeInfo1.childNodeDatas, o = t.length;
for (let i = 0; i < o; ++i) if (t[i].id == e) {
this.nodeInfo1.childCellList.selectItem(i);
return;
}
}
if (this.nodeInfo2.node.active && this.nodeInfo2.childNodeDatas && this.nodeInfo2.childNodeDatas.length > 0) {
let t = this.nodeInfo2.childNodeDatas, o = t.length;
for (let i = 0; i < o; ++i) if (t[i].id == e) {
this.nodeInfo2.childCellList.selectItem(i);
return;
}
}
this.nodeInfo1.node.active && this.nodeInfo1.childNodeDatas && this.nodeInfo1.childNodeDatas.length > 0 && this.nodeInfo1.childCellList.node.emit(c.default.SET_SELECT_ITEM_NODE, e);
this.nodeInfo2.node.active && this.nodeInfo2.childNodeDatas && this.nodeInfo2.childNodeDatas.length > 0 && this.nodeInfo2.childCellList.node.emit(c.default.SET_SELECT_ITEM_NODE, e);
}
}, this);
this.nodeInfo1.childCellList.node.on(c.default.SELECT_ITEM_NODE, (e, t) => {
this.node.parent.emit(c.default.SELECT_ITEM_NODE, e, t);
}, this);
this.nodeInfo1.childCellList.callThis = this;
this.nodeInfo1.childCellList.SetItemPrefab(this.cellPrefab.node, i);
this.nodeInfo1.childCellList.itemRender = (e, t) => {
this.nodeInfo1.childNodeDatas && this.nodeInfo1.childNodeDatas.length > e && t.setData(this._depth + 1, this.nodeInfo1.childNodeDatas[e], this.nodeInfo1);
};
this.nodeInfo1.childCellList.itemSize = (e, t) => {
if (this.nodeInfo1.childNodeDatas && e < this.nodeInfo1.childNodeDatas.length) {
let o = this.nodeInfo1.childNodeDatas[e], i = a.GSUtil.caculateNodeRenderHeight(o, 70, 2);
t.x = 0;
t.y = i;
} else {
t.x = 0;
t.y = 0;
}
};
this.nodeInfo2.childCellList.node.on(c.default.SELECT_ITEM_NODE, (e, t) => {
this.node.parent.emit(c.default.SELECT_ITEM_NODE, e, t);
}, this);
this.nodeInfo2.childCellList.callThis = this;
this.nodeInfo2.childCellList.SetItemPrefab(this.cellPrefab.node, i);
this.nodeInfo2.childCellList.itemRender = (e, t) => {
this.nodeInfo2.childNodeDatas && this.nodeInfo2.childNodeDatas.length > e && t.setData(this._depth + 1, this.nodeInfo2.childNodeDatas[e], this.nodeInfo2);
};
this.nodeInfo2.childCellList.itemSize = (e, t) => {
if (this.nodeInfo2.childNodeDatas && e < this.nodeInfo2.childNodeDatas.length) {
let o = this.nodeInfo2.childNodeDatas[e], i = a.GSUtil.caculateNodeRenderHeight(o, 70, 2);
t.x = 0;
t.y = i;
} else {
t.x = 0;
t.y = 0;
}
};
}
}
start() {
this.onRefresh();
}
setData(e, t, o) {
this.node.dataNodeId = t.id;
this._depth = e;
this._nodeData = t;
this._parentNodeInfo = o;
this.onRefresh();
}
onRefresh() {
this._inited && l.GSDataNodeRenderFactory.instance.GetRender(this._nodeData.type).render(this._depth, this._nodeData, this);
}
onNodeChange() {
l.GSDataNodeRenderFactory.instance.GetRender(this._nodeData.type).render(this._depth, this._nodeData, this);
}
};
n([ h(i) ], p.prototype, "cellPrefab", void 0);
n([ h(s.default) ], p.prototype, "nodeInfo1", void 0);
n([ h(s.default) ], p.prototype, "nodeInfo2", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../GameScript/index": "index",
"./GSUIItemNodeInfoCell": "GSUIItemNodeInfoCell",
"./NodeRender/GSDataNodeRender": "GSDataNodeRender",
"./NodeRender/GSDataNodeRenderFactory": "GSDataNodeRenderFactory",
"./SimpleNodeList": "SimpleNodeList"
} ],
GSUIItemNodeInfoCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c452cWm3FVKLo2MQ76wnpOZ", "GSUIItemNodeInfoCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../CustomUI/Button"), s = e("./GSUIItemCondition"), r = e("./NodeRender/GSDataNodeRender"), l = e("./SimpleNodeList"), c = e("../GSSelectDataNodePanel/GSSelectDataNodePanel"), d = e("../../Frame/SceneManager"), h = e("../../Frame/UIColor"), {ccclass: p, property: u} = cc._decorator, m = [ h.UIColor.yellow ], f = h.UIColor.blue;
let g, y;
function v(e) {
for (let t of g) if (t.type == e) return t.color;
return f;
}
function C() {
g || (g = [ {
type: n.GSDataNodeType.G_Start,
color: h.UIColor.blue
}, {
type: n.GSDataNodeType.GFLOW_If,
color: h.UIColor.green
}, {
type: n.GSDataNodeType.GFLOW_IfElse,
color: h.UIColor.green
}, {
type: n.GSDataNodeType.GFLOW_WAIT,
color: h.UIColor.green
} ]);
y || (y = new Map([ [ n.GSDataNodeType.G_Start, [ "开始" ] ], [ n.GSDataNodeType.GFLOW_If, [ "如果" ] ], [ n.GSDataNodeType.GFLOW_IfElse, [ "如果", "否则" ] ], [ n.GSDataNodeType.GFLOW_WAIT, [ "等待" ] ], [ n.GSDataNodeType.GINTERACTION_Dialog, [ "对话" ] ], [ n.GSDataNodeType.GDATA_DropItem, [ "掉落" ] ], [ n.GSDataNodeType.GDATA_ChangeBagItem, [ "背包" ] ], [ n.GSDataNodeType.GDATA_ChangeVariable, [ "变量" ] ], [ n.GSDataNodeType.GDATA_ChangeActorProperty, [ "物体" ] ], [ n.GSDataNodeType.GDATA_ChangeHeroProperty, [ "主角" ] ], [ n.GSDataNodeType.GSYS_ShowGameWin, [ "过关" ] ], [ n.GSDataNodeType.GSYS_ShowGameOver, [ "失败" ] ], [ n.GSDataNodeType.GSYS_SwitchMap, [ "过关" ] ], [ n.GSDataNodeType.GSYS_SwitchHero, [ "主角" ] ], [ n.GSDataNodeType.GSYS_TimeCountDownStart, [ "计时" ] ], [ n.GSDataNodeType.GSYS_TimeCountDownStop, [ "计时" ] ], [ n.GSDataNodeType.GSYS_SwitchHero, [ "主角" ] ], [ n.GSDataNodeType.GSCREEN_CameraShake, [ "震屏" ] ], [ n.GSDataNodeType.GSOUND_PlaySfx, [ "音效" ] ] ]));
}
let _ = class extends cc.Component {
constructor() {
super(...arguments);
this.root = null;
this.head = null;
this.nameBg = null;
this.nameLabel = null;
this.error = null;
this.newBtn = null;
this.content = null;
this.frameBtn = null;
this.info = null;
this.infoDesc = null;
this.condition = null;
this.childCellList = null;
this._inited = !1;
this.hasCondition = !1;
this._depth = 0;
this._switchIdx = 0;
this._renderInfo = null;
}
get childNodeDatas() {
return this._childNodeDatas;
}
init() {
if (!this._inited) {
C();
this._inited = !0;
this.newBtn.node.active = !1;
this.newBtn.node.on(a.default.CLICK, this.onClickNew, this);
this.frameBtn.node.on(a.default.CLICK, this.onClickFrame, this);
this.node.on(l.default.ADD_NEW_ITEM, e => {
this._renderInfo && this._renderInfo.root.emit(l.default.ADD_NEW_ITEM, e);
}, this);
}
}
setData(e, t = 0, o, i) {
this.init();
this._renderInfo = e;
this._condition = o;
this._childNodeDatas = i;
this._depth = e.depth;
this._switchIdx = t;
this.onRefresh();
}
onRefresh() {
if (!this._inited) return;
this.newBtn.node.active = !1;
let e = m.length;
this.head.node.color = m[this._depth % e];
if (this._renderInfo.data) {
this.content.active = !0;
this.nameBg.node.color = v(this._renderInfo.data.type);
this.nameLabel.string = y.get(this._renderInfo.data.type)[this._switchIdx];
this.error.node.active = this._renderInfo.error;
this.condition && (this.condition.node.active = this.hasCondition);
this.infoDesc.node.active = !this.hasCondition;
this.frameBtn.node.active = this.condition && this.condition.node.active || this.infoDesc.node.active;
this.hasCondition && this._condition && this.condition ? this.condition.setData(this._condition) : this.infoDesc.string = `<color=#000000>${this._renderInfo.infoDesc}</color>`;
this.childCellList.node.active = !0;
if (this._childNodeDatas && this._childNodeDatas.length > 0) {
this.hasCondition && this._childNodeDatas[this._childNodeDatas.length - 1].type != n.GSDataNodeType.G_Add && this._childNodeDatas.push(n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.G_Add));
this.childCellList.numberItems = this._childNodeDatas.length;
} else if (this.hasCondition && this._childNodeDatas) {
this._childNodeDatas.push(n.GSDataNodeBuildHelper.NewGSDataNode(n.GSDataNodeType.G_Add));
this.childCellList.numberItems = 1;
} else this.childCellList.node.active = !1;
} else {
this.error.node.active = !1;
this.content.active = !1;
this.childCellList.node.active = !1;
}
}
onAddNew() {
if (!this._childNodeDatas) {
this._renderInfo.root.emit("OnAddNew");
return;
}
let e = e => {
let t = this._childNodeDatas.length > 1 ? this._childNodeDatas.length - 1 : 0;
this._childNodeDatas.splice(t, 0, e);
this._renderInfo.root.emit(l.default.ADD_NEW_ITEM, e.id);
};
e.bind(this);
d.default.ins.OpenPanelByName("GSSelectDataNodePanel", t => {
t.setData(null, e);
});
}
onClickNew() {
this.onAddNew();
}
onClickFrame() {
let e = () => {
this._renderInfo.root.emit(r.GSDataNodeRenderEvent_Refresh);
};
e.bind(this);
c.default.openEditDataPanel(this._renderInfo.data.type, this._renderInfo.data, e);
}
};
i([ u(cc.Node) ], _.prototype, "root", void 0);
i([ u(cc.Sprite) ], _.prototype, "head", void 0);
i([ u(cc.Sprite) ], _.prototype, "nameBg", void 0);
i([ u(cc.Label) ], _.prototype, "nameLabel", void 0);
i([ u(cc.Sprite) ], _.prototype, "error", void 0);
i([ u(a.default) ], _.prototype, "newBtn", void 0);
i([ u(cc.Node) ], _.prototype, "content", void 0);
i([ u(a.default) ], _.prototype, "frameBtn", void 0);
i([ u(cc.Node) ], _.prototype, "info", void 0);
i([ u(cc.RichText) ], _.prototype, "infoDesc", void 0);
i([ u(s.default) ], _.prototype, "condition", void 0);
i([ u(l.default) ], _.prototype, "childCellList", void 0);
_ = i([ p ], _);
o.default = _;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../GameScript/index": "index",
"../GSSelectDataNodePanel/GSSelectDataNodePanel": "GSSelectDataNodePanel",
"./GSUIItemCondition": "GSUIItemCondition",
"./NodeRender/GSDataNodeRender": "GSDataNodeRender",
"./SimpleNodeList": "SimpleNodeList"
} ],
GSUtil: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "34a38XQodlDaob7c9JW7KG1", "GSUtil");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSUtil = void 0;
const i = e("./GameScriptData");
o.GSUtil = class {
static getNodeChildsInfo(e) {
let t, o;
if (e) if (e.type == i.GSDataNodeType.G_Start) t = e.childs; else if (e.type == i.GSDataNodeType.GFLOW_If) t = e.childs; else if (e.type == i.GSDataNodeType.GFLOW_IfElse) {
let i = e;
t = i.childs_true;
o = i.childs_false;
}
return {
childs1: t,
childs2: o
};
}
static caculateNodeRenderHeight(e, t, o) {
if (!e) return 0;
let i = this.getNodeChildsInfo(e), n = t;
if (i.childs1) {
for (let e of i.childs1) {
n += o;
n += this.caculateNodeRenderHeight(e, t, o);
}
i.childs2 && (n += o);
}
if (i.childs2) {
n += t;
for (let e of i.childs2) {
n += o;
n += this.caculateNodeRenderHeight(e, t, o);
}
}
return n;
}
static getTargetNodeStayedInChilds(e, t) {
let o = null, i = [], n = [];
i.push(t);
for (;i.length > 0; ) {
let t = i.length;
for (let a = 0; a < t; ++a) {
let t = i.shift();
if (null == t) {
o = n.shift();
continue;
}
let a = this.getNodeChildsInfo(t), s = a.childs1, r = a.childs2;
if (t.id == e) return o;
if (s) {
i.push(null);
n.push({
parent: t,
childs: s
});
for (let e of s) i.push(e);
}
if (r) {
i.push(null);
n.push({
parent: t,
childs: r
});
for (let e of r) i.push(e);
}
}
}
return null;
}
};
cc._RF.pop();
}, {
"./GameScriptData": "GameScriptData"
} ],
GSVariableMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6bc3aiQliBAZrUcGriaIWaB", "GSVariableMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSVariableMng = void 0;
const i = e("../Frame/Util"), n = e("./GSVariable");
class a {
constructor() {
this._map = new Map();
this._nameMap = new Map();
this._idOrderList = [];
this._itemVariableMap = new Map();
}
static get instance() {
this._instance = this._instance || new a();
return this._instance;
}
clearItem() {
this._itemVariableMap.clear();
}
transIdString(e) {
if (void 0 === e) return;
let t = e.split(":");
return parseInt(t[2]);
}
load(e) {
if (!e) return;
this._itemVariableMap.clear();
this._map.clear();
this._nameMap.clear();
this._idOrderList.length = 0;
e.sort((e, t) => e && t ? e.idx - t.idx : -1);
let t = 0;
for (let o of e) {
if (!o) continue;
let e = o;
e.idx = t++;
this.insertVariable(e);
}
}
resetValues() {
let e = Array.from(this._map.values());
for (let t of e) t.setValue(t.defaultValue);
}
getSaveData() {
let e = [];
this._nameMap.clear();
let t = this._idOrderList.length;
for (let o = 0; o < t; ++o) {
let t = this._idOrderList[o], i = this._map.get(t);
if (i) {
this._nameMap.set(i.name, t);
e.push(this.buildDataByNode(o, i));
}
}
return e;
}
getVariableData(e) {
let t = this.transIdString(e);
if (!t) return null;
let o = this._idOrderList.length;
for (let e = 0; e < o; ++e) {
let o = this._idOrderList[e];
if (o == t) {
let t = this._map.get(o);
return this.buildDataByNode(e, t);
}
}
return null;
}
buildDataByNode(e, t) {
return {
id: t.idstr,
idx: e,
name: t.name,
desc: t.desc,
readonly: t.readonly,
valueType: t.valueType,
defaultValue: t.defaultValue
};
}
addVariable(e) {
if (!e) return;
let t = this.transIdString(e.id), o = new n.GSVariable();
o.setParam(e.valueType, e.defaultValue, e.readonly);
o.idstr = e.id;
o.name = e.name;
o.desc = e.desc;
this._map.set(t, o);
this._nameMap.has(e.name) || this._nameMap.set(e.name, t);
}
addNewVariable(e) {
if (!e || void 0 === e.id) return;
let t = this.transIdString(e.id);
this.addVariable(e);
return t;
}
insertVariable(e) {
let t = this.addNewVariable(e);
e.idx >= 0 && this._idOrderList.splice(e.idx, 0, t);
return t;
}
removeVariable(e) {
if (!this._map.has(e)) return;
this._nameMap.delete(this._map.get(e).name);
this._map.delete(e);
let t = this._idOrderList.indexOf(e);
t >= 0 && this._idOrderList.splice(t, 1);
}
swapVariablePosition(e, t) {
if (e >= 0 && e < this._idOrderList.length && t >= 0 && t < this._idOrderList.length) {
let o = this._idOrderList[e], i = this._idOrderList[t];
this._idOrderList[e] = i;
this._idOrderList[t] = o;
}
}
hasName(e) {
return this._nameMap.has(e);
}
changeName(e, t) {
if (this._nameMap.has(t) && this._nameMap.get(t) != e) return !1;
this._nameMap.delete(t);
this._nameMap.set(t, e);
this.getVariable(e).name = t;
return !0;
}
getDefaultNameNum() {
let e = Array.from(this._nameMap.keys());
return i.Util.getDefaultNameNum("变量", e);
}
get defaultVariableId() {
return this._idOrderList.length > 0 ? this._idOrderList[0] : -1;
}
setVariable(e, t) {
this._map.has(e) ? this._map.get(e).setValue(t) : console.warn(">>set variable value failed:variable is not exist !!!");
}
getVariable(e) {
return this._map.has(e) ? this._map.get(e) : null;
}
getVariableByName(e) {
if (!this._nameMap.has(e)) return null;
let t = this._nameMap.get(e);
return this.getVariable(t);
}
getValue(e) {
let t = this.getVariable(e);
return t ? t.getValue() : null;
}
getVariableIdList() {
return this._idOrderList;
}
getItemVariable(e) {
return this._itemVariableMap.has(e) ? this._itemVariableMap.get(e) : 0;
}
setItemVariable(e, t) {
let o = 0;
this._itemVariableMap.has(e) && (o = 0);
o = t;
this._itemVariableMap.set(e, o);
}
makeData() {
let e = {
list: []
};
this._map.forEach(t => {
e.list.push({
idStr: t.idstr,
value: t.getValue().getValue()
});
});
return e;
}
initWithData(e) {
e.list.forEach(e => {
let t = this.transIdString(e.idStr);
this._map.has(t) && this._map.get(t).setValue(e.value + "");
});
}
getValueByJulian(e) {
let t = this.transIdString(e);
return this._map.has(t) ? this._map.get(t).getValue().getValue() : 0;
}
}
o.GSVariableMng = a;
cc._RF.pop();
}, {
"../Frame/Util": "Util",
"./GSVariable": "GSVariable"
} ],
GSVariable: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "240b5R8EFdD7I9Vq4LUj00F", "GSVariable");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSVariable = void 0;
const i = e("./GameScriptValueType");
o.GSVariable = class {
setParam(e, t, o = !1) {
this.valueType = e;
this.defaultValue = t;
this._gsvalue = i.NewGSValue(e, t);
this.readonly = this._gsvalue.readonly = o;
}
getValue() {
return this._gsvalue;
}
setValue(e) {
this.readonly || this._gsvalue.setValue(e);
}
};
cc._RF.pop();
}, {
"./GameScriptValueType": "GameScriptValueType"
} ],
GainActorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "560354bGn9GWJwmgikqpgBF", "GainActorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.sprite = null;
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = t;
let o = yield s.Mng.Ins.actorMng.loadOne(e);
this.nameLabel.string = o.name;
yield s.Mng.Ins.spriteMng.setActorSprite(this.sprite, o.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainCoinPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "df240ANK71OGqq4HCG2JYh2", "GainCoinPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../BaseGainPanel/BaseGainPanel"), a = e("../../Game/OperationFlow"), s = e("../../CustomUI/CoinBar"), r = e("../../Game/Player/CoinMng"), {ccclass: l, menu: c, property: d} = cc._decorator;
let h = class extends n.default {
constructor() {
super(...arguments);
this.cnt = 0;
this.cntLabel = null;
}
onLoad() {
super.onLoad();
}
setData(e, t = "恭喜获得", o = "", i = null) {
this.cnt = e;
this.gainCallback = i;
this.titleLabel.string = t;
this.subTitleLabel.string = o;
this.cntLabel.string = e;
}
onGainBtnTap() {
let e = null;
s.default.Ins && (e = s.default.Ins.icon.node);
e ? a.OperationFlow.flyCoin({
cnt: this.cnt,
fromNode: this.node,
toNode: e,
onArrive: e => {
r.default.Ins.coinArrive(e);
}
}) : r.default.Ins.coinArrive(this.cnt);
super.onGainBtnTap();
}
};
i([ d(cc.Label) ], h.prototype, "cntLabel", void 0);
h = i([ l, c("面板/RewardPanel") ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/CoinBar": "CoinBar",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainDevicePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "de2e8eEVx1CXLqXCsW+pYbX", "GainDevicePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.sprite = null;
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = t;
let o = yield s.Mng.Ins.deviceMng.loadOne(e);
this.nameLabel.string = o.name;
yield s.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, o.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainGameGoodsPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a79fcQYe0JIo4D7yjq1Nt7c", "GainGameGoodsPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.cntLabel = null;
this.sprite = null;
}
setData(e, t, o) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = o;
this.cntLabel.string = "x" + t;
let i = yield s.Mng.Ins.propMng.loadOne(e);
this.nameLabel.string = i.name;
yield s.Mng.Ins.spriteMng.setPropSprite(this.sprite, i.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Label) ], d.prototype, "cntLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainPropPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d0ac7dvDHxHIIQWpvH20POI", "GainPropPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.sprite = null;
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = t;
let o = yield s.Mng.Ins.propMng.loadOne(e);
this.nameLabel.string = o.name;
yield s.Mng.Ins.spriteMng.setPropSprite(this.sprite, o.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainPublishTicketPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b4347qiZtlCN7GkUutxaPV6", "GainPublishTicketPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../BaseGainPanel/BaseGainPanel"), {ccclass: a, menu: s, property: r} = cc._decorator;
let l = class extends n.default {
constructor() {
super(...arguments);
this.cnt = 0;
this.cntLabel = null;
}
onLoad() {
super.onLoad();
}
setData(e, t = "恭喜获得", o = null) {
this.cnt = e;
this.gainCallback = o;
this.titleLabel.string = t;
this.cntLabel.string = e;
}
};
i([ r(cc.Label) ], l.prototype, "cntLabel", void 0);
l = i([ a, s("面板/RewardPanel") ], l);
o.default = l;
cc._RF.pop();
}, {
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainTilePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4638cTWVjZI+J8JeCfgmCkg", "GainTilePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.sprite = null;
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = t;
let o = yield s.Mng.Ins.tileMng.loadOne(e);
this.nameLabel.string = o.name;
yield s.Mng.Ins.spriteMng.setTileSprite(this.sprite, o.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GainWeaponPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5ef6As1CZB7Y0+v8wXleQ9", "GainWeaponPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Game/Player/Mng"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.id = "";
this.nameLabel = null;
this.sprite = null;
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
this.id = e;
this.gainCallback = t;
let o = yield s.Mng.Ins.weaponMng.loadOne(e);
this.nameLabel.string = o.name;
yield s.Mng.Ins.spriteMng.setWeaponSprite(this.sprite, o.textureName, 200);
});
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Game/Player/Mng": "Mng",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GameAdPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "aade9aJzq1F9JdJmMnTmdQe", "GameAdPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/AD"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Panel"), d = e("../../Frame/Top"), h = e("../../Frame/Util"), p = e("../../Game/Player/Mng"), u = e("../../Game/Player/TriggerMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends c.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.sprite = null;
this.btn = null;
this.gameData = null;
this.extra = null;
this.sourceNode = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.btn.node.on(s.default.CLICK, this.onOkBtn, this);
});
}
setData(e, t, o) {
return n(this, void 0, void 0, function*() {
this.gameData = e;
this.extra = t;
this.sourceNode = o;
t.str ? this.titleLabel.string = t.str : this.titleLabel.string = "奖励说明";
if (t.url) {
this.node.height = 650;
yield p.Mng.Ins.spriteMng.setSprite(this.sprite, t.url, 250);
} else {
this.sprite.node.active = !1;
h.Util.updateLabel(this.titleLabel);
this.node.height = this.titleLabel.node.height + 300;
}
});
}
onOkBtn() {
let e = this.extra, t = this.sourceNode;
r.AD.hasAD() ? r.AD.showVideoAd({
id: r.AdUnitId.GameAD,
succ: () => n(this, void 0, void 0, function*() {
this.closePanel();
let o = {
targetId: this.gameData.playerId,
name: e.str,
textureName: e.url,
gameId: this.gameData.id
}, i = yield l.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_AddOtherCoinByAdvert,
params: o
}, a.Game_RAddOtherCoinByAdvert);
if (i) {
r.AD.addCoinByAdvertCnt = i.addCoinByAdvertCnt;
e.onSucc && u.default.Ins.emitTrigger(e.onSucc, t);
}
}),
fail: () => {
e.onFail && u.default.Ins.emitTrigger(e.onFail, t);
}
}) : d.default.showToast("暂无广告");
}
};
i([ f(cc.Label) ], g.prototype, "titleLabel", void 0);
i([ f(cc.Sprite) ], g.prototype, "sprite", void 0);
i([ f(s.default) ], g.prototype, "btn", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/AD": "AD",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TriggerMng": "TriggerMng"
} ],
GameBagBar: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d4863QMkJNC+pg6J24+KkLd", "GameBagBar");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/GameBagMng"), p = e("../../Game/Player/Mng"), u = e("../../Game/Player/TriggerMng"), m = e("../../GameData/GameTypeDefine"), f = e("./GameScene"), {ccclass: g, property: y} = cc._decorator;
let v = class extends cc.Component {
constructor() {
super(...arguments);
this.bagBtn = null;
this.list = null;
this.menu = null;
this.useBtn = null;
this.dropBtn = null;
this.cancelBtn = null;
this.nameLabel = null;
this.introLabel = null;
this.coinLabel = null;
this.coinSprite = null;
}
onLoad() {
this.bagBtn.node.on(a.default.CLICK, this.onBagBtn, this);
this.useBtn.node.on(a.default.CLICK, this.onUseBtn, this);
this.dropBtn.node.on(a.default.CLICK, this.onDropBtn, this);
this.cancelBtn.node.on(a.default.CLICK, this.hideMenu, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
cc.game.on("refreshGameBagBar", this.refresh, this);
this.hideMenu();
}
onDestroy() {
cc.game.off("refreshGameBagBar", this.refresh, this);
}
refresh() {
let e = h.default.Ins.propList.filter(e => !h.default.Ins.isCoin(e.propConfId));
this.list.setDataArr(e);
this.coinLabel.string = "" + h.default.Ins.getCoinCnt();
}
onBagBtn() {}
onDropBtn() {
return n(this, void 0, void 0, function*() {
let e = this.list.getCurData();
if (e) {
let t = yield p.Mng.Ins.propMng.loadOne(e.propConfId), o = e.cnt, i = r.default.ins.findScene(f.default).world.hero;
h.default.Ins.sub(e.propConfId, o);
let n = d.Util.deepCopy(t.onDrop) || [];
n.push({
act: m.TriggerAct.DropProp,
extra: {
propConfId: e.propConfId,
cnt: o,
useGravity: !0
}
});
u.default.Ins.emitTrigger(n, i.node);
}
this.hideMenu();
});
}
onUseBtn() {
return n(this, void 0, void 0, function*() {
let e = this.list.getCurData();
if (e) {
let t = yield p.Mng.Ins.propMng.loadOne(e.propConfId), o = r.default.ins.findScene(f.default), i = o.world.hero, n = i.node.position;
n.y += i.node.height / 2;
if (h.default.Ins.getCnt(e.propConfId) > 0) {
t.once && h.default.Ins.sub(t.id, 1);
let e = d.Util.deepCopy(t.onUse, []);
u.default.Ins.emitTrigger(e, i.node);
o.world.playFloatLabel({
str: `Use【${t.name}】`,
pos: n,
color: c.UIColor.purple,
anim: "JumpLabel",
size: 40
});
} else {
l.default.showToast("Running out of props");
o.world.playFloatLabel({
str: "Running out of props",
pos: n,
color: c.UIColor.purple,
anim: "FlashLabel",
size: 40
});
}
}
this.hideMenu();
});
}
onClickItem(e, t) {
return n(this, void 0, void 0, function*() {
let o = this.list.getExtraData(e);
if (o && o.item) {
let e = d.Util.convertPosition(o.item, this.node);
this.menu.x = e.x;
this.menu.active = !0;
this.cancelBtn.node.active = !0;
let i = yield p.Mng.Ins.propMng.loadOne(t.propConfId);
this.nameLabel.string = i.name;
this.introLabel.string = i.intro;
}
});
}
show() {
this.node.active = !0;
}
hide() {
this.node.active = !1;
}
hideMenu() {
this.menu.active = !1;
this.cancelBtn.node.active = !1;
}
};
i([ y(a.default) ], v.prototype, "bagBtn", void 0);
i([ y(s.default) ], v.prototype, "list", void 0);
i([ y(cc.Node) ], v.prototype, "menu", void 0);
i([ y(a.default) ], v.prototype, "useBtn", void 0);
i([ y(a.default) ], v.prototype, "dropBtn", void 0);
i([ y(a.default) ], v.prototype, "cancelBtn", void 0);
i([ y(cc.Label) ], v.prototype, "nameLabel", void 0);
i([ y(cc.Label) ], v.prototype, "introLabel", void 0);
i([ y(cc.Label) ], v.prototype, "coinLabel", void 0);
i([ y(cc.Sprite) ], v.prototype, "coinSprite", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./GameScene": "GameScene"
} ],
GameBagItemCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d8ed7MyNLZPurEBpdjV0Qaj", "GameBagItemCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.cntLabel = null;
this.sprite = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.cntLabel.string = "" + e.cnt;
let t = yield s.Mng.Ins.propMng.loadOne(e.propConfId);
s.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, this.node.width);
});
}
};
i([ l(cc.Label) ], c.prototype, "cntLabel", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
GameBagMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "05501kUzpxJ9ZSlBXV61AWp", "GameBagMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.BagSaveData = void 0;
const i = e("../../Frame/Util"), n = e("./../../GameScript/index");
o.BagSaveData = class {
constructor() {
this.propList = [];
}
};
class a {
constructor() {
this.bagSize = 36;
this.cellSize = 99;
this.propList = [];
this.coinPropId = "1";
}
add(e, t) {
let o = this.cellSize;
e == this.coinPropId && (o = 99999999);
for (let i = 0; i < this.propList.length && !(t <= 0); i++) {
let n = this.propList[i];
if (n.propConfId == e) {
let e = o - n.cnt, i = Math.min(e, t);
if (i > 0) {
t -= i;
n.cnt += i;
}
}
}
for (;t > 0 && this.propList.length < this.bagSize; ) {
let i = Math.min(o, t);
t -= i;
this.propList.push({
cnt: i,
propConfId: e
});
}
n.GSVariableMng.instance.setItemVariable(e, this.getCnt(e));
cc.game.emit("refreshGameBagBar");
return t;
}
sub(e, t) {
for (let o = this.propList.length - 1; o >= 0; o--) {
let i = this.propList[o];
if (t > 0 && i.propConfId == e) {
let e = Math.min(i.cnt, t);
if (e > 0) {
i.cnt -= e;
t -= e;
i.cnt <= 0 && this.propList.splice(o, 1);
}
}
}
n.GSVariableMng.instance.setItemVariable(e, this.getCnt(e));
cc.game.emit("refreshGameBagBar");
return t;
}
getCnt(e) {
let t = 0;
for (let o = 0; o < this.propList.length; o++) {
let i = this.propList[o];
i.propConfId == e && (t += i.cnt);
}
return t;
}
clear() {
this.propList = [];
n.GSVariableMng.instance.clearItem();
cc.game.emit("refreshGameBagBar");
}
getCoinCnt() {
return this.getCnt(this.coinPropId) || 0;
}
gainCoin(e) {
this.add(this.coinPropId, e);
}
costCoin(e) {
this.sub(this.coinPropId, e);
}
addCoin(e) {
this.add(this.coinPropId, e);
}
isCoin(e) {
return this.coinPropId == e;
}
makeData() {
return {
bagSize: this.bagSize,
cellSize: this.cellSize,
propList: i.Util.deepCopy(this.propList)
};
}
initWithData(e) {
this.bagSize = e.bagSize;
this.cellSize = e.cellSize;
this.propList = e.propList || [];
for (let e = 0; e < this.propList.length; e++) {
let t = this.propList[e];
n.GSVariableMng.instance.setItemVariable(t.propConfId, this.getCnt(t.propConfId));
}
cc.game.emit("refreshGameBagBar");
}
}
o.default = a;
a.Ins = new a();
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"./../../GameScript/index": "index"
} ],
GameBannerComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "708c6oOk+hDpbcvbr+Rs8O9", "GameBannerComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/ScrollList"), a = e("../../../CustomUI/ToggleGroup"), s = e("../../../Frame/Util"), r = e("./GameBanner"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.toggleGroup = null;
this.scrollList = null;
}
onLoad() {
this.toggleGroup.node.on(a.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd10, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd10, this);
this.node.on(n.default.SET_DATA, this.setData, this);
this.schedule(this.shift, 5, cc.macro.REPEAT_FOREVER);
}
shift() {
let e = this.scrollList.curSelectIdx;
e = (e + 1) % this.scrollList.getDataArr().length;
this.toggleGroup.selectIdx(e);
}
setData(e) {
this.setDataArr(e.games);
}
setDataArr(e) {
s.Util.makeBro(this.toggleGroup.node.children[0], e.length);
this.scrollList.setDataArr(e);
this.toggleGroup.selectIdx(s.Util.randomIdx(e.length));
}
onToggleChange(e) {
this.scrollList.centerToIdx(e, .3);
this.scrollList.selectByIdx(e);
}
onTouchEnd10(e) {
let t = e.target, o = t.convertToWorldSpaceAR(e.getStartLocation()), i = t.convertToWorldSpaceAR(e.getLocation()).sub(o), n = this.scrollList.curSelectIdx;
if (i.x > 50 && n > 0) this.toggleGroup.selectIdx(n - 1); else if (i.x < -50 && n < this.scrollList.getDataArr().length - 1) this.toggleGroup.selectIdx(n + 1); else {
this.onToggleChange(n);
if (i.magSqr() < 10) {
let e = this.scrollList.getExtraData(n);
if (e && e.item) {
let t = e.item.getComponent(r.default);
t && t.onClick();
}
}
}
}
};
i([ c(a.default) ], d.prototype, "toggleGroup", void 0);
i([ c(n.default) ], d.prototype, "scrollList", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/Util": "Util",
"./GameBanner": "GameBanner"
} ],
GameBanner: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7664bOnpmZNL5hqVgOduW/8", "GameBanner");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/SceneManager"), r = e("../../../Game/Player/GameIconMng"), l = e("../../../Game/Player/RcmdMng"), c = e("../../../TGA"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.sprite = null;
this.data = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
l.default.Ins.gameShow(e.id, "banner");
this.nameLabel.string = e.name;
yield r.GameIconMng.Ins.setSprite(this.sprite, e.iconTextureName, 680);
});
}
onClick() {
return n(this, void 0, void 0, function*() {
s.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id);
});
c.TGA.track("clickGameCell", {
gameId: this.data.id,
from: "Banner"
});
});
}
};
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/GameIconMng": "GameIconMng",
"../../../Game/Player/RcmdMng": "RcmdMng",
"../../../TGA": "TGA"
} ],
GameBoard: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f4cc8e7GyNOoLwL6MnBoPBe", "GameBoard");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameBoard = void 0;
class i {}
o.GameBoard = i;
i.IS_EDITOR_MODE = !1;
cc._RF.pop();
}, {} ],
GameCellDataMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb0a4R6MRJPuLijUu1MEvQD", "GameCellDataMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./DynamicMng");
class r {
constructor() {
this.cache = new Map();
}
loadGames(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
this.cache.has(i) || t.push(i);
}
if (t.length > 0) {
let e = {
ids: t
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetHomepageGameData,
params: e
}, n.Game_RGetHomepageGameData);
if (o) for (let e = 0; e < o.gameDatas.length; e++) {
let t = o.gameDatas[e];
this.cache.set(t.id, t);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = this.cache.get(e[t]);
if (i && !s.DynamicMng.Ins.isViolationsName(i.name)) {
i.rank = t + 1;
o.push(i);
}
}
return o;
});
}
deleteCache(e) {
this.cache.delete(e);
}
deleteAllCache() {
this.cache.clear();
}
}
o.default = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"./DynamicMng": "DynamicMng"
} ],
GameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "75ce0UoL7JKeqAbgeZqKet+", "GameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/GameIcon"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Util"), h = e("../../Game/Player/RcmdMng"), p = e("../../TGA"), u = e("../GameCoverScene/GameCoverScene"), {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.rankLabel = null;
this.gameIcon = null;
this.nameLabel = null;
this.adLabel = null;
this.playCntLabel = null;
this.timeLabel = null;
this.playBtn = null;
this.from = "";
this.nameLen = 6;
this.advertLen = 12;
this.clickCall = null;
this.data = null;
this.bk = "";
this.st = "";
this.spriteSize = 120;
}
onLoad() {
this.playBtn && this.playBtn.node.on(s.default.CLICK, this.onClick, this);
this.node.on(l.default.SET_DATA, this.setData, this);
}
setData(e, t, o = "", i = "") {
this.bk = o;
this.st = i;
this.node.active = !0;
if (e) {
h.default.Ins.gameShow(e.id, this.from, t, o, i);
this.data = e;
this.nameLabel && (this.nameLabel.string = d.Util.clampStr(e.name, this.nameLen, ".."));
this.adLabel && (this.adLabel.string = d.Util.clampStr(e.advert, this.advertLen, ".."));
this.rankLabel && (this.rankLabel.string = "" + e.rank);
this.playCntLabel && (this.playCntLabel.string = d.Util.bigNumStr(e.playCnt) + a.I18nMgr.getI18nStringByZh("人玩过"));
this.timeLabel && (this.timeLabel.string = d.Util.parseDataString(e.lastPublishTime));
this.gameIcon.loadUrl(e.iconTextureName);
this.gameIcon.showSubIcon(e.openCreativeGame);
} else this.node.active = !1;
}
onClick() {
return n(this, void 0, void 0, function*() {
if (!this.data) return;
h.default.Ins.gameClick(this.data.id, this.from, this.bk, this.st);
let e = c.default.ins.findScene(u.default);
e && e.node.active ? e.setData(this.data.id) : c.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id);
});
p.TGA.track("clickGameCell", {
gameId: this.data.id,
from: this.from
});
this.clickCall && this.clickCall();
});
}
};
i([ f(cc.Label) ], g.prototype, "rankLabel", void 0);
i([ f(r.default) ], g.prototype, "gameIcon", void 0);
i([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
i([ f(cc.Label) ], g.prototype, "adLabel", void 0);
i([ f(cc.Label) ], g.prototype, "playCntLabel", void 0);
i([ f(cc.Label) ], g.prototype, "timeLabel", void 0);
i([ f(s.default) ], g.prototype, "playBtn", void 0);
i([ f ], g.prototype, "from", void 0);
i([ f ], g.prototype, "nameLen", void 0);
i([ f ], g.prototype, "advertLen", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/RcmdMng": "RcmdMng",
"../../TGA": "TGA",
"../GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
GameCoverInfoCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "14f88Vt6Y1BSpkVEr3cG8H5", "GameCoverInfoCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/GameIcon"), c = e("../../CustomUI/HeadIcon"), d = e("../../CustomUI/ProgressBar"), h = e("../../CustomUI/ScrollList"), p = e("../../Frame/NetworkMgr"), u = e("../../Frame/SceneManager"), m = e("../../Frame/Share"), f = e("../../Frame/Top"), g = e("../../Frame/UIColor"), y = e("../../Frame/Util"), v = e("../../Game/GameEnv"), C = e("../../Game/Hortor"), _ = e("../../Game/OperationFlow"), S = e("../../Game/Player/CollectionMng"), I = e("../../Game/Player/CreditMng"), G = e("../../Game/Player/DynamicMng"), T = e("../../Game/Player/FollowMng"), b = e("../../Game/Player/GameCellDataMng"), M = e("../../Game/Player/GamePackageMng"), P = e("../../Game/Player/HurryMng"), D = e("../../Game/Player/Mng"), w = e("../../Game/Player/TalkMng"), B = e("../../Game/Player/ThumbMng"), R = e("../../Role"), x = e("../../TGA"), L = e("./GameCoverScene"), {ccclass: k, property: F} = cc._decorator;
let N = class extends cc.Component {
constructor() {
super(...arguments);
this.hurryBtn = null;
this.thumbBtn = null;
this.collectionBtn = null;
this.authorLabel = null;
this.advertLabel = null;
this.timeLabel = null;
this.followHeBtn = null;
this.headIcon = null;
this.followBtn = null;
this.fansBtn = null;
this.gameIcon = null;
this.gameNameLabel = null;
this.versionLabel = null;
this.progressBar = null;
this.progressLabel = null;
this.shareBtn = null;
this.playBtn = null;
this.playTimesLabel = null;
this.menuBtn = null;
this.creativeBtn = null;
this.detail = null;
this.gamePackage = null;
this.played = !1;
}
onLoad() {
this.node.on(h.default.SET_DATA, this.setData, this);
this.hurryBtn.node.on(r.default.CLICK, this.onHurryBtn, this);
this.thumbBtn.node.on(r.default.CLICK, this.onThumbBtn, this);
this.collectionBtn.node.on(r.default.CLICK, this.onCollectionBtn, this);
this.followHeBtn.node.on(r.default.CLICK, this.onFollowHeBtn, this);
this.headIcon.node.on(r.default.CLICK, this.onHeadIconBtn, this);
this.authorLabel.node.on(r.default.CLICK, this.onHeadIconBtn, this);
this.shareBtn.node.on(r.default.CLICK, this.onShareBtn, this);
this.playBtn.node.on(r.default.CLICK, this.onPlayBtn, this);
this.menuBtn.node.on(r.default.CLICK, this.onMenuBtn, this);
this.creativeBtn.node.on(r.default.CLICK, this.onCreativeBtn, this);
this.fansBtn.node.on(r.default.CLICK, this.onShowFansBtn, this);
this.followBtn.node.on(r.default.CLICK, this.onShowFollowsBtn, this);
this.gameIcon.node.on(r.default.CLICK, this.onGameIcon, this);
this.progressBar.setRange(0, 100);
this.progressBar.setValue(0);
this.progressBar.onProgressChange = (e, t, o) => {
this.progressLabel.string = Math.floor(o) + "%";
};
this.shareBtn.node.active = !1;
this.playBtn.node.active = !1;
this.creativeBtn.node.active = !1;
this.menuBtn.node.active = !1;
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.detail = e;
this.progressBar.setValue(0);
if (!e) {
this.progressBar.stopAnim();
this.progressLabel.string = a.I18nMgr.getI18nStringByZh("加载出错");
f.default.showToast("游戏已被删除");
}
this.headIcon.loadUrl(e.authorMsg.userImg);
this.headIcon.setLevel(e.authorMsg.level);
_.OperationFlow.setNameLabel(this.authorLabel, e.authorMsg.userName, e.authorMsg.id, 10);
this.fansBtn.label.string = e.authorMsg.fansCount + "";
this.followBtn.label.string = e.authorMsg.followsCount + "";
if (e.authorMsg.id == R.default.Ins.role.id) this.followHeBtn.node.active = !1; else {
this.followHeBtn.node.active = !0;
this.followHeBtn.label.string = a.I18nMgr.getI18nStringByZh(e.authorMsg.isFollow ? "已关注" : "关注");
}
this.advertLabel.string = e.releaseGameData.advert;
this.thumbBtn.label.string = e.releaseGameData.thumbCnt + a.I18nMgr.getI18nStringByZh("点赞");
this.collectionBtn.label.string = e.releaseGameData.collectionCnt + " " + a.I18nMgr.getI18nStringByZh("收藏");
this.hurryBtn.label.string = e.releaseGameData.hurryCnt + a.I18nMgr.getI18nStringByZh("催更");
this.thumbBtn.icon.node.color = e.releaseGameData.isThumb ? g.UIColor.blue : g.UIColor.gray;
this.collectionBtn.icon.node.color = e.releaseGameData.isCollection ? g.UIColor.yellow : g.UIColor.gray;
let t = e.releaseGameData.lastPublishTime || 0;
if (t) {
this.timeLabel.node.active = !0;
this.timeLabel.string = a.I18nMgr.getI18nStringByZh("发布于：") + y.Util.parseDataString(t);
} else this.timeLabel.node.active = !1;
this.gameNameLabel.overflow = cc.Label.Overflow.NONE;
this.gameNameLabel.string = e.releaseGameData.name;
y.Util.updateLabel(this.gameNameLabel);
if (this.gameNameLabel.node.width > 500) {
this.gameNameLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
this.gameNameLabel.node.width = 500;
this.gameNameLabel.node.scale = .7;
} else {
this.gameNameLabel.overflow = cc.Label.Overflow.NONE;
this.gameNameLabel.node.scale = 1;
}
this.versionLabel.string = e.releaseGameData.dataVersion;
this.playTimesLabel.string = e.releaseGameData.playCnt + a.I18nMgr.getI18nStringByZh("人玩过");
let o = this.detail.releaseGameData.openCreativeGame && e.creativeGameData.id, i = this.creativeBtn.getComponentInChildren(l.default);
i.node.active = !1;
if (o) if (e.releaseGameData.id == e.creativeGameData.id) {
this.creativeBtn.icon.node.active = !1;
e.creativeGameData.secondaryCnt > 0 ? this.creativeBtn.label.string = `${e.creativeGameData.secondaryCnt}${a.I18nMgr.getI18nStringByZh("次二创")}` : this.creativeBtn.label.string = a.I18nMgr.getI18nStringByZh("创意工坊");
} else {
i.node.active = !0;
i.loadUrl(e.creativeGameData.iconTextureName);
this.creativeBtn.label.string = a.I18nMgr.getI18nStringByZh("查看原创");
} else if ("" == e.creativeGameData.id) {
this.creativeBtn.icon.node.active = !0;
this.creativeBtn.label.string = "创意工坊";
} else {
this.creativeBtn.icon.node.active = !1;
i.node.active = !0;
i.loadUrl(e.creativeGameData.iconTextureName);
this.creativeBtn.label.string = "查看原创";
}
this.gameIcon.loadUrl(e.releaseGameData.iconTextureName);
this.progressBar.animaTo(60, 1);
let s = yield M.default.Ins.load(e.releaseGameData.gameDataCdnUrl);
if (s) {
this.gamePackage = s;
cc.game.emit(L.default.GameCoverScene_GamePackLoaded, s);
this.progressBar.animaTo(100, 1, () => n(this, void 0, void 0, function*() {
this.shareBtn.node.active = !0;
this.playBtn.node.active = !0;
this.menuBtn.node.active = !0;
this.creativeBtn.node.active = !0;
this.progressBar.node.active = !1;
}));
} else {
this.progressBar.stopAnim();
this.progressLabel.string = "加载出错";
}
});
}
calcuHeight(e) {
let t = -this.timeLabel.node.y;
e.releaseGameData.lastPublishTime && (t += 40);
if (e.releaseGameData.advert) {
this.advertLabel.string = e.releaseGameData.advert;
y.Util.updateLabel(this.advertLabel);
t += this.advertLabel.node.height;
}
t += 10;
this.node.height = t;
return t;
}
onThumbBtn() {
return n(this, void 0, void 0, function*() {
if (I.CreditMng.Ins.credit <= 1) f.default.showToast("近期违规，不可点赞"); else if (this.detail) {
if (this.detail.releaseGameData.isThumb) {
yield B.ThumbMng.Ins.unThumbGame(this.detail.releaseGameData.id);
this.detail.releaseGameData.thumbCnt = Math.max(0, this.detail.releaseGameData.thumbCnt - 1);
this.detail.releaseGameData.isThumb = !1;
this.thumbBtn.icon.node.color = g.UIColor.gray;
} else {
yield B.ThumbMng.Ins.thumbGame(this.detail.releaseGameData.id);
this.detail.releaseGameData.thumbCnt = Math.max(0, this.detail.releaseGameData.thumbCnt);
this.detail.releaseGameData.thumbCnt++;
this.detail.releaseGameData.isThumb = !0;
this.thumbBtn.icon.node.color = g.UIColor.blue;
x.TGA.track("thumb", {
gameId: this.detail.releaseGameData.id,
name: this.detail.releaseGameData.name
});
}
this.thumbBtn.label.string = this.detail.releaseGameData.thumbCnt + a.I18nMgr.getI18nStringByZh("点赞");
}
});
}
onCollectionBtn() {
return n(this, void 0, void 0, function*() {
if (I.CreditMng.Ins.credit <= 2) f.default.showToast("近期违规，不可收藏"); else if (this.detail) {
if (this.detail.releaseGameData.isCollection) {
yield S.CollectionMng.Ins.unCollectGame(this.detail.releaseGameData.id);
this.detail.releaseGameData.collectionCnt = Math.max(0, this.detail.releaseGameData.collectionCnt - 1);
this.detail.releaseGameData.isCollection = !1;
this.collectionBtn.icon.node.color = g.UIColor.gray;
} else {
yield S.CollectionMng.Ins.collectGame(this.detail.releaseGameData.id);
this.detail.releaseGameData.collectionCnt = Math.max(0, this.detail.releaseGameData.collectionCnt);
this.detail.releaseGameData.collectionCnt++;
this.detail.releaseGameData.isCollection = !0;
this.collectionBtn.icon.node.color = g.UIColor.yellow;
x.TGA.track("collection", {
gameId: this.detail.releaseGameData.id,
name: this.detail.releaseGameData.name
});
}
this.collectionBtn.label.string = this.detail.releaseGameData.collectionCnt + " " + a.I18nMgr.getI18nStringByZh("收藏");
}
});
}
onHurryBtn() {
return n(this, void 0, void 0, function*() {
if (I.CreditMng.Ins.credit <= 1) f.default.showToast("近期违规，不可催更"); else {
f.default.showToast("快更新！");
if (this.detail && !this.detail.releaseGameData.isHurry) {
yield P.HurryMng.Ins.hurryGame(this.detail.releaseGameData.id);
this.detail.releaseGameData.hurryCnt = Math.max(0, this.detail.releaseGameData.hurryCnt);
this.detail.releaseGameData.hurryCnt++;
this.detail.releaseGameData.isHurry = !0;
this.hurryBtn.label.string = this.detail.releaseGameData.hurryCnt + a.I18nMgr.getI18nStringByZh("催更");
x.TGA.track("hurry", {
gameId: this.detail.releaseGameData.id,
name: this.detail.releaseGameData.name
});
}
}
});
}
onFollowHeBtn() {
return n(this, void 0, void 0, function*() {
if (this.detail.authorMsg.isFollow) {
if (1 == (yield T.FollowMng.Ins.unFollow(this.detail.authorMsg.id))) {
this.detail.authorMsg.isFollow = !1;
this.followHeBtn.label.string = "关注";
this.fansBtn.label.string = this.detail.authorMsg.fansCount.toString();
}
} else if (1 == (yield T.FollowMng.Ins.follow(this.detail.authorMsg.id))) {
this.detail.authorMsg.isFollow = !0;
this.followHeBtn.label.string = "已关注";
this.fansBtn.label.string = this.detail.authorMsg.fansCount.toString();
x.TGA.track("follow", {
target: this.detail.authorMsg.id
});
}
});
}
onHeadIconBtn() {
this.detail && u.default.ins.Enter("FriendScene", e => {
e.setData(this.detail.authorMsg.id);
e.followChangeCall = () => {
this.followHeBtn.label.string = this.detail.authorMsg.isFollow ? "已关注" : "关注";
this.fansBtn.label.string = this.detail.authorMsg.fansCount.toString();
};
}, u.ShiftAnima.moveLeftShift);
}
onShareBtn() {
let e = {
type: "game",
isMine: this.detail.authorMsg.id == R.default.Ins.role.id,
cyGameId: this.detail.releaseGameData.id
}, t = {
shareType: "shareGame",
title: C.Hortor.isApp() ? `《${this.detail.releaseGameData.name}》` : `《${this.detail.releaseGameData.name}》${this.detail.releaseGameData.advert}`,
desc: this.detail.releaseGameData.advert,
imageUrl: "",
query: y.Util.toQueryStr(e),
imageName: this.detail.releaseGameData.iconTextureName,
talk: {
title: "",
sections: [ {
type: w.TalkSectionType.Game,
gameId: this.detail.releaseGameData.id
} ]
},
success: () => {
f.default.showToast("分享成功");
x.TGA.track("share", e);
},
fail: () => {
f.default.showToast("分享失败");
}
}, o = this.detail.releaseGameData.iconTextureName;
o && "icon1" !== o ? t.imageUrl = v.gameEnv.fileCDN + o : delete t.imageUrl;
m.Share.share(t);
}
onReportBtn() {
if (I.CreditMng.Ins.credit <= 2) f.default.showToast("近期违规，不可举报"); else if (this.detail) {
u.default.ins.Enter("ReportScene", e => {
e.initReportGame(this.detail.releaseGameData.id);
}, u.ShiftAnima.moveLeftShift);
x.TGA.track("reportGame", {
gameId: this.detail.releaseGameData.id,
name: this.detail.releaseGameData.name,
step: "clickBtn"
});
}
}
onPlayBtn() {
return n(this, void 0, void 0, function*() {
if (!this.gamePackage) return;
D.Mng.switchGamePackage(this.gamePackage);
let e = this.detail.releaseGameData.id, t = yield D.Mng.Ins.gameMng.loadOne(e);
yield D.Mng.Ins.variableMng.switchGame(t);
u.default.ins.Enter("GameScene", o => {
o.mode = "Prod";
o.play(t);
let i = orange.TimeUtil.serverTime;
o.backCall = () => n(this, void 0, void 0, function*() {
let n = orange.TimeUtil.serverTime, a = {
id: e,
playTime: (n - i) / 1e3
};
yield p.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_PlayGameStatistics,
params: a
}, s.Game_RPlayGameStatistics);
o.backCall = null;
D.Mng.switchMine();
cc.game.emit(L.default.PLAY_END, {
gameData: t,
userName: this.detail.authorMsg.userName
});
});
});
if (!this.detail.releaseGameData.isPlay && !this.played) {
let t = {
ids: [ e ]
}, o = yield p.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_PlayGames,
params: t
}, s.Game_RPlayGames);
if (o) {
this.detail.releaseGameData.playCnt = o.playCntList[0] || 0;
this.detail.releaseGameData.isPlay = !0;
this.played = !0;
this.playTimesLabel.string = this.detail.releaseGameData.playCnt + a.I18nMgr.getI18nStringByZh("人玩过");
}
}
});
}
onGameIcon() {
u.default.ins.OpenPanelByName("ImagePreviewPanel", e => {
e.setData("", this.detail.releaseGameData.iconTextureName);
});
}
onMenuBtn() {
return n(this, void 0, void 0, function*() {
let e = this.detail.releaseGameData.id, t = [ {
str: "举报",
icon: {
url: "Atlas/UI/reportBtn",
color: g.UIColor.white,
w: 50,
h: 40
},
call: () => {
this.onReportBtn();
}
}, {
str: "分享",
icon: {
url: "Atlas/UI/ttShare",
color: g.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onShareBtn();
}
} ];
if (G.DynamicMng.Ins.isGmPlayer() || C.Hortor.platformSysBigType == C.PlatformSysBigType.H5) {
let o = (yield G.DynamicMng.Ins.loadOne("GameChosenIds")) || [], i = (yield G.DynamicMng.Ins.loadOne("IpGameIds")) || [];
t.push({
str: o.includes(e) ? "移除精选" : "加入精选",
icon: {
url: "Atlas/UI/ttShare",
color: g.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onAddChosenBtn();
}
});
t.push({
str: i.includes(e) ? "取消Ip" : "标记IP",
icon: {
url: "Atlas/UI/ttShare",
color: g.UIColor.green,
w: 50,
h: 40
},
call: () => {
if (i.includes(e)) {
let t = i.indexOf(e);
i.splice(t, 1);
} else i.unshift(e);
cc.game.emit("refreshChosenSubPage");
}
});
t.push({
str: "下架",
icon: {
url: "Atlas/UI/ttShare",
color: g.UIColor.green,
w: 50,
h: 40
},
call: () => {
this.onBanBtn();
}
});
t.push({
str: "游戏信息",
icon: {
url: "Atlas/UI/reportBtn",
color: g.UIColor.white,
w: 50,
h: 40
},
call: () => {
u.default.ins.OpenPanelByName("AboutPanel", e => {
let t = a.I18nMgr.exceI18nStringByZh("游戏ID：${this.detail.releaseGameData.id}\n游戏包CND地址：${this.detail.releaseGameData.gameDataCdnUrl}", [ {
paramName: "this.detail.releaseGameData.id",
param: this.detail.releaseGameData.id
}, {
paramName: "this.detail.releaseGameData.gameDataCdnUrl",
param: this.detail.releaseGameData.gameDataCdnUrl
} ]);
e.setData("游戏信息", t);
console.log(t);
});
}
});
}
f.default.showMenu(this.menuBtn.node, t);
});
}
onAddChosenBtn() {
return n(this, void 0, void 0, function*() {
let e = this.detail.releaseGameData.id, t = (yield G.DynamicMng.Ins.loadOne("GameChosenIds")) || [];
if (t) {
if (t.includes(e)) {
let o = t.indexOf(e);
t.splice(o, 1);
} else t.unshift(e);
cc.game.emit("refreshChosenSubPage");
}
});
}
onBanBtn() {
return n(this, void 0, void 0, function*() {
let e = this.detail.releaseGameData.id, t = yield b.default.Ins.loadGames([ e ]);
t[0] && u.default.ins.OpenPanelByName("BanGamePanel", e => {
e.setData(t[0]);
});
});
}
onCreativeBtn() {
return n(this, void 0, void 0, function*() {
G.DynamicMng.Ins.isDisable(G.FunctionEnum.CreativeGame, !0) || (this.detail.creativeGameData.id ? u.default.ins.Enter("CreativeSpaceScene", e => {
e.setData(this.detail);
}, u.ShiftAnima.moveLeftShift) : f.default.showToast("作者未开启创意工坊"));
});
}
onShowFansBtn() {
G.DynamicMng.Ins.isDisable(G.FunctionEnum.FriendScene, !1) || u.default.ins.Enter("FollowScene", e => n(this, void 0, void 0, function*() {
e.init("fans", this.detail.authorMsg.id);
}), u.ShiftAnima.moveLeftShift);
}
onShowFollowsBtn() {
G.DynamicMng.Ins.isDisable(G.FunctionEnum.FriendScene, !1) || u.default.ins.Enter("FollowScene", e => n(this, void 0, void 0, function*() {
e.init("follow", this.detail.authorMsg.id);
}), u.ShiftAnima.moveLeftShift);
}
};
i([ F(r.default) ], N.prototype, "hurryBtn", void 0);
i([ F(r.default) ], N.prototype, "thumbBtn", void 0);
i([ F(r.default) ], N.prototype, "collectionBtn", void 0);
i([ F(cc.Label) ], N.prototype, "authorLabel", void 0);
i([ F(cc.Label) ], N.prototype, "advertLabel", void 0);
i([ F(cc.Label) ], N.prototype, "timeLabel", void 0);
i([ F(r.default) ], N.prototype, "followHeBtn", void 0);
i([ F(c.default) ], N.prototype, "headIcon", void 0);
i([ F(r.default) ], N.prototype, "followBtn", void 0);
i([ F(r.default) ], N.prototype, "fansBtn", void 0);
i([ F(l.default) ], N.prototype, "gameIcon", void 0);
i([ F(cc.Label) ], N.prototype, "gameNameLabel", void 0);
i([ F(cc.Label) ], N.prototype, "versionLabel", void 0);
i([ F(d.default) ], N.prototype, "progressBar", void 0);
i([ F(cc.Label) ], N.prototype, "progressLabel", void 0);
i([ F(r.default) ], N.prototype, "shareBtn", void 0);
i([ F(r.default) ], N.prototype, "playBtn", void 0);
i([ F(cc.Label) ], N.prototype, "playTimesLabel", void 0);
i([ F(r.default) ], N.prototype, "menuBtn", void 0);
i([ F(r.default) ], N.prototype, "creativeBtn", void 0);
N = i([ k ], N);
o.default = N;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ProgressBar": "ProgressBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Share": "Share",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/FollowMng": "FollowMng",
"../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../Game/Player/GamePackageMng": "GamePackageMng",
"../../Game/Player/HurryMng": "HurryMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TalkMng": "TalkMng",
"../../Game/Player/ThumbMng": "ThumbMng",
"../../Role": "Role",
"../../TGA": "TGA",
"./GameCoverScene": "GameCoverScene"
} ],
GameCoverMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7c27fdeq3VGNaTubZVygYc8", "GameCoverMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr");
class s {
constructor() {
this.cache = new Map();
this.game_request = new Set();
}
load(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
let o = {
id: e
};
(t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGameDetail,
params: o
}, n.Game_RGetGameDetail)) && this.cache.set(e, t);
}
return t;
});
}
deleteCache(e) {
this.cache.delete(e);
}
isAlreadyLoadThisGame(e) {
if (this.game_request.has(e)) return !0;
this.game_request.add(e);
return !1;
}
}
o.default = s;
s.Ins = new s();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
GameCoverScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e8f1ajSNbdAAY8k9Cj6/7Jo", "GameCoverScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../../scripts/_autogen/data/data"), l = e("../../CustomUI/Button"), c = e("../../CustomUI/ScrollList"), d = e("../../Frame/Scene"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Frame/Util"), m = e("../../Game/OperationFlow"), f = e("../../Game/Player/CommentMng"), g = e("../../Game/Player/DynamicMng"), y = e("../../Game/Player/GameCoverMng"), v = e("../../Game/Player/Mng"), C = e("./CommentCell"), _ = e("./CommentMoreCell"), S = e("./GameCoverInfoCell"), I = e("./CommentHeadCell"), G = e("./GameTagFlow"), T = e("./GiftInfoCell"), b = e("../../Game/Player/GiftRankMng"), M = e("../../Game/PhyObj"), {ccclass: P, property: D} = cc._decorator;
let w = i = class extends d.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.scrollList = null;
this.commmetBox = null;
this.commentBtn = null;
this.topBtn = null;
this.blockInputBtn = null;
this.gameId = "";
this.detail = null;
this.topCommentId = "";
this.gameInfoData = null;
this.aniTarget = null;
this.backAnima = h.ShiftAnima.simpleShift;
}
reLoad() {
y.default.Ins.deleteCache(this.gameId);
this.setData(this.gameId);
}
onLoad() {
super.onLoad();
cc.game.on(i.GameCoverScene_ReLoad, this.reLoad, this);
cc.game.on(i.GameCoverScene_Refresh, this.refreshList, this);
this.node.on("showKeyBoard", () => {
this.blockInputBtn.node.active = !0;
}, this);
this.node.on("showKeyBoardEnd", () => {
this.blockInputBtn.node.active = !1;
}, this);
this.backBtn.node.on(l.default.CLICK, this.onBackBtn, this);
this.blockInputBtn.node.on(l.default.CLICK, this.onBlockInputBtn, this);
this.commentBtn.node.on(l.default.CLICK, this.onCommentBtn, this);
this.topBtn.node.on(l.default.CLICK, this.onTopBtn, this);
let e = u.Util.searchChild(this.scrollList.node, "GameCoverInfoCell").getComponent(S.default), t = u.Util.searchChild(this.scrollList.node, "CommentHeadCell").getComponent(I.default), o = u.Util.searchChild(this.scrollList.node, "CommentCell").getComponent(C.default), n = u.Util.searchChild(this.scrollList.node, "SubCommentCell").getComponent(C.default), a = u.Util.searchChild(this.scrollList.node, "CommentMoreCell").getComponent(_.default), c = u.Util.searchChild(this.scrollList.node, "GameTagFlow").getComponent(G.default), d = u.Util.searchChild(this.scrollList.node, "GiftInfoCell").getComponent(T.default);
this.scrollList.getPrefabName = e => e instanceof s.Game_RGetGameDetail ? "GameCoverInfoCell" : e instanceof r.GameComment ? e.isSub ? "SubCommentCell" : "CommentCell" : e instanceof _.CommentMoreCellData ? "CommentMoreCell" : e instanceof I.CommentHeadCellData ? "CommentHeadCell" : e instanceof G.GameTagFlowData ? "GameTagFlow" : e instanceof T.GiftInfoData ? "GiftInfoCell" : void 0;
this.scrollList.calculateSizeFunc = i => i instanceof s.Game_RGetGameDetail ? {
w: 710,
h: e.calcuHeight(i)
} : i instanceof r.GameComment ? i.isSub ? {
w: 710,
h: n.calcuHeight(i)
} : {
w: 710,
h: o.calcuHeight(i)
} : i instanceof _.CommentMoreCellData ? {
w: 710,
h: a.node.height
} : i instanceof I.CommentHeadCellData ? {
w: 710,
h: t.node.height
} : i instanceof G.GameTagFlowData ? {
w: 710,
h: c.calcuHeight(i)
} : i instanceof T.GiftInfoData ? {
w: 710,
h: d.node.height
} : void 0;
u.Util.updateAllWidget(this.node);
this.updateCommentUI();
this.blockInputBtn.node.active = !1;
this.topBtn.node.active = !1;
}
onShow(e) {
m.OperationFlow.deelOnShow(e);
this.blockInputBtn.node.active = !1;
}
onDestroy() {
cc.game.off(i.GameCoverScene_Refresh, this.refreshList, this);
}
onCommentBtn() {
return a(this, void 0, void 0, function*() {
let e = this.commmetBox.textLabel.string;
"" != e ? yield this.sendComment(e) : p.default.showToast("不能发送空消息");
});
}
onTopBtn() {
this.scrollList.scrollToTop(.5);
}
onCommentEditBoxBegin() {
return a(this, void 0, void 0, function*() {
this.node.emit("showKeyBoard");
});
}
onCommentEditBoxReturn() {
return a(this, void 0, void 0, function*() {
let e = this.commmetBox.textLabel.string;
yield this.sendComment(e);
});
}
updateCommentUI() {
if (this.commmetBox.textLabel.string) {
this.commentBtn.node.active = !0;
this.commmetBox.node.width = 530;
} else {
this.commentBtn.node.active = !1;
this.commmetBox.node.width = 730;
}
}
sendComment(e) {
return a(this, void 0, void 0, function*() {
this.node.emit("showKeyBoardEnd");
if ("" == e) return !1;
if (yield f.CommentMng.Ins.sendComment(this.gameId, "", e)) {
this.refreshList();
this.commmetBox.string = "";
this.scrollList.scrollToTop(.3);
this.updateCommentUI();
}
});
}
onScrollEvt(e, t) {
return a(this, void 0, void 0, function*() {
let e = this.scrollList.getScrollOffset().y;
this.topBtn.node.active = e > 600;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield f.CommentMng.Ins.loadGameComment(this.detail.releaseGameData.id);
this.refreshList();
}
});
}
setData(e, t = null) {
return a(this, void 0, void 0, function*() {
this.gameId = e;
this.topCommentId = t;
let o = yield y.default.Ins.load(e);
if (this.node) {
this.detail = o;
if (o) {
f.CommentMng.Ins.init(o.gameTopComment);
if (t) {
let e = yield f.CommentMng.Ins.loadFirstLevelCommentById(t);
if (e && e.comments.length > 0) {
let o = e.comments.findIndex(e => e.id == t);
if (o >= 0) {
let t = e.comments[o];
e.comments.splice(o, 1);
e.comments.unshift(t);
e.openCnt = 1;
}
}
this.refreshList();
} else this.refreshList();
}
cc.game.emit(i.GameCoverScene_Enterd, this);
}
});
}
onBlockInputBtn() {
u.Util.hideKeyBoard();
this.blockInputBtn.node.active = !1;
}
onBackBtn() {
v.Mng.switchMine();
h.default.ins.Back(null, this.backAnima);
}
refreshList() {
let e = [];
e.push(this.detail);
let t = new G.GameTagFlowData();
t.roleId = this.detail.authorMsg.id;
t.gameId = this.gameId;
t.tagList = this.detail.releaseGameData.tagList;
e.push(t);
this.gameInfoData = new T.GiftInfoData(this.detail);
e.push(this.gameInfoData);
if (g.DynamicMng.Ins.isDisable(g.FunctionEnum.GameComment, !1)) {
this.scrollList.setDataArr(e);
return;
}
let o = new I.CommentHeadCellData();
o.cnt = this.detail.gameTopComment.commentsCntSum;
e.push(o);
let i = f.CommentMng.Ins.gameTopComment.comments.concat(), n = i.findIndex(e => {
if (e.id == this.topCommentId) return !0;
for (let t = 0; t < e.commentIds.length; t++) if (e.commentIds[t] == this.topCommentId) return !0;
return !1;
});
if (n >= 0) {
let e = i[n];
i.splice(n, 1);
i.unshift(e);
}
for (let t = 0; t < i.length; t++) {
let o = i[t];
o.isSub = !1;
e.push(o);
for (let t = 0; t < o.openCnt; t++) {
let i = o.comments[t];
i.isSub = !0;
e.push(i);
}
if (o.subCommentsCnt > 0) {
let t = new _.CommentMoreCellData();
t.comment = o;
e.push(t);
}
}
this.scrollList.setDataArr(e);
this.playGiftAnimation();
}
playGiftAnimation() {
return a(this, void 0, void 0, function*() {
if (y.default.Ins.isAlreadyLoadThisGame(this.gameId) || 0 == this.gameInfoData.rankList.length) return;
let e = new Map();
this.gameInfoData.rankList.forEach(t => {
t.giftDatas.forEach(t => {
let o = t.giftID + "", i = e.get(o) || 0;
e.set(o, i + t.giftCount);
});
});
const t = cc.winSize, o = t.width / 2, i = t.height / 2;
let n = [];
e.forEach((e, t) => {
n.push(t);
});
u.Util.shuffle(n);
for (let e = 0; e < n.length; e++) this.scheduleOnce(() => a(this, void 0, void 0, function*() {
let t = n[e], a = new cc.Node();
this.node.addChild(a);
let s = a.addComponent(cc.Sprite);
b.GiftRankMng.Ins.loadSF(t).then(e => {
s.spriteFrame = e;
});
let r = 128 * (1 + Math.random());
a.setContentSize(r, r);
const l = r / 2;
let c = [ cc.v2(-1 * o - l, i - 615), cc.v2(o + l, i - 615) ][e % 2], d = Math.random();
c.y += 307.5 * d;
a.setPosition(c);
let h = a.addComponent(M.default);
h.g = 2500;
h.fly(u.Util.randomInt(500, 700) * (a.x < 0 ? 1 : -1), u.Util.randomInt(900, 1300), u.Util.randomInt(-360, 360));
let p = cc.tween;
p(a).parallel(p().to(1, {
scale: .5
}), p().delay(.6).to(.4, {
opacity: 0
})).call(() => {
a.destroy();
}).start();
}), .1 * e);
});
}
};
w.GameCoverScene_Enterd = "GameCoverScene_Enterd";
w.GameCoverScene_GamePackLoaded = "GameCoverScene_GamePackLoaded";
w.GameCoverScene_Refresh = "GameCoverScene_RefreshComment";
w.GameCoverScene_ReLoad = "GameCoverScene_ReLoad";
w.PLAY_END = "PLAY_END";
n([ D(l.default) ], w.prototype, "backBtn", void 0);
n([ D(c.default) ], w.prototype, "scrollList", void 0);
n([ D(cc.EditBox) ], w.prototype, "commmetBox", void 0);
n([ D(l.default) ], w.prototype, "commentBtn", void 0);
n([ D(l.default) ], w.prototype, "topBtn", void 0);
n([ D(l.default) ], w.prototype, "blockInputBtn", void 0);
n([ D(cc.Node) ], w.prototype, "aniTarget", void 0);
w = i = n([ P ], w);
o.default = w;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/PhyObj": "PhyObj",
"../../Game/Player/CommentMng": "CommentMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameCoverMng": "GameCoverMng",
"../../Game/Player/GiftRankMng": "GiftRankMng",
"../../Game/Player/Mng": "Mng",
"./CommentCell": "CommentCell",
"./CommentHeadCell": "CommentHeadCell",
"./CommentMoreCell": "CommentMoreCell",
"./GameCoverInfoCell": "GameCoverInfoCell",
"./GameTagFlow": "GameTagFlow",
"./GiftInfoCell": "GiftInfoCell"
} ],
GameEnv: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6abd25E5FVCXrD6PtE5hx3f", "GameEnv");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.InitGameEnv = o.gameEnv = void 0;
let i = {
useWss: !0,
isProd: !1,
env: "Test",
gameId: "GameCreatorTest",
appGameId: "GameCreator-app",
creatorVersion: "0.8.0",
urlRoot: "https://thecanvas-test.hortorgames.com",
fileCDN: "https://thecanvas-res.hortorgames.com/TheCanvasTest/",
toponAdPlacementId_Android: "b6035bea57dc18",
toponAdPlacementId_Ios: "b6035be62ae892",
androidChannel: "hortor"
}, n = {
useWss: !0,
isProd: !1,
env: "Test",
gameId: "GameCreatorTest",
appGameId: "GameCreator-app",
creatorVersion: "0.8.0",
urlRoot: "http://cysj-audit-api.hortorgames.com",
fileCDN: "https://cysj-res.hortorgames.com/GameCreatorTest/",
toponAdPlacementId_Android: "b6035bea57dc18",
toponAdPlacementId_Ios: "b6035be62ae892",
androidChannel: "hortor"
};
o.gameEnv = i;
o.InitGameEnv = function(e, t) {
o.gameEnv = e ? i : n;
o.gameEnv.isWxReviewCity = t;
};
cc._RF.pop();
}, {} ],
GameGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "32160p0MTxAfpkH8GdRP6B3", "GameGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.priceLabel = null;
this.costIcon = null;
this.select = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.priceLabel.string = e.price + "";
let t = yield s.Mng.Ins.propMng.loadOne(e.propId);
s.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, 120);
this.priceLabel.string = e.price + "";
let o = yield s.Mng.Ins.gameShopMng.getCostIconUrl(e.costType);
s.Mng.Ins.spriteMng.setPropSprite(this.costIcon, o, 40);
});
}
onStateChange(e) {
this.select.active = e;
}
};
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Label) ], c.prototype, "priceLabel", void 0);
i([ l(cc.Sprite) ], c.prototype, "costIcon", void 0);
i([ l(cc.Node) ], c.prototype, "select", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
GameIconMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8cad6aBDG1E2brFmmIwJlTG", "GameIconMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameIconMng = void 0;
const n = e("../../Frame/Util");
class a {
constructor() {
this.cache = new Map();
this.promiseCache = new Map();
this.defaultIcon = null;
}
setSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
e && (e.spriteFrame = null);
let i = yield this.getSF(t);
if (i && e && e.node) {
e.spriteFrame = i;
e.node.width = e.node.height = o;
}
});
}
getSF(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
if (n.Util.isCdnPng(e)) {
let o = this.promiseCache.get(e);
if (!o) {
o = n.Util.downLoadPng(e);
this.promiseCache.set(e, o);
}
t = yield o;
this.promiseCache.delete(e);
t && this.cache.set(e, t);
if (this.cache.size > 100) {
let e = this.cache.keys().next().value;
this.cache.get(e);
}
}
if (!t) {
this.defaultIcon || (this.defaultIcon = yield n.Util.loadBundleRes("Atlas/GameIcon/icon1", cc.SpriteFrame));
t = this.defaultIcon;
}
}
return t;
});
}
}
o.GameIconMng = a;
a.Ins = new a();
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
GameIcon: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6432e8AOpRICLd/nrNFY6Ux", "GameIcon");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Game/Player/GameIconMng"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.subIcon = null;
this.url = null;
}
onLoad() {
this.showSubIcon(!1);
}
loadUrl(e) {
return n(this, void 0, void 0, function*() {
this.url = e;
this.sprite.spriteFrame = null;
yield a.GameIconMng.Ins.setSprite(this.sprite, e, this.node.width);
});
}
showSubIcon(e) {
return n(this, void 0, void 0, function*() {
this.subIcon && (this.subIcon.node.active = !!e);
});
}
};
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
i([ r(cc.Sprite) ], l.prototype, "subIcon", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../Game/Player/GameIconMng": "GameIconMng"
} ],
GameListScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3ab8988LXJH1beysHw4+77U", "GameListScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../HomeScene/GameCell"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.list = null;
this.backBtn = null;
this.titleLabel = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
}
onBackBtn() {
c.default.ins.Back();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.titleLabel.string = a.I18nMgr.getI18nStringByZh(e.title);
this.list.prefabs[0].getComponent(h.default).from = e.from;
this.list.setDataArr(e.games);
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
let e = yield this.data.appendFunc();
if (e && e.length > 0) {
for (let t = 0; t < e.length; t++) this.data.games.push(e[t]);
this.list.setDataArr(this.data.games);
} else d.default.showToast("没有了...");
}
});
}
};
i([ u(r.default) ], m.prototype, "list", void 0);
i([ u(s.default) ], m.prototype, "backBtn", void 0);
i([ u(cc.Label) ], m.prototype, "titleLabel", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../HomeScene/GameCell": "GameCell"
} ],
GameMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6f424D1MUFGJJIAw/SOyQPM", "GameMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/NetworkMgr"), a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../Role"), r = e("../../../scripts/_autogen/data/data"), l = e("../OperationFlow");
o.default = class {
constructor() {
this.gameIds = [];
this.cache = new Map();
}
appendCustom(e) {
this.cache.set(e.id, e);
}
create(e, t = null) {
return i(this, void 0, void 0, function*() {
let o = {
id: "",
name: e,
playerId: s.default.Ins.role.id,
advert: "",
worldIds: [],
gameShopIds: [],
gameRankIds: [],
variableIds: [],
variableDatas: [],
firstWorldId: "",
version: "0.0.0",
iconTextureName: "icon1",
lastPublishStamp: 0,
firstPublishStamp: 0,
tags: [],
coinPropId: "1",
status: r.GameStatus.noPublish,
offReason: [],
creativeOp: {
isOpenAll: !1,
isClose: !0,
openWorldIds: []
},
parnetGame: t
}, i = {
id: null,
creativeSourceUId: t ? t.id : null,
data: o
}, l = yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SaveRoleGameData,
params: i
}, a.Game_RSaveRoleGameData);
if (!l) return null;
o.id = l.id;
this.cache.set(o.id, o);
this.gameIds.unshift(o.id);
return o;
});
}
delete(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e ]
};
if (!(yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_DelRoleGameData,
params: t
}, a.Game_RDelRoleGameData))) return;
this.cache.delete(e);
let o = this.gameIds.indexOf(e);
o >= 0 && this.gameIds.splice(o, 1);
});
}
off(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e
};
if (!(yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_OwnOffGame,
params: t
}, a.Game_ROwnOffGame))) return;
let o = this.cache.get(e);
o && (o.status = r.GameStatus.off);
});
}
save(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
creativeSourceUId: null,
data: e
};
if (!(yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SaveRoleGameData,
params: t
}, a.Game_RSaveRoleGameData))) return null;
let o = this.cache.get(e.id);
o ? Object.assign(o, e) : this.cache.set(e.id, e);
cc.game.emit("GameDataChange", e);
return e;
});
}
loadOne(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
yield this.requestConf([ e ]);
t = this.cache.get(e);
}
return t;
});
}
getOne(e) {
return this.cache.get(e);
}
loadMany(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
this.cache.has(i) || t.push(i);
}
t.length > 0 && (yield this.requestConf(t));
let o = [];
for (let t = 0; t < e.length; t++) {
let i = e[t], n = this.getOne(i);
n && o.push(n);
}
return o;
});
}
loadAll() {
return i(this, void 0, void 0, function*() {
return yield this.loadMany(this.gameIds);
});
}
requestConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_GetRoleGameData,
params: t
}, a.Game_RGetRoleGameData);
if (o) for (let t = 0; t < e.length; t++) {
let i = o.datas[t];
if (!i) continue;
let n = i.data;
n.id = i.id;
n.lastPublishStamp = i.lastPublishTime;
n.firstPublishStamp = i.firstPublishTime;
n.thumbCnt = i.thumbCnt;
n.collectionCnt = i.collectionCnt;
n.hurryCnt = i.hurryCnt;
n.playCnt = i.playCnt;
n.worldIds = i.worldIds;
n.gameShopIds = i.gameShopIds || [];
n.gameRankIds = i.gameRankIds || [];
n.isOff = i.isOff;
n.thawTime = i.thawTime;
n.status = i.status;
n.offReason = l.OperationFlow.makeOffReason(i.offReason);
n.creativeOp || (n.creativeOp = {
isOpenAll: !1,
isClose: !0,
openWorldIds: []
});
if (i.variableIds && i.variableDatas) {
let e = i.variableIds.length;
for (let t = 0; t < e; ++t) i.variableDatas[t] && (i.variableDatas[t].id = i.variableIds[t]);
}
n.variableDatas = i.variableDatas;
i.isOldTangData && (n.isOldTangData = !0);
this.cache.set(e[t], n);
}
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Role": "Role",
"../OperationFlow": "OperationFlow"
} ],
GameOverPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e70ffMBrEFMMrFRS65fGXE4", "GameOverPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../../scripts/_autogen/data/data"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/CoinBar"), c = e("../../Frame/CrossPlatform"), d = e("../../Frame/GameRecorder"), h = e("../../Frame/Panel"), p = e("../../Frame/SceneManager"), u = e("../../Frame/ScreenRect"), m = e("../../Frame/Top"), f = e("../../Frame/TweenUtil"), g = e("../../Frame/UIColor"), y = e("../../Frame/Util"), v = e("../../Game/GameRankComp"), C = e("../../Game/Hortor"), _ = e("../../Game/OperationFlow"), S = e("../../Game/PhyObj"), I = e("../../Game/Player/CoinMng"), G = e("../../Game/Player/LifeMng"), T = e("../../Game/Player/Mng"), b = e("../../Role"), M = e("../../Scene/GameScene/GameScene"), {ccclass: P, property: D} = cc._decorator;
let w = class extends h.default {
constructor() {
super(...arguments);
this.titleNode = null;
this.sprite = null;
this.titleLabel = null;
this.timeLabel = null;
this.heart = null;
this.backBtn = null;
this.replayBtn = null;
this.shareVideoBtn = null;
this.layout = null;
this.replayCall = null;
this.data = null;
}
onLoad() {
if (!d.default.isResultShareable()) {
this.shareVideoBtn.node.active = !1;
this.replayBtn.node.width = 500;
}
this.backBtn.node.on("click", this.onBackBtnTap, this);
this.replayBtn.node.on("click", this.onReplayBtnTap, this);
this.shareVideoBtn.node.on("click", this.onShareVideoBtnTap, this);
if (C.Hortor.isApp() || c.wx) {
this.shareVideoBtn.node.active = !1;
this.replayBtn.node.width = 500;
}
this.backBtn.node.on(r.default.CLICK, this.onBackBtnTap, this);
this.replayBtn.node.on(r.default.CLICK, this.onReplayBtnTap, this);
this.shareVideoBtn.node.on(r.default.CLICK, this.onShareVideoBtnTap, this);
}
onEnable() {
let e = u.default.height / 2 - 470;
l.default.Ins.show(200, e);
}
onDisable() {
l.default.Ins.hide();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.playTitleAnim(e.titleStr, () => {
d.default.stop();
});
let t = G.LifeMng.Ins.getLife(this.data.gameData.id);
y.Util.makeBro(this.heart, G.LifeMng.Ins.max, (e, o) => {
e.color = o < t ? g.UIColor.red : g.UIColor.gray;
});
t--;
G.LifeMng.Ins.setLife(e.gameData.id, t);
if (t > 0) {
this.timeLabel.node.active = !1;
this.replayBtn.icon.node.color = g.UIColor.red;
this.replayBtn.label.string = "复活";
this.replayBtn.dot.active = !1;
} else {
this.timeLabel.node.active = !0;
this.replayBtn.icon.node.color = g.UIColor.gray;
this.replayBtn.label.string = "补满";
this.replayBtn.dot.active = !0;
if (e.gameData.playerId == b.default.Ins.role.id) {
this.replayBtn.dotLabel.string = "作者免费";
y.Util.searchChild(this.replayBtn.dot, "coin").active = !1;
} else this.replayBtn.dotLabel.string = "使用100";
this.updateTimeLabel();
this.schedule(this.updateTimeLabel, 1);
}
this.dropHeartAnim(t, () => {});
if (c.tt) {
let t = c.crossPlatform.getStorageSync("lastShareVideoStamp") || 0;
this.shareVideoBtn.dot.active = !y.Util.isToday(t) && e.isProd;
}
let o = yield T.Mng.Ins.actorMng.loadOne(e.actorConfId);
o && T.Mng.Ins.spriteMng.setActorSprite(this.sprite, o.textureName, 200);
if (e.gameRankId) {
let t = yield T.Mng.Ins.gameRankMng.loadOne(e.gameRankId);
if (t) {
this.layout.spacingY = 20;
y.Util.moveNode(this.titleNode, this.node);
this.titleNode.position = cc.v2(220, 400);
this.titleNode.scale = .6;
this.sprite.node.active = !1;
let o = yield y.Util.loadBundleRes("Prefab/GameRankComp"), i = cc.instantiate(o);
this.layout.node.insertChild(i, 1);
i.getComponent(v.default).setData(t, e.gameData, !1);
i.height = 700;
}
}
});
}
closeAnim(e) {
e && e();
}
updateTimeLabel() {
let e = G.LifeMng.Ins.getLifeStamp(this.data.gameData.id) + G.LifeMng.Ins.recoverTime - orange.TimeUtil.serverTime;
e > 0 ? this.timeLabel.string = y.Util.parseTimeHHMMSS(e) + a.I18nMgr.getI18nStringByZh("后补满") : this.fillHeart();
}
playTitleAnim(e, t = null) {
m.default.blockInput(!0, "playTitleAnim");
f.TweenUtil.applayTextAnim(this.titleLabel, e, .1, () => {
m.default.blockInput(!1, "playTitleAnim");
t && t();
});
}
dropHeartAnim(e, t = null) {
let o = this.heart.parent.children[e];
if (!o) return;
m.default.blockInput(!0, "dropHeartAnim");
let i = cc.tween(o), n = o.position.sub(cc.v2(7, 0)), a = o.position.add(cc.v2(7, 0));
for (let e = 0; e < 15; e++) i.to(.05, {
position: e % 2 == 0 ? n : a
});
i.to(.05, {
position: o.position
}).call(() => {
let e = cc.instantiate(o);
o.color = g.UIColor.gray;
this.node.addChild(e);
e.position = y.Util.convertPosition(o, this.node);
let t = e.addComponent(S.default);
t.fly(y.Util.randomInt(-100, 100), y.Util.randomInt(200, 300), y.Util.randomInt(-300, 300));
t.fadeOut();
}).delay(.5).call(() => {
m.default.blockInput(!1, "dropHeartAnim");
t && t();
});
i.start();
}
fillHeart(e = null) {
this.timeLabel.node.active = !1;
this.replayBtn.dot.active = !1;
this.replayBtn.label.string = "复活";
this.unschedule(this.updateTimeLabel);
G.LifeMng.Ins.setLife(this.data.gameData.id, G.LifeMng.Ins.max);
m.default.blockInput(!0, "fillHeartAnim");
let t = this.heart.parent, o = t.childrenCount, i = this.heart.scale;
for (let n = 0; n < o; n++) {
let a = t.children[n];
cc.tween(a).delay(.1 * n).to(.1, {
scale: 1.5 * i
}).call(() => {
a.color = g.UIColor.red;
}).to(.1, {
scale: i
}).call(() => {
if (n == o - 1) {
this.replayBtn.icon.node.color = g.UIColor.red;
f.TweenUtil.applyScaleBounce2(this.replayBtn.node, 1, 1.5, null, () => {
m.default.blockInput(!1, "fillHeartAnim");
e && e();
});
}
}).start();
}
}
onBackBtnTap() {
this.closePanel();
d.default.stopAndClear();
p.default.ins.Back();
cc.game.emit(M.default.GameScene_EXIT, !1);
}
onReplayBtnTap() {
return n(this, void 0, void 0, function*() {
if (G.LifeMng.Ins.getLife(this.data.gameData.id) > 0) {
d.default.stopAndClear();
this.closePanel();
this.replayCall && this.replayCall();
} else if (this.data.gameData.playerId == b.default.Ins.role.id) this.fillHeart(() => {
this.onReplayBtnTap();
}); else if (I.default.Ins.coin >= 100) {
yield I.default.Ins.requestCostCoinInGame(s.SaleGoodsType.gameReborn, 100, this.data.gameData.id, "玩家复活", this.data.gameData.iconTextureName);
this.fillHeart(() => {
this.onReplayBtnTap();
});
} else p.default.ins.OpenPanelByName("LackCoinPanel");
});
}
onShareVideoBtnTap() {
if (d.default.hasVideo) {
let e = [ "创游编辑器" ];
this.data && e.push(this.data.gameData.name);
d.default.share({
video_title: "这个游戏超好玩！",
topics: e,
query: y.Util.toQueryStr({
type: "game",
isMine: this.data.gameData.playerId == b.default.Ins.role.id,
gameId: this.data.gameData.id
}),
tgaFrom: "GameOverPanel",
succ: () => n(this, void 0, void 0, function*() {
if (this.shareVideoBtn.dot.active) {
this.shareVideoBtn.dot.active = !1;
c.crossPlatform.setStorageSync("lastShareVideoStamp", orange.TimeUtil.serverTime);
let e = yield I.default.Ins.requestAddCoinByShare();
if (!e) return;
_.OperationFlow.openRewards(e, () => {});
}
})
});
} else m.default.showToast("录屏时间太短");
}
};
i([ D(cc.Node) ], w.prototype, "titleNode", void 0);
i([ D(cc.Sprite) ], w.prototype, "sprite", void 0);
i([ D(cc.Label) ], w.prototype, "titleLabel", void 0);
i([ D(cc.Label) ], w.prototype, "timeLabel", void 0);
i([ D(cc.Node) ], w.prototype, "heart", void 0);
i([ D(r.default) ], w.prototype, "backBtn", void 0);
i([ D(r.default) ], w.prototype, "replayBtn", void 0);
i([ D(r.default) ], w.prototype, "shareVideoBtn", void 0);
i([ D(cc.Layout) ], w.prototype, "layout", void 0);
w = i([ P ], w);
o.default = w;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/CoinBar": "CoinBar",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/GameRecorder": "GameRecorder",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/GameRankComp": "GameRankComp",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/PhyObj": "PhyObj",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/LifeMng": "LifeMng",
"../../Game/Player/Mng": "Mng",
"../../Role": "Role",
"../../Scene/GameScene/GameScene": "GameScene"
} ],
GamePackageMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a0fbzbDI1OCaj/VFMht9nR", "GamePackageMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Util"), a = e("./Mng");
class s {
constructor() {
this.cache = [];
}
load(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.find(t => t && t.url == e);
if (t) return t.data;
{
let t = this.downloadGamePack(e);
this.addCache(e, t);
return t;
}
});
}
downloadGamePack(e) {
return i(this, void 0, void 0, function*() {
let t = yield n.Util.downLoadBin(e);
if (!t) return null;
let o = bon.decode(pako.ungzip(t));
if (o.worldDatas) for (let e of o.worldDatas) if (e.layoutMin) {
e.worldLayout = n.Util.unzip(e.layoutMin);
e.layoutMin = void 0;
}
let i = (e, t) => {
e && e.forEach(e => {
t.upgradeConf(e);
});
};
i(o.tileConfs, a.Mng.Ins.tileMng);
i(o.actorConfs, a.Mng.Ins.actorMng);
i(o.deviceConfs, a.Mng.Ins.deviceMng);
i(o.propConfs, a.Mng.Ins.propMng);
i(o.weaponConfs, a.Mng.Ins.weaponMng);
i(o.bulletConfs, a.Mng.Ins.bulletMng);
i(o.gameRankConfs, a.Mng.Ins.gameRankMng);
i(o.gameShopConfs, a.Mng.Ins.gameShopMng);
o.gameRankConfs = o.gameRankConfs || [];
return o;
});
}
addCache(e, t) {
this.cache.unshift({
url: e,
data: t
});
this.cache = this.cache.slice(0, 5);
}
}
o.default = s;
s.Ins = new s();
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"./Mng": "Mng"
} ],
GamePetMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "aa07e0XtnFCmLwtF6b71sLl", "GamePetMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GamePetMng = void 0;
const n = e("../../Frame/SceneManager"), a = e("../../Scene/GameScene/GameScene"), s = e("../World/Actor"), r = e("../World/World");
class l {
constructor() {
this._petRegMap = new Map();
}
static get Ins() {
this._instance || (this._instance = new l());
return this._instance;
}
RegPet(e, t) {
e = r.default.unionActSet.find(e);
this._petRegMap.has(e) || this._petRegMap.set(e, []);
let o = this._petRegMap.get(e);
o.findIndex(e => e.id == t.id) < 0 && o.push(t);
}
RemovePet(e, t) {
e = r.default.unionActSet.find(e);
if (!this._petRegMap.has(e)) return;
let o = this._petRegMap.get(e), i = o.findIndex(e => e.id == t);
i >= 0 && o.splice(i, 1);
}
Save() {
return Array.from(this._petRegMap);
}
Read(e) {
this._petRegMap = new Map(e);
}
Clear() {
this._petRegMap.clear();
}
InitWorldPets(e) {
return i(this, void 0, void 0, function*() {
let t = n.default.ins.findScene(a.default), o = Array.from(this._petRegMap.keys());
for (let i of o) {
let o = e.GetActNodeByDataUnionId(i);
if (!(o && o instanceof s.default)) continue;
let n = this._petRegMap.get(i);
for (let i of n) {
let n = e.GetActNodeByDataId(i.id);
if (n) {
n.SetPosition(o.node.x, o.node.y);
n.ApplyPosition();
} else {
n = e.addActor(o.node.position);
yield n.setData(i);
t.initAi(e.worldLayout.type, n);
}
o.addPet(n);
}
}
});
}
}
o.GamePetMng = l;
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../World/Actor": "Actor",
"../World/World": "World"
} ],
GameRankCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f66e5s98F9G37ly7jEqovc8", "GameRankCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../CustomUI/HeadIcon"), r = e("../../Frame/Util"), l = e("../../Game/Player/Mng"), c = e("../../CustomUI/Button"), d = e("../../Role"), h = e("../../Game/Player/GameRankDataMng"), p = e("../../Game/Player/GameRankMng"), {ccclass: u, property: m} = cc._decorator;
let f = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.headIcon = null;
this.scoreLabel = null;
this.rankLabel = null;
this.unitLabel = null;
this.icon = null;
this.trophy = null;
this.deleteBtn = null;
this.data = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.deleteBtn && this.deleteBtn.node.on(c.default.CLICK, this.onDelete, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
if (!e) return;
this.nameLabel.string = e.userName + "";
this.scoreLabel.string = e.score + "";
if (e.score < 999) this.scoreLabel.overflow = cc.Label.Overflow.NONE; else {
this.scoreLabel.overflow = cc.Label.Overflow.SHRINK;
this.scoreLabel.node.width = 60;
}
r.Util.updateLabel(this.scoreLabel);
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
let t = e.rankConf;
this.deleteBtn && (this.deleteBtn.node.active = t.roleId == d.default.Ins.role.id);
switch (t.rankType) {
case p.GameRankType.ShortTime:
case p.GameRankType.LongTime:
this.setUnit("秒", null);
break;

case p.GameRankType.PropRank:
{
let e = yield l.Mng.Ins.propMng.loadOne(t.propId);
this.setUnit(null, e.textureName);
break;
}

case p.GameRankType.CustomRank:
this.setUnit(null, null);
}
this.trophy.node.active = !1;
this.rankLabel.node.active = !1;
if (e.rank <= 3) {
this.trophy.node.active = !0;
r.Util.loadBundleRes("Atlas/UI/trophy" + e.rank, cc.SpriteFrame).then(e => {
this.trophy.spriteFrame = e;
});
} else if (e.rank <= h.default.Ins.max) {
this.rankLabel.string = e.rank + "";
this.rankLabel.node.active = !0;
} else {
this.rankLabel.string = h.default.Ins.max + "+";
this.rankLabel.node.active = !0;
}
});
}
setUnit(e, t) {
return n(this, void 0, void 0, function*() {
this.unitLabel.node.active = !!e;
this.unitLabel.string = e;
this.icon.node.active = !!t;
t && (yield l.Mng.Ins.spriteMng.setSprite(this.icon, t, 64, 1));
r.Util.updateLabel(this.unitLabel);
r.Util.updateAllLayout(this.unitLabel.node.parent);
});
}
onDelete() {
this.node.dispatchEvent(r.Util.customEvent("GameRankCell.onDelete", !0, this.data));
}
};
i([ m(cc.Label) ], f.prototype, "nameLabel", void 0);
i([ m(s.default) ], f.prototype, "headIcon", void 0);
i([ m(cc.Label) ], f.prototype, "scoreLabel", void 0);
i([ m(cc.Label) ], f.prototype, "rankLabel", void 0);
i([ m(cc.Label) ], f.prototype, "unitLabel", void 0);
i([ m(cc.Sprite) ], f.prototype, "icon", void 0);
i([ m(cc.Sprite) ], f.prototype, "trophy", void 0);
i([ m(c.default) ], f.prototype, "deleteBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/GameRankDataMng": "GameRankDataMng",
"../../Game/Player/GameRankMng": "GameRankMng",
"../../Game/Player/Mng": "Mng",
"../../Role": "Role"
} ],
GameRankComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f4a782zbENCcZtTN4OtuCoy", "GameRankComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../scripts/_autogen/data/data"), s = e("../CustomUI/Button"), r = e("../CustomUI/ScrollList"), l = e("../Frame/SceneManager"), c = e("../Frame/Share"), d = e("../Frame/Top"), h = e("../Frame/UIColor"), p = e("../Frame/Util"), u = e("../Panel/GameRankPanel/GameRankCell"), m = e("../Role"), f = e("../TGA"), g = e("./GameEnv"), y = e("./Player/GameRankDataMng"), v = e("./Player/Mng"), C = e("./Player/TalkMng"), {ccclass: _, property: S} = cc._decorator;
let I = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.list = null;
this.myRankCell = null;
this.shareBtn = null;
this.emptyLabel = null;
this.rank = null;
this.gameData = null;
this.rankList = [];
this.showMe = !1;
}
onLoad() {
this.node.on("GameRankCell.onDelete", this.onDelete, this);
this.list.getPrefabName = e => e instanceof a.GameRankScoreInfo ? "GameRankCell" : "GameRankTop3Cell";
this.shareBtn && this.shareBtn.node.on(s.default.CLICK, this.onShareBtn, this);
}
setData(e, t, o) {
return n(this, void 0, void 0, function*() {
this.showMe = o;
this.rank = e;
this.gameData = t;
this.myRankCell.node.active = !1;
this.list.setDataArr([]);
this.rankList = yield this.loadRankList(e.id);
this.refreshList();
let i = this.rankList.find(e => e.roleId == m.default.Ins.role.id);
if (i) {
let t = y.default.Ins.getHistoryScore(e.id);
if ("number" != typeof t) {
y.default.Ins.saveHistoryScore(e.id, i.score);
return;
}
if (e.sortType == a.GameRankSortType.asc && i.score < t || e.sortType == a.GameRankSortType.desc && i.score > t) {
y.default.Ins.saveHistoryScore(e.id, i.score);
this.scheduleOnce(() => {
l.default.ins.OpenPanelByName("GameRankSharePanel", e => {
e.setData(i, this.rank, this.gameData);
e.shareCall = this.onShareBtn.bind(this);
});
}, .5);
}
} else y.default.Ins.deleteHistoryScore(e.id);
});
}
loadRankList(e) {
return n(this, void 0, void 0, function*() {
let t = yield y.default.Ins.loadRank(e);
if (t) return t.rankList;
d.default.showToast("获取失败");
return [];
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
this.myRankCell.node.active = !1;
let e = this.rankList.concat(), t = yield v.Mng.Ins.gameRankMng.loadOne(this.rank.id);
this.titleLabel.string = t.name;
let o = this.list.getComponent(cc.Widget);
e.sort((e, o) => t.sortType == a.GameRankSortType.asc ? e.score - o.score : o.score - e.score);
e = e.slice(0, y.default.Ins.max);
for (let o = 0; o < e.length; o++) {
e[o].rank = o + 1;
e[o].rankConf = t;
}
this.emptyLabel.node.active = 0 == e.length;
let i = [ e.slice(0, 3) ];
i = i.concat(e);
let n = e.find(e => e.roleId == m.default.Ins.role.id);
if (n && this.showMe) {
this.myRankCell.node.active = !0;
o.bottom = 177;
n.userName = "我";
this.myRankCell.setData(n);
} else {
this.myRankCell.node.active = !1;
o.bottom = 30;
}
p.Util.updateAllWidget(this.list.node);
this.list.setDataArr(i);
});
}
onDelete(e) {
let t = e.detail;
l.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "提示";
e.label.string = `是否删除"${t.userName}"的分数？`;
e.setLeftBtn({
text: "删除",
color: h.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield y.default.Ins.deleteScore(this.rank.id, t.roleId);
this.rankList = this.rankList.filter(e => e.roleId !== t.roleId);
d.default.showToast("已删除");
this.refreshList();
})
});
e.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
});
}
onShareBtn() {
let e = this.rankList.find(e => e.roleId == m.default.Ins.role.id), t = {
type: "gameRank",
cyGameId: this.gameData.id,
gameRankId: this.rank.id
}, o = `我在"${this.rank.name}"中排名第${e.rank}名，`;
o = 1 == e.rank ? `我创造了"${this.rank.name} "新纪录！` : e.rank <= 3 ? `"${this.rank.name} "晋级前三甲！` : "我已进入世界100强！";
let i = {
shareType: "shareGame",
title: o += "谁能超过我，我倒立洗头！",
desc: this.gameData.advert,
imageUrl: "",
query: p.Util.toQueryStr(t),
imageName: this.gameData.iconTextureName,
success: () => {
d.default.showToast("分享成功");
f.TGA.track("share", t);
},
fail: () => {
d.default.showToast("分享失败");
},
talk: {
title: o,
sections: [ {
type: C.TalkSectionType.Game,
gameId: this.gameData.id
} ]
}
}, n = this.gameData.iconTextureName;
n && "icon1" !== n ? i.imageUrl = g.gameEnv.fileCDN + n : delete i.imageUrl;
c.Share.share(i);
}
};
i([ S(cc.Label) ], I.prototype, "titleLabel", void 0);
i([ S(r.default) ], I.prototype, "list", void 0);
i([ S(u.default) ], I.prototype, "myRankCell", void 0);
i([ S(s.default) ], I.prototype, "shareBtn", void 0);
i([ S(cc.Label) ], I.prototype, "emptyLabel", void 0);
I = i([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../scripts/_autogen/data/data": "data",
"../CustomUI/Button": "Button",
"../CustomUI/ScrollList": "ScrollList",
"../Frame/SceneManager": "SceneManager",
"../Frame/Share": "Share",
"../Frame/Top": "Top",
"../Frame/UIColor": "UIColor",
"../Frame/Util": "Util",
"../Panel/GameRankPanel/GameRankCell": "GameRankCell",
"../Role": "Role",
"../TGA": "TGA",
"./GameEnv": "GameEnv",
"./Player/GameRankDataMng": "GameRankDataMng",
"./Player/Mng": "Mng",
"./Player/TalkMng": "TalkMng"
} ],
GameRankDataMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6988aB41eRCQoTsUVQEIjrM", "GameRankDataMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/CrossPlatform"), s = e("../../Frame/NetworkMgr");
class r {
constructor() {
this.max = 99;
}
loadRank(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e ]
}, o = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReleaseGameRank,
params: t
}, n.Game_RGetReleaseGameRank);
if (o && o.datas && o.datas[0]) {
let e = o.datas[0];
for (let t = 0; t < e.rankList.length; t++) e.rankList[t].rank = t + 1;
return o.datas[0];
}
return null;
});
}
uploadScore(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
gameId: e,
scores: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_UploadGameRankScore,
params: o
}, n.Game_RUploadGameRankScore);
});
}
deleteScore(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
id: e,
targetId: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DeleteGameRankScore,
params: o
}, n.Game_RDeleteGameRankScore);
this.deleteHistoryScore(e);
});
}
getHistoryScore(e) {
return (a.crossPlatform.getStorageSync("rankHistoryScroeMap") || {})[e];
}
saveHistoryScore(e, t) {
let o = a.crossPlatform.getStorageSync("rankHistoryScroeMap") || {};
o[e] = t;
a.crossPlatform.setStorageSync("rankHistoryScroeMap", o);
}
deleteHistoryScore(e) {
let t = a.crossPlatform.getStorageSync("rankHistoryScroeMap") || {};
if ("number" == typeof t[e]) {
delete t[e];
a.crossPlatform.setStorageSync("rankHistoryScroeMap", t);
}
}
}
o.default = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
GameRankMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "07c49EysTZCCZ6UNOCTG0bN", "GameRankMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameRankType = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/NetworkMgr"), r = e("../../GameData/GameTypeDefine"), l = e("./BaseConfMng");
(function(e) {
e[e.ShortTime = 0] = "ShortTime";
e[e.LongTime = 1] = "LongTime";
e[e.PropRank = 2] = "PropRank";
e[e.CustomRank = 3] = "CustomRank";
})(o.GameRankType || (o.GameRankType = {}));
o.default = class extends l.BaseConfMng {
constructor() {
super();
this.confType = r.CommonDataType.Rank;
this.creativeConfType = a.CreativeConfType.shop;
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGameRank,
params: t
}, n.Game_RGetGameRank);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t];
i.conf.id = i.id;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
gameId: t.id,
id: e.id,
cycleType: e.cycleType,
sortType: e.sortType,
data: e
}, i = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveGameRank,
params: o
}, n.Game_RSaveGameRank);
t.gameRankIds.push(i.id);
return i.id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
gameId: e.belongGameId,
confType: a.CreativeConfType.rank,
confId: e.id,
data: e
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleCreativeConf,
params: t
}, n.Game_RSaveRoleCreativeConf);
});
}
requestDeleteConf(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
ids: [ e.id ]
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelGameRank,
params: o
}, n.Game_RDelGameRank);
let i = t.gameRankIds.indexOf(e.id);
i >= 0 && t.gameRankIds.splice(i, 1);
});
}
getCostIconUrl(e) {
return i(this, void 0, void 0, function*() {
return e == r.GameGoodsCostType.Coin ? "Prop/coin" : "UI/coin";
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
GameRankPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "05cbek/C2BMfouchWSgaXJq", "GameRankPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Panel"), s = e("../../Frame/Util"), r = e("../../Game/GameRankComp"), {ccclass: l, property: c} = cc._decorator;
let d = class extends a.default {
setData(e, t) {
return n(this, void 0, void 0, function*() {
let o = yield s.Util.loadBundleRes("Prefab/GameRankComp"), i = cc.instantiate(o);
this.node.insertChild(i, 0);
i.getComponent(r.default).setData(e, t, !0);
});
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Game/GameRankComp": "GameRankComp"
} ],
GameRankSharePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "01bb6ArLzVJTKblY/0jhYkc", "GameRankSharePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Top"), s = e("../../Frame/Util"), r = e("../../Game/GameEnv"), l = e("../../Game/Player/GameRankMng"), c = e("../../Game/Player/Mng"), d = e("../../Game/Player/TalkMng"), h = e("../../TGA"), p = e("../BaseGainPanel/BaseGainPanel"), u = e("../../Frame/Share"), {ccclass: m, property: f} = cc._decorator;
let g = class extends p.default {
constructor() {
super(...arguments);
this.scoreLabel = null;
this.unitLabel = null;
this.icon = null;
this.data = null;
this.rank = null;
this.gameData = null;
this.shareCall = null;
}
onLoad() {
super.onLoad();
}
setData(e, t, o) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.rank = t;
this.gameData = o;
let i = e.rankConf;
this.scoreLabel.string = e.score + "";
switch (i.rankType) {
case l.GameRankType.ShortTime:
case l.GameRankType.LongTime:
this.setUnit("秒", null);
break;

case l.GameRankType.PropRank:
{
let e = yield c.Mng.Ins.propMng.loadOne(i.propId);
this.setUnit(null, e.textureName);
break;
}

case l.GameRankType.CustomRank:
this.setUnit(null, null);
}
});
}
setUnit(e, t) {
return n(this, void 0, void 0, function*() {
this.unitLabel.node.active = !!e;
this.unitLabel.string = e;
this.icon.node.active = !!t;
t && (yield c.Mng.Ins.spriteMng.setSprite(this.icon, t, 64, 1));
s.Util.updateLabel(this.unitLabel);
s.Util.updateAllLayout(this.unitLabel.node.parent);
});
}
onGainBtnTap() {
return n(this, void 0, void 0, function*() {
let e = {
type: "gameRank",
cyGameId: this.gameData.id,
gameRankId: this.rank.id
}, t = "";
if (this.rank.rankType == l.GameRankType.LongTime || this.rank.rankType == l.GameRankType.ShortTime) t = `"${this.rank.name}"${this.data.score}秒！不服来战！`; else if (this.rank.rankType == l.GameRankType.PropRank) {
let e = yield c.Mng.Ins.propMng.loadOne(this.rank.propId);
t = `"${this.rank.name}"${this.data.score}个${e.name}！不服来战！`;
} else this.rank.rankType == l.GameRankType.CustomRank && (t = `"${this.rank.name}"数值【${this.data.score}】！不服来战！`);
let o = {
shareType: "shareGame",
title: t,
desc: this.gameData.advert,
imageUrl: "",
query: s.Util.toQueryStr(e),
imageName: this.gameData.iconTextureName,
talk: {
title: t,
sections: [ {
type: d.TalkSectionType.Game,
gameId: this.gameData.id
} ]
},
success: () => {
a.default.showToast("分享成功");
h.TGA.track("share", e);
this.closePanel();
},
fail: () => {
a.default.showToast("分享失败");
}
}, i = this.gameData.iconTextureName;
i && "icon1" !== i ? o.imageUrl = r.gameEnv.fileCDN + i : delete o.imageUrl;
u.Share.share(o);
});
}
};
i([ f(cc.Label) ], g.prototype, "scoreLabel", void 0);
i([ f(cc.Label) ], g.prototype, "unitLabel", void 0);
i([ f(cc.Sprite) ], g.prototype, "icon", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../Frame/Share": "Share",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Player/GameRankMng": "GameRankMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TalkMng": "TalkMng",
"../../TGA": "TGA",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
GameRankTop3Cell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3b3e3beoutM0L3dYmn9PeHf", "GameRankTop3Cell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../CustomUI/HeadIcon"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.emptyLabels = [];
this.headIcons = [];
this.nameLabels = [];
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
for (let t = 0; t < 3; t++) {
let o = e[t];
if (o) {
this.emptyLabels[t].node.active = !1;
this.headIcons[t].node.active = !0;
this.nameLabels[t].node.active = !0;
this.nameLabels[t].string = r.Util.clampStr(o.userName, 8, "..");
this.headIcons[t].loadUrl(o.userImg);
} else {
this.emptyLabels[t].node.active = !0;
this.headIcons[t].node.active = !1;
this.nameLabels[t].node.active = !1;
}
}
});
}
};
i([ c([ cc.Label ]) ], d.prototype, "emptyLabels", void 0);
i([ c([ s.default ]) ], d.prototype, "headIcons", void 0);
i([ c([ cc.Label ]) ], d.prototype, "nameLabels", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util"
} ],
GameRankTopPerson: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c92449+iaZDOY0LEFMGgikZ", "GameRankTopPerson");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon1 = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {});
}
};
i([ r(cc.Label) ], l.prototype, "headIcon1", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList"
} ],
GameRecorder: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a3321rm/rxNkL3811Q4A8Wn", "GameRecorder");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../CustomUI/Button"), n = e("./CrossPlatform"), a = e("./Top"), s = e("./TweenUtil"), r = e("./UIColor"), l = e("../Platform/Recorder/PlatformRecorderApp"), c = new class {
constructor() {
this._startStamp = 0;
this._videoDuration = 0;
this._videoPath = "";
this._recordering = !1;
this._inited = !1;
this._wxShareBtn = null;
this._platformRecorder = null;
this._recordBtn = null;
this._shareData = null;
this._busy = !1;
}
get hasVideo() {
cc.log("video: " + this._videoPath);
return "" != this._videoPath;
}
attachRecordButton(e, t) {
this._recordBtn = e;
this._shareData = t;
this._recordBtn.node.on(i.default.CLICK, this._onTap, this);
this._videoPath = "";
this._updateButton();
}
dettachRecordButton() {
this._recordBtn && (this._recordBtn = null);
}
_onTap() {
"" != this._videoPath ? this._platformRecorder.isButtonShare() ? this.share(this._shareData) : this.stopAndClear() : this._recordering ? this.stop() : this.start();
this._updateButton();
}
_updateButton() {
if (this._recordBtn) if ("" != this._videoPath) if (this._platformRecorder.isButtonShare()) {
this._recordBtn.label.string = "发布";
this._recordBtn.background.node.color = r.UIColor.blue;
s.TweenUtil.applyBreath(this._recordBtn.node);
} else {
this._recordBtn.label.string = "重置";
this._recordBtn.background.node.color = r.UIColor.pink;
this.showWxShareBtn(this._shareData.query);
} else if (this._recordering) {
this._recordBtn.label.string = "录制中";
this._recordBtn.background.node.color = r.UIColor.pink;
} else {
this._recordBtn.label.string = "录屏";
this._recordBtn.background.node.color = r.UIColor.green;
}
}
init() {
if (!this._inited) {
this._inited = !0;
this._platformRecorder = new l.default();
window.screenRecorder = this._platformRecorder;
this._platformRecorder.onStart((e => {
this._videoDuration = 0;
this._startStamp = orange.TimeUtil.serverTime;
this._recordering = !0;
this._busy = !1;
this._updateButton();
console.log("GameRecorder.onStart", JSON.stringify(e));
}).bind(this));
this._platformRecorder.onStop((e => {
this._busy = !1;
console.log("GameRecorder.onStop", JSON.stringify(e));
this._recordering = !1;
this._videoPath = e.videoPath;
this._videoDuration = orange.TimeUtil.serverTime - this._startStamp;
if (this._videoDuration < 4e3) {
this._recordBtn && a.default.showToast("Recording too short...");
this._videoPath = "";
}
this._updateButton();
}).bind(this));
}
}
start(e = 300) {
if (!this._busy) {
this._busy = !0;
this._platformRecorder.start(e);
}
}
stop() {
if (this._inited && this._recordering && !this._busy) {
this._busy = !0;
this._platformRecorder.stop();
}
}
stopAndClear() {
this.stop();
this._wxShareBtn && this._wxShareBtn.hide();
}
share(e) {
a.default.showLoading("分享录屏准备中");
this._platformRecorder.share({
channel: "video",
query: e.query,
extra: {
videoPath: this._videoPath,
videoTopics: e.topics,
hashtag_list: e.topics,
withVideoId: !0
},
success: (t => {
if (e.succ) {
a.default.showToast("Succeed share to TikTok!");
a.default.hideLoading();
e.succ(t);
} else a.default.hideLoading("分享成功");
}).bind(this),
fail: (t => {
if (e.fail) {
a.default.hideLoading();
e.fail(t);
} else {
var o = "分享失败";
t && t.errMsg && (o = t.errMsg);
a.default.hideLoading(o);
}
}).bind(this)
});
}
isResultShareable() {
return !!this._inited && null != this._platformRecorder && this._platformRecorder.isButtonShare();
}
showWxShareBtn(e) {
let t = {
query: e,
title: {
template: "default.score",
data: {
score: 1
}
},
bgm: "",
timeRange: [ [ 0, 6e4 ] ]
};
if (!this._wxShareBtn) {
let e = n.systemInfo.windowWidth / 2 - 50;
this._wxShareBtn = n.wx.createGameRecorderShareButton({
text: "分享录屏",
icon: null,
image: "",
style: {
left: 0,
top: n.systemInfo.windowHeight - 50,
height: 50,
paddingLeft: e,
paddingRight: e
},
share: t
});
}
this._wxShareBtn.share = t;
this._wxShareBtn.show();
}
hideWxShareBtn() {
this._wxShareBtn && this._wxShareBtn.hide();
}
}();
o.default = c;
cc._RF.pop();
}, {
"../CustomUI/Button": "Button",
"../Platform/Recorder/PlatformRecorderApp": "PlatformRecorderApp",
"./CrossPlatform": "CrossPlatform",
"./Top": "Top",
"./TweenUtil": "TweenUtil",
"./UIColor": "UIColor"
} ],
GameSaveMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3d162ZrArlFLL7gFXbooZlg", "GameSaveMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../../Frame/CrossPlatform");
class n {
constructor() {
this.tileMap = new Map();
this.actorMap = new Map();
this.deviceMap = new Map();
this.propMap = new Map();
}
load(e) {
return i.crossPlatform.getStorageSync("save:" + e);
}
save(e, t) {
i.crossPlatform.setStorageSync("save:" + e, t);
}
remove(e) {
i.crossPlatform.removeStorageSync("save:" + e);
}
setTileFlag(e, t) {
let o = this.tileMap.get(e) || new Set();
o.add(t);
this.tileMap.set(e, o);
}
getTileFlag(e, t) {
let o = this.tileMap.get(e);
return !!o && o.has(t);
}
setActorFlag(e, t) {
let o = this.actorMap.get(e) || new Set();
o.add(t);
this.actorMap.set(e, o);
}
getActorFlag(e, t) {
let o = this.actorMap.get(e);
return !!o && o.has(t);
}
setDeviceFlag(e, t) {
let o = this.deviceMap.get(e) || new Set();
o.add(t);
this.deviceMap.set(e, o);
}
getDeviceFlag(e, t) {
let o = this.deviceMap.get(e);
return !!o && o.has(t);
}
setPropFlag(e, t) {
let o = this.propMap.get(e) || new Set();
o.add(t);
this.propMap.set(e, o);
}
getPropFlag(e, t) {
let o = this.propMap.get(e);
return !!o && o.has(t);
}
makeSaveData() {
new Set([ 1 ]);
let e = [];
this.tileMap.forEach((t, o) => {
let i = Array.from(t);
e.push([ o, i ]);
});
let t = [];
this.actorMap.forEach((e, o) => {
let i = Array.from(e);
t.push([ o, i ]);
});
let o = [];
this.deviceMap.forEach((e, t) => {
let i = Array.from(e);
o.push([ t, i ]);
});
let i = [];
this.propMap.forEach((e, t) => {
let o = Array.from(e);
i.push([ t, o ]);
});
return {
tileMapArr: e,
actorMapArr: t,
deviceMapArr: o,
propMapArr: i
};
}
initSaveData(e) {
this.clearFlag();
if (e) {
e.tileMapArr.forEach(e => {
this.tileMap.set(e[0], new Set(e[1]));
});
e.actorMapArr.forEach(e => {
this.actorMap.set(e[0], new Set(e[1]));
});
e.deviceMapArr.forEach(e => {
this.deviceMap.set(e[0], new Set(e[1]));
});
e.propMapArr.forEach(e => {
this.propMap.set(e[0], new Set(e[1]));
});
}
}
clearFlag() {
this.tileMap.clear();
this.actorMap.clear();
this.deviceMap.clear();
this.propMap.clear();
}
}
o.default = n;
n.Ins = new n();
cc._RF.pop();
}, {
"../../Frame/CrossPlatform": "CrossPlatform"
} ],
GameScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b60f16nwURC8JlHgstapYZn", "GameScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../GameScript/index"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/HeroHeadIcon"), c = e("../../CustomUI/HpBar"), d = e("../../Frame/Config"), h = e("../../Frame/EngineManager"), p = e("../../Frame/FightSystem"), u = e("../../Frame/GameRecorder"), m = e("../../Frame/Scene"), f = e("../../Frame/SceneManager"), g = e("../../Frame/Top"), y = e("../../Frame/TweenUtil"), v = e("../../Frame/Util"), C = e("../../Game/DialogBox"), _ = e("../../Game/GameBoard"), S = e("../../Game/Player/Mng"), I = e("../../Game/Player/RunDataMng"), G = e("../../Game/World/Actor"), T = e("../../Game/World/AICtrl/GridRandomCtrl"), b = e("../../Game/World/AICtrl/GridStaticCtrl"), M = e("../../Game/World/AICtrl/PlatformJumpAiMoveCtrl"), P = e("../../Game/World/AICtrl/PlatformJumpAiStaticCtrl"), D = e("../../Game/World/Mover/GridMover"), w = e("../../Game/World/HeroContactTileCtrl"), B = e("../../Game/World/HeroInteractCtrl"), R = e("../../Game/World/MoverCtrl/DragMoverCtrl"), x = e("../../Game/World/MoverCtrl/GridMoverCtrl"), L = e("../../Game/World/MoverCtrl/PlatformJumpMoverCtrl"), k = e("../../Game/World/World"), F = e("../../TGA"), N = e("../../Game/Player/LifeMng"), A = e("../../Game/World/AICtrl/PlatformJumpAiFollowHeroCtrl"), O = e("../../CustomUI/ScrollList"), U = e("../../Game/Player/GamePetMng"), E = e("../../Game/World/AICtrl/PlatformJumpAiComMoveCtrl"), j = e("./ShiftWorldAnim"), H = e("../../Game/Player/GameBagMng"), W = e("../../Frame/UIColor"), V = e("../../Game/Player/GameSaveMng"), K = e("../../Game/Player/TriggerMng"), J = e("./GameBagBar"), Z = e("../../Game/World/Mover/DragMover"), z = e("../../Game/World/Mover/Mover"), X = e("../../Game/World/Mover/PlatformJumpMover"), q = e("../../Game/World/MoverCtrl/RpgMoverCtrl"), Y = e("../../Game/World/Mover/RpgMover"), $ = e("../../Game/World/CameraFollowers/WorldRpgCameraFollower"), Q = e("../../Game/World/CameraFollowers/WorldJumpCameraFollower"), ee = e("../../Frame/CrossPlatform"), te = e("./GameTimerComp"), oe = e("../../Game/Player/GameRankDataMng"), ie = e("../../../scripts/_autogen/data/data"), ne = e("../../Game/Player/GameRankMng"), ae = e("../../GameData/GameTypeDefine"), se = e("../../Game/Player/CoinMng"), re = e("../../Game/OperationFlow"), {ccclass: le, property: ce} = cc._decorator;
let de = i = class extends m.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.recorderBtn = null;
this.nameLabel = null;
this.bagBtn = null;
this.hpBar = null;
this.heroHeadIcon = null;
this.petList = null;
this.shiftWorldAnim = null;
this.bagBar = null;
this.countDownTimeNode = null;
this.countDownTimeLabel = null;
this.gameTimer = null;
this.heroContactTileCtrl = null;
this.heroInteractCtrl = null;
this.dialogBox = null;
this.gameData = null;
this.moverCtrl = null;
this.world = null;
this.backCall = null;
this._mode = "Test";
this.busy = !1;
this.curWorldId = null;
this.firstWorldId = "";
this.testHero = null;
this.shiftWorlding = !1;
this.tempSave = null;
this._heroDataMap = new Map();
this._cameraFollowersMap = new Map();
this._heroPetDatas = [];
}
get mode() {
return this._mode;
}
set mode(e) {
this._mode = e;
}
onLoad() {
this.backBtn.node.on(r.default.CLICK, this.onBackBtnTap, this);
this.bagBtn.node.on(r.default.CLICK, this.onBagBtnTap, this);
cc.game.on(i.SHOW_DIALOG_BOX, this.showDialog, this);
cc.game.on(i.GAME_SHOP, this.onGameShop, this);
cc.game.on(i.GAME_RANK, this.onGameRank, this);
cc.game.on(i.UPLOAD_GAME_RANK_SCORE, this.updateRankScore, this);
cc.game.on(i.GAME_OVER, this.gameOver, this);
cc.game.on(i.GAME_WIN, this.gameWin, this);
cc.game.on(i.HERO_PET_CHANGE, this.heroPetChange, this);
cc.game.on(i.SHARE_GAME, this.onShareGame, this);
cc.game.on(i.SHOW_AD, this.onShowAd, this);
this.heroContactTileCtrl = this.node.getComponent(w.default);
this.heroInteractCtrl = this.node.getComponent(B.default);
this.heroPetChange();
}
onDestroy() {
u.default.dettachRecordButton();
cc.game.off(i.SHOW_DIALOG_BOX, this.showDialog, this);
cc.game.off(i.GAME_SHOP, this.onGameShop, this);
cc.game.off(i.GAME_RANK, this.onGameRank, this);
cc.game.off(i.UPLOAD_GAME_RANK_SCORE, this.updateRankScore, this);
cc.game.off(i.GAME_OVER, this.gameOver, this);
cc.game.off(i.GAME_WIN, this.gameWin, this);
cc.game.off(i.HERO_PET_CHANGE, this.heroPetChange, this);
}
onEnterScene() {
_.GameBoard.IS_EDITOR_MODE = !1;
h.default.Ins.mainCamera.node.active = !1;
this.recorderBtn.node.active = !ee.tt;
this.resetRecorderBtn();
}
resetRecorderBtn() {
this.recorderBtn.background.node.color = W.UIColor.green;
this.recorderBtn.label.string = "录屏";
}
onExitScene() {
S.Mng.Ins.worldMng.tempCache.clear();
h.default.Ins.mainCamera.node.active = !0;
p.FightSystem.enable = !1;
this.backCall && this.backCall();
}
onBackBtnTap() {
return a(this, void 0, void 0, function*() {
if ("Test" == this.mode) {
V.default.Ins.clearFlag();
u.default.stopAndClear();
f.default.ins.Back();
this.resetWorld();
this.gameTimer.stop();
cc.game.emit(i.GameScene_EXIT, !1);
} else if ("Prod" == this.mode) {
this.pauseAll();
f.default.ins.OpenPanelByName("PausePanel", e => {
e.resumeCall = () => {
this.resumeAll();
};
e.exitCall = () => a(this, void 0, void 0, function*() {
V.default.Ins.clearFlag();
u.default.stopAndClear();
this.resetWorld();
f.default.ins.Back();
this.gameTimer.stop();
cc.game.emit(i.GameScene_EXIT, !1);
F.TGA.track("gamePlay", {
gameId: this.gameData.id,
step: "giveup"
});
});
});
}
});
}
onBagBtnTap() {
this.pauseAll();
f.default.ins.OpenPanelByName("BagPanel", e => {
let t = this.world.findHeroActor();
t && (e.triggerSource = t.node);
e.closeCallback = () => {
this.resumeAll();
};
});
}
ProcessHeroEnter(e, t) {
return a(this, void 0, void 0, function*() {
let o = !1;
if (e.isEnteredWorldTypes) e.isEnteredWorldTypes[t] || (o = !0); else {
o = !0;
e.isEnteredWorldTypes = [];
}
if (o) {
let o = yield S.Mng.Ins.actorMng.getOne(e.confId);
t == ae.WorldType.Rpg ? d.FillActorDataHelper.fillActorDataByRpgConf(e, o.rpgConf) : t == ae.WorldType.Jump && d.FillActorDataHelper.fillActorDataByJumpPlatformConf(e, o.jumpPlatformConf);
}
});
}
play(e, t = null, o = null) {
return a(this, void 0, void 0, function*() {
u.default.attachRecordButton(this.recorderBtn, {
video_title: "This game is so much fun！",
topics: [ "创游编辑器" ],
tgaFrom: "GameScene",
query: v.Util.toQueryStr({
type: "game",
isMine: !1,
cyGameId: e.id
}).replace(/:/g, "_"),
succ: () => a(this, void 0, void 0, function*() {
if (this.recorderBtn.dot.active) {
let e = yield se.default.Ins.requestAddCoinByShare();
if (!e) return;
re.OperationFlow.openRewards(e, () => {});
}
})
});
this.closeAllPanel();
this.gameData = e;
this.testHero = o;
this.firstWorldId = t || e.firstWorldId;
let i = this.firstWorldId;
this.world && (this.world.hero = null);
this._heroDataMap.clear();
this._heroConfId = "";
this.tempSave = null;
if (o) {
this._heroConfId = o.confId;
this._heroDataMap.set(o.confId, o);
}
this.resetWorld();
this.clearDialog();
let n = N.LifeMng.Ins.getLife(e.id);
if (n <= 0 && N.LifeMng.Ins.getLifeStamp(e.id) + N.LifeMng.Ins.recoverTime - orange.TimeUtil.serverTime <= 0) {
n = N.LifeMng.Ins.max;
N.LifeMng.Ins.setLife(e.id, N.LifeMng.Ins.max);
}
s.GSVariableMng.instance.resetValues();
H.default.Ins.clear();
I.default.Ins.clear();
U.GamePetMng.Ins.Clear();
V.default.Ins.clearFlag();
k.default.unionActSet.clear();
this.gameTimer.reset();
if (n > 0) {
this.shiftWorldById({
id: i,
onWorldReady: () => {
ee.tt && u.default.start();
}
});
F.TGA.track("gamePlay", {
gameId: e.id,
step: "beginPlay"
});
} else {
this.curWorldId = i;
this.gameOver({
str: "生命不足"
});
}
});
}
resetWorld() {
this.busy = !1;
this.moverCtrl && this.moverCtrl.setMover(null);
this.world && this.world.reset();
}
clearDialog() {
this.dialogBox && this.dialogBox.hide();
}
shiftWorldById(e) {
return a(this, void 0, void 0, function*() {
e.animId = e.animId || 2;
let t = yield S.Mng.Ins.worldMng.loadOne(e.id, !0);
if (!t) {
g.default.showToast("加载地图失败");
return;
}
if (this.shiftWorlding) return;
this.shiftWorlding = !0;
let o = v.Util.deepCopy(t.worldLayout);
o.type = t.info.type;
let n = null;
this.world && this.world.hero && (n = this.world.hero.data);
n || (n = this._heroDataMap.get(this._heroConfId));
n && (n.team = ae.Team.Hero);
this.pauseAll();
this.resetWorld();
this.setHeroActor(null);
this.curWorldId = t.id;
this.shiftWorldAnim.play(t, e.animId, () => a(this, void 0, void 0, function*() {
let i = this.world;
if (!i) {
let e = yield v.Util.loadBundleRes("Prefab/World"), t = cc.instantiate(e);
this.node.addChild(t);
i = t.getComponent(k.default);
}
this.world = i;
i.isGameScene = !0;
this.nameLabel.string = t.info.name;
i.setWorldData(t);
yield i.initByWorldLayout(o, t.id);
let a = d.Config.getWorldConfByType(t.info.type);
yield this.shiftMoverCtrl(a.moveType);
let s = i.findHeroActor();
if (s) {
this._heroConfId = s.data.confId;
n && this._heroDataMap.set(n.confId, n);
} else if (n) {
yield this.ProcessHeroEnter(n, t.info.type);
s = i.addActor(this.world.worldLayout.startPoint.pos);
yield s.setData(n);
}
if (s) {
s.SetPosition(o.startPoint.pos.x, o.startPoint.pos.y);
s.ApplyPosition();
}
this.setHeroActor(s);
this.initOtherMover(t.info.type);
s && n && k.default.unionActSet.union(n.id, s.data.id);
e.onWorldReady && (yield e.onWorldReady());
U.GamePetMng.Ins.InitWorldPets(i);
i.ready();
this.heroPetChange();
this.shiftWorldAnim.worldIsReady();
}), () => {
this.resumeAll();
this.shiftWorlding = !1;
this.world.play();
e.onShiftEnd && e.onShiftEnd();
cc.game.emit(i.GameScene_SHIFT_WORLD_END);
});
});
}
shiftMoverCtrl(e) {
return a(this, void 0, void 0, function*() {
this.moverCtrl && this.moverCtrl.node.destroy();
if (e == ae.MoveType.PlatformJump) {
let e = yield v.Util.loadBundleRes("Prefab/MoverCtrl/PlatformJumpMoverCtrl"), t = cc.instantiate(e);
this.node.insertChild(t, 0);
this.moverCtrl = t.getComponent(L.default);
} else if (e == ae.MoveType.GridMove) {
let e = yield v.Util.loadBundleRes("Prefab/MoverCtrl/GridMoverCtrl"), t = cc.instantiate(e);
this.node.insertChild(t, 0);
this.moverCtrl = t.getComponent(x.default);
} else if (e == ae.MoveType.Drag) {
let e = yield v.Util.loadBundleRes("Prefab/MoverCtrl/DragMoverCtrl"), t = cc.instantiate(e);
this.node.insertChild(t, 0);
this.moverCtrl = t.getComponent(R.default);
} else if (e == ae.MoveType.RpgMove) {
let e = yield v.Util.loadBundleRes("Prefab/MoverCtrl/RpgMoverCtrl"), t = cc.instantiate(e);
this.node.insertChild(t, 0);
this.moverCtrl = t.getComponent(q.default);
}
});
}
refreshHpBar() {
let e = this.world.findHeroActor();
if (e) {
this.hpBar.hp = e.hper.hp;
this.hpBar.hpMax = e.hper.HpMax;
this.hpBar.refresh();
}
}
onHeroBeaten(e) {
if (e.dmg > 0) {
y.TweenUtil.applyShakeShort(this.hpBar.node);
y.TweenUtil.applyShakeShort(this.heroHeadIcon.node);
}
}
setHeroActor(e) {
return a(this, void 0, void 0, function*() {
this.heroInteractCtrl.setHero(null);
this.heroContactTileCtrl.setHero(null);
this.setCameraFollow(null);
this.hpBar.hide();
this.heroHeadIcon.loadTexture(null);
if (this.moverCtrl) {
this.moverCtrl.setMover(null);
this.moverCtrl.hide();
}
if (this.world) {
let e = this.world.findHeroActor();
if (e) {
let t = e.node.getComponent(z.default);
if (t) {
e.node.removeComponent(t);
e.node.off(z.default.ActorMove, this.onHeroMove, this);
}
let o = e.hper.getEmitTarget();
o.off(p.FightSystem.Event.HpChange, this.refreshHpBar, this);
o.off(p.FightSystem.Event.HpMaxChange, this.refreshHpBar, this);
o.off(p.FightSystem.Event.Beaten, this.onHeroBeaten, this);
}
}
this.world && (this.world.hero = e);
if (e) {
if (this.moverCtrl instanceof L.default) {
let t = e.node.addComponent(X.default);
t.setActor(e);
this.moverCtrl.setMover(t);
t.node.on(z.default.ActorMove, this.onHeroMove, this);
} else if (this.moverCtrl instanceof x.default) {
let t = e.node.addComponent(D.default);
t.setActor(e);
this.moverCtrl.setMover(t);
t.node.on(z.default.ActorMove, this.onHeroMove, this);
} else if (this.moverCtrl instanceof R.default) {
let t = e.node.addComponent(Z.default);
this.moverCtrl.setMover(t);
t.node.on(z.default.ActorMove, this.onHeroMove, this);
} else if (this.moverCtrl instanceof q.default) {
let t = e.node.addComponent(Y.default);
t.setActor(e);
this.moverCtrl.setMover(t);
t.node.on(z.default.ActorMove, this.onHeroMove, this);
}
this.hpBar.show();
this.moverCtrl.show();
let t = e.hper.getEmitTarget();
t.on(p.FightSystem.Event.HpChange, this.refreshHpBar, this);
t.on(p.FightSystem.Event.HpMaxChange, this.refreshHpBar, this);
t.on(p.FightSystem.Event.Beaten, this.onHeroBeaten, this);
this.refreshHpBar();
this.heroContactTileCtrl.setHero(e);
this.heroInteractCtrl.setHero(e);
this.setCameraFollow(e);
let o = yield S.Mng.Ins.actorMng.loadOne(e.data.confId);
o && this.heroHeadIcon.loadTexture(o.textureName);
}
this.heroPetChange();
});
}
shiftHero(e) {
return a(this, void 0, void 0, function*() {
let t = yield S.Mng.Ins.actorMng.loadOne(e);
if (t && this.world) {
let o = this.world.hero;
if (o) this._heroDataMap.set(o.data.confId, o.data); else {
o = this.world.addActor(this.world.worldLayout.startPoint.pos);
this.setHeroActor(o);
}
let i = this._heroDataMap.get(e);
i || (i = G.default.createActorData(t, ae.Team.Hero, this.world.worldLayout));
this._heroConfId = e;
o.setData(i);
this.heroHeadIcon.loadTexture(t.textureName);
}
});
}
onHeroMove(e) {
this.world && this.world.isValid && this.world.node.emit(k.default.HERO_MOVE, e);
}
initAi(e, t) {
k.default.clearAi(t);
if (t.data.team == ae.Team.Enemy || t.data.team == ae.Team.Ally) {
if (e == ae.WorldType.Jump) if (t.data.aiMoveType == ae.AIMoveType.PlatformJump_Static || t.data.aiMoveType == ae.AIMoveType.None) t.node.addComponent(P.default).setActor(t); else if (t.data.aiMoveType == ae.AIMoveType.PlatformJump_IDLE) {
t.node.addComponent(X.default).setActor(t);
t.node.addComponent(P.default).setActor(t);
} else if (t.data.aiMoveType == ae.AIMoveType.PlatformJump_Ground_WallBack || t.data.aiMoveType == ae.AIMoveType.PlatformJump_Ground_MisstepBack || t.data.aiMoveType == ae.AIMoveType.PlatformJump_Jump_WallBack || t.data.aiMoveType == ae.AIMoveType.PlatformJump_Jump_Trace) {
let e = t.node.addComponent(X.default);
e.setActor(t);
t.node.addComponent(M.default).setMover(e);
} else t.data.aiMoveType == ae.AIMoveType.PlatformJump_FollowHero ? t.node.addComponent(A.default).setActor(t) : t.node.addComponent(E.default).setActor(t);
if (e == ae.WorldType.Rpg) if (t.data.aiMoveType == ae.AIMoveType.Grid_Random) {
let e = t.node.addComponent(D.default);
e.setActor(t);
t.node.addComponent(T.default).setMover(e);
} else if (t.data.aiMoveType == ae.AIMoveType.Grid_Static) {
let e = t.node.addComponent(D.default);
e.setActor(t);
t.node.addComponent(b.default).setMover(e);
} else t.data.aiMoveType == ae.AIMoveType.PlatformJump_FollowHero ? t.node.addComponent(A.default).setActor(t) : t.node.addComponent(E.default).setActor(t);
}
}
initOtherMover(e) {
for (let t = 0; t < this.world.actors.length; t++) {
let o = this.world.actors[t];
o.data.team != ae.Team.Enemy && o.data.team != ae.Team.Ally || this.initAi(e, o);
}
}
setCameraFollow(e) {
if (!this.world) return;
if (0 == this._cameraFollowersMap.size) {
this._cameraFollowersMap.set(ae.WorldType.Rpg, new $.WorldRpgCameraFollower());
this._cameraFollowersMap.set(ae.WorldType.Jump, new Q.WorldJumpCameraFollower());
}
let t = this.world.worldLayout.type, o = this.world.cameraFollowCtrl;
o.setCamera(this.world.camera, this._cameraFollowersMap.get(t));
switch (t) {
case ae.WorldType.Jump:
case ae.WorldType.Rpg:
if (e) {
o.setTarget(e.node);
o.centerOnTarget();
} else o.setTarget(null);
break;

case ae.WorldType.Shoot:
o.setTarget(null);
}
this.world.centerLayers();
}
showDialog(e, t, o) {
return a(this, void 0, void 0, function*() {
if (!this.dialogBox) {
let e = yield v.Util.loadBundleRes("Prefab/DialogBox"), t = cc.instantiate(e);
this.node.addChild(t);
this.dialogBox = t.getComponent(C.default);
}
if (this.dialogBox.check(e)) {
this.pauseAll();
this.dialogBox.showing ? this.dialogBox.insert(e) : this.dialogBox.show(e, t);
this.dialogBox.closeCall = () => {
this.resumeAll();
o && o();
};
}
});
}
onGameShop(e, t) {
return a(this, void 0, void 0, function*() {
if (!e) return;
let t = "";
t = "string" == typeof e ? e : e.gameShopId;
let o = yield S.Mng.Ins.gameShopMng.loadOne(t);
if (o) {
this.pauseAll();
f.default.ins.OpenPanelByName("GameShopPanel", e => {
e.setData(o);
e.closeCallback = () => {
this.resumeAll();
};
});
}
});
}
onGameRank(e, t) {
return a(this, void 0, void 0, function*() {
if (!e) return;
let t = e.gameRankId, o = yield S.Mng.Ins.gameRankMng.loadOne(t);
if (o) {
this.pauseAll();
f.default.ins.OpenPanelByName("GameRankPanel", e => {
e.setData(o, this.gameData);
e.closeCallback = () => {
this.resumeAll();
};
});
}
});
}
updateRankScore(e, t) {
return a(this, void 0, void 0, function*() {
if (e) {
let o = 0, i = e.gameRankId, n = yield S.Mng.Ins.gameRankMng.loadOne(i);
if (n) {
switch (n.rankType) {
case ne.GameRankType.ShortTime:
case ne.GameRankType.LongTime:
if (!this.gameTimer.started) {
this.world.playFloatLabel({
str: "计时器未启动",
pos: t.position,
color: W.UIColor.yellow,
anim: "FlashLabel",
size: 40
});
return;
}
if ("timer" == this.gameTimer.mode) o = this.gameTimer.getCurTimer(); else if ("countDown" == this.gameTimer.mode) {
this.world.playFloatLabel({
str: "倒计时不能上传排行榜",
pos: t.position,
color: W.UIColor.yellow,
anim: "FlashLabel",
size: 40
});
return;
}
break;

case ne.GameRankType.PropRank:
o = H.default.Ins.getCnt(n.propId);
break;

case ne.GameRankType.CustomRank:
o = s.GSVariableMng.instance.getValueByJulian(n.variableId);
}
let e = new ie.ScoreInfo();
e.id = i;
e.score = o;
yield oe.default.Ins.uploadScore(this.gameData.id, [ e ]);
this.world.playFloatLabel({
str: "分数已上传",
pos: t.position,
color: W.UIColor.yellow,
anim: "JumpLabel",
size: 40
});
}
}
});
}
onShareGame(e, t) {
this.pauseAll();
f.default.ins.OpenPanelByName("GameSharePanel", o => {
o.setData(this.gameData, e, t);
o.closeCallback = () => {
this.resumeAll();
};
});
}
onShowAd(e, t) {
this.pauseAll();
f.default.ins.OpenPanelByName("GameAdPanel", o => {
o.setData(this.gameData, e, t);
o.closeCallback = () => {
this.resumeAll();
};
});
}
gameOver(e, t) {
return a(this, void 0, void 0, function*() {
if (this.busy) return;
this.busy = !0;
this.pauseAll();
this.gameTimer.stop();
this.resetRecorderBtn();
let o = "2";
if (this.world) {
let e = this.world.findHeroActor();
e && (o = e.data.confId);
}
f.default.ins.OpenPanelByName("GameOverPanel", i => {
i.setData({
actorConfId: o,
titleStr: (null == e ? void 0 : e.str) || "Game Over",
gameData: this.gameData,
isProd: "Prod" == this.mode,
gameRankId: null == e ? void 0 : e.gameRankId
});
i.replayCall = () => a(this, void 0, void 0, function*() {
this.busy = !1;
t && t();
if (this.tempSave) this.initWithSave(this.tempSave); else {
let e = V.default.Ins.load(this.gameData.id);
this.initWithSave(e);
}
F.TGA.track("gamePlay", {
gameId: this.gameData.id,
step: "reborn"
});
});
});
F.TGA.track("gamePlay", {
gameId: this.gameData.id,
step: "gameOver"
});
});
}
gameWin(e, t) {
return a(this, void 0, void 0, function*() {
if (this.busy) return;
this.busy = !0;
this.pauseAll();
this.gameTimer.stop();
let o = this.world.findHeroActor(), n = yield S.Mng.Ins.actorMng.loadOne(o.data.confId);
f.default.ins.OpenPanelByName("GameWinPanel", o => {
o.setData({
textureName: n.textureName,
titleStr: (null == e ? void 0 : e.str) || "恭喜过关!",
gameData: this.gameData,
isProd: "Prod" == this.mode,
gameRankId: null == e ? void 0 : e.gameRankId
});
o.backCall = () => {
this.busy = !1;
t && t();
f.default.ins.Back();
cc.game.emit(i.GameScene_EXIT, !0);
};
o.replayCall = () => {
this.busy = !1;
this.play(this.gameData, this.firstWorldId, this.testHero);
};
});
F.TGA.track("gamePlay", {
gameId: this.gameData.id,
step: "gameWin"
});
});
}
heroPetChange() {
this._heroPetDatas.length = 0;
if (this.world && this.world.hero) {
let e = this.world.hero.petList;
for (let t of e) t.conf && this._heroPetDatas.push({
id: t.id,
icon: t.conf.textureName,
onDelete: this.onDeletePet.bind(this)
});
}
this.petList.setDataArr(this._heroPetDatas);
}
onDeletePet(e) {
this.world && this.world.hero && this.world.hero.removePet(e);
}
pauseAll() {
p.FightSystem.enable = !1;
this.world && this.world.pause();
this.moverCtrl && this.moverCtrl.hide();
this.bagBar.hide();
this.hpBar.hide();
this.heroHeadIcon.hide();
this.bagBtn.node.active = !1;
this.recorderBtn.node.active = !1;
this.gameTimer.pause();
}
resumeAll() {
p.FightSystem.enable = !0;
this.world && this.world.resume();
this.moverCtrl && this.moverCtrl.show();
this.bagBar.show();
this.hpBar.show();
this.heroHeadIcon.show();
this.bagBtn.node.active = !0;
this.recorderBtn.node.active = !ee.tt;
this.gameTimer.resume();
}
makeSave() {
let e = this.world.hero, t = this.world.worldData;
if (this.world.hero) {
let e = v.Util.deepCopy(this.world.hero.data);
this._heroDataMap.set(this.world.hero.data.confId, e);
}
return {
gameId: this.gameData.id,
worldId: t.id,
heroPos: {
x: e.PositionX,
y: e.PositionY
},
heroDataArray: Array.from(this._heroDataMap),
heroConfId: this._heroConfId,
bag: H.default.Ins.makeData(),
variables: s.GSVariableMng.instance.makeData(),
flag: V.default.Ins.makeSaveData(),
pets: U.GamePetMng.Ins.Save()
};
}
initWithSave(e) {
return a(this, void 0, void 0, function*() {
this.gameTimer.stop();
if (e) {
let t = e.worldId;
this._heroDataMap = new Map(e.heroDataArray);
this._heroConfId = e.heroConfId || "";
let o = this._heroDataMap.get(this._heroConfId);
H.default.Ins.initWithData(e.bag);
s.GSVariableMng.instance.initWithData(e.variables);
V.default.Ins.initSaveData(e.flag);
U.GamePetMng.Ins.Read(e.pets);
this.shiftWorldById({
id: t,
onWorldReady: () => a(this, void 0, void 0, function*() {
if (this.world.hero) {
let t = e.heroPos;
this.world.hero.SetPosition(t.x, t.y);
this.world.hero.ApplyPosition();
o && (yield this.world.hero.setData(o));
}
}),
onShiftEnd: () => {
ee.tt && u.default.start();
}
});
} else this.shiftWorldById({
id: this.firstWorldId,
onWorldReady: () => {
H.default.Ins.clear();
s.GSVariableMng.instance.resetValues();
},
onShiftEnd: () => {
ee.tt && u.default.start();
}
});
});
}
save(e, t) {
if (this.gameTimer.started) {
g.default.showToast("计时期间不能存档");
return;
}
let o = this.makeSave();
this.tempSave = o;
V.default.Ins.save(this.gameData.id, o);
t && this.world.playFloatLabel({
str: "已保存",
pos: t.position,
color: W.UIColor.yellow,
anim: "JumpLabel",
size: 40
});
}
load(e, t) {
let o = V.default.Ins.load(this.gameData.id);
o ? this.initWithSave(o) : t && this.world.playFloatLabel({
str: "暂无存档",
pos: t.position,
color: W.UIColor.yellow,
anim: "JumpLabel",
size: 40
});
}
clearSave(e, t) {
V.default.Ins.remove(this.gameData.id);
t && this.world.playFloatLabel({
str: "已删除存档",
pos: t.position,
color: W.UIColor.yellow,
anim: "JumpLabel",
size: 40
});
}
triggerShiftWorld(e) {
e.extra && this.shiftWorldById({
id: e.extra.worldId,
animId: e.extra.animId,
onWorldReady: () => {
this.world.hero && this.world.moveActor(this.world.hero, e.extra.coor);
},
onShiftEnd: () => a(this, void 0, void 0, function*() {
e.extra.evts && Array.isArray(e.extra.evts) && (yield K.default.Ins.emitTrigger(e.extra.evts, null));
this.tempSave = this.makeSave();
})
});
}
onStartGameTimer(e, t, o) {
0 == (t = t || 0) ? this.gameTimer.startCountDown(e, o) : this.gameTimer.startTimer(e, o);
}
onStopGameTimer() {
this.gameTimer.stop();
}
};
de.GameScene_EXIT = "GameScene_EXIT";
de.GameScene_SHIFT_WORLD_END = "GameScene_SHIFT_WORLD_END";
de.SHOW_DIALOG_BOX = "SHOW_DIALOG_BOX";
de.GAME_SHOP = "GAME_SHOP";
de.GAME_RANK = "GAME_RANK";
de.UPLOAD_GAME_RANK_SCORE = "UPLOAD_GAME_RANK_SCORE";
de.GAME_OVER = "GAME_OVER";
de.GAME_WIN = "GAME_WIN";
de.HERO_MOVE = "HERO_MOVE";
de.HERO_PET_CHANGE = "HERO_PET_CHANGE";
de.SHARE_GAME = "SHARE_GAME";
de.SHOW_AD = "SHOW_AD";
n([ ce(r.default) ], de.prototype, "backBtn", void 0);
n([ ce(r.default) ], de.prototype, "recorderBtn", void 0);
n([ ce(cc.Label) ], de.prototype, "nameLabel", void 0);
n([ ce(r.default) ], de.prototype, "bagBtn", void 0);
n([ ce(c.default) ], de.prototype, "hpBar", void 0);
n([ ce(l.default) ], de.prototype, "heroHeadIcon", void 0);
n([ ce(O.default) ], de.prototype, "petList", void 0);
n([ ce(j.default) ], de.prototype, "shiftWorldAnim", void 0);
n([ ce(J.default) ], de.prototype, "bagBar", void 0);
n([ ce(cc.Node) ], de.prototype, "countDownTimeNode", void 0);
n([ ce(cc.Label) ], de.prototype, "countDownTimeLabel", void 0);
n([ ce(te.GameTimerComp) ], de.prototype, "gameTimer", void 0);
de = i = n([ le ], de);
o.default = de;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeroHeadIcon": "HeroHeadIcon",
"../../CustomUI/HpBar": "HpBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/EngineManager": "EngineManager",
"../../Frame/FightSystem": "FightSystem",
"../../Frame/GameRecorder": "GameRecorder",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/DialogBox": "DialogBox",
"../../Game/GameBoard": "GameBoard",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/GamePetMng": "GamePetMng",
"../../Game/Player/GameRankDataMng": "GameRankDataMng",
"../../Game/Player/GameRankMng": "GameRankMng",
"../../Game/Player/GameSaveMng": "GameSaveMng",
"../../Game/Player/LifeMng": "LifeMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/RunDataMng": "RunDataMng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../Game/World/AICtrl/GridRandomCtrl": "GridRandomCtrl",
"../../Game/World/AICtrl/GridStaticCtrl": "GridStaticCtrl",
"../../Game/World/AICtrl/PlatformJumpAiComMoveCtrl": "PlatformJumpAiComMoveCtrl",
"../../Game/World/AICtrl/PlatformJumpAiFollowHeroCtrl": "PlatformJumpAiFollowHeroCtrl",
"../../Game/World/AICtrl/PlatformJumpAiMoveCtrl": "PlatformJumpAiMoveCtrl",
"../../Game/World/AICtrl/PlatformJumpAiStaticCtrl": "PlatformJumpAiStaticCtrl",
"../../Game/World/Actor": "Actor",
"../../Game/World/CameraFollowers/WorldJumpCameraFollower": "WorldJumpCameraFollower",
"../../Game/World/CameraFollowers/WorldRpgCameraFollower": "WorldRpgCameraFollower",
"../../Game/World/HeroContactTileCtrl": "HeroContactTileCtrl",
"../../Game/World/HeroInteractCtrl": "HeroInteractCtrl",
"../../Game/World/Mover/DragMover": "DragMover",
"../../Game/World/Mover/GridMover": "GridMover",
"../../Game/World/Mover/Mover": "Mover",
"../../Game/World/Mover/PlatformJumpMover": "PlatformJumpMover",
"../../Game/World/Mover/RpgMover": "RpgMover",
"../../Game/World/MoverCtrl/DragMoverCtrl": "DragMoverCtrl",
"../../Game/World/MoverCtrl/GridMoverCtrl": "GridMoverCtrl",
"../../Game/World/MoverCtrl/PlatformJumpMoverCtrl": "PlatformJumpMoverCtrl",
"../../Game/World/MoverCtrl/RpgMoverCtrl": "RpgMoverCtrl",
"../../Game/World/World": "World",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../GameScript/index": "index",
"../../TGA": "TGA",
"./GameBagBar": "GameBagBar",
"./GameTimerComp": "GameTimerComp",
"./ShiftWorldAnim": "ShiftWorldAnim"
} ],
GameScriptData: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d1becb347lP2bRIDMwRABN9", "GameScriptData");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSDataNodeBuildHelper = o.GSDataNodeType = o.ActPropertyValueType = o.ActType = o.GSSelectValueType = o.GSComputeTypeStrMap = o.GSCompareTypeStrMap = o.GSPerDepthNodeCount = void 0;
const i = e("./GameScriptDefines");
o.GSPerDepthNodeCount = 1e4;
o.GSCompareTypeStrMap = new Map([ [ i.GSCompareType.GREATER, ">" ], [ i.GSCompareType.GREATER_EQUAL, ">=" ], [ i.GSCompareType.LESS, "<" ], [ i.GSCompareType.LESS_EQUAL, "<=" ], [ i.GSCompareType.EQUAL, "=" ] ]);
o.GSComputeTypeStrMap = new Map([ [ i.GSComputeType.EQUAL, "设置为" ], [ i.GSComputeType.ADD, "加上" ], [ i.GSComputeType.SUB, "减去" ], [ i.GSComputeType.MUL, "乘以" ], [ i.GSComputeType.DIV, "除以" ] ]);
var n, a, s;
(function(e) {
e[e.Variable = 0] = "Variable";
e[e.Item = 1] = "Item";
})(n = o.GSSelectValueType || (o.GSSelectValueType = {}));
(function(e) {
e[e.Tile = 0] = "Tile";
e[e.Hero = 1] = "Hero";
e[e.Enemy = 2] = "Enemy";
e[e.Npc = 3] = "Npc";
e[e.Device = 4] = "Device";
})(a = o.ActType || (o.ActType = {}));
(function(e) {
e[e.Float = 0] = "Float";
e[e.Bool = 1] = "Bool";
e[e.Weapon = 2] = "Weapon";
})(o.ActPropertyValueType || (o.ActPropertyValueType = {}));
(function(e) {
e[e.G_Start = 1] = "G_Start";
e[e.G_Add = 2] = "G_Add";
e[e.GFLOW_If = 1001] = "GFLOW_If";
e[e.GFLOW_IfElse = 1002] = "GFLOW_IfElse";
e[e.GFLOW_WAIT = 1003] = "GFLOW_WAIT";
e[e.GINTERACTION_Dialog = 2001] = "GINTERACTION_Dialog";
e[e.GDATA_DropItem = 3001] = "GDATA_DropItem";
e[e.GDATA_ChangeBagItem = 3002] = "GDATA_ChangeBagItem";
e[e.GDATA_ChangeVariable = 3003] = "GDATA_ChangeVariable";
e[e.GDATA_ChangeActorProperty = 3004] = "GDATA_ChangeActorProperty";
e[e.GDATA_ChangeHeroProperty = 3005] = "GDATA_ChangeHeroProperty";
e[e.GSYS_ShowGameWin = 4001] = "GSYS_ShowGameWin";
e[e.GSYS_ShowGameOver = 4002] = "GSYS_ShowGameOver";
e[e.GSYS_SwitchMap = 4003] = "GSYS_SwitchMap";
e[e.GSYS_SwitchHero = 4004] = "GSYS_SwitchHero";
e[e.GSYS_TimeCountDownStart = 4005] = "GSYS_TimeCountDownStart";
e[e.GSYS_TimeCountDownStop = 4006] = "GSYS_TimeCountDownStop";
e[e.GSCREEN_CameraShake = 5001] = "GSCREEN_CameraShake";
e[e.GSOUND_PlaySfx = 6001] = "GSOUND_PlaySfx";
})(s = o.GSDataNodeType || (o.GSDataNodeType = {}));
class r {
static ResetDataNodeIdx(e) {
this._dataNodeIdx = e;
}
static NewGSDataCompareValue() {
return {
type: n.Variable,
compare: i.GSCompareType.EQUAL
};
}
static NewGSDataConditione(e) {
return {
a: e,
logicType: i.GSLogicType.AND,
next: null
};
}
static NewGSDataDialogueLine() {
return {
actorConfId: null,
dialogue: ""
};
}
static NewGSDataNode(e) {
let t = null;
switch (e) {
case s.G_Start:
t = this.NewGSDataNodeStart();
break;

case s.G_Add:
t = this.NewGSDataNodeAdd();
break;

case s.GFLOW_If:
t = this.NewGSDataNodeFlowIf();
break;

case s.GFLOW_IfElse:
t = this.NewGSDataNodeFlowIfElse();
break;

case s.GFLOW_WAIT:
t = this.NewGSDataNodeFlowWait();
break;

case s.GINTERACTION_Dialog:
t = this.NewGSDataNodeInteractionDialog();
break;

case s.GDATA_DropItem:
t = this.NewGSDataNodeDataDropItem();
break;

case s.GDATA_ChangeBagItem:
t = this.NewGSDataNodeDataChangeBagItem();
break;

case s.GDATA_ChangeVariable:
t = this.NewGSDataNodeDataChangeVariable();
break;

case s.GDATA_ChangeActorProperty:
t = this.NewGSDataNodeDataChangeActorProperty();
break;

case s.GDATA_ChangeHeroProperty:
t = this.NewGSDataNodeDataChangeHeroProperty();
break;

case s.GSYS_ShowGameWin:
t = this.NewGSDataNodeSysShowGameWin();
break;

case s.GSYS_ShowGameOver:
t = this.NewGSDataNodeSysShowGameOver();
break;

case s.GSYS_SwitchMap:
t = this.NewGSDataNodeSysSwitchMap();
break;

case s.GSYS_SwitchHero:
t = this.NewGSDataNodeSysSwitchHero();
break;

case s.GSYS_TimeCountDownStart:
t = this.NewGSDataNodeSysTimeCountDownStart();
break;

case s.GSYS_TimeCountDownStop:
t = this.NewGSDataNodeSysTimeCountDownStop();
break;

case s.GSCREEN_CameraShake:
t = this.NewGSDataNodeScreenCameraShake();
break;

case s.GSOUND_PlaySfx:
t = this.NewGSDataNodeSoundPlaySfx();
}
t.id = this._dataNodeIdx++;
return t;
}
static NewGSDataNodeStart() {
return {
type: s.G_Start,
childs: [ r.NewGSDataNode(s.G_Add) ]
};
}
static NewGSDataNodeAdd() {
return {
type: s.G_Add
};
}
static NewGSDataNodeFlowIf() {
return {
type: s.GFLOW_If,
condition: {
a: null,
logicType: i.GSLogicType.AND,
next: null
},
childs: [ r.NewGSDataNode(s.G_Add) ]
};
}
static NewGSDataNodeFlowIfElse() {
return {
type: s.GFLOW_IfElse,
condition: {
a: null,
logicType: i.GSLogicType.AND,
next: null
},
childs_true: [ r.NewGSDataNode(s.G_Add) ],
childs_false: [ r.NewGSDataNode(s.G_Add) ]
};
}
static NewGSDataNodeFlowWait() {
return {
type: s.GFLOW_WAIT,
waitSecond: 0
};
}
static NewGSDataNodeInteractionDialog() {
return {
type: s.GINTERACTION_Dialog,
dialogueLines: []
};
}
static NewGSDataNodeDataDropItem() {
return {
type: s.GDATA_DropItem,
compareValue: 1,
useGravity: !1
};
}
static NewGSDataNodeDataChangeBagItem() {
return {
type: s.GDATA_ChangeBagItem,
addValue: 1,
isReduce: !1
};
}
static NewGSDataNodeDataChangeVariable() {
return {
type: s.GDATA_ChangeVariable,
v: i.GSNodeBuildHelper.NewIGSNodeValue(!0, -1, i.GSValueType.FLOAT, "0"),
hasCompute: !1,
computeType: i.GSComputeType.ADD,
a: i.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, i.GSValueType.FLOAT, "0")
};
}
static NewGSDataNodeDataChangeActorProperty() {
return {
type: s.GDATA_ChangeActorProperty,
actorId: null,
actType: a.Hero,
opType: -1,
propertyName: "",
propertyValue: "0",
isTileUnit: !1
};
}
static NewGSDataNodeDataChangeHeroProperty() {
return {
type: s.GDATA_ChangeHeroProperty,
opType: -1,
propertyName: "",
propertyValue: "0",
isTileUnit: !1
};
}
static NewGSDataNodeSysShowGameWin() {
return {
type: s.GSYS_ShowGameWin,
content: ""
};
}
static NewGSDataNodeSysShowGameOver() {
return {
type: s.GSYS_ShowGameOver,
content: ""
};
}
static NewGSDataNodeSysSwitchMap() {
return {
type: s.GSYS_SwitchMap,
worldId: null,
coor: {
iCol: 0,
iRow: 0
}
};
}
static NewGSDataNodeSysSwitchHero() {
return {
type: s.GSYS_SwitchHero,
confId: null
};
}
static NewGSDataNodeSysTimeCountDownStart() {
return {
type: s.GSYS_TimeCountDownStart,
timer: 10,
timerType: 0,
evts: []
};
}
static NewGSDataNodeSysTimeCountDownStop() {
return {
type: s.GSYS_TimeCountDownStop
};
}
static NewGSDataNodeScreenCameraShake() {
return {
type: s.GSCREEN_CameraShake,
speed: 200,
range: 6,
times: 3
};
}
static NewGSDataNodeSoundPlaySfx() {
return {
type: s.GSOUND_PlaySfx,
data: i.GSNodeBuildHelper.NewIGSNodeCall(i.GSCmdType.PlaySfx, {})
};
}
}
o.GSDataNodeBuildHelper = r;
r._dataNodeIdx = 0;
cc._RF.pop();
}, {
"./GameScriptDefines": "GameScriptDefines"
} ],
GameScriptDefines: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3aee8FmITlO/L2az5hP4u1N", "GameScriptDefines");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GSNodeBuildHelper = o.HaseReturnValue = o.GSCmdType = o.GSLogicType = o.GSCompareType = o.GSComputeType = o.GSNodeType = o.GSValueRefType = o.GSValueType = void 0;
var i, n;
(function(e) {
e[e.INT = 0] = "INT";
e[e.FLOAT = 1] = "FLOAT";
e[e.BOOL = 2] = "BOOL";
e[e.STRING = 3] = "STRING";
})(o.GSValueType || (o.GSValueType = {}));
(function(e) {
e[e.VARIABLE = 0] = "VARIABLE";
e[e.ITEM = 1] = "ITEM";
})(i = o.GSValueRefType || (o.GSValueRefType = {}));
(function(e) {
e[e.BLOCK = 0] = "BLOCK";
e[e.VALUE = 1] = "VALUE";
e[e.ASSIGN = 2] = "ASSIGN";
e[e.COMPUTE = 3] = "COMPUTE";
e[e.COMPARE = 4] = "COMPARE";
e[e.LOGIC = 5] = "LOGIC";
e[e.CALL = 6] = "CALL";
e[e.IF = 7] = "IF";
e[e.IF_ELSE = 8] = "IF_ELSE";
e[e.WHILE_COUNT = 9] = "WHILE_COUNT";
e[e.WHILE = 10] = "WHILE";
e[e.BREAK = 11] = "BREAK";
e[e.STOP = 12] = "STOP";
})(n = o.GSNodeType || (o.GSNodeType = {}));
(function(e) {
e[e.EQUAL = -1] = "EQUAL";
e[e.ADD = 0] = "ADD";
e[e.SUB = 1] = "SUB";
e[e.MUL = 2] = "MUL";
e[e.DIV = 3] = "DIV";
})(o.GSComputeType || (o.GSComputeType = {}));
(function(e) {
e[e.GREATER = 0] = "GREATER";
e[e.GREATER_EQUAL = 1] = "GREATER_EQUAL";
e[e.LESS = 2] = "LESS";
e[e.LESS_EQUAL = 3] = "LESS_EQUAL";
e[e.EQUAL = 4] = "EQUAL";
e[e.NONEQUAL = 5] = "NONEQUAL";
})(o.GSCompareType || (o.GSCompareType = {}));
(function(e) {
e[e.AND = 0] = "AND";
e[e.OR = 1] = "OR";
})(o.GSLogicType || (o.GSLogicType = {}));
(function(e) {
e[e.Test = 0] = "Test";
e[e.SetVariable = 1] = "SetVariable";
e[e.Wait = 2] = "Wait";
e[e.Dialog = 3] = "Dialog";
e[e.DropItem = 4] = "DropItem";
e[e.ChangeBagItem = 5] = "ChangeBagItem";
e[e.ChangeActorProperty = 6] = "ChangeActorProperty";
e[e.ShowGameWin = 7] = "ShowGameWin";
e[e.ShowGameOver = 8] = "ShowGameOver";
e[e.SwitchMap = 9] = "SwitchMap";
e[e.CameraShake = 10] = "CameraShake";
e[e.PlaySfx = 11] = "PlaySfx";
e[e.SwitchHero = 12] = "SwitchHero";
e[e.ChangeHeroProperty = 13] = "ChangeHeroProperty";
e[e.TimeCountDownStart = 14] = "TimeCountDownStart";
e[e.TimeCountDownStop = 15] = "TimeCountDownStop";
})(o.GSCmdType || (o.GSCmdType = {}));
o.HaseReturnValue = function(e) {
return e == n.VALUE || e == n.COMPUTE || e == n.COMPARE || e == n.LOGIC;
};
o.GSNodeBuildHelper = class {
static NewIGSNodeBlock() {
return {
nodeType: n.BLOCK,
childs: []
};
}
static NewIGSNodeValue(e, t, o, a) {
return {
nodeType: n.VALUE,
isRef: e,
refType: i.VARIABLE,
refId: t,
valueType: o,
value: a
};
}
static NewIGSNodeRefValue(e, t, o) {
return {
nodeType: n.VALUE,
isRef: !0,
refType: t,
refId: e,
valueType: 0,
value: o
};
}
static NewIGSNodeAsign(e, t) {
return {
nodeType: n.ASSIGN,
a: e,
b: t
};
}
static NewIGSNodeCompute(e, t, o) {
return {
nodeType: n.COMPUTE,
computeType: e,
a: t,
b: o
};
}
static NewIGSNodeCompare(e, t, o) {
return {
nodeType: n.COMPARE,
compareType: e,
a: t,
b: o
};
}
static NewIGSNodeLogic(e, t, o) {
return {
nodeType: n.LOGIC,
logicType: e,
a: t,
b: o
};
}
static NewIGSNodeCall(e, t) {
return {
nodeType: n.CALL,
cmdType: e,
param: t
};
}
static NewIGSNodeIf(e, t, o) {
return {
nodeType: n.IF,
compare: e,
logic: t,
block: o
};
}
static NewIGSNodeIfElse(e, t, o, i) {
return {
nodeType: n.IF_ELSE,
compare: e,
logic: t,
block1: o,
block2: i
};
}
static NewIGSNodeWhileCount(e, t) {
return {
nodeType: n.WHILE_COUNT,
count: e,
block: t
};
}
static NewIGSNodeWhile(e, t, o) {
return {
nodeType: n.WHILE,
compare: e,
logic: t,
block: o
};
}
static NewIGSNodeBreak() {
return {
nodeType: n.BREAK
};
}
};
cc._RF.pop();
}, {} ],
GameScriptTest: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef884Nr6MBMMZRqdI5yr1MF", "GameScriptTest");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../index"), a = e("../GameScriptDefines"), s = e("../GSMng"), r = e("../GSRunnerMng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
onLoad() {
s.GSMng.instance;
let e = 0, t = [], o = n.GSVariableMng.instance.addNewVariable({
id: "1:1:1",
idx: 0,
name: "a",
desc: "",
valueType: n.GSValueType.INT,
defaultValue: "11",
readonly: !1
}), i = n.GSVariableMng.instance.addNewVariable({
id: "1:1:2",
idx: 1,
name: "b",
desc: "",
valueType: n.GSValueType.INT,
defaultValue: "20",
readonly: !1
}), l = n.GSNodeBuildHelper.NewIGSNodeValue(!0, o, n.GSValueType.INT, null), c = n.GSNodeBuildHelper.NewIGSNodeValue(!0, i, n.GSValueType.INT, null), d = n.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, n.GSValueType.INT, "15"), h = n.GSNodeBuildHelper.NewIGSNodeValue(!1, -1, n.GSValueType.INT, "1"), p = n.GSNodeBuildHelper.NewIGSNodeCall(n.GSCmdType.Test, "" + e++);
t.push(p);
let u = n.GSNodeBuildHelper.NewIGSNodeBlock();
for (let t = 0; t < 5; ++t) {
p = n.GSNodeBuildHelper.NewIGSNodeCall(n.GSCmdType.Test, "" + e++);
u.childs.push(p);
let o = n.GSNodeBuildHelper.NewIGSNodeCall(n.GSCmdType.Wait, 1);
u.childs.push(o);
if (2 == t) {
let e = n.GSNodeBuildHelper.NewIGSNodeBlock();
e.childs.push(n.GSNodeBuildHelper.NewIGSNodeBreak());
let t = n.GSNodeBuildHelper.NewIGSNodeCompare(n.GSCompareType.EQUAL, l, d), o = n.GSNodeBuildHelper.NewIGSNodeIf(t, null, e);
u.childs.push(o);
let i = n.GSNodeBuildHelper.NewIGSNodeCompute(a.GSComputeType.ADD, l, h), s = n.GSNodeBuildHelper.NewIGSNodeAsign(l, i);
u.childs.push(s);
}
}
let m = n.GSNodeBuildHelper.NewIGSNodeBlock();
for (let t = 0; t < 5; ++t) {
(p = n.GSNodeBuildHelper.NewIGSNodeCall(n.GSCmdType.Test, "" + e++)).param = "" + e++;
m.childs.push(p);
}
let f = n.GSNodeBuildHelper.NewIGSNodeCompare(n.GSCompareType.LESS_EQUAL, l, c), g = n.GSNodeBuildHelper.NewIGSNodeLogic(n.GSLogicType.AND, f, null), y = n.GSNodeBuildHelper.NewIGSNodeWhile(null, g, u);
t.push(y);
r.GSRunnerMng.instance.excuteScript(t, -1);
}
start() {}
update() {
r.GSRunnerMng.instance.step();
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../GSMng": "GSMng",
"../GSRunnerMng": "GSRunnerMng",
"../GameScriptDefines": "GameScriptDefines",
"../index": "index"
} ],
GameScriptValueType: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2d3c6HHBX5AL7O/H6EpDrKJ", "GameScriptValueType");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.NewGSValue = o.GSComputeValue = o.GSString = o.GSBool = o.GSFloat = o.GSInt = void 0;
const i = e("./GameScriptDefines");
class n {
constructor() {
this._value = 0;
}
setValue(e) {
this.readonly || (this._value = parseInt(e) || 0);
}
getValue() {
return this._value;
}
}
o.GSInt = n;
class a {
constructor() {
this._value = 0;
}
setValue(e) {
this.readonly || (this._value = parseFloat(e) || 0);
}
getValue() {
return this._value;
}
}
o.GSFloat = a;
class s {
constructor() {
this._value = !1;
}
setValue(e) {
if (!this.readonly) if ("true" == e) this._value = !0; else if ("false" == e) this._value = !1; else {
let t = parseInt(e);
this._value = t > 0;
}
}
getValue() {
return this._value;
}
}
o.GSBool = s;
class r {
constructor() {
this._value = "";
}
setValue(e) {
this.readonly || (this._value = e || "");
}
getValue() {
return this._value;
}
}
o.GSString = r;
o.GSComputeValue = function(e, t, o) {
let n = e.getValueType(), a = t.getValueType();
switch (n) {
case i.GSValueType.INT:
if (a != i.GSValueType.INT && a != i.GSValueType.FLOAT) {
console.warn(`>>compute value type a[${i.GSValueType[n]}] not match b[${i.GSValueType[a]}]`);
return e.getValue();
}
switch (o) {
case i.GSComputeType.ADD:
return e.getValue() + Math.floor(t.getValue());

case i.GSComputeType.SUB:
return e.getValue() - Math.floor(t.getValue());

case i.GSComputeType.MUL:
return e.getValue() * Math.floor(t.getValue());

case i.GSComputeType.DIV:
{
let o = Math.floor(t.getValue());
return 0 == o ? void 0 : e.getValue() / o;
}
}

case i.GSValueType.FLOAT:
if (a != i.GSValueType.INT && a != i.GSValueType.FLOAT) {
console.warn(`>>compute value type a[${i.GSValueType[n]}] not match b[${i.GSValueType[a]}]`);
return e.getValue();
}
switch (o) {
case i.GSComputeType.ADD:
return e.getValue() + t.getValue();

case i.GSComputeType.SUB:
return e.getValue() - t.getValue();

case i.GSComputeType.MUL:
return e.getValue() * t.getValue();

case i.GSComputeType.DIV:
{
let o = t.getValue();
return 0 == o ? void 0 : e.getValue() / o;
}
}

case i.GSValueType.BOOL:
switch (o) {
case i.GSComputeType.ADD:
return e.getValue() && t.getValue();

case i.GSComputeType.SUB:
return e.getValue() || t.getValue();

case i.GSComputeType.MUL:
return e.getValue() && t.getValue();

case i.GSComputeType.DIV:
return e.getValue() || t.getValue();
}

case i.GSValueType.STRING:
if (o == i.GSComputeType.ADD) return e.getValue() + t.getValue();
console.warn(`>>compute value op[${i.GSComputeType[o]}] not support a[${i.GSValueType[n]}]`);
return e.getValue();
}
};
o.NewGSValue = function(e, t) {
let o = null;
switch (e) {
case i.GSValueType.INT:
o = new n();
break;

case i.GSValueType.FLOAT:
o = new a();
break;

case i.GSValueType.BOOL:
o = new s();
break;

case i.GSValueType.STRING:
o = new r();
}
if (o) {
o.valueType = e;
o.setValue(t);
}
return o;
};
cc._RF.pop();
}, {
"./GameScriptDefines": "GameScriptDefines"
} ],
GameSharePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7535edk6udFJoDSIyIgVoaJ", "GameSharePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/GameIcon"), s = e("../../Frame/Panel"), r = e("../../Frame/Share"), l = e("../../Frame/Top"), c = e("../../Frame/Util"), d = e("../../Game/GameEnv"), h = e("../../Game/Hortor"), p = e("../../Game/Player/TalkMng"), u = e("../../Game/Player/TriggerMng"), m = e("../../Role"), f = e("../../TGA"), {ccclass: g, property: y} = cc._decorator;
let v = class extends s.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.gameIcon = null;
this.btn = null;
this.gameData = null;
this.extra = null;
this.sourceNode = null;
}
onLoad() {
super.onLoad();
this.btn.node.on(n.default.CLICK, this.onOkBtn, this);
}
setData(e, t, o) {
this.gameData = e;
this.extra = t;
this.sourceNode = o;
this.gameIcon.loadUrl(e.iconTextureName);
t.str ? this.titleLabel.string = t.str : this.titleLabel.string = "你喜欢我的游戏吗？\n分享给好友吧！";
}
onOkBtn() {
let e = {
type: "game",
isMine: this.gameData.playerId == m.default.Ins.role.id,
cyGameId: this.gameData.id
}, t = {
shareType: "shareGame",
title: h.Hortor.isApp() ? `《${this.gameData.name}》` : `《${this.gameData.name}》${this.gameData.advert}`,
desc: this.gameData.advert,
imageUrl: "",
query: c.Util.toQueryStr(e),
imageName: this.gameData.iconTextureName,
talk: {
title: "",
sections: [ {
type: p.TalkSectionType.Game,
gameId: this.gameData.id
} ]
},
success: () => {
l.default.showToast("分享成功");
this.closePanel();
this.extra.onSucc && u.default.Ins.emitTrigger(this.extra.onSucc, this.sourceNode);
f.TGA.track("share", e);
},
fail: () => {
l.default.showToast("分享失败");
this.extra.onFail && u.default.Ins.emitTrigger(this.extra.onFail, this.sourceNode);
}
};
this.gameData.iconTextureName && "icon1" !== this.gameData.iconTextureName ? t.imageUrl = d.gameEnv.fileCDN + this.gameData.iconTextureName : delete t.imageUrl;
r.Share.share(t);
}
};
i([ y(cc.Label) ], v.prototype, "titleLabel", void 0);
i([ y(a.default) ], v.prototype, "gameIcon", void 0);
i([ y(n.default) ], v.prototype, "btn", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../Frame/Panel": "Panel",
"../../Frame/Share": "Share",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor",
"../../Game/Player/TalkMng": "TalkMng",
"../../Game/Player/TriggerMng": "TriggerMng",
"../../Role": "Role",
"../../TGA": "TGA"
} ],
GameShopMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e9235gYIZtDEq7Lb1KI5prz", "GameShopMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/NetworkMgr"), a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../../scripts/_autogen/data/data"), r = e("./BaseConfMng"), l = e("../../GameData/GameTypeDefine");
o.default = class extends r.BaseConfMng {
constructor() {
super();
this.confType = l.CommonDataType.Shop;
this.creativeConfType = s.CreativeConfType.shop;
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_GetGameShop,
params: t
}, a.Game_RGetGameShop);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t];
i.conf.id = i.id;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
gameId: t.id,
id: e.id,
data: e
}, i = yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SaveGameShop,
params: o
}, a.Game_RSaveGameShop);
t.gameShopIds.push(i.id);
return i.id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
gameId: null,
id: e.id,
data: e
};
yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SaveGameShop,
params: t
}, a.Game_RSaveGameShop);
});
}
requestDeleteConf(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
ids: [ e.id ]
};
yield n.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_DelGameShop,
params: o
}, a.Game_RDelGameShop);
let i = t.gameShopIds.indexOf(e.id);
i >= 0 && t.gameShopIds.splice(i, 1);
});
}
getCostIconUrl(e) {
return i(this, void 0, void 0, function*() {
return e == l.GameGoodsCostType.Coin ? "Prop/coin" : "UI/coin";
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
GameShopPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f2102pFKgdAq6ESpz+/uOjg", "GameShopPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/CoinBar"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/Panel"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/TweenUtil"), u = e("../../Frame/UIColor"), m = e("../../Frame/Util"), f = e("../../Game/Player/CoinMng"), g = e("../../Game/Player/GameBagMng"), y = e("../../Game/Player/Mng"), v = e("../../GameData/GameTypeDefine"), C = e("../../Scene/GameScene/GameScene"), {ccclass: _, property: S} = cc._decorator;
let I = class extends c.default {
constructor() {
super(...arguments);
this.bubbleLabel = null;
this.nameLabel = null;
this.shopSprite = null;
this.shopManSprite = null;
this.heroSprite = null;
this.goodsList = null;
this.bagItemList = null;
this.bagEmptyNode = null;
this.buyBtn = null;
this.coinCntLabel = null;
}
onLoad() {
super.onLoad();
this.goodsList.node.on(l.default.CLICK_ITEM, this.onClickGoodsItem, this);
this.bagItemList.node.on(l.default.CLICK_ITEM, this.onClickBagItem, this);
this.buyBtn.node.on(s.default.CLICK, this.onBuyBtn, this);
this.buyBtn.node.active = !1;
}
onEnable() {
r.default.Ins.show(200);
}
onDisable() {
r.default.Ins.hide();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.nameLabel.string = e.name;
this.bubbleLabel.node.parent.scale = 0;
let t = yield y.Mng.Ins.actorMng.loadOne(e.actorId);
y.Mng.Ins.spriteMng.setActorSprite(this.shopManSprite, t.textureName, 160);
y.Mng.Ins.spriteMng.setShopSprite(this.shopSprite, e.textureName, 750);
this.goodsList.setDataArr(e.goodses);
this.goodsList.selectByIdx(0);
this.updateBuyBtn();
this.refreshBagList();
this.bagItemList.selectByIdx(0);
this.updateCoinLabel();
let o = d.default.ins.findScene(C.default);
o && o.world && o.world.hero && y.Mng.Ins.spriteMng.setActorSprite(this.heroSprite, o.world.hero.conf.textureName, 160);
e.welcome && this.scheduleOnce(() => {
this.showBubble(e.welcome);
}, .5);
});
}
refreshBagList() {
let e = g.default.Ins.propList.filter(e => !g.default.Ins.isCoin(e.propConfId));
this.bagItemList.setDataArr(e);
this.bagEmptyNode.active = 0 == e.length;
}
showBubble(e) {
this.bubbleLabel.string = e;
m.Util.updateLabel(this.bubbleLabel);
let t = this.bubbleLabel.node.height, o = this.bubbleLabel.node.parent;
o.height = t + 50;
o.stopAllActions();
o.scale = 0;
cc.tween(o).to(.3, {
scaleX: -1,
scaleY: 1
}, {
easing: p.Easing.backOut
}).start();
}
hidBubble() {
let e = this.bubbleLabel.node.parent;
cc.tween(e).to(.2, {
scaleX: 0,
scaleY: 0
}).start();
}
onClickGoodsItem(e, t) {
return n(this, void 0, void 0, function*() {
let e = t.advert, o = yield y.Mng.Ins.propMng.loadOne(t.propId);
if (o) {
e || (e = o.intro);
e || (e = o.name);
}
e ? this.showBubble(e) : this.hidBubble();
this.updateBuyBtn();
});
}
updateBuyBtn() {
return n(this, void 0, void 0, function*() {
let e = this.goodsList.getCurData();
this.buyBtn.node.active = !!e;
});
}
updateCoinLabel() {
let e = g.default.Ins.getCoinCnt();
this.coinCntLabel.string = "x" + e;
}
onBuyBtn() {
let e = this.goodsList.getCurData();
e.costType == v.GameGoodsCostType.GCoin && d.default.ins.OpenPanelByName("BuyGameGoodsComfirmPanel", t => {
t.setData(e);
t.buyCall = () => n(this, void 0, void 0, function*() {
let t = d.default.ins.findScene(C.default), o = yield y.Mng.Ins.propMng.loadOne(e.propId);
(yield f.default.Ins.requestCostCoinInGame(a.SaleGoodsType.gameGoods, e.price, t.gameData.id, o.name, o.textureName)) ? d.default.ins.OpenPanelByName("GainGameGoodsPanel", t => n(this, void 0, void 0, function*() {
t.setData(e.propId, 1, () => n(this, void 0, void 0, function*() {
g.default.Ins.add(e.propId, 1);
this.refreshBagList();
this.updateCoinLabel();
}));
})) : h.default.showToast("购买失败");
});
});
e.costType == v.GameGoodsCostType.Coin && (g.default.Ins.getCoinCnt() >= e.price ? d.default.ins.OpenPanelByName("MessageBox", t => n(this, void 0, void 0, function*() {
let o = yield y.Mng.Ins.propMng.loadOne(e.propId);
t.label.string = `Whether to spend ${e.price} coins to buy 1 ${o.name}`;
t.setLeftBtn({
text: "点错了",
color: u.UIColor.blue
});
t.setRightBtn({
text: "购买",
color: u.UIColor.green,
call: () => n(this, void 0, void 0, function*() {
d.default.ins.OpenPanelByName("GainGameGoodsPanel", t => n(this, void 0, void 0, function*() {
t.setData(e.propId, 1, () => n(this, void 0, void 0, function*() {
g.default.Ins.costCoin(e.price);
g.default.Ins.add(e.propId, 1);
this.refreshBagList();
this.updateCoinLabel();
}));
}));
})
});
})) : this.showBubble("硬币不足！"));
}
onClickBagItem(e, t) {
d.default.ins.OpenPanelByName("SaleGameBagItemPanel", e => {
e.setData(t);
e.call = e => n(this, void 0, void 0, function*() {
d.default.ins.OpenPanelByName("GainGameGoodsPanel", o => n(this, void 0, void 0, function*() {
let i = ((yield y.Mng.Ins.propMng.loadOne(t.propConfId)).salePrice || 1) * e;
o.setData(g.default.Ins.coinPropId, i, () => n(this, void 0, void 0, function*() {
g.default.Ins.addCoin(i);
g.default.Ins.sub(t.propConfId, e);
this.refreshBagList();
this.updateCoinLabel();
}));
}));
});
});
}
};
i([ S(cc.Label) ], I.prototype, "bubbleLabel", void 0);
i([ S(cc.Label) ], I.prototype, "nameLabel", void 0);
i([ S(cc.Sprite) ], I.prototype, "shopSprite", void 0);
i([ S(cc.Sprite) ], I.prototype, "shopManSprite", void 0);
i([ S(cc.Sprite) ], I.prototype, "heroSprite", void 0);
i([ S(l.default) ], I.prototype, "goodsList", void 0);
i([ S(l.default) ], I.prototype, "bagItemList", void 0);
i([ S(cc.Node) ], I.prototype, "bagEmptyNode", void 0);
i([ S(s.default) ], I.prototype, "buyBtn", void 0);
i([ S(cc.Label) ], I.prototype, "coinCntLabel", void 0);
I = i([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/CoinBar": "CoinBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Scene/GameScene/GameScene": "GameScene"
} ],
GameStatisticsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "74d83umrOdKRLgiInSz0teV", "GameStatisticsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Util"), c = e("../../Game/Player/GameIconMng"), d = e("../GameCoverScene/GameCoverScene"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.rankLabel = null;
this.sprite = null;
this.nameLabel = null;
this.infoLabel1 = null;
this.infoLabel2 = null;
this.infoLabel3 = null;
this.playBtn = null;
this.data = null;
this.spriteSize = 120;
}
onLoad() {
this.playBtn && this.playBtn.node.on(a.default.CLICK, this.onClick, this);
this.node.on(s.default.SET_DATA, this.setData, this);
this.spriteSize = this.sprite.node.width - 6;
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.node.active = !0;
if (e) {
this.data = e;
this.nameLabel && (this.nameLabel.string = l.Util.clampStr(e.name, 6, ".."));
this.rankLabel && (this.rankLabel.string = "" + e.rank);
this.infoLabel1.string = `人均${l.Util.fixedNum(e.playAveTime, 3)}s`;
this.infoLabel2.string = `x${e.playCntStatistics}人`;
this.infoLabel3.string = `人均${l.Util.fixedNum(e.playAllCnt / e.playCntStatistics, 3)}次`;
c.GameIconMng.Ins.setSprite(this.sprite, e.iconTextureName, this.spriteSize);
} else this.node.active = !1;
});
}
onClick() {
return n(this, void 0, void 0, function*() {
if (!this.data) return;
let e = r.default.ins.findScene(d.default);
e && e.node.active ? e.setData(this.data.id) : r.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.id);
});
});
}
};
i([ p(cc.Label) ], u.prototype, "rankLabel", void 0);
i([ p(cc.Sprite) ], u.prototype, "sprite", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "infoLabel1", void 0);
i([ p(cc.Label) ], u.prototype, "infoLabel2", void 0);
i([ p(cc.Label) ], u.prototype, "infoLabel3", void 0);
i([ p(a.default) ], u.prototype, "playBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/GameIconMng": "GameIconMng",
"../GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
GameStatisticsScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "70cb4IjA0ZP0pt2HJqm9JqU", "GameStatisticsScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Scene"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Util"), {ccclass: p, property: u} = cc._decorator;
let m = class extends c.default {
constructor() {
super(...arguments);
this.list = null;
this.backBtn = null;
this.appendBtn = null;
this.exportBtn = null;
this.gameDatas = [];
}
onLoad() {
super.onLoad();
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.appendBtn.node.on(s.default.CLICK, this.onAppendBtn, this);
this.exportBtn.node.on(s.default.CLICK, this.onExportBtn, this);
}
onBackBtn() {
d.default.ins.Back();
}
onAppendBtn() {
return n(this, void 0, void 0, function*() {
let e = {
start: this.gameDatas.length,
end: this.gameDatas.length + 1e3
}, t = yield l.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_GetPlayGameStatistics,
params: e
}, a.Game_RGetPlayGameStatistics);
if (t) {
for (let e = 0; e < t.gameDatas.length; e++) {
let o = t.gameDatas[e];
this.gameDatas.push(o);
}
for (let e = 0; e < this.gameDatas.length; e++) this.gameDatas[e].rank = e + 1;
this.gameDatas.sort((e, t) => t.playCntStatistics - e.playCntStatistics);
this.list.setDataArr(this.gameDatas);
this.appendBtn.label.string = `追加（${this.gameDatas.length}）`;
}
});
}
onExportBtn() {
let e = "";
for (let t = 0; t < this.gameDatas.length; t++) {
let o = this.gameDatas[t];
e += `${o.name},${h.Util.fixedNum(o.playAveTime, 3)},${o.playCntStatistics},${h.Util.fixedNum(o.playAllCnt / o.playCntStatistics, 3)}\n`;
}
h.Util.downloadTxt("1.txt", e);
}
};
i([ u(r.default) ], m.prototype, "list", void 0);
i([ u(s.default) ], m.prototype, "backBtn", void 0);
i([ u(s.default) ], m.prototype, "appendBtn", void 0);
i([ u(s.default) ], m.prototype, "exportBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util"
} ],
GameTagComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fe9e0hIBI1LJIOF/fIQzJDP", "GameTagComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/Button"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/DynamicMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.btn = null;
}
onLoad() {}
setData(e) {
return n(this, void 0, void 0, function*() {
let e = (yield c.DynamicMng.Ins.loadOne("GameTags")) || [], t = e.slice(0, 10);
e.length < 10 && (t = t.concat({
tag: "更多",
icon: "更多"
}));
l.Util.makeBro(this.btn.node, t.length, (e, o) => {
let i = t[o], c = e.getComponent(s.default);
c.node.targetOff(this);
c.label.string = a.I18nMgr.getI18nStringByZh(i.tag);
l.Util.loadBundleRes("Atlas/TagIcon/" + i.icon, cc.SpriteFrame).then(e => {
c.background.spriteFrame = e;
});
c.node.on(s.default.CLICK, () => n(this, void 0, void 0, function*() {
r.default.ins.Enter("GameTagScene", e => {
let t = i.tag;
"更多" == t && (t = "像素");
e.setData(t);
}, r.ShiftAnima.moveLeftShift);
}), this);
});
});
}
};
i([ h(s.default) ], p.prototype, "btn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/DynamicMng": "DynamicMng"
} ],
GameTagFlow: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "84486MPr6lILaT8UyDs05OW", "GameTagFlow");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameTagFlowData = void 0;
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/GameTagMng"), m = e("../../Role"), f = e("./GameCoverScene"), {ccclass: g, property: y} = cc._decorator;
o.GameTagFlowData = class {};
let v = class extends cc.Component {
constructor() {
super(...arguments);
this.tag = null;
this.data = null;
this.limitLevel = 10;
this.limitMinCount = 10;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
}
setData(e) {
this.data = e;
let t = e.tagList.concat();
(t = t.filter(e => e.recommendTimes >= this.limitMinCount)).push(null);
h.Util.makeBro(this.tag.node, t.length, (e, o) => {
let i = e.getComponent(s.default), n = t[o];
this.initBtn(i, n);
});
h.Util.flowLayout(this.tag.node.parent, 10, 10);
}
initBtn(e, t) {
e.label.string = t ? t.tagMsg : " + ";
h.Util.updateLabel(e.label);
e.node.width = e.label.node.width + 20;
e.node.targetOff(this);
let o = 0;
e.node.on(cc.Node.EventType.TOUCH_START, () => {
o = h.Util.getTimeStamp();
}, this);
e.node.on(cc.Node.EventType.TOUCH_END, () => {
p.DynamicMng.Ins.isDisable(p.FunctionEnum.PublishGameTag, !1) || (t ? h.Util.getTimeStamp() - o > 500 && (p.DynamicMng.Ins.isGmPlayer() || m.default.Ins.role.id == this.data.roleId) ? l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否删除标签？";
e.setLeftBtn({
text: "删除",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield u.default.Ins.gmSetTagCnt(this.data.gameId, t.tagMsg, 0);
cc.game.emit(f.default.GameCoverScene_Refresh);
})
});
e.setRightBtn({
text: "点错了",
color: d.UIColor.blue
});
}) : l.default.ins.Enter("GameTagScene", e => {
e.setData(t.tagMsg);
}, l.ShiftAnima.moveLeftShift) : m.default.Ins.role.level >= this.limitLevel ? l.default.ins.OpenPanelByName("AddGameTagPanel", e => {
e.setData(this.data);
e.setTip(this.limitMinCount);
}) : c.default.showToast(a.I18nMgr.exceI18nStringByZh("等级${this.limitLevel}后解锁加标签功能", [ {
paramName: "this.limitLevel",
param: this.limitLevel
} ])));
}, this);
}
calcuHeight(e) {
this.setData(e);
return this.node.height;
}
};
i([ y(s.default) ], v.prototype, "tag", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameTagMng": "GameTagMng",
"../../Role": "Role",
"./GameCoverScene": "GameCoverScene"
} ],
GameTagMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5dc7czHcm5NcrN9otpmRWOh", "GameTagMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/CrossPlatform"), r = e("../../Frame/NetworkMgr"), l = e("./DynamicMng"), c = e("./GameCellDataMng"), d = e("./GameCoverMng");
class h {
constructor() {
this.tagMap = new Map();
}
getTagsByMe(e) {
return (s.crossPlatform.getStorageSync("tagsByMe") || {})[e] || [];
}
saveTagsByMe(e, t) {
let o = s.crossPlatform.getStorageSync("tagsByMe") || {};
o[e] = t;
s.crossPlatform.setStorageSync("tagsByMe", o);
}
gmSetTagCnt(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = {
gameID: e,
addTagMsg: t,
tagCount: o
};
(yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GMSetGameTage,
params: i
}, n.Game_RGMSetGameTage)) && this.syncCacheGameTagCnt(e, t, o, "set");
});
}
uploadGameTag(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = {
gameID: e,
addTagMsg: t,
removeTagMsg: o
}, a = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_AddGameTage,
params: i
}, n.Game_RAddGameTage);
if (a && 0 == a.sensitiveWords.length) {
let i = l.DynamicMng.Ins.isGmPlayer() ? 5 : 1;
for (let o = 0; o < t.length; o++) {
let n = t[o];
this.syncCacheGameTagCnt(e, n, i, "add");
}
for (let t = 0; t < o.length; t++) {
let n = o[t];
this.syncCacheGameTagCnt(e, n, -i, "add");
}
return !0;
}
return !1;
});
}
syncCacheGameTagCnt(e, t, o, i = "add") {
let n = d.default.Ins.cache.get(e);
if (n && n.releaseGameData) {
let e = n.releaseGameData.tagList, s = e.find(e => e.tagMsg == t);
if (s) "add" == i ? s.recommendTimes += o : "set" == i && (s.recommendTimes = o); else {
let i = new a.GameTagaData();
i.tagMsg = t;
i.recommendTimes = o;
i.lastEditTime = orange.TimeUtil.serverTime;
e.push(i);
}
}
}
getGames(e) {
return i(this, void 0, void 0, function*() {
let t = this.tagMap.get(e) || [];
return yield c.default.Ins.loadGames(t);
});
}
appendLoadGame(e, t) {
return i(this, void 0, void 0, function*() {
let o = this.tagMap.get(e) || [], i = o.length, a = {
tagMsg: e,
start: i,
end: i + t
}, s = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SearchGameByTag,
params: a
}, n.Game_RSearchGameByTag);
if (s) for (let e = 0; e < s.gameDatas.length; e++) {
let t = s.gameDatas[e];
o.includes(t.id) || o.push(t.id);
c.default.Ins.cache.set(t.id, t);
}
this.tagMap.set(e, o);
});
}
}
o.default = h;
h.Ins = new h();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"./DynamicMng": "DynamicMng",
"./GameCellDataMng": "GameCellDataMng",
"./GameCoverMng": "GameCoverMng"
} ],
GameTagScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3ad55mpntRBMakZOy7jfnIY", "GameTagScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../CustomUI/ToggleGroup"), c = e("../../Frame/Scene"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Util"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/GameTagMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends c.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.toggleGroup = null;
this.scrollView = null;
this.scrollList = null;
this.emptyLabel = null;
this.tagConfs = [];
}
onLoad() {
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
this.toggleGroup.node.on(l.default.TOGGLE_CHANGE, this.onChange, this);
this.emptyLabel.node.active = !1;
}
onBackBtn() {
d.default.ins.Back(() => {}, d.ShiftAnima.moveRightShift);
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = this.toggleGroup.toggleItems[0], o = (yield p.DynamicMng.Ins.loadOne("GameTags")) || [];
this.tagConfs = o.concat();
let i = this.tagConfs.findIndex(t => t.tag == e);
if (i < 0) {
this.tagConfs.unshift({
tag: e,
icon: ""
});
i = 0;
}
h.Util.makeBro(t.node, this.tagConfs.length, (e, t) => {
let o = e.getComponent(cc.Toggle), i = this.tagConfs[t], n = o.getComponentInChildren(cc.Label);
n.string = a.I18nMgr.getI18nStringByZh(i.tag);
h.Util.updateLabel(n);
o.node.width = n.node.width + 40;
});
this.scheduleOnce(() => {
this.toggleGroup.idx == i ? this.onChange(i, 0, !0) : this.toggleGroup.selectIdx(i);
});
});
}
onChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
let t = this.toggleGroup.toggleItems[e], o = this.tagConfs[e], i = this.scrollView.node.width, n = this.scrollView.content.width, a = (t.node.x - i / 2) / (n - i);
this.scrollView.scrollToPercentHorizontal(a, .3);
let s = o.tag, r = yield u.default.Ins.getGames(s);
if (0 == r.length) {
yield u.default.Ins.appendLoadGame(s, 12);
r = yield u.default.Ins.getGames(s);
}
this.scrollList.setDataArr(r);
this.emptyLabel.node.active = 0 == r.length;
this.scrollList.scrollToTop(.3);
}
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
let e = this.toggleGroup.idx, o = this.toggleGroup.toggleItems[e].getComponentInChildren(cc.Label).string;
yield u.default.Ins.appendLoadGame(o, 12);
let i = yield u.default.Ins.getGames(o);
this.scrollList.setDataArr(i);
break;

case cc.ScrollView.EventType.SCROLLING:
}
});
}
};
i([ f(s.default) ], g.prototype, "backBtn", void 0);
i([ f(l.default) ], g.prototype, "toggleGroup", void 0);
i([ f(cc.ScrollView) ], g.prototype, "scrollView", void 0);
i([ f(r.default) ], g.prototype, "scrollList", void 0);
i([ f(cc.Label) ], g.prototype, "emptyLabel", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameTagMng": "GameTagMng"
} ],
GameTimerComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "03a1778yJ9Fzq+SDhoDA+Xe", "GameTimerComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameTimerComp = void 0;
const n = e("../../Frame/Util"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.running = !1;
this.timer = 0;
this.targetTime = 0;
this.completeCall = null;
this.mode = "countDown";
this.started = !1;
}
reset() {
this.running = !1;
this.started = !1;
this.timer = 0;
this.completeCall = null;
}
stop() {
this.running = !1;
this.started = !1;
this.node.active = !1;
}
pause() {
this.running = !1;
}
resume() {
this.running = !0;
}
update(e) {
if (this.running) {
if ("countDown" == this.mode) {
this.timer -= e;
if (this.timer < 0) {
let e = this.completeCall;
this.completeCall = null;
e && e();
this.timer = 0;
this.running = !1;
this.started = !1;
this.node.active = !1;
}
}
if ("timer" == this.mode) {
this.timer += e;
if (this.timer > this.targetTime) {
this.timer = this.targetTime;
let e = this.completeCall;
this.completeCall = null;
e && e();
this.running = !1;
this.started = !1;
this.node.active = !1;
}
}
this.label.string = n.Util.fixedNum(this.timer, 2, !0);
}
}
startCountDown(e, t) {
this.mode = "countDown";
this.running = !0;
this.started = !0;
this.timer = e;
this.targetTime = 0;
this.completeCall = t;
this.node.active = !0;
}
startTimer(e, t) {
this.node.active = !0;
this.mode = "timer";
this.running = !0;
this.started = !0;
this.timer = 0;
this.targetTime = e;
this.completeCall = t;
}
getCurTimer() {
return Number.parseFloat(this.timer.toFixed(2));
}
};
i([ s(cc.Label) ], r.prototype, "label", void 0);
r = i([ a ], r);
o.GameTimerComp = r;
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
GameTypeDefine: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8956eq0FzVJkoqnbId6LCzv", "GameTypeDefine");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameGoodsCostType = o.DecoratorLayerType = o.VariableType = o.MoveDirType = o.DeviceType = o.WeaponType = o.MeleeActType = o.SoundTyp = o.TriggerAct = o.TileShape = o.TilePhysicType = o.WorldType = o.CommonDataType = o.TileType = o.PropEventType = o.MoveAI = o.AIMoveType = o.MoveType = o.Team = void 0;
(function(e) {
e[e.None = 0] = "None";
e[e.Hero = 1] = "Hero";
e[e.Enemy = 2] = "Enemy";
e[e.NPC = 3] = "NPC";
e[e.Ally = 6] = "Ally";
e[e.Tile = 4] = "Tile";
e[e.Device = 5] = "Device";
e[e.HeroBullet = 7] = "HeroBullet";
e[e.EnemyBullet = 8] = "EnemyBullet";
e[e.AllyBullet = 9] = "AllyBullet";
})(o.Team || (o.Team = {}));
(function(e) {
e[e.PlatformJump = 0] = "PlatformJump";
e[e.Drag = 1] = "Drag";
e[e.GridMove = 2] = "GridMove";
e[e.RpgMove = 3] = "RpgMove";
})(o.MoveType || (o.MoveType = {}));
(function(e) {
e[e.None = 0] = "None";
e[e.PlatformJump_Ground_WallBack = 1] = "PlatformJump_Ground_WallBack";
e[e.PlatformJump_Ground_MisstepBack = 2] = "PlatformJump_Ground_MisstepBack";
e[e.Track = 3] = "Track";
e[e.Grid_Random = 4] = "Grid_Random";
e[e.Grid_Static = 6] = "Grid_Static";
e[e.PlatformJump_Static = 5] = "PlatformJump_Static";
e[e.PlatformJump_IDLE = 7] = "PlatformJump_IDLE";
e[e.PlatformJump_Jump_WallBack = 8] = "PlatformJump_Jump_WallBack";
e[e.PlatformJump_Jump_Trace = 9] = "PlatformJump_Jump_Trace";
e[e.PlatformJump_FollowHero = 10] = "PlatformJump_FollowHero";
e[e.PlatformJump_DirLine = 11] = "PlatformJump_DirLine";
})(o.AIMoveType || (o.AIMoveType = {}));
(function(e) {
e.Static = "静止";
e.Line = "直线运动";
e.Follow = "追踪主角";
e.Patrol = "巡逻";
})(o.MoveAI || (o.MoveAI = {}));
(function(e) {
e[e.AddCoin = 0] = "AddCoin";
})(o.PropEventType || (o.PropEventType = {}));
(function(e) {
e[e.Jump = 1] = "Jump";
e[e.RPG = 2] = "RPG";
e[e.All = 3] = "All";
})(o.TileType || (o.TileType = {}));
(function(e) {
e[e.Tile = 0] = "Tile";
e[e.Actor = 1] = "Actor";
e[e.Prop = 2] = "Prop";
e[e.Device = 3] = "Device";
e[e.Weapon = 4] = "Weapon";
e[e.Bullet = 5] = "Bullet";
e[e.Shop = 6] = "Shop";
e[e.Rank = 7] = "Rank";
})(o.CommonDataType || (o.CommonDataType = {}));
(function(e) {
e[e.Jump = 0] = "Jump";
e[e.Rpg = 1] = "Rpg";
e[e.Shoot = 2] = "Shoot";
})(o.WorldType || (o.WorldType = {}));
(function(e) {
e[e.Block = 0] = "Block";
e[e.Destroy = 1] = "Destroy";
e[e.Fall = 2] = "Fall";
e[e.JumpOver = 3] = "JumpOver";
e[e.Damage = 4] = "Damage";
e[e.Pass = 5] = "Pass";
})(o.TilePhysicType || (o.TilePhysicType = {}));
(function(e) {
e[e.Normal = 0] = "Normal";
e[e.Half_Top = 1] = "Half_Top";
e[e.Half_Btm = 2] = "Half_Btm";
e[e.Slope_45 = 3] = "Slope_45";
e[e.Slope_45_Flip = 4] = "Slope_45_Flip";
e[e.Slope_135 = 5] = "Slope_135";
e[e.Slope_135_Flip = 6] = "Slope_135_Flip";
})(o.TileShape || (o.TileShape = {}));
(function(e) {
e[e.None = 0] = "None";
e[e.GameOver = 1] = "GameOver";
e[e.GameWin = 2] = "GameWin";
e[e.ShiftWorld = 3] = "ShiftWorld";
e[e.GameShop = 4] = "GameShop";
e[e.ActorShop = 5] = "ActorShop";
e[e.Dialog = 6] = "Dialog";
e[e.LetActor = 7] = "LetActor";
e[e.LetTile = 8] = "LetTile";
e[e.DropProp = 9] = "DropProp";
e[e.Sound = 10] = "Sound";
e[e.ShiftWeapon = 11] = "ShiftWeapon";
e[e.ShiftHero = 12] = "ShiftHero";
e[e.RecoverHP = 13] = "RecoverHP";
e[e.CameraShake = 14] = "CameraShake";
e[e.ChangeAct = 15] = "ChangeAct";
e[e.Save = 16] = "Save";
e[e.Load = 17] = "Load";
e[e.ClearSave = 18] = "ClearSave";
e[e.ShareGame = 19] = "ShareGame";
e[e.AD = 20] = "AD";
e[e.BagItem = 21] = "BagItem";
e[e.BagSize = 22] = "BagSize";
e[e.Random = 23] = "Random";
e[e.ChangeHero = 1001] = "ChangeHero";
e[e.StartTimeCountDown = 2001] = "StartTimeCountDown";
e[e.StopTimeCountDown = 2002] = "StopTimeCountDown";
e[e.GameScript = 10001] = "GameScript";
e[e.GameRank = 10002] = "GameRank";
e[e.UploadRankScore = 10003] = "UploadRankScore";
})(o.TriggerAct || (o.TriggerAct = {}));
(function(e) {
e[e.piano = 0] = "piano";
e[e.coin = 1] = "coin";
e[e.explosion = 2] = "explosion";
e[e.hurt = 3] = "hurt";
e[e.jump = 4] = "jump";
e[e.laser = 5] = "laser";
e[e.powerup = 6] = "powerup";
})(o.SoundTyp || (o.SoundTyp = {}));
(function(e) {
e[e.Jab = 0] = "Jab";
e[e.Swing = 1] = "Swing";
})(o.MeleeActType || (o.MeleeActType = {}));
(function(e) {
e[e.Gun = 0] = "Gun";
e[e.Melee = 1] = "Melee";
e[e.Cast = 2] = "Cast";
})(o.WeaponType || (o.WeaponType = {}));
(function(e) {
e[e.Saw = 0] = "Saw";
e[e.FireBallLine = 1] = "FireBallLine";
e[e.Lurker = 2] = "Lurker";
e[e.Button = 3] = "Button";
e[e.Spring = 4] = "Spring";
e[e.Flag = 5] = "Flag";
e[e.Bomb = 6] = "Bomb";
e[e.TrapPlatform = 7] = "TrapPlatform";
e[e.ConveyorPlatform = 8] = "ConveyorPlatform";
e[e.MovePlatform = 9] = "MovePlatform";
e[e.Ladder = 10] = "Ladder";
e[e.Decorator = 11] = "Decorator";
e[e.MonsterSpawner = 12] = "MonsterSpawner";
e[e.IceCone = 13] = "IceCone";
e[e.SavePoint = 14] = "SavePoint";
e[e.LoadPoint = 15] = "LoadPoint";
e[e.Toggle = 16] = "Toggle";
e[e.Region = 17] = "Region";
e[e.Billboard = 18] = "Billboard";
})(o.DeviceType || (o.DeviceType = {}));
(function(e) {
e[e.Up = 0] = "Up";
e[e.UpLeft = 1] = "UpLeft";
e[e.UpRight = 2] = "UpRight";
e[e.Down = 3] = "Down";
e[e.DownLeft = 4] = "DownLeft";
e[e.DownRight = 5] = "DownRight";
e[e.Left = 6] = "Left";
e[e.Right = 7] = "Right";
})(o.MoveDirType || (o.MoveDirType = {}));
(function(e) {
e[e.boolean = 0] = "boolean";
e[e.number = 1] = "number";
})(o.VariableType || (o.VariableType = {}));
(function(e) {
e[e.Foreground01 = 0] = "Foreground01";
e[e.MapFore = 1] = "MapFore";
e[e.MapBack = 2] = "MapBack";
e[e.Background01 = 3] = "Background01";
e[e.Background02 = 4] = "Background02";
e[e.Map = 5] = "Map";
})(o.DecoratorLayerType || (o.DecoratorLayerType = {}));
(function(e) {
e[e.GCoin = 0] = "GCoin";
e[e.Coin = 1] = "Coin";
})(o.GameGoodsCostType || (o.GameGoodsCostType = {}));
cc._RF.pop();
}, {} ],
GameWinPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c7fdcWpaP9Fup3AVXPfkoqp", "GameWinPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/CrossPlatform"), r = e("../../Frame/GameRecorder"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Frame/TweenUtil"), h = e("../../Frame/Util"), p = e("../../Game/GameRankComp"), u = e("../../Game/OperationFlow"), m = e("../../Game/Player/CoinMng"), f = e("../../Game/Player/LifeMng"), g = e("../../Game/Player/Mng"), y = e("../../Role"), {ccclass: v, property: C} = cc._decorator;
let _ = class extends l.default {
constructor() {
super(...arguments);
this.sprite = null;
this.titleLabel = null;
this.backBtn = null;
this.replayBtn = null;
this.shareVideoBtn = null;
this.layout = null;
this.data = null;
this.replayCall = null;
this.backCall = null;
}
onLoad() {
this.replayBtn.node.on(a.default.CLICK, this.onReplayBtnTap, this);
this.backBtn.node.on(a.default.CLICK, this.onBackBtnTap, this);
this.shareVideoBtn.node.on(a.default.CLICK, this.onShareVideoBtnTap, this);
console.log("button share " + r.default.isResultShareable());
if (!r.default.isResultShareable()) {
this.shareVideoBtn.node.active = !1;
this.replayBtn.node.width = 500;
}
}
closeAnim(e) {
e && e();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.playTitleAnim(e.titleStr, () => {
r.default.stop();
});
g.Mng.Ins.spriteMng.setActorSprite(this.sprite, e.textureName, 200);
this.data.isProd && f.LifeMng.Ins.setLife(this.data.gameData.id, f.LifeMng.Ins.max);
if (s.tt) {
let t = s.crossPlatform.getStorageSync("lastShareVideoStamp") || 0;
this.shareVideoBtn.dot.active = !h.Util.isToday(t) && e.isProd;
}
if (e.gameRankId) {
let t = yield g.Mng.Ins.gameRankMng.loadOne(e.gameRankId);
if (t) {
this.layout.spacingY = 0;
this.sprite.node.active = !1;
let o = yield h.Util.loadBundleRes("Prefab/GameRankComp"), i = cc.instantiate(o);
this.layout.node.insertChild(i, 1);
i.getComponent(p.default).setData(t, e.gameData, !1);
i.height = 700;
}
}
});
}
playTitleAnim(e, t = null) {
c.default.blockInput(!0, "playTitleAnim");
d.TweenUtil.applayTextAnim(this.titleLabel, e, .1, () => {
c.default.blockInput(!1, "playTitleAnim");
t && t();
});
}
onBackBtnTap() {
this.closePanel();
r.default.stopAndClear();
this.backCall && this.backCall();
}
onReplayBtnTap() {
r.default.stopAndClear();
this.closePanel();
this.replayCall && this.replayCall();
}
onShareVideoBtnTap() {
if (r.default.hasVideo) {
let e = [ "创游编辑器" ];
this.data && e.push(this.data.gameData.name);
r.default.share({
video_title: "这个游戏超好玩！",
topics: e,
query: h.Util.toQueryStr({
type: "goods",
isMine: this.data.gameData.playerId == y.default.Ins.role.id,
gameId: this.data.gameData.id
}),
tgaFrom: "GameWinPanel",
succ: () => n(this, void 0, void 0, function*() {
if (this.shareVideoBtn.dot.active) {
this.shareVideoBtn.dot.active = !1;
s.crossPlatform.setStorageSync("lastShareVideoStamp", orange.TimeUtil.serverTime);
let e = yield m.default.Ins.requestAddCoinByShare();
u.OperationFlow.openRewards(e, () => {});
}
})
});
} else c.default.showToast("录屏时间太短");
}
};
i([ C(cc.Sprite) ], _.prototype, "sprite", void 0);
i([ C(cc.Label) ], _.prototype, "titleLabel", void 0);
i([ C(a.default) ], _.prototype, "backBtn", void 0);
i([ C(a.default) ], _.prototype, "replayBtn", void 0);
i([ C(a.default) ], _.prototype, "shareVideoBtn", void 0);
i([ C(cc.Layout) ], _.prototype, "layout", void 0);
_ = i([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/GameRecorder": "GameRecorder",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../Game/GameRankComp": "GameRankComp",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/LifeMng": "LifeMng",
"../../Game/Player/Mng": "Mng",
"../../Role": "Role"
} ],
GiftChooseCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e1b28A3GJZFzZRnx3wrurqa", "GiftChooseCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), r = e("../../Game/Player/GiftRankMng"), l = e("./GiftChoosePanel"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.icon = null;
this.nameLabel = null;
this.priceLabel = null;
this.bg = null;
}
onLoad() {
this.node.on(a.default.ITEM_STATE_CHANGE, this.itemChange, this);
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
l.default.isSetFirst || (l.default.isSetFirst = !0);
this.bg.node.opacity = 255;
this.nameLabel.string = e.name;
this.priceLabel.string = e.coin + "";
s.Util.updateLabel(this.priceLabel);
s.Util.updateLayout(this.priceLabel.node.parent);
r.GiftRankMng.Ins.loadSF(e.id + "").then(e => {
this.icon.spriteFrame = e;
});
});
}
itemChange(e) {
this.bg.node.opacity = e ? 255 : 0;
}
};
i([ d(cc.Sprite) ], h.prototype, "icon", void 0);
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "priceLabel", void 0);
i([ d(cc.Sprite) ], h.prototype, "bg", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/GiftRankMng": "GiftRankMng",
"./GiftChoosePanel": "GiftChoosePanel"
} ],
GiftChoosePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "64a3dL0V5VBUKEZUYVVlDZZ", "GiftChoosePanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../i18n/i18nMgr"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/CoinBar"), c = e("../../CustomUI/ScrollList"), d = e("../../Frame/Panel"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Sound"), u = e("../../Frame/Util"), m = e("../../Game/PhyObj"), f = e("../../Game/Player/CoinMng"), g = e("../../Game/Player/GiftRankMng"), {ccclass: y, property: v} = cc._decorator;
let C = i = class extends d.default {
constructor() {
super(...arguments);
this.payCoinBtn = null;
this.giftList = null;
this.coinLabel = null;
this.introduceLabel = null;
this.gameId = "";
this.isOpenPanel = !1;
this.timer = 0;
this.touching = !1;
this.inv = .5;
}
setCoin(e) {
this.coinLabel.string = e + s.I18nMgr.getI18nStringByZh("赠送");
}
onLoad() {
super.onLoad();
this.giftList.node.on(c.default.SELECT_ITEM, this.onItemChange, this);
this.payCoinBtn.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.payCoinBtn.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
this.payCoinBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
}
onEnable() {
l.default.Ins.show(150, 110);
}
onDisable() {
i.isSetFirst = !1;
l.default.Ins.hide();
}
init(e) {
this.gameId = e;
let t = g.GiftRankMng.Ins.giftItemsMap, o = [];
t.forEach(e => {
o.push(e);
});
this.giftList.setDataArr(o);
this.setCoin(o[0].coin);
this.introduceLabel.string = o[0].intr;
this.giftList.selectByIdx(0);
}
onItemChange(e, t) {
this.curIdx = e;
this.setCoin(t.coin);
this.introduceLabel.string = t.intr;
}
touchStart() {
this.touching = !0;
this.timer = 0;
this.inv = .5;
}
touchEnd() {
this.touching = !1;
this.pay();
}
touchCancel() {
this.touching = !1;
}
update(e) {
if (this.touching) {
this.timer += e;
if (this.timer > this.inv) {
this.timer -= this.inv;
this.inv = Math.max(.1, this.inv - .05);
this.pay();
}
}
}
pay() {
return a(this, void 0, void 0, function*() {
const e = this.curIdx + 1, t = e + "", o = g.GiftRankMng.Ins.getCost(t);
if (f.default.Ins.coin >= o) {
let i = yield g.GiftRankMng.Ins.sendGift(this.gameId, e, 1);
if (i && 0 == i.code) {
f.default.Ins.costCoin(o);
this.playAnim(t);
return;
}
}
if (!this.isOpenPanel) {
h.default.ins.OpenPanelByName("LackCoinPanel", e => {
e.closeCallback = () => {
this.isOpenPanel = !1;
};
});
this.isOpenPanel = !0;
}
});
}
playAnim(e) {
return a(this, void 0, void 0, function*() {
p.Sound.play("gainCoin");
let t = new cc.Node();
t.width = 128;
t.height = 128;
this.node.addChild(t);
let o = t.addComponent(cc.Sprite);
g.GiftRankMng.Ins.loadSF(e + "").then(e => {
o.spriteFrame = e;
});
t.y = 300;
t.addComponent(m.default).fly(u.Util.randomFloat(-300, 300), u.Util.randomFloat(800, 1e3), u.Util.randomFloat(-360, 360));
});
}
};
C.isSetFirst = !1;
n([ v(r.default) ], C.prototype, "payCoinBtn", void 0);
n([ v(c.default) ], C.prototype, "giftList", void 0);
n([ v(cc.Label) ], C.prototype, "coinLabel", void 0);
n([ v(cc.Label) ], C.prototype, "introduceLabel", void 0);
C = i = n([ y ], C);
o.default = C;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/CoinBar": "CoinBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Sound": "Sound",
"../../Frame/Util": "Util",
"../../Game/PhyObj": "PhyObj",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/GiftRankMng": "GiftRankMng"
} ],
GiftInfoCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1176b729z5FUpLGXvqSerJA", "GiftInfoCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GiftInfoData = void 0;
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/HeadIcon"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Role"), p = e("./GameCoverScene"), {ccclass: u, property: m} = cc._decorator;
o.GiftInfoData = class {
constructor(e) {
this.userId = null;
this.score = null;
this.rankList = null;
this.gameId = null;
this.gameName = null;
this.game = null;
this.detail = null;
this.detail = e;
this.rankList = e.rankList;
this.score = e.releaseGameData.gDGiftScoreInfo;
this.userId = e.authorMsg.id;
this.game = e.releaseGameData;
this.gameId = e.releaseGameData.id;
this.gameName = e.releaseGameData.name;
}
};
let f = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.addCoinBtn = null;
this.headIcon = null;
this.gameId = "";
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.moreBtn.node.on(n.default.CLICK, this.onMoreRank, this);
this.addCoinBtn.node.on(n.default.CLICK, this.onAddCoin, this);
}
setData(e) {
this.data = e;
this.gameId = e.gameId;
let t = [ c.UIColor.yellow, c.UIColor.lightGray, c.UIColor.orange ];
d.Util.makeBro(this.headIcon.node, 3, (o, i) => {
let s = e.rankList[i], r = o.getComponent(a.default), l = d.Util.searchChild(o, "crown"), c = d.Util.searchChild(o, "scoreLabel").getComponent(cc.Label);
l.active = !!s;
r.level.node.parent.active = !!s;
r.node.targetOff(this);
if (s) {
r.loadUrl(s.userImg);
r.setLevel(s.userLevel);
r.node.on(n.default.CLICK, () => {
this.onMoreRank();
}, this);
l.color = t[i];
c.string = "+" + s.score;
} else {
r.loadUrl(null);
c.string = "--";
r.node.on(n.default.CLICK, () => {
this.onAddCoin();
}, this);
}
});
}
onMoreRank() {
r.default.ins.Enter("GiftRankDetialScene", e => {
e.init(this.data);
}, r.ShiftAnima.moveLeftShift);
}
onAddCoin() {
h.default.Ins.role.id != this.data.userId ? r.default.ins.OpenPanelByName("GiftChoosePanel", e => {
e.init(this.gameId);
e.closeCallback = () => {
cc.game.emit(p.default.GameCoverScene_ReLoad);
};
}) : l.default.showToast("～不能给自己打赏～");
}
onLvUp() {}
};
i([ m(cc.Button) ], f.prototype, "moreBtn", void 0);
i([ m(cc.Button) ], f.prototype, "addCoinBtn", void 0);
i([ m(a.default) ], f.prototype, "headIcon", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Role": "Role",
"./GameCoverScene": "GameCoverScene"
} ],
GiftRankCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cdf42lqhIRMF7DJdYLmydUJ", "GiftRankCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GiftRankCellData = void 0;
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/UIColor"), c = e("../../../Frame/Util"), d = e("../../../Game/Player/GameIconMng"), {ccclass: h, property: p} = cc._decorator;
o.GiftRankCellData = class {
constructor(e, t, o, i, n) {
this.gameId = null;
this.gameName = null;
this.gameIcon = null;
this.rank = null;
this.score = null;
this.gameId = e;
this.gameName = t;
this.gameIcon = o;
this.rank = i;
this.score = n;
}
};
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.btn = null;
this.rankLabel = null;
this.rankSprite = null;
this.nameLabel = null;
this.coinLabel = null;
this.iconSprite = null;
this.data = null;
}
onLoad() {
this.btn.node.on(a.default.CLICK, this.onClick, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
let t = e.rank, o = t <= 3;
this.rankLabel.node.active = !o;
this.rankSprite.node.active = o;
d.GameIconMng.Ins.setSprite(this.iconSprite, e.gameIcon, this.iconSprite.node.width);
let i = l.UIColor.getRankColor(t);
this.node.color = i;
this.rankSprite.node.color = i;
this.nameLabel.string = c.Util.clampStr(e.gameName, 9, "..");
this.coinLabel.string = e.score + "";
this.rankSprite.spriteFrame = null;
o ? this.rankSprite.spriteFrame = yield c.Util.loadBundleRes("Atlas/UI/rank" + t, cc.SpriteFrame) : this.rankLabel.string = t + "";
});
}
onClick() {
return n(this, void 0, void 0, function*() {
r.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.gameId);
});
});
}
};
i([ p(cc.Button) ], u.prototype, "btn", void 0);
i([ p(cc.Label) ], u.prototype, "rankLabel", void 0);
i([ p(cc.Sprite) ], u.prototype, "rankSprite", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "coinLabel", void 0);
i([ p(cc.Sprite) ], u.prototype, "iconSprite", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/Player/GameIconMng": "GameIconMng"
} ],
GiftRankComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "03147mCsrtK8YVCPRDwhVTw", "GiftRankComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../../i18n/i18nMgr"), a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Util"), c = e("../DiscoverPage"), d = e("../HomeScene"), h = e("../RankSubPage/GiftRankCell"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.cell = null;
this.titleLabel = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.moreBtn.node.on(a.default.CLICK, this.onClick, this);
}
setData(e) {
this.titleLabel.string = n.I18nMgr.getI18nStringByZh(e.name);
let t = Math.min(e.ranks.length, 3);
l.Util.makeBro(this.cell.node, t, (t, o) => {
let i = e.ranks[o];
t.getComponent(h.default).setData(i);
});
}
onClick() {
let e = r.default.ins.findScene(d.default);
e && e.getComponentInChildren(c.default).selectPage(3);
}
};
i([ u(a.default) ], m.prototype, "moreBtn", void 0);
i([ u(h.default) ], m.prototype, "cell", void 0);
i([ u(cc.Label) ], m.prototype, "titleLabel", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../DiscoverPage": "DiscoverPage",
"../HomeScene": "HomeScene",
"../RankSubPage/GiftRankCell": "GiftRankCell"
} ],
GiftRankDetialCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f058dQHznRInac/6O3/xlPD", "GiftRankDetialCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/HeadIcon"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/GiftRankMng"), p = e("../../Role"), u = e("./GiftRankDetialIconCell"), m = e("./GiftRankDetialScene"), {ccclass: f, property: g} = cc._decorator;
let y = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon = null;
this.rankSprite = null;
this.rankLabel = null;
this.nameLabel = null;
this.pointLabel = null;
this.sendGiftBtn = null;
this.gameId = null;
this.gameUser = null;
this.userData = null;
this.isBottom = !1;
this.userId = null;
this.icon = null;
}
onLoad() {
this.headIcon.node.on(n.default.CLICK, this.onHeadIconBtn, this);
this.node.on(n.default.CLICK, this.onClick, this);
this.sendGiftBtn && this.sendGiftBtn.node.on(n.default.CLICK, this.onSendGift, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
onHeadIconBtn() {
this.showUserScene();
}
showUserScene() {
r.default.ins.Enter("FriendScene", e => {
e.setData(this.userId);
}, r.ShiftAnima.moveLeftShift);
}
onClick() {}
onSendGift() {
p.default.Ins.role.id != this.gameUser ? r.default.ins.OpenPanelByName("GiftChoosePanel", e => {
e.init(this.gameId);
e.closeCallback = () => {
cc.game.emit(m.default.RELOAD);
};
}) : l.default.showToast("～不能给自己打赏～");
}
init(e, t) {
this.gameId = e;
this.gameUser = t;
}
setData(e) {
this.userData = e;
let t = "" == e.userName ? p.default.Ins.role.userName : e.userName;
this.nameLabel.string = this.nameLabel.string = d.Util.clampStr(t, 9, "..");
this.pointLabel && (this.pointLabel.string = e.score + "");
let o = e.rank;
if (0 == o) {
this.rankLabel.node.active = !0;
this.rankSprite.node.active = !1;
this.rankLabel.string = "未上榜";
this.headIcon.loadUrl(p.default.Ins.role.userImg);
this.headIcon.setLevel(p.default.Ins.role.level);
this.userId = p.default.Ins.role.id;
} else {
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
this.userId = this.userData.roleId;
let t = e.rank <= 3;
this.rankLabel.node.active = !t;
this.rankSprite.node.active = t;
let i = c.UIColor.getRankColor(o);
this.node.color = i;
this.rankSprite.node.color = i;
t ? d.Util.loadBundleRes("Atlas/UI/rank" + o, cc.SpriteFrame).then(e => {
this.rankSprite.spriteFrame = e;
}) : this.rankLabel.string = o + "";
}
let i = e.giftDatas;
i.sort(function(e, t) {
return h.GiftRankMng.Ins.getCost(t.giftID + "") - h.GiftRankMng.Ins.getCost(e.giftID + "");
});
let n = Math.min(i.length, 3);
d.Util.makeBro(this.icon.node, n, (e, t) => {
e.getComponent(u.default).setData(i[t]);
});
d.Util.updateLayout(this.node);
}
};
i([ g(a.default) ], y.prototype, "headIcon", void 0);
i([ g(cc.Sprite) ], y.prototype, "rankSprite", void 0);
i([ g(cc.Label) ], y.prototype, "rankLabel", void 0);
i([ g(cc.Label) ], y.prototype, "nameLabel", void 0);
i([ g(cc.Label) ], y.prototype, "pointLabel", void 0);
i([ g(n.default) ], y.prototype, "sendGiftBtn", void 0);
i([ g(u.default) ], y.prototype, "icon", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/GiftRankMng": "GiftRankMng",
"../../Role": "Role",
"./GiftRankDetialIconCell": "GiftRankDetialIconCell",
"./GiftRankDetialScene": "GiftRankDetialScene"
} ],
GiftRankDetialIconCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2369J0LB1LeqtRBG0Hpvf3", "GiftRankDetialIconCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Util"), s = e("../../Game/Player/GiftRankMng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.text = null;
this.icon = null;
}
onLoad() {}
setData(e) {
return n(this, void 0, void 0, function*() {
if (null != e) {
this.text.string = "x" + e.giftCount;
s.GiftRankMng.Ins.loadSF(e.giftID + "").then(e => {
this.icon.spriteFrame = e;
});
a.Util.updateLabel(this.text);
a.Util.updateLayout(this.node);
}
});
}
};
i([ l(cc.Label) ], c.prototype, "text", void 0);
i([ l(cc.Sprite) ], c.prototype, "icon", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../../Game/Player/GiftRankMng": "GiftRankMng"
} ],
GiftRankDetialScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2c84f/Ln0VCA5vjwoedStc2", "GiftRankDetialScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../i18n/i18nMgr"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/GameIcon"), c = e("../../CustomUI/ScrollList"), d = e("../../Frame/Scene"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Frame/Util"), m = e("../../Game/OperationFlow"), f = e("../../Game/Player/GiftRankMng"), g = e("../GameCoverScene/GameCoverScene"), y = e("./GiftRankDetialCell"), {ccclass: v, property: C} = cc._decorator;
let _ = i = class extends d.default {
constructor() {
super(...arguments);
this.gameIcon = null;
this.totalLabel = null;
this.nameLabel = null;
this.backBtn = null;
this.gameList = null;
this.myDetialCell = null;
this.backCall = null;
this.data = null;
this.isLoading = !1;
this.beginIndex = 0;
this.giftArr = [];
}
onLoad() {
cc.game.on(i.RELOAD, this.reLoad, this);
this.backBtn.node.on(r.default.CLICK, this.onBackBtn, this);
}
init(e) {
return a(this, void 0, void 0, function*() {
this.data = e;
this.gameIcon.loadUrl(e.game.iconTextureName);
this.nameLabel.string = u.Util.clampStr(e.gameName, 10, "..");
this.refresh();
});
}
onBackBtn() {
h.default.ins.Back(() => {
cc.game.emit(g.default.GameCoverScene_ReLoad);
}, h.ShiftAnima.moveRightShift);
}
onShow(e) {
m.OperationFlow.deelOnShow(e);
}
reLoad() {
this.giftArr = [];
this.beginIndex = 0;
this.refresh();
}
refresh() {
return a(this, void 0, void 0, function*() {
if (this.isLoading) {
p.default.showToast("加载中");
return;
}
this.isLoading = !0;
let e = this.data, t = yield f.GiftRankMng.Ins.loadGameGiftRank(e.gameId, this.beginIndex);
this.totalLabel.string = s.I18nMgr.getI18nStringByZh("总计：") + t.score;
let o = t.checkerInfo, i = t.rankList;
this.giftArr = this.giftArr.concat(i);
for (let e = 0; e < this.giftArr.length; e++) this.giftArr[e].rank = e + 1;
this.beginIndex = this.giftArr.length;
this.gameList.setDataArr(this.giftArr);
this.myDetialCell.init(this.data.gameId, e.detail.authorMsg.id);
this.myDetialCell.setData(o);
this.isLoading = !1;
});
}
onScrollEvt(e, t) {
return a(this, void 0, void 0, function*() {
e.getScrollOffset();
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield this.refresh();
}
});
}
};
_.RELOAD = "RELOAD";
n([ C(l.default) ], _.prototype, "gameIcon", void 0);
n([ C(cc.Label) ], _.prototype, "totalLabel", void 0);
n([ C(cc.Label) ], _.prototype, "nameLabel", void 0);
n([ C(r.default) ], _.prototype, "backBtn", void 0);
n([ C(c.default) ], _.prototype, "gameList", void 0);
n([ C(y.default) ], _.prototype, "myDetialCell", void 0);
_ = i = n([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/GiftRankMng": "GiftRankMng",
"../GameCoverScene/GameCoverScene": "GameCoverScene",
"./GiftRankDetialCell": "GiftRankDetialCell"
} ],
GiftRankMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7ce3ag5KU5HyZYA88sWBLCs", "GiftRankMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GiftRankMng = o.GiftRankType = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/CrossPlatform"), s = e("../../Frame/NetworkMgr"), r = e("../../Frame/Util"), l = e("../../Scene/HomeScene/RankSubPage/GiftRankCell");
(function(e) {
e[e.Week = 1] = "Week";
e[e.Month = 2] = "Month";
e[e.Forever = 3] = "Forever";
e[e.Holidy = 4] = "Holidy";
})(o.GiftRankType || (o.GiftRankType = {}));
class c {
constructor() {
this.giftItemsVersion = "";
this.giftItemsMap = new Map();
this.giftSpriteFrame = new Map();
this.giftSpritePromiseMap = new Map();
this.giftRankMap = new Map();
}
loadSF(e) {
return i(this, void 0, void 0, function*() {
let t = this.giftSpriteFrame.get(e);
if (!t) {
let o = this.giftItemsMap.get(e), i = this.giftSpritePromiseMap.get(e);
if (!i) {
i = r.Util.downLoadPng("gift/" + o.iconUrl + ".png");
this.giftSpritePromiseMap.set(e, i);
}
t = yield i;
this.giftSpriteFrame.set(e, t);
this.giftSpritePromiseMap.delete(e);
}
return t;
});
}
getCost(e) {
return this.giftItemsMap.get(e).coin;
}
checkVersion(e) {
return i(this, void 0, void 0, function*() {
this.giftItemsMap.clear();
let t = a.crossPlatform.getStorageSync("gift_version"), o = a.crossPlatform.getStorageSync("gift_confs");
if (o && t == e) {
this.giftItemsVersion = t;
for (let e in o) this.giftItemsMap.set(e, o[e]);
} else {
let t = {}, o = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGiftDynCfg,
params: t
}, n.Game_RGetGiftDynCfg);
if (o) {
this.giftItemsVersion = e;
let t = {};
o.cfg.datas.forEach((e, o) => {
t[o] = e;
this.giftItemsMap.set(o, e);
});
a.crossPlatform.setStorageSync("gift_version", e);
a.crossPlatform.setStorageSync("gift_confs", t);
} else cc.error("礼物列表加载失败");
}
});
}
loadGiftItems() {
return i(this, void 0, void 0, function*() {
let e = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGiftDynCfg,
params: {}
}, n.Game_RGetGiftDynCfg);
if (e) {
this.giftItemsMap = e.cfg.datas;
this.giftItemsMap.forEach((e, t) => i(this, void 0, void 0, function*() {
let o = new cc.SpriteFrame();
o = yield r.Util.downLoadPng("gift/" + e.iconUrl + ".png");
this.giftSpriteFrame.set(t, o);
}));
} else cc.error("礼物列表加载失败");
});
}
sendGift(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = {
gameId: e,
giftID: t,
giftCount: o
};
return yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SendGift,
params: i
}, n.Game_RSendGift);
});
}
getGiftRank(e) {
return this.giftRankMap.get(e) || [];
}
deleteGiftRank(e) {
this.giftRankMap.delete(e);
}
appendLoadGiftRank(e, t) {
return i(this, void 0, void 0, function*() {
let t = this.getGiftRank(e);
this.giftRankMap.set(e, t);
let o = t.length, i = {
rankType: e,
beginIndex: o
}, a = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGiftRankData,
params: i
}, n.Game_RGetGiftRankData);
if (null != a) for (let e = 0; e < a.rankList.length; e++) {
let o = a.rankList[e];
if (!t.find(e => e.gameId == o.rankKey)) {
let e = new l.GiftRankCellData(o.rankKey, o.gameName, o.gameIcon, t.length + 1, o.score);
t.push(e);
}
}
return t;
});
}
loadGameGiftRank(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
gameId: e,
beginIndex: t
};
return yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleGiftRankData,
params: o
}, n.Game_RGetRoleGiftRankData);
});
}
}
o.GiftRankMng = c;
c.Ins = new c();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Util": "Util",
"../../Scene/HomeScene/RankSubPage/GiftRankCell": "GiftRankCell"
} ],
GiftRankSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "14a1etssl5DXr9CWIGO9o2t", "GiftRankSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nLabel"), s = e("../../../../i18n/i18nMgr"), r = e("../../../CustomUI/ScrollList"), l = e("../../../CustomUI/ToggleGroup"), c = e("../../../Frame/Util"), d = e("../../../Game/Player/DynamicMng"), h = e("../../../Game/Player/GiftRankMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.scrollList = null;
this.loadingNode = null;
this.toggleGroup = null;
this.emptyNode = null;
this.rankConfs = [ {
rankType: 1,
rankName: "周榜"
}, {
rankType: 2,
rankName: "月榜"
}, {
rankType: 3,
rankName: "总榜"
}, {
rankType: 4,
rankName: "暑假榜"
} ];
this.lastClearStamp = 0;
}
onLoad() {
return n(this, void 0, void 0, function*() {
yield this.initToggles();
this.loadingNode.width = this.loadingNode.height = 0;
this.toggleGroup.node.on(l.default.TOGGLE_CHANGE, this.onToggleChange, this);
yield this.refresh();
});
}
initToggles() {
return n(this, void 0, void 0, function*() {
let e = yield d.DynamicMng.Ins.loadOne("GiftRank");
e && (this.rankConfs = e.GiftRankSubPage.ranks);
let t = this.toggleGroup.toggleItems[0];
c.Util.makeBro(t.node, this.rankConfs.length, (e, t) => {
let o = this.rankConfs[t], i = e.getComponentsInChildren(a.default);
for (let e = 0; e < i.length; e++) i[e].tid = s.I18nMgr.getI18nTidByZh(o.rankName);
});
});
}
idx2RankType(e) {
var t;
return (null === (t = this.rankConfs[e]) || void 0 === t ? void 0 : t.rankType) || 1;
}
onToggleChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
yield this.refresh();
this.scrollList.scrollToTop(.3, !1);
}
});
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = this.toggleGroup.idx, t = this.idx2RankType(e), o = h.GiftRankMng.Ins.getGiftRank(t);
o.length < 12 && (o = yield h.GiftRankMng.Ins.appendLoadGiftRank(t, 12));
this.scrollList.setDataArr(o);
this.emptyNode.active = 0 == o.length;
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
let o = this.toggleGroup.idx, i = this.idx2RankType(o), n = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (n > 100) {
let e = c.Util.getTimeStamp();
if (e - this.lastClearStamp > 500) {
h.GiftRankMng.Ins.deleteGiftRank(i);
yield this.refresh();
this.lastClearStamp = e;
}
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
yield h.GiftRankMng.Ins.appendLoadGiftRank(i, 12);
yield this.refresh();
break;

case cc.ScrollView.EventType.SCROLLING:
if (n > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(n, 100);
this.loadingNode.angle = n;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
};
i([ u(r.default) ], m.prototype, "scrollList", void 0);
i([ u(cc.Node) ], m.prototype, "loadingNode", void 0);
i([ u(l.default) ], m.prototype, "toggleGroup", void 0);
i([ u(cc.Node) ], m.prototype, "emptyNode", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../../i18n/i18nLabel": "i18nLabel",
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/Util": "Util",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GiftRankMng": "GiftRankMng"
} ],
GoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fea45gdwENP95NhaClPe+Lb", "GoodsCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/ScrollList"), d = e("../../../Frame/SceneManager"), h = e("../../../Frame/Util"), p = e("../../../Game/Player/Mng"), u = e("../../../Game/Player/ShopMng"), {ccclass: m, property: f} = cc._decorator;
let g = i = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.advertLabel = null;
this.priceLabel = null;
this.discountLabel = null;
this.saleCntLabel = null;
this.packageSizeLabel = null;
this.from = "";
this.goodsCellData = null;
this.bk = "";
this.st = "";
this.discount = 1;
}
onLoad() {
this.node.on(c.default.SET_DATA, this.setData, this);
this.node.on(l.default.CLICK, this.onClick, this);
this.setDiscount(1);
}
setData(e, t) {
return a(this, void 0, void 0, function*() {
let t = null;
if (e instanceof r.GoodsCellData) {
t = e;
this.bk = "";
this.st = "";
} else {
t = e.goodsCellData;
this.bk = e.bk;
this.st = e.st;
}
this.goodsCellData = t;
this.nameLabel.string = t.name + ":";
this.advertLabel.string = h.Util.clampStr(t.advert, 38, "..");
this.priceLabel.string = t.price + "";
this.saleCntLabel.string = t.saleCnt + s.I18nMgr.getI18nStringByZh("次下载");
h.Util.updateLabel(this.nameLabel);
h.Util.updateLabel(this.advertLabel);
h.Util.updateLabel(this.priceLabel);
h.Util.updateLabel(this.saleCntLabel);
h.Util.updateAllLayout(this.node);
this.packageSizeLabel.string = t.goodsContentCnt + "";
p.Mng.Ins.spriteMng.setSprite(this.sprite, t.iconTextureName, 200);
});
}
setDiscount(e) {
return a(this, void 0, void 0, function*() {
if (null != this.discountLabel) {
this.discount = e;
this.discountLabel.string = 10 * e + "折";
this.discountLabel.node.parent.active = e < 1;
}
});
}
onClick() {
return a(this, void 0, void 0, function*() {
if (i.clickLock) return;
i.clickLock = !0;
let e = yield u.default.Ins.loadGoodsInfos([ this.goodsCellData.id ]);
e && e[0] ? d.default.ins.OpenPanelByName("BuyGoodsPanel", t => {
i.clickLock = !1;
t.setData(e[0]);
t.setDiscount(this.discount);
t.buyCall = () => {
cc.game.emit("RefreshShopList");
};
}) : i.clickLock = !1;
});
}
};
g.clickLock = !1;
n([ f(cc.Sprite) ], g.prototype, "sprite", void 0);
n([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
n([ f(cc.Label) ], g.prototype, "advertLabel", void 0);
n([ f(cc.Label) ], g.prototype, "priceLabel", void 0);
n([ f(cc.Label) ], g.prototype, "discountLabel", void 0);
n([ f(cc.Label) ], g.prototype, "saleCntLabel", void 0);
n([ f(cc.Label) ], g.prototype, "packageSizeLabel", void 0);
n([ f ], g.prototype, "from", void 0);
g = i = n([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/ShopMng": "ShopMng"
} ],
GoodsItemCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c08825OsShEVK04kawtbgZo", "GoodsItemCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/SceneManager"), r = e("../../Frame/Util"), l = e("../../Game/Player/Mng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
this.typeLabel = null;
this.conf = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(n.default.CLICK, this.onClick, this);
}
setData(e) {
if (e && e.conf) {
this.conf = e.conf;
this.label.string = r.Util.clampStr(e.conf.name, 6, "..");
l.Mng.Ins.spriteMng.setSprite(this.sprite, e.conf.textureName, 120);
let t = e.conf.typeName;
this.typeLabel.node.active = !!t;
this.typeLabel.string = t;
r.Util.updateLabel(this.typeLabel);
this.typeLabel.node.parent.width = this.typeLabel.node.width + 20;
}
}
onClick() {
s.default.ins.OpenPanelByName("ImagePreviewPanel", e => {
e.setData(this.conf.name, this.conf.textureName);
});
}
};
i([ d(cc.Label) ], h.prototype, "label", void 0);
i([ d(cc.Sprite) ], h.prototype, "sprite", void 0);
i([ d(cc.Label) ], h.prototype, "typeLabel", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
GoodsRecommendCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5b81exeAqtF7K0VOsN6hCsc", "GoodsRecommendCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/Mng"), d = e("../../../Game/Player/RcmdMng"), h = e("../../../Game/Player/ShopMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.btn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
l.Util.makeBro(this.btn.node, e.goodsInfoList.length, (t, o) => {
let i = e.goodsInfoList[o];
d.default.Ins.goodsShow(i.id, "GoodsRecommendCell");
let n = t.getComponent(a.default);
c.Mng.Ins.spriteMng.setSprite(n.icon, i.iconTextureName, 130);
n.label.string = "" + Math.ceil(.6 * i.price);
n.node.off(a.default.CLICK, this.onClick, this);
n.node.on(a.default.CLICK, this.onClick, this);
});
});
}
onClick(e) {
return n(this, void 0, void 0, function*() {
let t = e.target.parent.getSiblingIndex(), o = this.data.goodsInfoList[t], i = yield h.default.Ins.loadGoodsInfos([ o.id ]);
i && i[0] && r.default.ins.OpenPanelByName("BuyGoodsPanel", e => {
e.setData(i[0]);
e.setDiscount(.6);
e.buyCall = () => {
cc.game.emit("RefreshShopList");
};
});
});
}
};
i([ u(a.default) ], m.prototype, "btn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/RcmdMng": "RcmdMng",
"../../../Game/Player/ShopMng": "ShopMng"
} ],
GraphicsSelectBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5fa0dvIq0hPYY9uHviZNkq9", "GraphicsSelectBox");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GraphicsSelectBoxState = void 0;
const n = e("../../Frame/Util"), {ccclass: a, property: s} = cc._decorator;
var r;
(function(e) {
e[e.resize = 0] = "resize";
e[e.move = 1] = "move";
})(r = o.GraphicsSelectBoxState || (o.GraphicsSelectBoxState = {}));
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.graphics = null;
this.leftDown = null;
this.rightDown = null;
this.leftTop = null;
this.rightTop = null;
this.srcX = 0;
this.srcY = 0;
this.srcW = 0;
this.srcH = 0;
this.state = r.resize;
this.pixels = null;
this.pixelsW = 0;
this.pixelsH = 0;
this.scaledPixels = null;
this.scaledW = 0;
this.scaledH = 0;
this.parentScale = 1;
this.parentWidth = 256;
this.parentHeight = 256;
this.anchorPos = null;
}
onLoad() {
this.leftDown.on(cc.Node.EventType.TOUCH_START, this.onTouchCorrnerStart, this);
this.leftDown.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchCorrnerMove, this);
this.leftDown.on(cc.Node.EventType.TOUCH_END, this.onTouchCorrnerMove, this);
this.rightDown.on(cc.Node.EventType.TOUCH_START, this.onTouchCorrnerStart, this);
this.rightDown.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchCorrnerMove, this);
this.rightDown.on(cc.Node.EventType.TOUCH_END, this.onTouchCorrnerMove, this);
this.leftTop.on(cc.Node.EventType.TOUCH_START, this.onTouchCorrnerStart, this);
this.leftTop.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchCorrnerMove, this);
this.leftTop.on(cc.Node.EventType.TOUCH_END, this.onTouchCorrnerMove, this);
this.rightTop.on(cc.Node.EventType.TOUCH_START, this.onTouchCorrnerStart, this);
this.rightTop.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchCorrnerMove, this);
this.rightTop.on(cc.Node.EventType.TOUCH_END, this.onTouchCorrnerMove, this);
}
onTouchCorrnerStart(e) {
let t = null;
e.target == this.leftDown && (t = this.rightTop);
e.target == this.rightTop && (t = this.leftDown);
e.target == this.rightDown && (t = this.leftTop);
e.target == this.leftTop && (t = this.rightDown);
let o = n.Util.convertPosition(t, this.node.parent);
o.x = Math.floor(o.x);
o.y = Math.floor(o.y);
this.anchorPos = o;
e.stopPropagation();
this.refreshGrashice();
}
onTouchCorrnerMove(e) {
let t = e.getPreviousLocation();
this.node.parent.convertToNodeSpaceAR(t, t);
t.x = Math.floor(t.x);
t.y = Math.floor(t.y);
if (!this.pixels) {
cc.game.emit("cutPixelsToSelectBox", !0);
this.clearSrc = !0;
}
this.dragSize(this.anchorPos, t);
this.node.width === this.scaledW && this.node.height != this.scaledH || this.updateScalePixles();
e.stopPropagation();
this.refreshGrashice();
}
dragSize(e, t) {
let o = Math.min(e.x, t.x), i = Math.max(e.x, t.x), n = Math.min(e.y, t.y), a = Math.max(e.y, t.y);
o = Math.max(o, 0);
i = Math.min(i, this.parentWidth);
n = Math.max(n, 0);
a = Math.min(a, this.parentHeight);
this.node.x = o;
this.node.y = n;
this.node.width = i - o;
this.node.height = a - n;
}
saveSrcPosSize() {
this.srcX = this.node.x;
this.srcY = this.node.y;
this.srcW = this.node.width;
this.srcH = this.node.height;
}
setParentScale(e) {
this.parentScale = e;
let t = t => {
let o = 4 / e, i = -o * t.width;
t.scale = o;
let n = t.getComponent(cc.Widget);
n.left = i;
n.right = i;
n.top = i;
n.bottom = i;
};
t(this.leftTop);
t(this.leftDown);
t(this.rightTop);
t(this.rightDown);
}
setParentSize(e, t) {
this.parentWidth = e;
this.parentHeight = t;
}
setOriPixels(e, t, o) {
this.pixels = e;
this.pixelsW = t;
this.pixelsH = o;
this.displayPixels(e, t, o);
}
updateScalePixles() {
let e = this.node.width, t = this.node.height, o = new Uint8Array(e * t * 4);
for (let i = 0; i < e; i++) for (let n = 0; n < t; n++) {
let a = Math.floor(i * this.srcW / e), s = 4 * (Math.floor(n * this.srcH / t) * this.srcW + a), r = 4 * (n * e + i);
o[r] = this.pixels[s];
o[r + 1] = this.pixels[s + 1];
o[r + 2] = this.pixels[s + 2];
o[r + 3] = this.pixels[s + 3];
}
this.scaledPixels = o;
this.scaledW = e;
this.scaledH = t;
this.displayPixels(o, e, t);
}
displayPixels(e, t, o) {
let i = e, n = new cc.RenderTexture();
n.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
let a = cc.game._renderContext;
n.initWithSize(t, o, a.STENCIL_INDEX8);
n.initWithData(i, cc.Texture2D.PixelFormat.RGBA8888, t, o);
this.sprite.spriteFrame = new cc.SpriteFrame();
this.sprite.spriteFrame.setTexture(n);
}
clearPixels() {
this.pixels = null;
this.scaledPixels = null;
this.sprite.spriteFrame = null;
}
refreshGrashice() {
let e = 20 / this.parentScale, t = 4 / this.parentScale, o = this.graphics;
o.lineWidth = t;
o.clear();
o.fillColor = o.strokeColor = cc.Color.BLACK;
let i = this.node.width, n = this.node.height;
for (let a = 0; a < i; a += 2 * e) {
let s = Math.min(a + e, i);
o.moveTo(a, -t / 2);
o.lineTo(s, -t / 2);
o.stroke();
o.moveTo(a, n + t / 2);
o.lineTo(s, n + t / 2);
o.stroke();
}
for (let a = 0; a < n; a += 2 * e) {
let s = Math.min(a + e, n);
o.moveTo(-t / 2, a);
o.lineTo(-t / 2, s);
o.stroke();
o.moveTo(i + t / 2, a);
o.lineTo(i + t / 2, s);
o.stroke();
}
}
};
i([ s(cc.Sprite) ], l.prototype, "sprite", void 0);
i([ s(cc.Graphics) ], l.prototype, "graphics", void 0);
i([ s(cc.Node) ], l.prototype, "leftDown", void 0);
i([ s(cc.Node) ], l.prototype, "rightDown", void 0);
i([ s(cc.Node) ], l.prototype, "leftTop", void 0);
i([ s(cc.Node) ], l.prototype, "rightTop", void 0);
l = i([ a ], l);
o.default = l;
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
Graphics: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d61b8+EtglFR5aZIKFLtavo", "Graphics");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../Frame/Util"), a = e("../Scene/PaintScene/GraphicsSelectBox"), s = e("./Button"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.tempSprite = null;
this.selectBox = null;
this.flipXBtn = null;
this.flipYBtn = null;
this.deleteSelectAreaBtn = null;
this.copySelectAreaBtn = null;
this.sizeSliderNode = null;
this.renderTexture = null;
this.pixels = null;
this.tempRenderTexture = null;
this.tempPixels = null;
this.width = 0;
this.height = 0;
this.color = cc.Color.BLACK;
this._lineWidth = 5;
this.v2Pool = [];
this.uint8ArrayPool = [];
this.braushMap = new Map();
this.lineOp = null;
this.lastPos = cc.Vec2.ZERO;
this.opStack = [];
this.touchStartPos = null;
this.touchLastPos = null;
}
set lineWidth(e) {
this._lineWidth = Math.floor(e);
}
get lineWidth() {
return this._lineWidth;
}
onLoad() {
this.hideSelectBox();
cc.game.on("cutPixelsToSelectBox", this.cutPixelsToSelectBox, this);
this.flipXBtn.node.on(s.default.CLICK, this.onFlipXBtn, this);
this.flipYBtn.node.on(s.default.CLICK, this.onFlipYBtn, this);
this.deleteSelectAreaBtn.node.on(s.default.CLICK, this.onDeleteSelectAreaBtn, this);
this.copySelectAreaBtn.node.on(s.default.CLICK, this.onCopySelectAreaBtn, this);
}
onDestroy() {
cc.game.off("cutPixelsToSelectBox", this.cutPixelsToSelectBox, this);
}
setSize(e, t) {
this.width = e;
this.height = t;
let o = cc.game._renderContext;
this.sprite.node.width = this.node.width = e;
this.sprite.node.height = this.node.height = t;
this.sprite.spriteFrame = new cc.SpriteFrame();
let i = new cc.RenderTexture();
i.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
i.initWithSize(e, t, o.STENCIL_INDEX8);
this.renderTexture = i;
this.pixels = this._getUint8Array();
this.selectBox.setParentSize(e, t);
this.tempSprite.node.width = this.node.width = e;
this.tempSprite.node.height = this.node.height = t;
this.tempSprite.spriteFrame = new cc.SpriteFrame();
let n = new cc.RenderTexture();
n.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
n.initWithSize(e, t, o.STENCIL_INDEX8);
this.tempRenderTexture = n;
this.tempPixels = this._getUint8Array();
}
_drawPixels(e) {
let t = Math.floor(e.length / 4);
for (let o = 0; o < t; o++) {
let t = 4 * o, i = e[t], n = e[t + 1], a = e[t + 2], s = e[t + 3];
if (0 != s) {
this.pixels[t] = i;
this.pixels[t + 1] = n;
this.pixels[t + 2] = a;
this.pixels[t + 3] = s;
}
}
}
_drawLine(e, t, o, i, n) {
t.x = Math.floor(t.x);
t.y = Math.floor(t.y);
o.x = Math.floor(o.x);
o.y = Math.floor(o.y);
if (t.x > o.x) {
let e = t;
t = o;
o = e;
}
let a = this._getBrush(i), s = [], r = t.x, l = o.x, c = Math.min(t.y, o.y), d = Math.max(t.y, o.y);
if (Math.abs(r - l) < 1e-5) for (let e in a) {
let t = Number.parseInt(e), o = a[t];
if (o) {
let e = {
ymin: c + o.ymin,
ymax: d + o.ymax
};
s[r + t] = e;
}
} else {
let e = (o.y - t.y) / (l - r), i = Math.floor(t.y), n = 0, h = (e, t) => {
for (let o in a) {
let i = Number.parseInt(o), n = e + i;
if (n < 0 || n >= this.width) continue;
let r = a[i];
if (!r) continue;
let l = s[n];
if (null == l) {
l = {
ymin: t,
ymax: t
};
s[n] = l;
}
t + r.ymin < l.ymin && (l.ymin = t + r.ymin);
t + r.ymax > l.ymax && (l.ymax = t + r.ymax);
}
};
for (let t = r; t <= l; t++) {
if (t != r) {
n += e / 2;
for (;n >= 1; ) {
n -= 1;
h(t, ++i);
}
for (;n <= -1; ) {
n += 1;
h(t, --i);
}
}
h(t, i);
n += e / 2;
for (;n >= 1; ) {
n -= 1;
if (++i > d) break;
h(t, i);
}
for (;n <= -1; ) {
n += 1;
if (--i < c) break;
h(t, i);
}
}
}
this.fillRange(e, s, n);
}
_drawRect(e, t, o, i, n, a) {
o.x = Math.floor(o.x);
o.y = Math.floor(o.y);
i.x = Math.floor(i.x);
i.y = Math.floor(i.y);
if (o.x > i.x) {
let e = o;
o = i;
i = e;
}
let s = o.x, r = i.x, l = Math.min(o.y, i.y), c = Math.max(o.y, i.y), d = cc.v2(s, l), h = cc.v2(r, l), p = cc.v2(s, c), u = cc.v2(r, c);
this._drawLine(e, d, h, n, a);
this._drawLine(e, p, u, n, a);
this._drawLine(e, d, p, n, a);
this._drawLine(e, h, u, n, a);
if (t) for (let t = s; t < r; t++) for (let o = l; o < c; o++) {
let i = this._getStart(t, o);
e[i] = a.r;
e[i + 1] = a.g;
e[i + 2] = a.b;
e[i + 3] = a.a;
}
}
_drawCircle(e, t, o, i, n, a) {
o.x = Math.floor(o.x);
o.y = Math.floor(o.y);
i.x = Math.floor(i.x);
i.y = Math.floor(i.y);
if (o.x > i.x) {
let e = o;
o = i;
i = e;
}
let s = o.x, r = i.x, l = Math.min(o.y, i.y), c = Math.max(o.y, i.y), d = Math.floor((r + s) / 2), h = Math.floor((c + l) / 2), p = Math.floor((r - s) / 2), u = Math.floor((c - l) / 2), m = t => {
let o, i = t[0];
for (let s = 1; s < t.length; s++) {
o = t[s];
this._drawLine(e, i, o, n, a);
i = o;
}
}, f = [], g = [], y = [], v = [], C = [];
for (let e = 0; e <= p; e++) {
let t = Math.sqrt(u * u * (p * p - e * e)) / p;
t = Math.round(t);
f.push(cc.v2(d + e, h + t));
g.push(cc.v2(d + e, h - t));
y.push(cc.v2(d - e, h + t));
v.push(cc.v2(d - e, h - t));
C[d + e] = {
ymin: h - t,
ymax: h + t
};
C[d - e] = {
ymin: h - t,
ymax: h + t
};
}
m(f);
m(g);
m(y);
m(v);
t && this.fillRange(e, C, a);
}
_bucketFill(e, t) {
let o = this.pixels;
e = this._getV2(Math.floor(e.x), Math.floor(e.y));
let i = this._getStart(e.x, e.y), n = this.width, a = this.height, s = t.getR(), r = t.getG(), l = t.getB(), c = t.getA(), d = o[i], h = o[i + 1], p = o[i + 2], u = o[i + 3];
if (s == d && r == h && l == p && c == u) return;
let m = (e, t) => {
i = this._getStart(e, t);
if (e >= 0 && t >= 0 && e < n && t < a && o[i] == d && o[i + 1] == h && o[i + 2] == p && o[i + 3] == u) {
o[i] = s;
o[i + 1] = r;
o[i + 2] = l;
o[i + 3] = c;
f.push(this._getV2(e, t));
}
}, f = [], g = n * a;
m(e.x, e.y);
for (;f.length > 0 && g--; ) {
m((e = f.pop()).x - 1, e.y);
m(e.x, e.y - 1);
m(e.x + 1, e.y);
m(e.x, e.y + 1);
this.v2Pool.push(e);
}
}
_getV2(e, t) {
let o = null;
if (this.v2Pool.length > 0) {
(o = this.v2Pool.pop()).x = e;
o.y = t;
} else o = cc.v2(e, t);
return o;
}
_getUint8Array(e = null) {
let t = null;
t = this.uint8ArrayPool.length > 0 ? this.uint8ArrayPool.pop() : new Uint8Array(this.width * this.height * 4);
e && t.set(e);
return t;
}
_clear(e, t, o, i) {
let n = this.pixels;
for (let i = e; i < o; i++) for (let e = t; e < this.height; e++) {
let t = this._getStart(i, e);
n[t] = 0;
n[t + 1] = 0;
n[t + 2] = 0;
n[t + 3] = 0;
}
}
_clearTemp(e, t, o, i) {
let n = this.tempPixels;
for (let i = e; i < o; i++) for (let e = t; e < this.height; e++) {
let t = this._getStart(i, e);
n[t] = 0;
n[t + 1] = 0;
n[t + 2] = 0;
n[t + 3] = 0;
}
}
_getStart(e, t) {
return 4 * ((this.height - t - 1) * this.width + e);
}
_getBrush(e) {
if (this.braushMap.has(e)) return this.braushMap.get(e);
{
let t = [];
if (1 == e) t[0] = {
ymin: 0,
ymax: 0
}; else if (2 == e) {
t[-1] = {
ymin: 0,
ymax: 1
};
t[0] = {
ymin: 0,
ymax: 1
};
} else if (3 == e) {
t[-1] = {
ymin: 0,
ymax: 0
};
t[0] = {
ymin: -1,
ymax: 1
};
t[1] = {
ymin: 0,
ymax: 0
};
} else {
let o = e / 2;
if (e % 2 == 0) for (let e = -o; e < o; e++) {
let i = Math.sqrt(o * o - Math.pow(e + .5, 2));
i -= .5;
t[e] = {
ymin: -Math.floor(i),
ymax: Math.ceil(i)
};
} else for (let e = -Math.floor(o); e <= Math.floor(o); e++) {
let i = Math.sqrt(o * o - Math.pow(e, 2));
t[e] = {
ymin: -Math.floor(i),
ymax: Math.floor(i)
};
}
}
this.braushMap.set(e, t);
return t;
}
}
fillRange(e, t, o) {
let i = o.getR(), n = o.getG(), a = o.getB(), s = o.getA();
t.forEach((t, o) => {
if (o < 0 || o >= this.width) return;
let r = Math.max(t.ymin, 0), l = Math.min(t.ymax, this.height);
for (let t = r; t <= l; t++) {
let r = this._getStart(o, t);
e[r] = i;
e[r + 1] = n;
e[r + 2] = a;
e[r + 3] = s;
}
});
}
updateTexture() {
let e = this.pixels;
this.renderTexture.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, this.width, this.height);
this.sprite.spriteFrame.setTexture(this.renderTexture);
}
updateTempTexture() {
let e = this.tempPixels;
this.tempRenderTexture.initWithData(e, cc.Texture2D.PixelFormat.RGBA8888, this.width, this.height);
this.tempSprite.spriteFrame.setTexture(this.tempRenderTexture);
}
drawPixels(e) {
if (e) {
this._drawPixels(e);
this.updateTexture();
this.pushOp({
type: "drawPixels",
pixels: e
});
}
}
importPixels(e) {
let t = n.Util.getPixelTirmBounds(e, 256, 256), o = t.xmax - t.xmin + 1, i = t.ymax - t.ymin + 1, a = new Uint8Array(o * i * 4);
for (let n = 0; n < o; n++) for (let s = 0; s < i; s++) {
let i = 4 * (s * o + n), r = 4 * (256 * (s + 256 - t.ymax - 1) + n + t.xmin);
a[i] = e[r];
a[i + 1] = e[r + 1];
a[i + 2] = e[r + 2];
a[i + 3] = e[r + 3];
}
this.selectBox.node.x = Math.floor((256 - o) / 2);
this.selectBox.node.y = Math.floor((256 - i) / 2);
this.selectBox.node.width = o;
this.selectBox.node.height = i;
this.selectBox.clearSrc = !1;
this.showSelectBox();
this.selectBox.setOriPixels(a, o, i);
this.selectBox.saveSrcPosSize();
this.selectBox.refreshGrashice();
}
beginLine(e) {
e.x = Math.floor(e.x);
e.y = Math.floor(e.y);
this.lastPos = e;
this.updateTexture();
this.lineOp = {
type: "line",
lineWidth: this.lineWidth,
color: this.color,
posList: [ e ]
};
}
lineTo(e) {
e.x = Math.floor(e.x);
e.y = Math.floor(e.y);
this._drawLine(this.pixels, this.lastPos, e, this.lineWidth, this.color);
this.lastPos = e;
this.updateTexture();
this.lineOp && this.lineOp.posList.push(e);
}
endLine() {
if (this.lineOp) {
this.pushOp(this.lineOp);
this.lineOp = null;
}
}
clear(e = 0, t = 0, o = this.width, i = this.height) {
this._clear(e, t, o, i);
this.updateTexture();
this.opStack = [];
}
bucketFill(e, t) {
this._bucketFill(e, t);
this.updateTexture();
this.pushOp({
type: "bucket",
pos: e,
color: t
});
}
pushOp(e) {
if (this.opStack.length % 5 == 0 && 0 != this.opStack.length) {
let t = new Uint8Array(this.width * this.height * 4);
for (let e = 0, o = this.pixels.length; e < o; e++) t[e] = this.pixels[e];
e.snapshot = t;
}
this.opStack.push(e);
}
apllyStack(e) {
cc.log(e);
let t = 0;
for (let o = e.length - 1; o >= 0; o--) {
let i = e[o];
if (i.snapshot) {
this.pixels = this._getUint8Array(i.snapshot);
t = o + 1;
break;
}
}
cc.log(`从第${t}开始恢复, ${e.length}`);
for (let o = t; o < e.length; o++) {
let t = e[o];
switch (t.type) {
case "line":
{
let e, o = t.color, i = t.lineWidth, n = t.posList, a = n[0];
for (let t = 1; t < n.length; t++) {
e = n[t];
this._drawLine(this.pixels, a, e, i, o);
a = e;
}
break;
}

case "bucket":
this._bucketFill(t.pos, t.color);
break;

case "clear":
this._clear(t.x, t.y, t.w, t.h);
break;

case "drawPixels":
this._drawPixels(t.pixels);
break;

case "selectBox":
t.clearSrc && this._clearArea(t.srcX, t.srcY, t.srcW, t.srcH);
this._drawAreaPixles(t.pixels, t.newX, t.newY, t.newW, t.newH);
this.updateTexture();
break;

case "deleteSelectArea":
this._clearArea(t.x, t.y, t.w, t.h);
this.updateTexture();
break;

case "copySelectArea":
this._drawAreaPixles(t.pixels, t.newX, t.newY, t.newW, t.newH);
this.updateTexture();
break;

case "rect":
this._drawRect(this.pixels, t.fill, t.pos1, t.pos2, t.lineWidth, t.color);
break;

case "circle":
this._drawCircle(this.pixels, t.fill, t.pos1, t.pos2, t.lineWidth, t.color);
}
}
this.updateTexture();
}
revert() {
this._clear(0, 0, this.width, this.height);
this.opStack.length > 0 && this.opStack.pop();
this.apllyStack(this.opStack);
}
_drawAreaPixles(e, t, o, i, n) {
for (let a = 0; a < i; a++) if (!(a + t < 0 || a + t >= this.width)) for (let s = 0; s < n; s++) {
let r = 4 * ((n - s - 1) * i + a), l = this._getStart(a + t, s + o);
if (0 !== e[r + 3]) {
this.pixels[l] = e[r];
this.pixels[l + 1] = e[r + 1];
this.pixels[l + 2] = e[r + 2];
this.pixels[l + 3] = e[r + 3];
}
}
this.updateTexture();
}
_clearArea(e, t, o, i) {
for (let n = 0; n < o; n++) for (let o = 0; o < i; o++) {
let i = this._getStart(n + e, o + t);
this.pixels[i] = 0;
this.pixels[i + 1] = 0;
this.pixels[i + 2] = 0;
this.pixels[i + 3] = 0;
}
this.updateTexture();
}
_getAreaPixels(e, t, o, i) {
let n = new Uint8Array(o * i * 4);
for (let a = 0; a < o; a++) for (let s = 0; s < i; s++) {
let r = 4 * ((i - s - 1) * o + a), l = this._getStart(a + e, s + t);
n[r] = this.pixels[l];
n[r + 1] = this.pixels[l + 1];
n[r + 2] = this.pixels[l + 2];
n[r + 3] = this.pixels[l + 3];
}
return n;
}
showSelectBox() {
this.selectBox.node.active = !0;
this.flipXBtn.node.active = !0;
this.flipYBtn.node.active = !0;
this.deleteSelectAreaBtn.node.active = !0;
this.copySelectAreaBtn.node.active = !0;
this.sizeSliderNode.active = !1;
}
hideSelectBox() {
this.selectBox.node.active = !1;
this.flipXBtn.node.active = !1;
this.flipYBtn.node.active = !1;
this.deleteSelectAreaBtn.node.active = !1;
this.copySelectAreaBtn.node.active = !1;
this.sizeSliderNode.active = !0;
}
onFlipXBtn() {
if (!this.selectBox.pixels) {
this.cutPixelsToSelectBox(!0);
this.selectBox.clearSrc = !0;
}
let e = this.selectBox.pixels, t = this.selectBox.pixelsW, o = this.selectBox.pixelsH, i = t / 2, n = (t, o) => {
let i = e[t];
e[t] = e[o];
e[o] = i;
};
for (let e = 0; e < o; e++) for (let o = 0; o < i; o++) {
let i = 4 * (e * t + o), a = 4 * (e * t + t - o - 1);
n(i, a);
n(i + 1, a + 1);
n(i + 2, a + 2);
n(i + 3, a + 3);
}
this.selectBox.updateScalePixles();
}
onFlipYBtn() {
if (!this.selectBox.pixels) {
this.cutPixelsToSelectBox(!0);
this.selectBox.clearSrc = !0;
}
let e = this.selectBox.pixels, t = this.selectBox.pixelsW, o = this.selectBox.pixelsH, i = o / 2, n = (t, o) => {
let i = e[t];
e[t] = e[o];
e[o] = i;
};
for (let e = 0; e < t; e++) for (let a = 0; a < i; a++) {
let i = 4 * (a * t + e), s = 4 * ((o - 1 - a) * t + e);
n(i, s);
n(i + 1, s + 1);
n(i + 2, s + 2);
n(i + 3, s + 3);
}
this.selectBox.updateScalePixles();
}
onDeleteSelectAreaBtn() {
if (this.selectBox.pixels) this.selectBox.clearPixels(); else {
let e = this.selectBox.node.x, t = this.selectBox.node.y, o = this.selectBox.node.width, i = this.selectBox.node.height;
this._clearArea(e, t, o, i);
}
this.hideSelectBox();
this.pushOp({
type: "deleteSelectArea",
x: this.selectBox.srcX,
y: this.selectBox.srcY,
w: this.selectBox.srcW,
h: this.selectBox.srcH
});
}
onCopySelectAreaBtn() {
if (this.selectBox.scaledPixels) {
this._drawAreaPixles(this.selectBox.scaledPixels, this.selectBox.node.x, this.selectBox.node.y, this.selectBox.scaledW, this.selectBox.scaledH);
this.pushOp({
type: "copySelectArea",
srcX: this.selectBox.srcX,
srcY: this.selectBox.srcY,
srcW: this.selectBox.srcW,
srcH: this.selectBox.srcH,
newX: this.selectBox.node.x,
newY: this.selectBox.node.y,
newW: this.selectBox.scaledW,
newH: this.selectBox.scaledH,
pixels: this.selectBox.scaledPixels
});
} else if (this.selectBox.pixels) {
this._drawAreaPixles(this.selectBox.pixels, this.selectBox.node.x, this.selectBox.node.y, this.selectBox.srcW, this.selectBox.srcH);
this.pushOp({
type: "copySelectArea",
srcX: this.selectBox.srcX,
srcY: this.selectBox.srcY,
srcW: this.selectBox.srcW,
srcH: this.selectBox.srcH,
newX: this.selectBox.node.x,
newY: this.selectBox.node.y,
newW: this.selectBox.srcW,
newH: this.selectBox.srcH,
pixels: this.selectBox.pixels
});
}
this.updateTexture();
this.selectBox.pixels || this.cutPixelsToSelectBox(!1);
this.selectBox.node.x += 10;
this.selectBox.node.y += 10;
}
selectBoxTouchStart(e) {
e.x = Math.floor(e.x);
e.y = Math.floor(e.y);
this.touchStartPos = e;
this.touchLastPos = e;
if (this.selectBox.node.active && this.selectBox.node.getBoundingBox().contains(e)) this.selectBox.state = a.GraphicsSelectBoxState.move; else {
this.putSelectBoxPixelsToGraphics();
this.selectBox.clearPixels();
this.selectBox.state = a.GraphicsSelectBoxState.resize;
this.showSelectBox();
this.selectBox.node.position = e;
this.selectBox.node.width = 0;
this.selectBox.node.height = 0;
this.selectBox.saveSrcPosSize();
}
this.selectBox.refreshGrashice();
}
selectBoxTouchMove(e) {
e.x = Math.floor(e.x);
e.y = Math.floor(e.y);
if (this.selectBox.state == a.GraphicsSelectBoxState.move) {
if (!this.selectBox.pixels) {
this.cutPixelsToSelectBox(!0);
this.selectBox.clearSrc = !0;
}
this.selectBox.node.x += e.x - this.touchLastPos.x;
this.selectBox.node.y += e.y - this.touchLastPos.y;
} else if (this.selectBox.state == a.GraphicsSelectBoxState.resize) {
this.selectBox.dragSize(this.touchStartPos, e);
this.selectBox.saveSrcPosSize();
}
this.touchLastPos = e;
this.selectBox.refreshGrashice();
}
selectBoxTouchEnd() {
0 != this.selectBox.node.width && 0 != this.selectBox.node.height || this.hideSelectBox();
}
cutPixelsToSelectBox(e) {
let t = this.selectBox.node.x, o = this.selectBox.node.y, i = this.selectBox.node.width, n = this.selectBox.node.height, a = this._getAreaPixels(t, o, i, n);
e && this._clearArea(t, o, i, n);
this.selectBox.setOriPixels(a, i, n);
}
putSelectBoxPixelsToGraphics() {
if (this.selectBox.node.active) {
if (this.selectBox.scaledPixels) {
this._drawAreaPixles(this.selectBox.scaledPixels, this.selectBox.node.x, this.selectBox.node.y, this.selectBox.scaledW, this.selectBox.scaledH);
this.pushOp({
type: "selectBox",
clearSrc: this.selectBox.clearSrc,
srcX: this.selectBox.srcX,
srcY: this.selectBox.srcY,
srcW: this.selectBox.srcW,
srcH: this.selectBox.srcH,
newX: this.selectBox.node.x,
newY: this.selectBox.node.y,
newW: this.selectBox.scaledW,
newH: this.selectBox.scaledH,
pixels: this.selectBox.scaledPixels
});
} else if (this.selectBox.pixels) {
this._drawAreaPixles(this.selectBox.pixels, this.selectBox.node.x, this.selectBox.node.y, this.selectBox.srcW, this.selectBox.srcH);
this.pushOp({
type: "selectBox",
clearSrc: this.selectBox.clearSrc,
srcX: this.selectBox.srcX,
srcY: this.selectBox.srcY,
srcW: this.selectBox.srcW,
srcH: this.selectBox.srcH,
newX: this.selectBox.node.x,
newY: this.selectBox.node.y,
newW: this.selectBox.srcW,
newH: this.selectBox.srcH,
pixels: this.selectBox.pixels
});
}
this.updateTexture();
}
}
checkFinishSelectBox() {
this.putSelectBoxPixelsToGraphics();
this.selectBox.clearPixels();
this.hideSelectBox();
}
setScale(e) {
this.node.scale = e;
this.selectBox.setParentScale(e);
}
applyTempPixels() {
for (let e = 0; e < this.tempPixels.length; e += 4) if (0 !== this.tempPixels[e + 3]) {
this.pixels[e] = this.tempPixels[e];
this.pixels[e + 1] = this.tempPixels[e + 1];
this.pixels[e + 2] = this.tempPixels[e + 2];
this.pixels[e + 3] = this.tempPixels[e + 3];
}
this.updateTexture();
this.tempSprite.node.active = !1;
this._clearTemp(0, 0, this.width, this.height);
this.updateTempTexture();
}
beginStraightLine(e) {
this.tempSprite.node.active = !0;
this.touchStartPos = e;
}
dragStraightLine(e) {
this.touchLastPos = e;
this._clearTemp(0, 0, this.width, this.height);
this._drawLine(this.tempPixels, this.touchStartPos, e, this.lineWidth, this.color);
this.updateTempTexture();
}
endStraightLine() {
this.applyTempPixels();
this.pushOp({
type: "line",
lineWidth: this.lineWidth,
color: this.color,
posList: [ this.touchStartPos, this.touchLastPos ]
});
}
beginRect(e, t) {
this.tempSprite.node.active = !0;
this.touchStartPos = t;
}
dragRect(e, t) {
this.touchLastPos = t;
this._clearTemp(0, 0, this.width, this.height);
this._drawRect(this.tempPixels, e, this.touchStartPos, t, this.lineWidth, this.color);
this.updateTempTexture();
}
endRect(e) {
this.applyTempPixels();
this.pushOp({
type: "rect",
lineWidth: this.lineWidth,
color: this.color,
fill: e,
pos1: this.touchStartPos,
pos2: this.touchLastPos
});
}
beginCircle(e, t) {
this.tempSprite.node.active = !0;
this.touchStartPos = t;
}
dragCircle(e, t) {
this.touchLastPos = t;
this._clearTemp(0, 0, this.width, this.height);
this._drawCircle(this.tempPixels, e, this.touchStartPos, t, this.lineWidth, this.color);
this.updateTempTexture();
}
endCircle(e) {
this.applyTempPixels();
this.pushOp({
type: "circle",
lineWidth: this.lineWidth,
color: this.color,
fill: e,
pos1: this.touchStartPos,
pos2: this.touchLastPos
});
}
};
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ c(cc.Sprite) ], d.prototype, "tempSprite", void 0);
i([ c(a.default) ], d.prototype, "selectBox", void 0);
i([ c(s.default) ], d.prototype, "flipXBtn", void 0);
i([ c(s.default) ], d.prototype, "flipYBtn", void 0);
i([ c(s.default) ], d.prototype, "deleteSelectAreaBtn", void 0);
i([ c(s.default) ], d.prototype, "copySelectAreaBtn", void 0);
i([ c(cc.Node) ], d.prototype, "sizeSliderNode", void 0);
d = i([ r, l("自定义UI/Graphics") ], d);
o.default = d;
cc._RF.pop();
}, {
"../Frame/Util": "Util",
"../Scene/PaintScene/GraphicsSelectBox": "GraphicsSelectBox",
"./Button": "Button"
} ],
GridMoverCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2d512T7gA9ImrLrcXCNO1Jw", "GridMoverCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/DirBtn"), s = e("./BaseMoveCtrl"), {ccclass: r, property: l} = cc._decorator;
let c = class extends s.default {
constructor() {
super(...arguments);
this.jumpTimesMax = 2;
this.curJumpTimes = 0;
this.dirBtn = null;
this.btnA = null;
this.btnB = null;
this.mover = null;
}
onLoad() {
this.dirBtn.node.on(a.default.DIR, this.onDirBtn, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndA, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndB, this);
}
setMover(e) {
this.mover = e;
}
onDirBtn(e) {
this.mover && this.mover.move(e);
}
setMoveDir(e) {
this.mover && this.mover.move(e);
}
onTouchStartA() {}
onTouchEndA() {}
onTouchStartB() {
this.mover && (this.mover.actor.gun.firing = !0);
}
onTouchEndB() {
this.mover && (this.mover.actor.gun.firing = !1);
}
};
i([ l(a.default) ], c.prototype, "dirBtn", void 0);
i([ l(n.default) ], c.prototype, "btnA", void 0);
i([ l(n.default) ], c.prototype, "btnB", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/DirBtn": "DirBtn",
"./BaseMoveCtrl": "BaseMoveCtrl"
} ],
GridMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "975dc0PfjFGDrM7/2bynhOm", "GridMover");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../Frame/TweenUtil"), a = e("../../Player/TriggerMng"), s = e("./Mover"), r = e("../Tile"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.moving = !1;
this.actor = null;
this._targetPos = new cc.Vec2();
}
setActor(e) {
this.actor = e;
}
onDestroy() {
super.onDestroy && super.onDestroy();
cc.Tween.stopAllByTarget(this.actor);
}
move(e) {
if (!this.isValid || !this.node) return;
if (this.moving) return;
if (0 == e.x && 0 == e.y) return;
let t = this.world;
if (!t || !t.playing) return;
if (!this.actor.hper.isAlive()) return;
let o = t.tiledMap.getGridPos(this.node.x, this.node.y), i = o.iCol + e.x, l = o.iRow + e.y;
e.x > 0 ? this.actor.setScaleX(1) : e.x < 0 && this.actor.setScaleX(-1);
this.actor.setDir(e.x, e.y);
if (this.canMove(i, l)) {
this.moving = !0;
this._targetPos.x = this.actor.PositionX;
this._targetPos.y = this.actor.PositionY;
let t = this._targetPos.add(e.mul(r.default.SIZE));
cc.tween(this.actor).to(.2, {
targetPosition: t
}).call(() => {
this.moving = !1;
if (this.node) {
this.node.emit(s.default.ActorMove, this.actor);
a.default.Ins.emitTrigger(this.actor.data.onMove, this.node);
}
}).start();
} else {
this.moving = !0;
this._targetPos.x = this.actor.PositionX;
this._targetPos.y = this.actor.PositionY;
let t = this._targetPos.add(e.mul(.55 * r.default.SIZE));
cc.tween(this.actor).to(.2, {
targetPosition: t
}, {
easing: n.Easing.quadOut
}).to(.2, {
targetPosition: this.node.position
}, {
easing: n.Easing.quadOut
}).call(() => {
this.moving = !1;
}).start();
}
}
canMove(e, t) {
let o = this.world.tiledMap;
if (e < 0 || t < 0 || e >= o.nCol || t >= o.nRow) return !1;
let i = o.getTiles(e, t), n = !0;
for (let e of i) if (!(n = !e || !e.block || !e.node.active)) break;
return n;
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../Frame/TweenUtil": "TweenUtil",
"../../Player/TriggerMng": "TriggerMng",
"../Tile": "Tile",
"./Mover": "Mover"
} ],
GridRandomCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "09d0d19DyBEPJ2mtYtkJ16K", "GridRandomCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../Frame/Util"), a = e("./AiCtrlBase"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.timer = 0;
this.moveInterval = 2;
this.mover = null;
}
setMover(e) {
this.mover = e;
this.mover.actor.gun.firing = !0;
}
update(e) {
this.timer += e;
if (this.timer > this.moveInterval) {
this.timer = 0;
let e = this.mover.world.tiledMap.getGridPos(this.node.x, this.node.y), t = [];
this.mover.canMove(e.iCol + 1, e.iRow) && t.push(cc.v2(1, 0));
this.mover.canMove(e.iCol - 1, e.iRow) && t.push(cc.v2(-1, 0));
this.mover.canMove(e.iCol, e.iRow + 1) && t.push(cc.v2(0, 1));
this.mover.canMove(e.iCol, e.iRow - 1) && t.push(cc.v2(0, -1));
if (t.length > 0) {
let e = t[n.Util.randomIdx(t.length)];
this.mover.move(e);
}
}
}
};
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../Frame/Util": "Util",
"./AiCtrlBase": "AiCtrlBase"
} ],
GridStaticCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "69f22IOAKFAFaB0QJ7SQlfY", "GridStaticCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./AiCtrlBase"), {ccclass: a} = cc._decorator;
let s = class extends n.default {
constructor() {
super(...arguments);
this.mover = null;
}
setMover(e) {
this.mover = e;
this.mover.actor.gun.firing = !0;
}
};
s = i([ a ], s);
o.default = s;
cc._RF.pop();
}, {
"./AiCtrlBase": "AiCtrlBase"
} ],
GuideBtn: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "637ec2mtpdBz7m9s63b2Nyl", "GuideBtn");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/SceneManager"), s = e("../../Frame/TweenUtil"), {ccclass: r, property: l} = cc._decorator;
let c = class extends n.default {
constructor() {
super(...arguments);
this.bubble = null;
this.bubbleLabel = null;
}
onLoad() {
this.bubble.scale = 0;
this.dot.active = !1;
this.node.on(n.default.CLICK, this.onBtn, this);
}
showBubble(e, t) {
this.label.string = e;
this.bubble.scale = 0;
cc.tween(this.bubble).delay(.5).to(.5, {
scaleX: -1,
scaleY: -1
}, {
easing: s.Easing.backOut
}).delay(t).to(.5, {
scaleX: 0,
scaleY: 0
}).start();
}
onBtn() {
a.default.ins.OpenPanelByName("TaskListPanel");
}
};
i([ l(cc.Node) ], c.prototype, "bubble", void 0);
i([ l(cc.Label) ], c.prototype, "bubbleLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/TweenUtil": "TweenUtil"
} ],
GuideCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "204c5HrUfxCWrJgNLiyN65Y", "GuideCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Util"), l = e("../../Game/Player/GuideMng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.stateLabel = null;
this.btn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.btn.node.on(a.default.CLICK, this.onClick, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.titleLabel.string = e.title;
let t = l.default.Ins.isComplete(e.id);
this.stateLabel.node.active = t;
this.btn.node.active = !t;
});
}
onClick() {
this.node.dispatchEvent(r.Util.customEvent("closePanel"));
l.default.Ins.doGuide(this.data.id);
}
};
i([ d(cc.Label) ], h.prototype, "titleLabel", void 0);
i([ d(cc.Label) ], h.prototype, "stateLabel", void 0);
i([ d(a.default) ], h.prototype, "btn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/GuideMng": "GuideMng"
} ],
GuideMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "80978Kg4pxGP6Kn4z/tud9Q", "GuideMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GuideId = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/CrossPlatform"), s = e("../../Frame/NetworkMgr"), r = e("../../Frame/SceneManager"), l = e("../../Frame/ScreenRect"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../GameData/GameTypeDefine"), u = e("../../Panel/CreateGamePanel/CreateGamePanel"), m = e("../../Panel/CreateWorldInfoPanel/CreateWorldInfoPanel"), f = e("../../Panel/CreateWorldTypePanel/CreateWorldTypePanel"), g = e("../../Role"), y = e("../../Scene/EditGameScene/EditGameScene"), v = e("../../Scene/EditWorldScene/ActorCell"), C = e("../../Scene/EditWorldScene/DeviceCell"), _ = e("../../Scene/EditWorldScene/EditWorldScene"), S = e("../../Scene/EditWorldScene/ElementBox"), I = e("../../Scene/EditWorldScene/Page/ActorPage"), G = e("../../Scene/EditWorldScene/Page/DevicePage"), T = e("../../Scene/EditWorldScene/Page/PropPage"), b = e("../../Scene/EditWorldScene/Page/TilePage"), M = e("../../Scene/EditWorldScene/TouchWorldShowGizmos"), P = e("../../Scene/GameScene/GameScene"), D = e("../../Scene/HomeScene/DiscoverPage"), w = e("../../Scene/HomeScene/HomeScene"), B = e("../../Scene/HomeScene/MinePage/MinePage"), R = e("../../TGA"), x = e("../ArrowGuide"), L = e("../AstroGuide"), k = e("../BannerGuide"), F = e("../GameEnv"), N = e("../Hortor"), A = e("../PaintGuide"), O = e("../World/CameraDragCtrl"), U = e("../World/Gizmos/PlaceGizmos"), E = e("./DynamicMng"), j = e("./Mng");
var H;
(function(e) {
e[e.None = 0] = "None";
e[e.Intro = 1] = "Intro";
e[e.CreateGame = 2] = "CreateGame";
e[e.CreateWorld = 3] = "CreateWorld";
e[e.EditWorld = 4] = "EditWorld";
e[e.Tile = 1001] = "Tile";
e[e.Actor = 1002] = "Actor";
e[e.Device = 1003] = "Device";
e[e.Prop = 1004] = "Prop";
e[e.Dialog = 1101] = "Dialog";
e[e.ShiftWolrd = 1102] = "ShiftWolrd";
})(H = o.GuideId || (o.GuideId = {}));
class W {
constructor() {
this.completeTaskIds = [];
this.playCnt = 0;
this.basicCourses = [ {
id: H.CreateGame,
title: "创建第一个游戏",
detail: ""
}, {
id: H.CreateWorld,
title: "创建第一个地图",
detail: ""
}, {
id: H.EditWorld,
title: "基础操作",
detail: ""
} ];
this.middleCourses = [ {
id: H.Tile,
title: "地块详细介绍",
detail: ""
}, {
id: H.Actor,
title: "角色详细介绍",
detail: ""
}, {
id: H.Device,
title: "装置详细介绍",
detail: ""
}, {
id: H.Prop,
title: "道具详细介绍",
detail: ""
}, {
id: H.Dialog,
title: "剧情对话",
detail: ""
}, {
id: H.ShiftWolrd,
title: "切换地图",
detail: ""
} ];
this.highCourses = [ {
id: H.Tile,
title: "地块详细介绍",
detail: ""
}, {
id: H.Actor,
title: "角色详细介绍",
detail: ""
}, {
id: H.Device,
title: "装置详细介绍",
detail: ""
}, {
id: H.Prop,
title: "道具详细介绍",
detail: ""
}, {
id: H.Dialog,
title: "剧情对话",
detail: ""
}, {
id: H.ShiftWolrd,
title: "切换地图",
detail: ""
} ];
this.actualCourses = [ {
id: H.Tile,
title: "地块详细介绍",
detail: ""
}, {
id: H.Actor,
title: "角色详细介绍",
detail: ""
}, {
id: H.Device,
title: "装置详细介绍",
detail: ""
}, {
id: H.Prop,
title: "道具详细介绍",
detail: ""
}, {
id: H.Dialog,
title: "剧情对话",
detail: ""
}, {
id: H.ShiftWolrd,
title: "切换地图",
detail: ""
} ];
}
init() {
return i(this, void 0, void 0, function*() {
let e = (yield E.DynamicMng.Ins.loadOne("GuideOnLineTime")) || 0, t = g.default.Ins.role.createAt.getTime() < e;
if (!this.isComplete(H.EditWorld) && (t || a.tt || N.Hortor.isVisitor())) {
for (let e = 1; e <= H.EditWorld; e++) this.completeTaskIds.push(e);
yield this.save();
}
if (this.isComplete(H.Intro)) this.isComplete(H.CreateGame) ? this.isComplete(H.CreateWorld) ? this.isComplete(H.EditWorld) || this.guideEditWorld() : this.guideCreateWorld() : this.guideCreateGame(); else {
let e = (yield E.DynamicMng.Ins.loadOne("GameChosenIds")) || [], t = [ "GD:8343758:7", "GD:8193036:17", "GD:6480222:12", "GD:5144459:7", "GD:7672378:13", "GD:298182:27" ];
for (let o = 0; o < t.length; o++) {
let i = t[o], n = e.indexOf(i);
n >= 0 && e.splice(n, 1);
e.unshift(i);
}
}
});
}
doGuide(e) {
switch (e) {
case H.Tile:
this.guideTile();
break;

case H.Actor:
this.guideActor();
break;

case H.Device:
this.guideDevice();
break;

case H.Prop:
this.guideProp();
}
}
isComplete(e) {
return this.completeTaskIds.includes(e);
}
complete(e) {
return i(this, void 0, void 0, function*() {
this.completeTaskIds.push(e);
yield this.save();
R.TGA.track("Guide", {
guideId: e
});
});
}
save() {
return i(this, void 0, void 0, function*() {
let e = {
guideVersion: F.gameEnv.creatorVersion,
completeTaskIds: this.completeTaskIds
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveGuide,
params: e
}, n.Game_RSaveGuide);
});
}
addAstroGuide(e) {
return i(this, void 0, void 0, function*() {
let t = yield h.Util.loadBundleRes("Prefab/AstroGuide"), o = cc.instantiate(t);
e.addChild(o);
return o.getComponent(L.default);
});
}
addArrowGuide(e) {
return i(this, void 0, void 0, function*() {
let t = yield h.Util.loadBundleRes("Prefab/ArrowGuide"), o = cc.instantiate(t);
e.addChild(o);
return o.getComponent(x.default);
});
}
addPaintGuide(e) {
return i(this, void 0, void 0, function*() {
let t = yield h.Util.loadBundleRes("Prefab/PaintGuide"), o = cc.instantiate(t);
e.addChild(o);
return o.getComponent(A.default);
});
}
addBannerGuide(e) {
return i(this, void 0, void 0, function*() {
let t = yield h.Util.loadBundleRes("Prefab/BannerGuide"), o = cc.instantiate(t);
e.addChild(o);
o.x = 0;
o.y = l.default.height / 2 - 200;
return o.getComponent(k.default);
});
}
guideIntro() {
return i(this, void 0, void 0, function*() {
yield this.complete(H.None);
let e = null, t = r.default.ins.findScene(w.default);
t && (e = t.getComponentInChildren(D.default));
e || (e = (yield h.Util.once(w.default.PAGE_LOADED)).getComponent(D.default));
if (!e) return;
e.toggleGroup.selectIdx(1);
let o = yield this.addAstroGuide(t.node);
yield o.playAnim("Hello");
yield o.showBubble([ {
str: "嘿哈！少年！"
}, {
str: "欢迎来到创游编辑器！"
}, {
str: "这里是一个游戏创作平台！"
}, {
str: "每天有无数创作者在此制作并上传Ta的作品。"
}, {
str: "你想要制作游戏并获得万千粉丝吗？！"
}, {
str: "快来体验吧！"
} ]);
o.node.destroy();
yield this.complete(H.Intro);
this.guideCreateGame();
});
}
guideCreateGame() {
return i(this, void 0, void 0, function*() {
yield h.Util.once(B.default.GAME_LIST_LOADED);
let e = r.default.ins.findScene(w.default).getComponentInChildren(B.default);
e.gameList.scrollTo(cc.Vec2.ZERO, .2);
yield h.Util.delay(.3);
let t = e.gameList.getDataArr().findIndex(e => "create" == e.type), o = e.gameList.getExtraData(t).item, i = yield this.addArrowGuide(o);
i.play(cc.v2(-200, 50), -145);
yield h.Util.once(u.default.CREATE_GAME);
this.guideCreateWorld();
yield this.complete(H.CreateGame);
i.node.destroy();
});
}
guideCreateWorld() {
return i(this, void 0, void 0, function*() {
let e = yield h.Util.once(y.default.EditGameScene_Entered), t = e;
t.backBtn.node.active = !1;
t.deleteBtn.node.active = !1;
let o = yield this.addAstroGuide(r.default.ins.node);
o.setMaskOpacity(100);
yield o.playAnim("moveIn");
yield o.showBubble([ {
str: "恭喜你创建了第一个游戏！"
}, {
str: "这里是【游戏工程界面】"
}, {
str: "在这里，你可以创建多个地图。"
}, {
str: "多个地图串在一起，就是一个完整的游戏啦！"
}, {
str: "那我们来创建第一个地图吧！"
}, {
str: "看，右下角！"
} ]);
o.node.active = !1;
let i = yield this.addArrowGuide(t.newWorldBtn.node);
i.play(cc.v2(-50, 30), -145);
e = yield h.Util.once(f.default.CreateWorldTypePanel_Opend);
i.node.active = !1;
let n = e;
o.node.active = !0;
o.maskNode(n.jumpBtn.node);
o.astro.node.active = !1;
yield h.Util.once(m.default.CreateWorldInfoPanel_Open);
o.maskNode(null);
let a = yield h.Util.once(m.default.CreateWorldInfoPanel_Opend);
o.node.active = !0;
o.maskNode(a.createBtn.node);
o.astro.node.active = !1;
let s = yield h.Util.once(y.default.EditGameScene_CreateWorldCell);
o.astro.node.active = !0;
o.maskNode(null);
yield o.showBubble([ {
str: "这个就是刚刚创建的地图啦！"
}, {
str: "点他进去看一下"
} ]);
o.node && o.node.destroy();
i.node.active = !0;
h.Util.moveToNewParent(i.node, s.node);
i.play(cc.v2(50, 50), 145);
yield this.complete(H.CreateWorld);
t.backBtn.node.active = !0;
t.deleteBtn.node.active = !0;
this.guideEditWorld();
yield h.Util.once(b.default.TilePage_Enable);
i.node.destroy();
});
}
guideEditWorld() {
return i(this, void 0, void 0, function*() {
let e = yield h.Util.once(b.default.TilePage_Enable), t = r.default.ins.findScene(_.default), o = (e, t) => {
e.interactable = !t;
e.node.color = t ? d.UIColor.gray : d.UIColor.white;
}, i = t.elementBox.pageToggleGroup.toggleItems[0], n = t.elementBox.pageToggleGroup.toggleItems[1], a = t.elementBox.pageToggleGroup.toggleItems[2], s = t.elementBox.pageToggleGroup.toggleItems[3];
o(i, !0);
o(n, !0);
o(a, !0);
o(s, !0);
t.hideUnuseBtns();
c.default.blockInput(!0, "addAstroGuide");
let l = yield this.addAstroGuide(r.default.ins.node);
c.default.blockInput(!1, "addAstroGuide");
l.setMaskOpacity(100);
yield l.playAnim("moveIn");
yield l.showBubble([ {
str: "嘿哈！"
}, {
str: "这里是【地图编辑界面】"
}, {
str: "我们先来学习一下操作吧！"
} ]);
yield l.moveLeftRight();
e.tileList.selectByIdx(2);
let u = e.toggleGroup.toggleItems[0].node, m = e.toggleGroup.toggleItems[1].node, f = e.toggleGroup.toggleItems[2].node;
o(i, !1);
l.maskNode(i.node);
yield l.showBubble([ {
str: "你当前在【地块】栏"
}, {
str: "操作【地块】时需要用到这些工具："
} ]);
l.maskNode(u);
yield l.showBubble([ {
str: "这个是【视角工具】"
}, {
str: "可以用来移动、缩放显示范围"
} ]);
l.maskNode(m);
yield l.showBubble([ {
str: "这个是【铅笔工具】"
}, {
str: "可以用来在地图上摆放【地块】"
} ]);
l.maskNode(f);
yield l.showBubble([ {
str: "这个是【橡皮工具】"
}, {
str: "可以擦掉你不想要的【地块】"
} ]);
l.maskNode(e.toggleGroup.node);
yield l.showBubble([ {
str: "来实际操作一下吧"
} ]);
l.node.active = !1;
let g = yield this.addBannerGuide(t.node);
g.guideMove();
yield h.Util.once(O.default.CAMERA_DRAG);
if (cc.sys.platform != cc.sys.DESKTOP_BROWSER) {
g.guideZoomMax();
yield h.Util.once(O.default.CAMERA_ZOOM_MAX);
g.guideZoomMin();
yield h.Util.once(O.default.CAMERA_ZOOM_MIN);
}
let y = 5;
for (;y > 0; ) {
g.guidePencil(y);
yield h.Util.once(b.default.TilePage_PUT_TILE);
y--;
}
y = 2;
for (;y > 0; ) {
g.guideErase(y);
yield h.Util.once(b.default.TilePage_DEL_TILE);
y--;
}
g.node.active = !1;
l.maskNode(null);
yield l.showBubble([ {
str: "厉害！你学会了【地块】的操作工具！"
}, {
str: "接下来，请切换到【角色】栏！"
} ]);
o(n, !1);
l.maskNode(n.node);
let D = yield h.Util.once(I.default.ActorPage_Enable);
l.maskNode(null);
yield l.showBubble([ {
str: "角色可以分为：主角、队友、NPC、敌人"
}, {
str: "他们可以在地图中走动，跳跃"
}, {
str: "开始游戏后，你控制的就是主角，队友和敌人由电脑AI控制。"
}, {
str: "在编辑【角色】时"
}, {
str: "只需要点击一下角色图标"
}, {
str: "角色就放置到地图上了"
}, {
str: "我们来放置一些史莱姆吧！"
} ]);
let w = D.list.getDataArr().findIndex(e => "1002" == e.id), B = D.list.getExtraData(w).item, R = B.getComponent(v.default);
R.optionBtn.node.active = !1;
l.maskNode(B);
D.list.enabled = !1;
yield h.Util.once(M.default.TouchWorldShowGizmos_CLICK_ACTOR);
D.list.enabled = !0;
l.node.active = !1;
g.node.active = !0;
g.guidePlaceActor();
yield h.Util.once(U.default.PlaceGizmos_Confirm);
R.optionBtn.node.active = !0;
l.maskNode(null);
g.node.active = !1;
yield l.showBubble([ {
str: "好啦，史莱姆已就位！"
}, {
str: "一会开始游戏时，不要碰到他哦！"
}, {
str: "接下来，请切换到【装置】栏！"
} ]);
if (t.inspector.node.active && !t.elementBox.node.active) {
t.inspector.hide();
t.elementBox.show();
yield h.Util.once(S.default.ElementBox_ShowEnd);
}
o(a, !1);
l.maskNode(a.node);
let x = yield h.Util.once(G.default.DevicePage_Enable);
l.maskNode(null);
yield l.showBubble([ {
str: "每种【装置】都具有Ta独特的行为"
}, {
str: "1.圆锯、火球、地刺、冰锥、炸弹等伤害性装置"
}, {
str: "会以自己独特的方式，对角色造成“伤害”"
}, {
str: "2.弹簧、梯子、平台、传送带等"
}, {
str: "可以影响角色的移动"
}, {
str: "3.按钮、接触触发器、区域、存档点、怪物门等"
}, {
str: "可以组合出独一无二的游戏玩法"
}, {
str: "4.装饰物"
}, {
str: "可以点缀你的地图，还可以制造景深的效果。"
}, {
str: "目前就是这些啦，之后还会不断的开发新装置哒！"
}, {
str: "为简单起见，我们先放置一个圆锯吧！"
}, {
str: "操作和放置【角色】一样！"
} ]);
let L = e => {
let t = x.list.getDataArr().findIndex(t => t.deviceType == e);
return x.list.getExtraData(t).item;
};
x.list.enabled = !1;
let k = [ p.DeviceType.Saw ];
for (let e = 0; e < k.length; e++) {
let o = L(k[e]), i = o.getComponent(C.default);
i.optionBtn.node.active = !1;
0 != e && (yield h.Util.once(S.default.ElementBox_ShowEnd));
l.node.active = !0;
l.maskNode(o);
let n = yield h.Util.once(M.default.TouchWorldShowGizmos_CLICK_DEVICE);
l.node.active = !1;
g.node.active = !0;
g.guidePlaceDevice(n.conf.name, n.conf.textureName);
yield h.Util.once(U.default.PlaceGizmos_Confirm);
setTimeout(() => {
if (t.inspector.node.active && !t.elementBox.node.active) {
t.inspector.hide();
t.elementBox.show();
}
}, .5);
i.optionBtn.node.active = !0;
g.node.active = !1;
}
x.list.enabled = !0;
yield l.showBubble([ {
str: "装置放好啦"
}, {
str: "接下来是最后一部分：【道具】"
} ]);
o(s, !1);
l.maskNode(s.node);
yield h.Util.once(T.default.PropPage_Enable);
l.maskNode(null);
yield l.showBubble([ {
str: "道具可以被主角捡起，收入背包"
}, {
str: "待需要时，可以从背包中使用。"
}, {
str: "比如，硬币、药水等就是道具。"
}, {
str: "现在，我们放几个药水试试！"
} ]);
l.node.active = !1;
let F = yield j.Mng.Ins.propMng.loadOne("2");
y = 1;
for (;y > 0; ) {
g.node.active = !0;
g.guidePutCustomProp(F.name, F.textureName, y);
if ("2" == (yield h.Util.once(T.default.PropPage_PUT_PROP)).id) {
yield h.Util.once(U.default.PlaceGizmos_Confirm);
setTimeout(() => {
if (t.inspector.node.active && !t.elementBox.node.active) {
t.inspector.hide();
t.elementBox.show();
}
}, .5);
y--;
}
}
g.node.active = !1;
yield l.showBubble([ {
str: "好了，一个简易的地图搭完啦"
}, {
str: "我们测试一下吧！"
} ]);
l.node.active = !1;
t.playBtn.node.active = !0;
let N = yield this.addArrowGuide(t.playBtn.node);
N.play(cc.v2(-50, 20), -145);
let A = !1;
for (;!A; ) if (!(A = yield h.Util.once(P.default.GameScene_EXIT))) {
N.node.active = !1;
l.maskNode(null);
yield l.showBubble([ {
str: "过不去？"
}, {
str: "是不是怪物或圆锯位置太刁钻了哇?"
}, {
str: "没关系，我们可以调整一下地图"
} ]);
l.node.active = !1;
g.node.active = !0;
g.guideText("调整怪物或圆锯位置，然后尝试过关");
}
g.node.active = !1;
l.maskNode(null);
N.node.active = !1;
yield l.showBubble([ {
str: "恭喜过关!"
}, {
str: "怎么样，自己制作游戏好玩吧！"
}, {
str: "我们保存一下刚刚的制作成果吧！"
} ]);
l.node.active = !1;
t.saveBtn.node.active = !0;
h.Util.moveNode(N.node, t.saveBtn.node);
N.node.active = !0;
N.play(cc.v2(-50, 20), -145);
yield h.Util.once(_.default.EditWorldScene_Save);
N.node.active = !1;
yield l.showBubble([ {
str: "保存成功！"
}, {
str: "恭喜完成基础教程！"
}, {
str: "您已解锁所有功能，自由发挥吧！"
} ]);
N.node.destroy();
l.node.destroy();
g.node.destroy();
t.showUnuseBtns();
this.complete(H.EditWorld);
});
}
openMessageBox(e, t) {
r.default.ins.OpenPanelByName("MessageBox", o => {
o.titleLabel.string = "提示";
o.label.string = e;
o.leftBtn.node.active = !1;
o.setRightBtn({
text: "确定",
color: d.UIColor.green,
call: t
});
});
}
guideTile() {
return i(this, void 0, void 0, function*() {
this.openMessageBox("开启教程将会创建一个地图\n是否继续？", () => {
this.createWorld("地块详细介绍", "GuideTileWorld");
});
});
}
createWorld(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
id: "",
info: {
name: e,
type: 0,
size: {
col: 8,
row: 8
}
},
layoutMin: null
}, i = yield h.Util.loadBundleRes("DefaultWorld/" + t, cc.JsonAsset), n = new Uint8Array(i.json), a = h.Util.unzip(n);
o.info.size = a.size;
o.info.type = a.type;
o.layoutMin = h.Util.zip(a);
o.worldLayout = a;
let s = r.default.ins.findScene(y.default);
yield j.Mng.Ins.worldMng.create(o, s.gameData);
s.createWorldCell(o.id);
});
}
guideActor() {
return i(this, void 0, void 0, function*() {});
}
guideDevice() {
return i(this, void 0, void 0, function*() {});
}
guideProp() {
return i(this, void 0, void 0, function*() {});
}
}
o.default = W;
W.Ins = new W();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Panel/CreateGamePanel/CreateGamePanel": "CreateGamePanel",
"../../Panel/CreateWorldInfoPanel/CreateWorldInfoPanel": "CreateWorldInfoPanel",
"../../Panel/CreateWorldTypePanel/CreateWorldTypePanel": "CreateWorldTypePanel",
"../../Role": "Role",
"../../Scene/EditGameScene/EditGameScene": "EditGameScene",
"../../Scene/EditWorldScene/ActorCell": "ActorCell",
"../../Scene/EditWorldScene/DeviceCell": "DeviceCell",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene",
"../../Scene/EditWorldScene/ElementBox": "ElementBox",
"../../Scene/EditWorldScene/Page/ActorPage": "ActorPage",
"../../Scene/EditWorldScene/Page/DevicePage": "DevicePage",
"../../Scene/EditWorldScene/Page/PropPage": "PropPage",
"../../Scene/EditWorldScene/Page/TilePage": "TilePage",
"../../Scene/EditWorldScene/TouchWorldShowGizmos": "TouchWorldShowGizmos",
"../../Scene/GameScene/GameScene": "GameScene",
"../../Scene/HomeScene/DiscoverPage": "DiscoverPage",
"../../Scene/HomeScene/HomeScene": "HomeScene",
"../../Scene/HomeScene/MinePage/MinePage": "MinePage",
"../../TGA": "TGA",
"../ArrowGuide": "ArrowGuide",
"../AstroGuide": "AstroGuide",
"../BannerGuide": "BannerGuide",
"../GameEnv": "GameEnv",
"../Hortor": "Hortor",
"../PaintGuide": "PaintGuide",
"../World/CameraDragCtrl": "CameraDragCtrl",
"../World/Gizmos/PlaceGizmos": "PlaceGizmos",
"./DynamicMng": "DynamicMng",
"./Mng": "Mng"
} ],
GuidePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3653b5huFZO4I78o1xqFbwl", "GuidePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../CustomUI/ToggleGroup"), s = e("../../Frame/Panel"), r = e("../../Game/Player/GuideMng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.list = null;
this.toggleGroup = null;
}
onLoad() {
super.onLoad();
this.node.on("closePanel", this.closePanel, this);
this.toggleGroup.node.on(a.default.TOGGLE_CHANGE, this.onToggleChange, this);
}
onEnable() {
let e = this.getUnAllCompleteIdx();
this.toggleGroup.selectIdx(e);
}
getUnAllCompleteIdx() {
let e = e => 0 == e.filter(e => !r.default.Ins.isComplete(e.id)).length;
return e(r.default.Ins.basicCourses) ? 1 : e(r.default.Ins.middleCourses) ? 2 : e(r.default.Ins.highCourses) ? 3 : e(r.default.Ins.actualCourses) ? 4 : void 0;
}
onToggleChange(e) {
let t = [];
switch (e) {
case 0:
t = r.default.Ins.basicCourses;
break;

case 1:
t = r.default.Ins.middleCourses;
break;

case 2:
t = r.default.Ins.highCourses;
break;

case 3:
t = r.default.Ins.actualCourses;
}
this.list.setDataArr(t);
}
};
i([ c(n.default) ], d.prototype, "list", void 0);
i([ c(a.default) ], d.prototype, "toggleGroup", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Game/Player/GuideMng": "GuideMng"
} ],
GunCtl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "18c54yjYZlHPoqJGSXA39H9", "GunCtl");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GunCtl = void 0;
const n = e("../../../Frame/Util"), a = e("../../../GameData/GameTypeDefine"), s = e("../../Player/Mng"), r = e("../../Player/TriggerMng"), l = e("../Tile"), c = e("./WeaponCtl");
o.GunCtl = class extends c.WeaponCtl {
constructor() {
super(...arguments);
this.bulletConf = null;
this._worldMat = new cc.Mat4();
this._worldScale = new cc.Vec3();
this._faceDir = new cc.Vec2();
}
init() {
return i(this, void 0, void 0, function*() {
if (this.weapon.conf) {
this.weapon.conf.gun.bulletId && (this.bulletConf = yield s.Mng.Ins.bulletMng.loadOne(this.weapon.conf.gun.bulletId));
this.timer = 1 / this.weapon.conf.ROF;
} else this.bulletConf = null;
this.weapon.skin.node.x = 21;
this.weapon.skin.node.y = 0;
this.weapon.skin.node.anchorX = .5;
this.weapon.skin.node.anchorY = .5;
this.weapon.skin.node.angle = 0;
this.weapon.skin.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
});
}
run(e) {
let t = this.weapon.world;
if (!t || !t.playing) return;
if (!this.bulletConf) return;
if (!this.weapon.conf) return;
this.timer += e;
if (!this.weapon.firing) return;
let o = 1 / this.weapon.conf.ROF;
if (this.timer > o) {
this.timer = 0;
let e = n.Util.convertPosition(this.weapon.node, t.node), i = t.addBullet(e);
if (!i) return;
let s = n.Util.getNoteRight(this.weapon.node), c = n.Util.angle(s);
c += n.Util.randomFloat(-this.weapon.conf.gun.scatter / 2, this.weapon.conf.gun.scatter / 2);
s = n.Util.angleToVec2(c);
(null == this.weapon.conf.gun.bulletSpeed || isNaN(this.weapon.conf.gun.bulletSpeed)) && (this.weapon.conf.gun.bulletSpeed = this.bulletConf.speed || 5 * l.default.SIZE);
(null == this.weapon.conf.gun.bulletRange || isNaN(this.weapon.conf.gun.bulletRange)) && (this.weapon.conf.gun.bulletRange = this.bulletConf.range || 5 * l.default.SIZE);
let d = s.mul(this.weapon.conf.gun.bulletSpeed);
this.bulletConf.range = this.weapon.conf.gun.bulletRange;
i.fly(d, this.bulletConf);
i.damager.dmg = this.bulletConf.damage;
this.weapon.team == a.Team.Hero ? i.damager.team = a.Team.HeroBullet : this.weapon.team == a.Team.Enemy ? i.damager.team = a.Team.EnemyBullet : this.weapon.team == a.Team.Ally && (i.damager.team = a.Team.AllyBullet);
i.node.scale = Math.abs(this._worldScale.x);
this.weapon.spark.node.active = !0;
let h = o > .1 ? .1 : .5 * o;
this.weapon.scheduleOnce(() => {
this.weapon.spark.node.active = !1;
}, h);
t.camera.node.position = cc.Vec2.ZERO;
if (this.weapon.conf.gun.onFire) {
let e = this.weapon.conf.gun.onFire;
this.weapon.team != a.Team.Hero && (e = e.filter(e => e.act !== a.TriggerAct.CameraShake));
r.default.Ins.emitTrigger(e, this.weapon.node);
}
}
}
readyFire() {}
updateFirePower(e) {}
fire(e) {}
setFireDir(e, t) {}
setDir(e, t) {
let o = 0;
if (this.weapon.world.worldLayout.type == a.WorldType.Rpg) {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this._worldScale.x < 0 && (e = -e);
this._faceDir.x = e;
this._faceDir.y = t;
o = n.Util.angle(this._faceDir);
} else if (0 == t) o = 0; else if (0 == e) o = t > 0 ? 90 : 270; else {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
let i = this._worldScale.x < 0, n = Math.sqrt(e * e + t * t), a = e / n, s = t / n;
o = 180 * Math.atan(s / a) / Math.PI;
(o %= 360) < 0 && (o += 360);
o = o > 45 && o < 135 ? i ? 270 : 90 : o >= 135 && o <= 225 ? i ? 0 : 180 : o > 225 && o < 315 ? i ? 90 : 270 : 0;
}
this.weapon.node.angle = o;
}
};
cc._RF.pop();
}, {
"../../../Frame/Util": "Util",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Player/Mng": "Mng",
"../../Player/TriggerMng": "TriggerMng",
"../Tile": "Tile",
"./WeaponCtl": "WeaponCtl"
} ],
HeadIconMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fd1551hWntP/5Mkt8nt9Pyz", "HeadIconMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.HeadIconMng = void 0;
const n = e("../../Frame/Util");
class a {
constructor() {
this.cache = new Map();
this.promiseCache = new Map();
this.defaultIcon = null;
}
setSprite(e, t) {
return i(this, void 0, void 0, function*() {
e && (e.spriteFrame = null);
let o = yield this.getSF(t);
o && e && e.node && (e.spriteFrame = o);
});
}
getSF(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
if (n.Util.isCdnPng(e)) {
let o = this.promiseCache.get(e);
if (!o) {
o = n.Util.downLoadPng(e);
this.promiseCache.set(e, o);
}
t = yield o;
this.promiseCache.delete(e);
t && this.cache.set(e, t);
this.cache.size;
}
if (!t) {
this.defaultIcon || (this.defaultIcon = yield n.Util.loadBundleRes("Atlas/UI/headIcon", cc.SpriteFrame));
t = this.defaultIcon;
}
}
return t;
});
}
}
o.HeadIconMng = a;
a.Ins = new a();
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
HeadIcon: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "28b1alxPDhAr4BUeEmPqshZ", "HeadIcon");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Game/Player/DynamicMng"), s = e("../Game/Player/HeadIconMng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.level = null;
this.url = null;
}
loadUrl(e) {
return n(this, void 0, void 0, function*() {
if (a.DynamicMng.Ins.isDisable(a.FunctionEnum.UserImg, !1)) {
let e = this.getComponent(cc.Button);
e && e.destroy();
} else {
this.url = e;
this.sprite.spriteFrame = null;
yield s.HeadIconMng.Ins.setSprite(this.sprite, e);
}
});
}
setLevel(e) {
if (this.level) {
e || (e = 0);
this.level.string = "" + e;
}
}
};
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Label) ], c.prototype, "level", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../Game/Player/DynamicMng": "DynamicMng",
"../Game/Player/HeadIconMng": "HeadIconMng"
} ],
HeadItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "986d8kvQQ9An5QP7Ui6llsS", "HeadItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../Game/Player/Mng"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.label = null;
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.label.string = e;
a.Mng.Ins.spriteMng.setSprite(this.sprite, t, 150);
});
}
};
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
i([ r(cc.Label) ], l.prototype, "label", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../Game/Player/Mng": "Mng"
} ],
HeroContactTileCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "330ffqbPZpLD6/6WKYn1iQH", "HeroContactTileCtrl");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("./Mover/Mover"), {ccclass: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.actor = null;
this.oldTile = null;
}
setHero(e) {
this.clear();
this.actor && this.actor.node && this.actor.node.off(a.default.ActorMove, this.onHeroMove, this);
this.actor = e;
this.actor && this.actor.node.on(a.default.ActorMove, this.onHeroMove, this);
}
onHeroMove() {
if (!this.actor) return;
let e = this.actor.world.tiledMap, t = e.getGridPos(this.actor.node.x, this.actor.node.y), o = e.getTiles(t.iCol, t.iRow);
for (let e of o) if (e != this.oldTile) {
this.oldTile && this.oldTile.node.emit(i.HERO_LEAFE_TILE);
this.oldTile = e;
e && e.node.emit(i.HERO_ENTER_TILE);
}
}
clear() {
this.oldTile = null;
this.actor = null;
}
};
l.HERO_LEAFE_TILE = "HERO_LEAFE_TILE";
l.HERO_ENTER_TILE = "HERO_ENTER_TILE";
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"./Mover/Mover": "Mover"
} ],
HeroHeadIcon: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "18170DtMThF1LZiA9r2GXGW", "HeroHeadIcon");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../Game/Player/Mng"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
}
show() {
this.node.active = !0;
}
hide() {
this.node.active = !1;
}
loadTexture(e) {
e ? n.Mng.Ins.spriteMng.setActorSprite(this.sprite, e, 70) : this.sprite.spriteFrame = null;
}
};
i([ s(cc.Sprite) ], r.prototype, "sprite", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../Game/Player/Mng": "Mng"
} ],
HeroInteractCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1da04D5EplKcYnjFLk9kOWH", "HeroInteractCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../CollisionEmiter"), s = e("./Interactable"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.interactBtn = null;
this._actor = null;
this._curInteract = null;
this._curDistance2 = 0;
this._interactList = [];
}
onLoad() {
this.interactBtn.node.on(n.default.CLICK, this.onInteractBtn, this);
this.interactBtn.node.active = !1;
}
setHero(e) {
this.clear();
this._actor = e;
if (e) {
let e = this._actor.node.getComponent(a.default);
e || (e = this._actor.node.addComponent(a.default));
e.target = this._actor.node;
this._actor.node.on(a.default.onCollisionEnter, this.onCollisionEnter, this);
this._actor.node.on(a.default.onCollisionStay, this.onCollisionStay, this);
this._actor.node.on(a.default.onCollisionExit, this.onCollisionExit, this);
}
}
onCollisionEnter(e, t) {
if (this._actor && t.node == this._actor.node) {
let t = this._curInteract, o = e.node.getComponent(s.default);
if (o && o.canInteract) {
if (t) {
let e = this._actor.node.position.sub(t.node.position);
this._curDistance2 = e.magSqr();
}
if (this._curInteract != o) {
let e = this._actor.node.position.sub(o.node.position).magSqr();
if (null == t || e < this._curDistance2) {
t = o;
this._curDistance2 = e;
}
}
this.switchInteract(t);
o != this._curInteract && this._interactList.indexOf(o) < 0 && this._interactList.push(o);
}
}
}
onCollisionStay(e, t) {
if (this._actor && t.node == this._actor.node) {
let t = this._curInteract, o = e.node.getComponent(s.default);
if (o && o.canInteract) {
if (t) {
let e = this._actor.node.position.sub(t.node.position);
this._curDistance2 = e.magSqr();
}
if (this._curInteract != o) {
let e = this._actor.node.position.sub(o.node.position).magSqr();
if (null == t || e < this._curDistance2) {
t = o;
this._curDistance2 = e;
}
}
this.switchInteract(t);
if (o == this._curInteract) {
let e = this._interactList.indexOf(o);
e >= 0 && this._interactList.splice(e, 1);
}
}
}
}
onCollisionExit(e, t) {
if (this._actor && t.node == this._actor.node) if (this._curInteract && this._curInteract.node == e.node) {
let e = null;
this._interactList.length > 0 && (e = this._interactList.pop());
this.switchInteract(e);
} else {
let t = e.node.getComponent(s.default);
if (t) {
let e = this._interactList.indexOf(t);
e >= 0 && this._interactList.splice(e, 1);
}
}
}
switchInteract(e) {
let t = this._actor.world;
if (e != this._curInteract) if (e) {
t.interactGizmos.show(e.node);
this._curInteract = e;
this.interactBtn.node.active = !0;
} else {
t.interactGizmos.hide();
this._curInteract = null;
this.interactBtn.node.active = !1;
}
}
onInteractBtn() {
this._curInteract && this._curInteract.node.emit(s.default.INTERACT);
}
clear() {
this.interactBtn.node.active = !1;
if (this._actor) {
this._actor.node.off(a.default.onCollisionEnter, this.onCollisionEnter, this);
this._actor.node.off(a.default.onCollisionExit, this.onCollisionExit, this);
this._actor = null;
}
this._curInteract = null;
this._interactList.length = 0;
}
};
i([ l(n.default) ], c.prototype, "interactBtn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../CollisionEmiter": "CollisionEmiter",
"./Interactable": "Interactable"
} ],
HomePageToggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "076c860zylCB5xDbe5Yl5eq", "HomePageToggle");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.dot = null;
this.label = null;
}
onLoad() {
this.node.on(a.default.CLICK, this.onClick, this);
}
onDestroy() {}
onEnable() {
this.refresh();
}
onClick() {
return n(this, void 0, void 0, function*() {
s.default.ins.OpenPanelByName("CreateSelectPanel", () => {});
});
}
refresh() {}
};
i([ l(cc.Node) ], c.prototype, "dot", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager"
} ],
HomeScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "60ad3ZHpVdGuLiCoQOz++4d", "HomeScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.HomePageIdx = void 0;
const s = e("../../Frame/Scene"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Frame/CrossPlatform"), h = e("../../Game/Player/DynamicMng"), p = e("../../Game/Player/GameCellDataMng"), u = e("../../Game/Player/ShopMng"), m = e("../../Game/OperationFlow"), f = e("../../Game/Player/Mng"), g = e("../../Frame/UIColor"), y = e("../../TGA"), v = e("../../Game/Hortor"), C = e("../../Game/Player/CoinMng"), _ = e("../../Game/GameEnv"), S = e("../GameCoverScene/GameCoverScene"), I = e("../../Game/Player/GuideMng"), G = e("../../../i18n/i18nMgr"), T = e("../../CustomUI/Button"), {ccclass: b, menu: M, property: P} = cc._decorator;
(function(e) {
e[e.Game = 0] = "Game";
e[e.Shop = 1] = "Shop";
e[e.Talk = 2] = "Talk";
e[e.Msg = 3] = "Msg";
e[e.Mine = 4] = "Mine";
})(o.HomePageIdx || (o.HomePageIdx = {}));
let D = i = class extends s.default {
constructor() {
super(...arguments);
this.toggleGroup = null;
this.content = null;
this.createGameButton = null;
this.pageMap = new Map();
this.pageNames = [ "DiscoverPage", "ShopPage", "CreateNewGame", "MsgPage", "MinePage" ];
this.promiseCache = new Map();
}
onLoad() {
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
}
onEnterScene() {
cc.game.emit(i.HomeScene_Enterd, this);
}
onShow(e) {
m.OperationFlow.deelOnShow(e);
}
onToggleChange(e) {
return a(this, void 0, void 0, function*() {
if (2 == e) ; else {
this.pageMap.forEach(e => {
e.active = !1;
});
let t = this.pageNames[e], o = this.pageMap.get(t);
if (!o) {
let i = this.promiseCache.get(t);
if (!i) {
i = c.Util.loadBundleRes("Scene/HomeScene/" + t);
this.promiseCache.set(t, i);
}
let n = new Date().getTime(), a = yield i, s = new Date().getTime();
console.log("pageName", s - n);
if (e !== this.toggleGroup.idx) return;
if (!(o = this.pageMap.get(t))) {
o = cc.instantiate(a);
this.content.addChild(o);
this.pageMap.set(t, o);
}
}
o.active = !0;
cc.game.emit(i.PAGE_LOADED, o);
}
});
}
seletePage(e) {
this.toggleGroup.selectIdx(e);
}
checkPanel(e) {
return a(this, void 0, void 0, function*() {
this.scheduleOnce(() => a(this, void 0, void 0, function*() {
let t = yield h.DynamicMng.Ins.loadOne("Notice");
t && t.msg && t.version == _.gameEnv.creatorVersion && l.default.ins.pushPanel("NoticePanel", e => {
e.label.string = t.msg;
e.closeCallback = () => {
t.exitGame && d.crossPlatform.exitMiniProgram();
};
});
e.canObtainTTCoin && l.default.ins.pushPanel("GainCoinPanel", e => a(this, void 0, void 0, function*() {
let t = yield C.default.Ins.requestTTCoin0319();
e.setData(t.cnt, "  儿童节快乐！", "  别人家小朋友有的，我家小朋友也要有！");
}));
let o = e.offLineChangeMsg;
o && o.incExp > 0 && l.default.ins.pushPanel("LevelUpgradePanel", e => {
e.setData(o);
});
e.unlockGameRewards && e.unlockGameRewards.forEach(e => {
l.default.ins.pushPanel("UnlockPanel", t => {
t.setData("游戏栏位+1", `Lv.${e}游戏栏位已解锁`);
});
});
e.unlockGoodsRewards && e.unlockGoodsRewards.forEach(e => {
l.default.ins.pushPanel("UnlockPanel", t => {
t.setData("商品栏位+1", `Lv.${e}商品栏位已解锁`);
});
});
let i = e.saleSummarys || [], n = e.gameSaleSummarys || [], s = e.rebornSummarys || [], r = e.adSummarys || [];
(i.length > 0 || n.length > 0 || r.length > 0) && l.default.ins.pushPanel("SummaryPanel", e => {
e.setData(i, n, s, r);
});
let m = d.crossPlatform.getStorageSync("EditWorldSceneTempSave");
if (m && m.gameId && m.worldId && m.worldLayout) {
let e = (yield f.Mng.Ins.gameMng.loadAll()).find(e => e.id == m.gameId);
if (e) {
let t = m.worldId, o = yield f.Mng.Ins.worldMng.loadOne(t, !0);
e.worldIds.indexOf(t) >= 0 && o && l.default.ins.pushPanel("MessageBox", t => {
t.label.string = G.I18nMgr.getI18nStringByZh("上次编辑地图时非正常退出，是否继续编辑？");
t.setLeftBtn({
text: G.I18nMgr.getI18nStringByZh("放弃"),
color: g.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
d.crossPlatform.removeStorageSync("EditWorldSceneTempSave");
})
});
t.setRightBtn({
text: G.I18nMgr.getI18nStringByZh("继续编辑"),
color: g.UIColor.blue,
call: () => {
l.default.ins.Enter("EditGameScene", t => a(this, void 0, void 0, function*() {
yield t.setData(e);
l.default.ins.Enter("EditWorldScene", t => a(this, void 0, void 0, function*() {
t.setData(e, o, m.worldLayout);
}));
}));
}
});
});
}
}
let T = null;
if (v.Hortor.isApp()) T = v.Hortor.launchQueryData; else if (c.Util.compareSDKVersion("1.12.0")) {
let e = d.crossPlatform.getLaunchOptionsSync();
e && e.query && (T = e.query);
}
if (T) {
let e = T.type || "game";
if ("game" == e) {
let e = T.cyGameId || T.gameId;
e && (e = e.replace("_", ":"));
if (e && !e.includes("game-")) {
let t = yield p.default.Ins.loadGames([ e ]);
t && t[0] && l.default.ins.pushPanel("OpenGamePanel", o => {
let i = "";
i = !0 === T.isMine || void 0 === T.isMine ? G.I18nMgr.getI18nStringByZh("欢迎你玩我的游戏！") : G.I18nMgr.getI18nStringByZh("这个游戏超好玩！");
o.setData(i, t[0]);
y.TGA.track("clickGameCell", {
gameId: e,
from: "OpenGamePanel"
});
});
}
}
if ("goods" == e) {
let e = T.goodsId;
if (e) {
let t = yield u.default.Ins.loadGoodsInfos([ e ]);
t && t[0] && l.default.ins.pushPanel("BuyGoodsPanel", e => {
e.setData(t[0]);
e.buyCall = () => {
cc.game.emit("RefreshShopList");
};
});
}
}
"gameRank" == e && l.default.ins.pushCall(() => {
this.scheduleOnce(() => {
let e = T.cyGameId;
l.default.ins.Enter("GameCoverScene", t => a(this, void 0, void 0, function*() {
t.setData(e);
let o = yield c.Util.once(S.default.GameCoverScene_GamePackLoaded), i = yield f.Mng.Ins.gameRankMng.loadOne(T.gameRankId);
i && e == o.gameData.id && l.default.ins.OpenPanelByName("GameRankPanel", e => {
e.setData(i, o.gameData);
});
}));
}, .5);
});
}
l.default.ins.pushCall(() => {
I.default.Ins.isComplete(I.GuideId.Intro) || I.default.Ins.guideIntro();
});
l.default.ins.checkNextPanel();
}));
});
}
};
D.PAGE_LOADED = "PAGE_LOADED";
D.HomeScene_Enterd = "HomeScene_Enterd";
n([ P(r.default) ], D.prototype, "toggleGroup", void 0);
n([ P(cc.Node) ], D.prototype, "content", void 0);
n([ P(T.default) ], D.prototype, "createGameButton", void 0);
D = i = n([ b, M("场景/HomeScene") ], D);
o.default = D;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/ShopMng": "ShopMng",
"../../TGA": "TGA",
"../GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
Hortor: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d7771hNGaVCpqSHgWZJw3jI", "Hortor");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Hortor = o.PlatType = o.PlatformSysBigType = void 0;
const n = e("../Frame/CrossPlatform"), a = e("../Frame/Top"), s = e("../Role"), r = e("./GameEnv");
var l;
(function(e) {
e[e.ad = 0] = "ad";
e[e.share = 1] = "share";
e[e.timeline = 2] = "timeline";
})(l || (l = {}));
const c = -20003;
var d, h;
(function(e) {
e[e.Editor = 0] = "Editor";
e[e.IOS = 1] = "IOS";
e[e.Android = 2] = "Android";
e[e.TtMiniGame = 3] = "TtMiniGame";
e[e.WxMiniGame = 4] = "WxMiniGame";
e[e.H5 = 5] = "H5";
})(d = o.PlatformSysBigType || (o.PlatformSysBigType = {}));
(function(e) {
e[e.None = -1] = "None";
e[e.Visitor = 0] = "Visitor";
e[e.WeChat = 1] = "WeChat";
e[e.QQ = 2] = "QQ";
e[e.Apple = 3] = "Apple";
e[e.TT = 4] = "TT";
e[e.Mobile = 5] = "Mobile";
e[e.YingYongBao = 6] = "YingYongBao";
e[e.TheCanvas = 7] = "TheCanvas";
})(h = o.PlatType || (o.PlatType = {}));
class p {
static get hasMiniGameSdk() {
return !!this.miniGameSdk;
}
static initChannel() {
let e = "tt";
this.isApp() ? e = this.platformSysBigType == d.Android ? r.gameEnv.androidChannel : "apple" : n.tt ? e = "tt" : n.wx && (e = "wx");
this.channel = e;
}
static initJSBridge() {
return i(this, void 0, void 0, function*() {
if (this.isApp()) {
let e = yield HAPP.getBuildKey();
this.isMobileLogin = e.isMobileLogin;
r.gameEnv.androidChannel = e.channel;
r.gameEnv.toponAdPlacementId_Android = e.placementId;
console.warn("getBuildKey res 233", JSON.stringify(e));
}
});
}
static InitMiniSDK() {
return i(this, void 0, void 0, function*() {
if (this.miniSdkInited) return;
this.miniSdkInited = !0;
let e = window.hortorConfig;
if (e) {
e.gameVersion = r.gameEnv.creatorVersion;
e.env = r.gameEnv.env;
e.gameId = r.gameEnv.gameId;
e.stdAutoUpload = !0;
this.isMiniGameTt() ? e.channel = "tt" : this.isMiniGameWx() && (e.channel = "wx");
}
p.miniGameSdk.apm.init(e);
p.miniGameSdk.init(e);
this.initShare();
});
}
static InitAppSDK() {
return i(this, void 0, void 0, function*() {
if (this.appSdkInited) return;
this.appSdkInited = !0;
let e = {};
e.gameVersion = r.gameEnv.creatorVersion;
e.env = r.gameEnv.env;
e.gameId = this.isApp() ? r.gameEnv.appGameId : r.gameEnv.gameId;
e.wechatAppID = "wx5b598df89b63f26e";
e.qqAppId = "101936682";
e.universalLink = "https://ios-app.hortorgames.com/creator/";
e.stdAutoUpload = !0;
e.channel = this.platformSysBigType == d.IOS ? "apple" : r.gameEnv.androidChannel;
e.isEnableLog = !0;
console.log(">>hortorConfig>>", JSON.stringify(e));
let t = yield HAPP.init(e);
this.distinctId = t.distinctId;
});
}
static onQueryChange(e) {
this.isApp() && HAPP.onQueryChange({
listener: t => {
let o = {
type: t.type,
isMine: t.isMine,
cyGameId: t.cyGameId,
goodsId: t.goodsId
};
e && e(o);
}
});
}
static checkSwitches(e) {
return i(this, void 0, void 0, function*() {
let t = {
channel: this.channel
};
return this.isMiniGame() ? this.miniGameSdk.checkSwitches(e, t) : this.isApp() ? HAPP.checkSwitches({
switches: e,
params: t
}) : void 0;
});
}
static isMiniGame() {
return this.platformSysBigType == d.TtMiniGame || this.platformSysBigType == d.WxMiniGame;
}
static isApp() {
return !1;
}
static isMiniGameWx() {
return this.platformSysBigType == d.WxMiniGame;
}
static isMiniGameTt() {
return this.platformSysBigType == d.TtMiniGame;
}
static get platformSysBigType() {
return cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD ? d.IOS : cc.sys.platform == cc.sys.ANDROID ? d.Android : cc.sys.platform == cc.sys.EDITOR_PAGE || cc.sys.platform == cc.sys.EDITOR_CORE ? d.Editor : cc.sys.platform == cc.sys.MOBILE_BROWSER || cc.sys.platform == cc.sys.DESKTOP_BROWSER ? d.H5 : n.wx ? d.WxMiniGame : n.tt ? d.TtMiniGame : void 0;
}
static logoutApp() {
this.hasLogin = !1;
HAPP.logout();
}
static logoutWeb() {
this.hasLogin = !1;
}
static loginApp(e) {
console.log(`>>try login:[type = ${h[e]}]`);
this.loginPlatType = e;
this.isPlatformVisitorLogin = this.loginPlatType == h.Visitor || this.loginPlatType == h.TT;
return new Promise(t => {
HAPP.tryLogin().then(e => {
console.log("try login success", JSON.stringify(e));
this.hasLogin = !0;
this.platformUid = e.uniqueId;
t(e);
}).catch(() => {
console.log("尝试登录失败，请选择登录方式，如游客登录");
let o = null;
(e == h.WeChat ? HAPP.wechatLogin() : e == h.QQ ? HAPP.qqLogin() : e == h.Apple ? HAPP.appleLogin() : HAPP.visitorLogin()).then(o => {
console.log(`>>${h[e]} login success`, JSON.stringify(o));
this.hasLogin = !0;
this.platformUid = o.uniqueId;
t(o);
}).catch(o => {
o.errCode == c ? a.default.showToast("请安装微信") : -20004 != o.errCode && -50003 != o.errCode && a.default.showToast("登录失败，请重试！");
console.log(`>>${h[e]} login fail`, JSON.stringify(o));
t(null);
});
});
});
}
static isVisitor() {
let e = s.default.Ins.role.createAt.getTime() > 1627056e6;
return this.isApp() && this.loginPlatType == h.Visitor && e;
}
static sendSMSCode(e, t) {
this.isApp() && HAPP.sendSMSCode({
phoneNumber: e
}).then(() => {
console.log("发送短信成功！");
t && t(!0);
}).catch(e => {
console.log("发送短信失败！", JSON.stringify(e));
t && t(!1);
});
}
static loginWithMobile(e) {
this.loginPlatType = h.Mobile;
if (this.isApp()) return new Promise(t => {
HAPP.tryLogin().then(e => {
console.log("try login success", JSON.stringify(e));
this.hasLogin = !0;
this.platformUid = e.uniqueId;
t(e);
}).catch(() => {
HAPP.smsLogin({
phoneNumber: e.mobile,
smsCode: e.smsCode
}).then(e => {
console.log("手机号登录成功！", JSON.stringify(e));
this.hasLogin = !0;
this.platformUid = e.uniqueId;
t(e);
}).catch(e => {
console.log("手机号登录失败！", JSON.stringify(e));
t(null);
});
});
});
this.hasLogin = !0;
return Promise.resolve(null);
}
static loginMiniGame() {
return i(this, void 0, void 0, function*() {
if (this.miniGameSdk) {
this.hasLogin = !0;
this.isMiniGameWx() ? this.loginPlatType = h.WeChat : this.loginPlatType = h.TT;
console.log("loginMiniGame");
return this.miniGameSdk.weakLogin();
}
return Promise.resolve(null);
});
}
static tgaTrack(e, t) {
console.log(">>tgaTrack>>eventName:", e, ">>extend:", JSON.stringify(t));
if (this.isApp()) HAPP.postGameLog({
eventName: e,
customData: t
}); else if (this.isMiniGame() && this.miniGameSdk) {
const o = this.miniGameSdk.getGameLogTypes();
this.miniGameSdk.postGameLog({
logType: o.TGA,
eventType: "track",
eventName: e,
extend: t
});
}
}
static userSet(e) {
if (this.isApp()) HAPP.postGameLog({
eventType: HAPP.EventType.UserSet,
eventName: "",
customData: e
}); else if (this.miniGameSdk) {
const t = this.miniGameSdk.getGameLogTypes();
this.miniGameSdk.postGameLog({
logType: t.TGA,
eventType: "user_set",
eventName: "",
extend: e
});
}
}
static initShare() {
n.crossPlatform.onShareAppMessage(e => {
const t = Object.assign({
channel: e.channel
}, {
shareType: "default",
title: "创游编辑器"
});
e.channel;
return t;
});
}
static wxShare(e, t, o = 0) {
return i(this, void 0, void 0, function*() {
if (this.miniGameSdk) if (t) {
let i = () => {
n.crossPlatform.showModal({
title: "提示",
content: "分享失败，请尝试不同的群",
showCancel: !0,
cancelText: "取消",
confirmText: "去分享",
success: i => {
i.confirm ? this.wxShare(e, t, o + 1) : i.cancel && e.fail && e.fail();
}
});
}, a = () => {
e.success && e.success();
};
this.miniGameSdk.shareMessage(e).then(() => {
0 == o ? i() : a();
}).catch(() => {
i();
});
} else this.miniGameSdk.shareMessage(e).then(() => {
e.success && e.success();
}).catch(() => {
e.fail && e.fail();
});
});
}
static appShare(e, t, o, n) {
return i(this, void 0, void 0, function*() {
console.log(">>HSDK Share");
if (this.isApp()) if (e == h.WeChat) {
console.log(">>wxShare share");
HAPP.wxShareImage({
imagePath: t.img,
scene: t.scene
}).then(() => {
console.log("wxShare success");
o && o();
}).catch(e => {
console.log("wxShare err", JSON.stringify(e));
n && n();
});
} else o && o(); else o && o();
});
}
static shareImg(e, t, o, n) {
return i(this, void 0, void 0, function*() {
console.log(">>HSDK ShareImg");
if (this.isApp()) if (e == h.WeChat) {
console.log(">>wxShare share");
HAPP.wxShareImageAndText({
imagePath: t,
scene: HAPP.WXScene.Session,
from: "",
url: "",
desc: "",
title: ""
}).then(() => {
console.log(">>wxShare success");
o && o();
}).catch(e => {
console.log(">>wsShare err", JSON.stringify(e));
if (e.errCode == c) {
a.default.showToast("请安装微信");
n && n(e.errCode);
} else n && n();
});
} else if (e == h.QQ) {
console.log(">>qqShare share filePath", t);
HAPP.qqShareImage({
imagePath: t,
title: "创游编辑器",
desc: "分享游戏",
from: "",
scene: HAPP.QQScene.Friend
}).then(e => {
console.log(">>qqShare success", JSON.stringify(e));
o && o();
}).catch(e => {
console.error(">>qqShare err", JSON.stringify(e));
n && n();
});
} else o && o(); else o && o();
});
}
static converterEngine(e) {
for (var t = new Uint8Array(e), o = t.length, i = []; o--; ) i[o] = String.fromCharCode(t[o]);
return window.btoa(i.join(""));
}
static getImageBase64(e, t, o) {
var i, n = new XMLHttpRequest();
n.open("GET", e, !0);
n.responseType = "arraybuffer";
n.onload = function() {
if (200 == this.status || 304 == this.status) {
i = p.converterEngine(this.response);
t && t(i);
} else o && o();
};
n.send();
}
static showRewardvideoAd(e, t, o) {
if (this.isApp()) {
console.log("asdasdasd", "channel", this.channel);
if ("233" == this.channel) HAPP.show233Ad({
id: "999000000",
onReward() {
o && o(!0);
},
onShowFail(e) {
console.log(JSON.stringify({
err: e
}));
}
}); else {
a.default.showLoading("广告加载中");
HAPP.preloadVideoAd({
id: e
}).then(() => {
setTimeout(() => {
HAPP.showVideoAd({
id: e,
onReward() {
a.default.hideLoading();
o && o(!0);
},
onShowFail(e) {
a.default.hideLoading("播放失败");
console.log(JSON.stringify(e));
},
onPlayStart() {
a.default.hideLoading();
},
onLoad(e) {
console.log("广告加载完成", JSON.stringify(e));
}
});
}, 500);
}).catch(e => {
a.default.hideLoading("广告加载失败，请重试");
console.warn("err", e);
});
}
}
}
static downloadNewPkg(e, t, o) {
if (this.isApp()) {
console.log(">>downloadNewPkg>>", e);
if (this.platformSysBigType == d.IOS) cc.sys.openURL(e); else {
console.log(">>start download>>", e);
HAPP.downloadFile({
url: e,
isAutoInstall: !0,
fileName: "tmp.apk",
onProgress(e) {
console.warn("onProgress", JSON.stringify(e));
t && t(e / 100);
},
onComplete() {
o && o(!0);
},
onError(e) {
console.warn("onError", JSON.stringify(e));
o && o(!1);
}
});
}
}
}
static copyTextToClipboard(e) {}
}
o.Hortor = p;
p.isMobileLogin = !0;
p.miniGameSdk = window.hortorSDK;
p.linkAccountType = h.None;
p.hasLogin = !1;
p.launchQueryData = null;
p.isPlatformVisitorLogin = !1;
p.distinctId = "";
p.channel = "";
p.miniSdkInited = !1;
p.appSdkInited = !1;
cc._RF.pop();
}, {
"../Frame/CrossPlatform": "CrossPlatform",
"../Frame/Top": "Top",
"../Role": "Role",
"./GameEnv": "GameEnv"
} ],
HotGameMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8d76aRMtJpNzKxUavzaVTYQ", "HotGameMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./DynamicMng");
class r {
constructor() {
this.map = new Map();
this.hotIds = [];
}
load(e) {
return i(this, void 0, void 0, function*() {
if (s.DynamicMng.Ins.isInspectVersion()) return "ZongBang" == e ? s.DynamicMng.Ins.inspectGameIds : [];
let t = this.map.get(e) || [], o = t.length, i = o + 20;
if (o >= (i = Math.min(i, 999))) return t;
let r = {
gameTag: e,
start: 0,
end: i
}, l = (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGameIdListByGameTag,
params: r
}, n.Game_RGetGameIdListByGameTag)).gameIdList || [];
this.map.set(e, l);
return l;
});
}
clearTag(e) {
this.map.delete(e);
}
clearAll() {
this.map.clear();
}
loadHotIds() {
return i(this, void 0, void 0, function*() {
if (0 == this.hotIds.length) {
let e = {
gameTag: "ZongBang",
start: 0,
end: 500
}, t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGameIdListByGameTag,
params: e
}, n.Game_RGetGameIdListByGameTag);
this.hotIds = t.gameIdList || [];
}
return this.hotIds;
});
}
}
o.default = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"./DynamicMng": "DynamicMng"
} ],
HotSubPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "07f5bUDn4lIHY9O2qhRxFmH", "HotSubPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/ScrollList"), s = e("../../../CustomUI/ToggleGroup"), r = e("../../../Frame/Top"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/DynamicMng"), d = e("../../../Game/Player/GameCellDataMng"), h = e("../../../Game/Player/HotGameMng"), p = e("../../../Panel/PublishGamePanel/TagCell"), u = e("../GameCell"), {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.loadingNode = null;
this.emptyLabel = null;
this.toggleGroup = null;
this.list = null;
this.tagCell = null;
this.curTag = "";
}
start() {
return n(this, void 0, void 0, function*() {
this.loadingNode.width = this.loadingNode.height = 0;
this.toggleGroup.node.on(s.default.TOGGLE_CHANGE, this.onToggleGroup, this);
let e = yield c.DynamicMng.Ins.loadOne("GameTags");
l.Util.makeBro(this.tagCell.node, e.length, (t, o) => {
let i = e[o];
t.getComponent(p.default).setTag(i.key, i.str);
});
this.refresh(0);
});
}
onToggleGroup(e) {
return n(this, void 0, void 0, function*() {
this.refresh(e);
});
}
refresh(e) {
return n(this, void 0, void 0, function*() {
let t = (yield c.DynamicMng.Ins.loadOne("GameTags"))[e];
this.node.getComponentsInChildren(u.default).forEach(e => {
e.from = "Hot." + t.str;
});
this.curTag = t.key;
let o = yield h.default.Ins.load(t.key), i = yield d.default.Ins.loadGames(o);
for (let e = 0; e < i.length; e++) i[e].rank = e + 1;
this.list.setDataArr(i);
this.emptyLabel.active = 0 == i.length;
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (o > 100) {
h.default.Ins.clearTag(this.curTag);
d.default.Ins.deleteAllCache();
r.default.showToast("已刷新");
this.refresh(this.toggleGroup.idx);
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
this.refresh(this.toggleGroup.idx);
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(o, 100);
this.loadingNode.angle = o;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
};
i([ f(cc.Node) ], g.prototype, "loadingNode", void 0);
i([ f(cc.Node) ], g.prototype, "emptyLabel", void 0);
i([ f(s.default) ], g.prototype, "toggleGroup", void 0);
i([ f(a.default) ], g.prototype, "list", void 0);
i([ f(p.default) ], g.prototype, "tagCell", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/Top": "Top",
"../../../Frame/Util": "Util",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../../Game/Player/HotGameMng": "HotGameMng",
"../../../Panel/PublishGamePanel/TagCell": "TagCell",
"../GameCell": "GameCell"
} ],
HpBar: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4dd17EXdidHYa3t3dCwr98f", "HpBar");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.mask = null;
this.hp = 0;
this.hpMax = 1;
}
refresh() {
this.label.string = `${this.hp}/${this.hpMax}`;
this.mask.node.width = this.hp / this.hpMax * this.node.width;
}
show() {
this.node.active = !0;
}
hide() {
this.node.active = !1;
}
};
i([ a(cc.Label) ], s.prototype, "label", void 0);
i([ a(cc.Mask) ], s.prototype, "mask", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
Hper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "beed3reVGdKL4++Ep1rb871", "Hper");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../GameData/GameTypeDefine"), a = e("./FightSystem"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.team = n.Team.Hero;
this.emitTarget = null;
this._hp = 3;
this.hpMax = 3;
this.lockHp = !1;
}
get hp() {
return this._hp;
}
set hp(e) {
this._hp = e;
this.getEmitTarget().emit(a.FightSystem.Event.HpChange, e);
}
get HpMax() {
return this.hpMax;
}
set HpMax(e) {
this.hpMax = e;
this.getEmitTarget().emit(a.FightSystem.Event.HpMaxChange, e);
}
onDestroy() {
super.onDestroy && super.onDestroy();
cc.Tween.stopAllByTarget(this.node);
}
isAlive() {
return this._hp > 0;
}
getEmitTarget() {
return this.emitTarget || this.node;
}
};
i([ r({
type: cc.Enum(n.Team),
displayName: "Team"
}) ], l.prototype, "team", void 0);
i([ r(cc.Node) ], l.prototype, "emitTarget", void 0);
i([ r ], l.prototype, "_hp", void 0);
i([ r ], l.prototype, "hpMax", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../GameData/GameTypeDefine": "GameTypeDefine",
"./FightSystem": "FightSystem"
} ],
HurryMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "660b8CCauFE/4SskojHp7NE", "HurryMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.HurryMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top");
class r {
hurryGame(e) {
return i(this, void 0, void 0, function*() {
s.default.blockInput(!0, "hurryGame");
let t = {
ids: [ e ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_HurryGames,
params: t
}, n.Game_RHurryGames);
s.default.blockInput(!1, "hurryGame");
});
}
}
o.HurryMng = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top"
} ],
IceCone: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b028f3vhANHi4S4UB6+ZzKb", "IceCone");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Damager"), r = e("../../Frame/Util"), l = e("../../GameData/GameTypeDefine"), c = e("../CollisionEmiter"), d = e("../PhyObj"), h = e("../Player/Mng"), p = e("../World/Device"), u = e("../World/Tile"), {ccclass: m, property: f} = cc._decorator;
var g;
(function(e) {
e[e.idle = 0] = "idle";
e[e.move = 1] = "move";
e[e.waitSpawn = 2] = "waitSpawn";
})(g || (g = {}));
let y = i = class extends p.default {
constructor() {
super(...arguments);
this.sprite = null;
this.content = null;
this.damager = null;
this._v2_t = new cc.Vec2();
this._rect_t = new cc.Rect();
this._contentPhyObj = null;
this._originPos = new cc.Vec2();
this._timer = 0;
this._state = g.idle;
this._dir = new cc.Vec2();
this._triggerRect = new cc.Rect();
this._speed = 0;
this._acc = 1500;
}
onLoad() {
super.onLoad();
this.damager = this.sprite.getComponent(s.default);
this.collider = this.sprite.getComponent(cc.Collider);
this.node.on(c.default.onCollisionEnter, this.onCollisionEnter, this);
this.doCollisionTile = () => {
this._state != g.waitSpawn && this.gotoState(g.waitSpawn);
};
this._contentPhyObj = this.content.getComponent(d.default);
if (!this._contentPhyObj) {
this._contentPhyObj = this.content.addComponent(d.default);
this._contentPhyObj.needDestroy = !1;
}
}
onCollisionEnter(e, t) {
this.world.playing && this.isHeroActor(e) && this._state != g.waitSpawn && this.gotoState(g.waitSpawn);
}
update(e) {
let t = this.world;
if (t.playing) {
this._timer > 0 && (this._timer -= e);
switch (this._state) {
case g.idle:
if (this.data.extra.autoTrigger) this._timer <= 0 && this.gotoState(g.move); else {
let e = t.hero, o = e.node.width * Math.abs(e.node.scale), i = e.node.height * e.node.scale;
this._v2_t.set(e.node.position);
this._v2_t.x -= this.node.x;
this._v2_t.y -= this.node.y;
this._v2_t.rotateSelf(-this.node.angle * Math.PI / 180);
this._rect_t.x = this._v2_t.x - .5 * o;
this._rect_t.y = this._v2_t.y - .5 * i;
this._rect_t.width = o;
this._rect_t.height = i;
this._triggerRect.intersects(this._rect_t) && this.gotoState(g.move);
}
break;

case g.move:
{
this.data.extra.isAcc && (this._speed += this._acc * e);
let t = this._speed * e, o = t * this._dir.x, i = t * this._dir.y;
this.PositionMoveDelta(o, i);
this._timer <= 0 && this.gotoState(g.waitSpawn);
}
break;

case g.waitSpawn:
this._timer <= 0 && this.spawn();
}
}
}
gotoState(e) {
let t = this.world;
switch (e) {
case g.idle:
this.node.setPosition(this._originPos);
this.SetPosition(this._originPos.x, this._originPos.y);
this.damager.enabled = !0;
this.content.parent = this.node;
this.content.active = !0;
this.content.opacity = 255;
this.content.angle = 0;
this.content.x = 0;
this.content.y = 0;
this.content.scale = 1;
this._timer = this.data.extra.autoTimer || .01;
break;

case g.move:
this.data.extra.isAcc ? this._speed = 0 : this._speed = this.data.extra.speed || 300;
this._timer = 30;
break;

case g.waitSpawn:
this.scheduleOnce(() => {
this.damager.enabled = !1;
}, .01);
this._timer = this.data.extra.respawnTimer;
if (t.worldLayout.type == l.WorldType.Jump) {
this.content.parent = this.content.parent.parent;
this.content.x = this.node.x;
this.content.y = this.node.y;
this.content.angle = this.node.angle;
this.content.scale = this.node.scale;
this._contentPhyObj.fly(r.Util.randomInt(-100, 100), r.Util.randomInt(200, 300), r.Util.randomInt(-300, 300));
}
this._contentPhyObj.fadeOut();
}
this._state = e;
}
spawn() {
this.gotoState(g.idle);
}
static initExtra(e) {
e || (e = {
autoTrigger: !1,
autoTimer: 1,
isAcc: !1,
speed: 4 * u.default.SIZE,
acc: 20 * u.default.SIZE,
respawnTimer: 2,
dmg: 1,
scale: 1,
checkDistance: 10 * u.default.SIZE
});
return e;
}
setData(e, t) {
const o = Object.create(null, {
setData: {
get: () => super.setData
}
});
return a(this, void 0, void 0, function*() {
o.setData.call(this, e, t);
e = this.data;
this._originPos.set(this.node.position);
e.extra = i.initExtra(e.extra);
this.data.ignoreDmgEnemy = !0;
yield h.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
this.node.height;
this.node.scale = this.data.extra.scale;
this.damager.dmg = e.extra.dmg;
this.damager.ignoreTeam = this.data.ignoreDmgEnemy ? l.Team.Enemy : l.Team.None;
this._acc = this.data.extra.acc || 1500;
this._dir.x = 0;
this._dir.y = -1;
this._dir.rotateSelf(this.node.angle * Math.PI / 180);
let n = this.node.width * this.node.scale, a = this.node.height * this.node.scale;
this._triggerRect.x = .5 * -n;
this._triggerRect.y = .5 * -a - this.data.extra.checkDistance;
this._triggerRect.width = n;
this._triggerRect.height = n + this.data.extra.checkDistance;
this.gotoState(g.idle);
});
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
autoTrigger: !1,
autoTimer: 1,
isAcc: !1,
speed: 4 * u.default.SIZE,
acc: 20 * u.default.SIZE,
respawnTimer: 2,
dmg: 1,
scale: 1,
checkDistance: 10 * u.default.SIZE
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("重生时间(秒)", n.extra.respawnTimer, 0, 999, e => {
n.extra.respawnTimer = e;
});
e.addNumberEditBox("检测距离(格)", n.extra.checkDistance / u.default.SIZE, 1, 999, e => {
n.extra.checkDistance = e * u.default.SIZE;
});
let a = null;
e.addToggle("自动掉落", n.extra.autoTrigger, e => {
n.extra.autoTrigger = e;
a && (a.node.active = e);
});
(a = e.addNumberEditBox("自动掉落延时(秒)", n.extra.autoTimer, .01, 999, e => {
n.extra.autoTimer = e;
})).node.active = n.extra.autoTrigger;
let s = null;
e.addToggle("加速模式", n.extra.isAcc, e => {
n.extra.isAcc = e;
if (s) {
s.node.active = e;
s.node.active = !e;
}
});
(s = e.addNumberEditBox("加速度(格/秒)", n.extra.acc / u.default.SIZE, .1, 99, e => {
n.extra.acc = e * u.default.SIZE;
})).node.active = n.extra.isAcc;
e.addNumberEditBox("速度(格/秒)", n.extra.speed / u.default.SIZE, .1, 99, e => {
n.extra.speed = e * u.default.SIZE;
});
s.node.active = !n.extra.isAcc;
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = n.extra.scale;
o.world.placeGizmos.setScale(e);
}
});
e.addNumberEditBox("伤害", n.extra.dmg, 0, 999999, e => {
n.extra.dmg = e;
});
}
};
n([ f({
override: !0,
type: cc.Sprite
}) ], y.prototype, "sprite", void 0);
n([ f(cc.Node) ], y.prototype, "content", void 0);
y = i = n([ m ], y);
o.default = y;
cc._RF.pop();
}, {
"../../Frame/Damager": "Damager",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../CollisionEmiter": "CollisionEmiter",
"../PhyObj": "PhyObj",
"../Player/Mng": "Mng",
"../World/Device": "Device",
"../World/Tile": "Tile"
} ],
ImagePreviewPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c71378JfahGp7XqOBmq9dj5", "ImagePreviewPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
}
onLoad() {
super.onLoad();
this.node.on(a.default.CLICK, this.closePanel, this);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.label.string = e;
yield r.Mng.Ins.spriteMng.setSprite(this.sprite, t, 750, 1);
});
}
};
i([ c(cc.Label) ], d.prototype, "label", void 0);
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Game/Player/Mng": "Mng"
} ],
ImgBtnHListItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "34de9kBovpCLIZQclAitxnt", "ImgBtnHListItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/ScrollList"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.scrollList = null;
this._onSelectItemCall = null;
}
onLoad() {
this.scrollList.node.on(n.default.SELECT_ITEM, this.onSelectItem, this);
}
setData(e, t, o, i) {
this._onSelectItemCall = i;
this.nameLabel.string = e;
this.scrollList.setDataArr(t);
this.scrollList.selectByIdx(o);
}
onSelectItem(e, t, o) {
this._onSelectItemCall && this._onSelectItemCall(e, t, o);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(n.default) ], r.prototype, "scrollList", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList"
} ],
InputPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6cf3auPflRI8K7Q77ssbTFf", "InputPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/Top"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.editBox = null;
this.btn = null;
this.minChar = 20;
this.call = null;
}
onLoad() {
super.onLoad();
this.btn.node.on(n.default.CLICK, this.onOk, this);
}
onOk() {
let e = this.editBox.textLabel.string || "";
if (e.length < this.minChar) s.default.showToast(`最少${this.minChar}个字`); else {
this.closePanel();
this.call && this.call(e);
}
}
};
i([ l(cc.Label) ], c.prototype, "titleLabel", void 0);
i([ l(cc.EditBox) ], c.prototype, "editBox", void 0);
i([ l(n.default) ], c.prototype, "btn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top"
} ],
Inspector: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c012aXq3uVLt72JpNQGBDWb", "Inspector");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Pool"), r = e("../../Frame/ScreenRect"), l = e("../../Frame/Top"), c = e("../../Frame/TweenUtil"), d = e("./Inspector/ButtonItem"), h = e("./Inspector/DropDownBoxItem"), p = e("./Inspector/EditBoxItem"), u = e("./Inspector/HeadItem"), m = e("./Inspector/ToggleItem"), f = e("./Inspector/TriggerItem"), g = e("../../CustomUI/Button"), y = e("./TouchWorldShowGizmos"), v = e("./EditWorldScene"), C = e("../../Frame/Util"), _ = e("../../Frame/SceneManager"), S = e("./Inspector/NumberEditBoxItem"), I = e("./Inspector/ImgBtnHListItem"), G = e("../../Game/Player/Mng"), T = e("./Inspector/SpawnMonsterItem"), b = e("./Page/PropPage"), M = e("../../Game/Player/GuideMng"), {ccclass: P, property: D} = cc._decorator;
let w = i = class extends cc.Component {
constructor() {
super(...arguments);
this.scrollView = null;
this.headPool = null;
this.labelPool = null;
this.buttonPool = null;
this.intBoxPool = null;
this.dropDownBoxPool = null;
this.editBoxPool = null;
this.numberEditBoxPool = null;
this.numberEditBoxPool2 = null;
this.togglePool = null;
this.triggerPool = null;
this.spawnMonsterPool = null;
this.imgBtnHListPool = null;
this.content = null;
this.btn_copy = null;
this.tempData = null;
this.selectType = "";
}
onLoad() {
this.btn_copy && this.btn_copy.node.on(g.default.CLICK, this.onClickCopy, this);
}
onEnable() {
this.btn_copy && (this.btn_copy.node.active = !!this.tempData && M.default.Ins.isComplete(M.GuideId.EditWorld));
this.node.height = .4 * r.default.height;
}
onClickCopy() {
return a(this, void 0, void 0, function*() {
if (this.tempData && "" != this.selectType) {
let e = _.default.ins.findScene(v.default);
if (!e) return;
let t = e.world;
if (!t) return;
let o = this.tempData.node.position, i = t.tiledMap.getGridPos(o.x, o.y);
i.iCol++;
if (i.iCol >= t.tiledMap.nCol) return;
let n = this.selectType + t.worldLayout.incId++, a = this.tempData.data, s = C.Util.deepCopy(a);
s.id = n;
if ("actor" == this.selectType) {
let o = t.addActor(i);
yield o.setData(s);
(yield o.getTeamGizmo()).setTeam(s.team);
y.default.Ins.clickActor(o);
e.cameraDragCtrl.centerOn(o.node);
} else if ("device" == this.selectType) {
let o = yield G.Mng.Ins.deviceMng.loadOne(s.confId), n = yield t.addDevice(i, o.prefabName);
yield n.setData(s, o);
y.default.Ins.clickDevice(n);
e.cameraDragCtrl.centerOn(n.node);
} else if ("tile" == this.selectType) {
let o = t.tiledMap.getTile(i.iCol, i.iRow);
o || (o = t.tiledMap.addTile(i.iCol, i.iRow));
yield o.setData(s);
y.default.Ins.clickTile(o);
e.cameraDragCtrl.centerOn(o.node);
} else if ("prop" == this.selectType) {
let o = yield t.addProp(i);
yield o.setData(s);
y.default.Ins.clickProp(o);
e.cameraDragCtrl.centerOn(o.node);
cc.game.emit(b.default.PropPage_PUT_PROP, o.conf);
}
}
});
}
reset() {
for (let e = this.content.childrenCount - 1; e >= 0; e--) {
let t = this.content.children[e];
t.emit(s.default.PUT);
t.scale = 1;
}
}
addHead(e, t) {
t || (t = "UI/error");
let o = this.headPool.get().getComponent(u.default);
this.content.addChild(o.node);
o.setData(e, t);
return o;
}
addLabel(e, t) {
t || (t = {
fontSize: 40,
align: cc.Label.HorizontalAlign.CENTER
});
let o = this.labelPool.get().getComponent(cc.Label);
o.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
o.node.width = this.node.width - 50;
o.fontSize = t.fontSize;
o.horizontalAlign = t.align;
this.content.addChild(o.node);
o.string = e;
return o;
}
addButton(e, t, o) {
let i = this.buttonPool.get().getComponent(d.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
addDropDownBox(e, t, o, i) {
let n = this.dropDownBoxPool.get().getComponent(h.default);
this.content.addChild(n.node);
n.setData(e, t, o, i);
n.node.scaleY = 1;
return n;
}
addImgBtnHList(e, t, o, i) {
let n = this.imgBtnHListPool.get().getComponent(I.default);
this.content.addChild(n.node);
n.setData(e, t, o, i);
n.node.scaleY = 1;
return n;
}
addEditBox(e, t, o) {
let i = this.editBoxPool.get().getComponent(p.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
addNumberEditBox(e, t, o, i, n) {
let a = this.numberEditBoxPool.get().getComponent(S.default);
this.content.addChild(a.node);
a.setData(e, t, e => {
e = C.Util.clamp(e, o, i);
a.label_num.string = e;
n(e);
});
return a;
}
addNumberEditBox2(e, t, o, i) {
let n = this.numberEditBoxPool2.get().getComponent(S.default);
this.content.addChild(n.node);
n.setDataWithSurfix(e, t, o, i);
return n;
}
addToggle(e, t, o) {
let i = this.togglePool.get().getComponent(m.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
addTrigger(e, t, o) {
let i = this.triggerPool.get().getComponent(f.default);
this.content.addChild(i.node);
i.setData(e, t, o);
return i;
}
addSpawnMonster(e, t) {
let o = this.spawnMonsterPool.get().getComponent(T.default);
this.content.addChild(o.node);
o.setData(e, t);
return o;
}
show() {
this.node.active = !0;
let e = this.getComponent(cc.Widget);
e.bottom = -this.node.height;
e.updateAlignment();
l.default.blockInput(!0, "showInspector");
cc.tween(this.node).to(.2, {
y: this.node.y + this.node.height
}, {
easing: c.Easing.backIn
}).call(() => {
l.default.blockInput(!1, "showInspector");
cc.game.emit(i.Inspector_ShowEnd);
}).start();
}
hide() {
let e = this.getComponent(cc.Widget);
e.bottom = 0;
e.updateAlignment();
l.default.blockInput(!0, "hideInspector");
cc.tween(this.node).to(.2, {
y: this.node.y - this.node.height
}, {
easing: c.Easing.backOut
}).call(() => {
this.node.active = !1;
l.default.blockInput(!1, "hideInspector");
}).start();
}
findItemByName(e) {
for (let t = 0; t < this.content.childrenCount; t++) {
let o = this.content.children[t], i = C.Util.searchChild(o, "nameLabel");
if (i) {
let t = i.getComponent(cc.Label);
if (t && t.string.includes(e)) return o;
}
}
return null;
}
};
w.Inspector_ShowEnd = "Inspector_ShowEnd";
n([ D(cc.ScrollView) ], w.prototype, "scrollView", void 0);
n([ D(s.default) ], w.prototype, "headPool", void 0);
n([ D(s.default) ], w.prototype, "labelPool", void 0);
n([ D(s.default) ], w.prototype, "buttonPool", void 0);
n([ D(s.default) ], w.prototype, "intBoxPool", void 0);
n([ D(s.default) ], w.prototype, "dropDownBoxPool", void 0);
n([ D(s.default) ], w.prototype, "editBoxPool", void 0);
n([ D(s.default) ], w.prototype, "numberEditBoxPool", void 0);
n([ D(s.default) ], w.prototype, "numberEditBoxPool2", void 0);
n([ D(s.default) ], w.prototype, "togglePool", void 0);
n([ D(s.default) ], w.prototype, "triggerPool", void 0);
n([ D(s.default) ], w.prototype, "spawnMonsterPool", void 0);
n([ D(s.default) ], w.prototype, "imgBtnHListPool", void 0);
n([ D(cc.Node) ], w.prototype, "content", void 0);
n([ D(g.default) ], w.prototype, "btn_copy", void 0);
w = i = n([ P ], w);
o.default = w;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Pool": "Pool",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"./EditWorldScene": "EditWorldScene",
"./Inspector/ButtonItem": "ButtonItem",
"./Inspector/DropDownBoxItem": "DropDownBoxItem",
"./Inspector/EditBoxItem": "EditBoxItem",
"./Inspector/HeadItem": "HeadItem",
"./Inspector/ImgBtnHListItem": "ImgBtnHListItem",
"./Inspector/NumberEditBoxItem": "NumberEditBoxItem",
"./Inspector/SpawnMonsterItem": "SpawnMonsterItem",
"./Inspector/ToggleItem": "ToggleItem",
"./Inspector/TriggerItem": "TriggerItem",
"./Page/PropPage": "PropPage",
"./TouchWorldShowGizmos": "TouchWorldShowGizmos"
} ],
IntBoxItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9edbbfeBvVBGJM8Zoe0qBT3", "IntBoxItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/IntBox"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.intBox = null;
this.data = null;
this.onChange = null;
}
onLoad() {
this.intBox.node.on(n.default.VALUE_CAHNGE, this.onValueChange, this);
}
setData(e, t, o) {
this.data = t;
this.onChange = o;
this.nameLabel.string = e;
this.intBox.setRange(t.min, t.max);
this.intBox.setValue(t.value);
}
onValueChange(e) {
this.onChange && this.onChange(e);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(n.default) ], r.prototype, "intBox", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../CustomUI/IntBox": "IntBox"
} ],
IntBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "19a83lIJXNG6p0oekjTRhdv", "IntBox");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("./Button"), {ccclass: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.addBtn = null;
this.subBtn = null;
this.valueLabel = null;
this.nameLabel = null;
this.value = 0;
this.min = 0;
this.max = 9999;
}
onLoad() {
this.addBtn.node.on(a.default.CLICK, this.onAddBtnTap, this);
this.subBtn.node.on(a.default.CLICK, this.onSubBtnTap, this);
}
onAddBtnTap() {
this.value = Math.min(this.max, this.value + 1);
this.updateLabel();
this.node.emit(i.VALUE_CAHNGE, this.value);
}
onSubBtnTap() {
this.value = Math.max(this.min, this.value - 1);
this.updateLabel();
this.node.emit(i.VALUE_CAHNGE, this.value);
}
setRange(e, t) {
this.min = e;
this.max = t;
}
setValue(e) {
this.value = e;
this.updateLabel();
}
getValue() {
return this.value;
}
updateLabel() {
this.valueLabel.string = "" + this.value;
}
};
l.VALUE_CAHNGE = "VALUE_CAHNGE";
n([ r(a.default) ], l.prototype, "addBtn", void 0);
n([ r(a.default) ], l.prototype, "subBtn", void 0);
n([ r(cc.Label) ], l.prototype, "valueLabel", void 0);
n([ r(cc.Label) ], l.prototype, "nameLabel", void 0);
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"./Button": "Button"
} ],
InteractGizmos: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "393d0pt2cRMz5MR2X2P26b/", "InteractGizmos");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../Tile"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
show(e) {
this.node.active = !0;
this.node.position = e.position;
this.node.y += n.default.SIZE / 2;
}
hide() {
this.node.active = !1;
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../Tile": "Tile"
} ],
Interactable: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7ba69dYfolAc6ebyrHWn74V", "Interactable");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.canInteract = !0;
}
};
s.INTERACT = "INTERACT";
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
JSBridge: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "84fdbGW4OpNjZ+JQdQHBo/u", "JSBridge");
var i, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.JSBridge = void 0;
(function(e) {
const t = cc.sys.os === cc.sys.OS_IOS, o = cc.sys.os === cc.sys.OS_ANDROID;
e.getAppChannel = function() {
var e = "";
o && (e = jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "getAppChannel", "()Ljava/lang/String;"));
console.log(">>getAppChannel>>", e);
return e;
};
e.getPlacementId = function() {
var e = "";
o && (e = jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "getPlacementId", "()Ljava/lang/String;"));
console.log(">>getPlacementId>>", e);
return e;
};
e.getIsMobileLogin = function() {
var e = !1;
o && (e = jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "getIsMobileLogin", "()Z"));
console.log(">>getIsMobileLogin>>", e);
return e;
};
e.hideBannerAd = function() {
o && jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "hideBanner", "()V");
};
e.showBannerAd = function(e, t) {
return n(this, void 0, void 0, function*() {
o && jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "showBanner", "(Ljava/lang/String;I)V", e, t);
});
};
e.bannerAdCallback = function() {};
e.showInterstitialAd = function(e) {
return n(this, void 0, void 0, function*() {
o && jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "showInterstitialAd", "(Ljava/lang/String;)V", e);
});
};
let i;
e.interstitialAdCallback = function(e, t) {
(void 0)(e, t);
};
let a, s = !1;
e.showRewardvideoAd = function(e, a) {
return n(this, void 0, void 0, function*() {
console.log(`>>showRewardvideoAd>>placementId=${e} | adType=${a}`);
if (o) jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "showRewardvideoAd", "(Ljava/lang/String;Ljava/lang/String;)V", e, a); else if (t) {
cc.audioEngine.pauseMusic();
s = !0;
jsb.reflection.callStaticMethod("JSBridge", "showRewardvideoAd:withType:", e, a);
}
return new Promise(e => {
i = e;
});
});
};
e.rewardvideoAdCallback = function(e) {
console.log("rewardvideoAdCallback  " + e);
i && i(!0);
i = null;
};
e.preloadRewardVideo = function(e) {
o ? jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "preloadRewardVideo", "(Ljava/lang/String;)V", e) : t && jsb.reflection.callStaticMethod("JSBridge", "preloadRewardvideoAd:", e);
};
e.show233Ad = function(e) {
return n(this, void 0, void 0, function*() {
console.log("asdasdasd", "show233Ad", e, o);
if (o) jsb.reflection.callStaticMethod("com/hortor/creator/JSBridge", "show233Ad", "(Ljava/lang/String;)V", e); else if (t) {
cc.audioEngine.pauseMusic();
s = !0;
jsb.reflection.callStaticMethod("JSBridge", "show233Ad:withType:", e);
}
return new Promise(e => {
a = e;
});
});
};
e.ad233Callback = function(e, o) {
console.log("asdasdasd", "ad233Callback", e, o);
if ("onVideoReward" === e) {
a && a(!0);
a = null;
} else if ("onVideoClose" === e || "onError" === e) {
if (t && s) {
s = !1;
cc.audioEngine.resumeMusic();
}
} else if (e.startsWith("onVideoShowFail:")) {
if (t && s) {
s = !1;
cc.audioEngine.resumeMusic();
}
a && a(!1);
a = null;
}
};
})(i = o.JSBridge || (o.JSBridge = {}));
window.JSBridge = i;
cc._RF.pop();
}, {} ],
Joystick: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6e0ccPCO+NL3K2V02b4ZPW5", "Joystick");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Util"), {ccclass: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.bg = null;
this.handle = null;
this.isDynamic = !1;
this.maxR = 100;
this.triggerR = 10;
this.angleStep = 10;
this.curAngle = -1;
this.beginMove = !1;
this.touching = !1;
}
onLoad() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove2, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd2, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd2, this);
this.isDynamic && this.bg && (this.bg.active = !1);
}
onDisable() {
this.touching && this.onTouchEnd2(null);
}
update() {
this.beginMove && this.node.emit(i.TOUCHING, this.handle.position);
}
onTouchStart(e) {
let t = e.getLocation();
t = this.node.convertToNodeSpaceAR(t);
this.touching = !0;
if (this.isDynamic) {
if (this.bg) {
this.bg.active = !0;
this.bg.x = t.x;
this.bg.y = t.y;
}
} else this.dealStaticJoystick(t);
}
onTouchMove2(e) {
let t = this.node.convertToNodeSpaceAR(e.getStartLocation()), o = this.node.convertToNodeSpaceAR(e.getLocation());
if (this.isDynamic) {
let e = o.sub(t), n = e.mag();
n = a.Util.clamp(n, 0, this.maxR);
e.normalizeSelf().mulSelf(n);
this.handle.x = e.x;
this.handle.y = e.y;
let s = a.Util.angle(e);
s = Math.round(s / this.angleStep) * this.angleStep;
if (this.curAngle !== s) {
this.curAngle = s;
this.node.emit(i.ANGLE_CHANGE, s);
}
if (this.beginMove) {
if (n < this.triggerR) {
this.beginMove = !1;
this.node.emit(i.TOUCH_END);
}
} else if (n >= this.triggerR) {
this.beginMove = !0;
this.node.emit(i.TOUCH_BEGIN);
}
} else this.dealStaticJoystick(o);
}
onTouchEnd2(e) {
this.touching = !1;
if (this.isDynamic) {
this.bg && (this.bg.active = !1);
this.handle.position = cc.Vec2.ZERO;
this.beginMove = !1;
this.curAngle = -1;
this.node.emit(i.TOUCH_END);
} else this.dealStaticJoystick(cc.Vec2.ZERO);
}
dealStaticJoystick(e) {
let t = e.mag();
t = a.Util.clamp(t, 0, this.maxR);
e.normalizeSelf().mulSelf(t);
this.handle.x = e.x;
this.handle.y = e.y;
let o = a.Util.angle(e);
o = Math.round(o / this.angleStep) * this.angleStep;
if (this.curAngle !== o) {
this.curAngle = o;
this.node.emit(i.ANGLE_CHANGE, o);
}
if (this.beginMove) {
if (t < this.triggerR) {
this.beginMove = !1;
this.node.emit(i.TOUCH_END);
}
} else if (t >= this.triggerR) {
this.beginMove = !0;
this.node.emit(i.TOUCH_BEGIN);
}
}
};
l.ANGLE_CHANGE = "ANGLE_CHANGE";
l.TOUCH_BEGIN = "TOUCH_BEGIN";
l.TOUCHING = "TOUCHING";
l.TOUCH_END = "TOUCH_END";
n([ r(cc.Node) ], l.prototype, "bg", void 0);
n([ r(cc.Node) ], l.prototype, "handle", void 0);
n([ r ], l.prototype, "isDynamic", void 0);
n([ r ], l.prototype, "maxR", void 0);
n([ r ], l.prototype, "triggerR", void 0);
n([ r ], l.prototype, "angleStep", void 0);
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../Frame/Util": "Util"
} ],
KeyInput: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "48335Pdm5hCOJ09mm0Xj+pp", "KeyInput");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator, s = "W".charCodeAt(0), r = "S".charCodeAt(0), l = "A".charCodeAt(0), c = "D".charCodeAt(0), d = ("C".charCodeAt(0), 
"J".charCodeAt(0)), h = "K".charCodeAt(0), p = {
W: !1,
S: !1,
A: !1,
D: !1
}, u = new cc.Vec2();
let m = class {
Active(e) {
this._ctrl = e;
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
}
DeActive() {
this._ctrl = null;
cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
p.A = p.D = p.S = p.W = !1;
}
onKeyDown(e) {
e.keyCode !== s && e.keyCode !== l && e.keyCode !== r && e.keyCode !== c || (e.keyCode === s ? p.W = !0 : e.keyCode === r ? p.S = !0 : e.keyCode === l ? p.A = !0 : e.keyCode === c && (p.D = !0));
e.keyCode === h && this._ctrl.onTouchStartA();
e.keyCode === d && this._ctrl.onTouchStartB();
}
onKeyUp(e) {
e.keyCode !== s && e.keyCode !== l && e.keyCode !== r && e.keyCode !== c || (e.keyCode === s ? p.W = !1 : e.keyCode === r ? p.S = !1 : e.keyCode === l ? p.A = !1 : e.keyCode === c && (p.D = !1));
e.keyCode === h && this._ctrl.onTouchEndA();
e.keyCode === d && this._ctrl.onTouchEndB();
}
update() {
if (!this._ctrl) return;
const e = u;
e.set(cc.Vec2.ZERO);
p.W && e.y++;
p.S && e.y--;
p.A && e.x--;
p.D && e.x++;
this._ctrl.setMoveDir(e.normalizeSelf());
}
};
m = i([ n ], m);
o.default = m;
cc._RF.pop();
}, {} ],
LackCoinPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "22d8bvCrMdOlKSpdHSTbv3H", "LackCoinPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../Frame/AD"), l = e("../../Frame/CrossPlatform"), c = e("../../Frame/Panel"), d = e("../../Frame/Top"), h = e("../../Game/Hortor"), p = e("../../Game/OperationFlow"), u = e("../../Game/Player/CoinMng"), m = e("../../Game/Player/DynamicMng"), {ccclass: f, property: g} = cc._decorator;
let y = i = class extends c.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.cntLabel = null;
this.adBtn = null;
this.shareBtn = null;
this.gameData = null;
}
onLoad() {
super.onLoad();
this.adBtn.node.on(s.default.CLICK, this.onAdBtn, this);
this.shareBtn.node.on(s.default.CLICK, this.onShareBtn, this);
r.AD.preloadRewardVideo();
this.shareBtn.node.active = !1;
}
onAdBtn() {
r.AD.hasAD() ? r.AD.showVideoAd({
id: r.AdUnitId.Coin,
succ: () => a(this, void 0, void 0, function*() {
let e = yield u.default.Ins.requestAddCoinByAd();
if (e) {
p.OperationFlow.openRewards(e, () => {});
this.closePanel();
i.index++;
}
})
}) : d.default.showToast("暂无广告");
}
onShareBtn() {
if (!r.AD.hasAD()) {
d.default.showToast("已达最大次数限制");
return;
}
let e = {
shareType: "default",
success: () => a(this, void 0, void 0, function*() {
let e = yield u.default.Ins.requestAddCoinByAd();
if (e) {
p.OperationFlow.openRewards(e, () => {});
this.closePanel();
i.index++;
}
})
};
if (l.wx) {
let t = !m.DynamicMng.Ins.isInspectVersion();
h.Hortor.wxShare(e, t);
} else l.tt && l.tt.shareAppMessage(e);
}
setGameData(e) {
this.gameData = e;
}
};
y.index = 0;
n([ g(cc.Label) ], y.prototype, "titleLabel", void 0);
n([ g(cc.Label) ], y.prototype, "cntLabel", void 0);
n([ g(s.default) ], y.prototype, "adBtn", void 0);
n([ g(s.default) ], y.prototype, "shareBtn", void 0);
y = i = n([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/AD": "AD",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Hortor": "Hortor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/DynamicMng": "DynamicMng"
} ],
Ladder: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "546d2t2MoVEaYqzXytNfedB", "Ladder");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Util"), s = e("../CollisionEmiter"), r = e("../Player/Mng"), l = e("../World/Actor"), c = e("../World/Device"), d = e("../World/Tile"), h = e("../World/WorldNodeBody"), {ccclass: p, property: u} = cc._decorator;
new cc.Vec2();
let m = i = class extends c.default {
constructor() {
super(...arguments);
this.ladder = null;
this.content = null;
this._speed = 0;
}
get width() {
return this._boxCollider.size.width;
}
get height() {
return this._boxCollider.size.height;
}
onLoad() {
super.onLoad();
a.Util.makeBro(this.ladder, 0);
this._boxCollider = this.content.getComponent(cc.BoxCollider);
this.node.on(s.default.onCollisionEnter, this.onCollisionStay, this);
this.node.on(s.default.onCollisionStay, this.onCollisionStay, this);
this.node.on(s.default.onCollisionExit, this.onCollisionExit, this);
}
setCutting(e) {
if (this.content) {
let t = this.data.extra.cnt;
t > this.content.childrenCount && (t = this.content.childrenCount);
for (let o = 0; o < t; ++o) this.content.children[o].active = !e;
}
}
onCollisionStay(e, t) {
let o = e.getComponent(l.default);
if (o) {
let n = e.world.aabb, a = t.world.aabb, s = .5 * (n.xMin + n.xMax), r = s - 5, l = s + 5, c = n.yMin, d = c + 5;
if (r <= a.xMax && l >= a.xMin && c <= a.yMax && d >= a.yMin) {
o.enterCollider(h.WorldBodyColliderType.Ladder, t);
o.node.emit(i.INLADDER, this._speed);
}
}
}
onCollisionExit(e, t) {
let o = e.getComponent(l.default);
if (o) {
o.existCollider(h.WorldBodyColliderType.Ladder, t);
o.node.emit(i.OUTLADDER);
}
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
speed: 2,
cntx: 1,
cnty: 3
});
this.refresh(e, t);
}
refresh(e, t) {
let o = e.extra.cnty, i = e.extra.cntx;
a.Util.makeBro(this.ladder, i * o, (e, o) => {
let n = o % i, a = Math.floor(o / i), s = cc.v2(64 * n, 64 * a);
e.position = s;
let l = e.getComponent(cc.Sprite);
r.Mng.Ins.spriteMng.setDeviceSprite(l, t.textureName, 64);
});
let n = this._boxCollider.size;
n.width = 64 * e.extra.cntx;
n.height = 64 * e.extra.cnty;
this._boxCollider.size = n;
let s = this._boxCollider.offset;
s.x = .5 * n.width - 32;
s.y = .5 * n.height - 32;
this._boxCollider.offset = s;
this._speed = e.extra.speed * d.default.SIZE;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
speed: 2,
cntx: 1,
cnty: 3
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("速度(格/秒)", n.extra.speed, -999999, 999999, e => {
n.extra.speed = e;
});
e.addNumberEditBox("横向个数", n.extra.cntx, 1, 64, e => {
n.extra.cntx = e;
o && o.refresh(i, t);
});
e.addNumberEditBox("纵向个数", n.extra.cnty, 1, 64, e => {
n.extra.cnty = e;
o && o.refresh(i, t);
});
}
};
m.INLADDER = "INLADDER";
m.OUTLADDER = "OUTLADDER";
n([ u(cc.Node) ], m.prototype, "ladder", void 0);
n([ u(cc.Node) ], m.prototype, "content", void 0);
m = i = n([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../CollisionEmiter": "CollisionEmiter",
"../Player/Mng": "Mng",
"../World/Actor": "Actor",
"../World/Device": "Device",
"../World/Tile": "Tile",
"../World/WorldNodeBody": "WorldNodeBody"
} ],
LevelHelpPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ccbb3l/F9JAt73kG08zTD34", "LevelHelpPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.label = null;
this.okBtn = null;
}
onLoad() {
super.onLoad();
}
setData(e) {}
onOkBtn() {
this.closePanel();
}
};
i([ r(cc.Label) ], l.prototype, "label", void 0);
i([ r(n.default) ], l.prototype, "okBtn", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
LevelUpgradePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1b930HnuiFOJZiyP5vfGSV/", "LevelUpgradePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Panel"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
constructor() {
super(...arguments);
this.noUpgradeNode = null;
this.titleLabel = null;
this.lvlLabel = null;
this.addExpLabel = null;
this.needExpLabel = null;
this.upgradeNode = null;
this.addExpLabel2 = null;
this.oldLvlLabel = null;
this.newLvlLabel = null;
}
setData(e) {
this.noUpgradeNode.active = !1;
this.upgradeNode.active = !1;
this.titleLabel.string = `    <color=#EF657E>${e.incPlayCount}</color> Players played your game\n when you away，and <color=#EF657E>${e.incThumbCount}</color> likes you got.`;
if (e.oldLevel == e.level) {
this.noUpgradeNode.active = !0;
this.lvlLabel.string = `${e.level}`;
this.addExpLabel.string = `Exp +${e.incExp}`;
this.needExpLabel.string = `Need ${e.levelUpNeedExp} Exp to upgrade！`;
} else {
this.upgradeNode.active = !0;
this.addExpLabel2.string = `Exp +${e.incExp}`;
this.oldLvlLabel.string = `${e.oldLevel}`;
this.newLvlLabel.string = `${e.level}`;
this.upgradeNode.getComponent(cc.Animation).play();
}
}
onOkBtn() {
this.closePanel();
}
};
i([ s(cc.Node) ], r.prototype, "noUpgradeNode", void 0);
i([ s(cc.RichText) ], r.prototype, "titleLabel", void 0);
i([ s(cc.Label) ], r.prototype, "lvlLabel", void 0);
i([ s(cc.Label) ], r.prototype, "addExpLabel", void 0);
i([ s(cc.RichText) ], r.prototype, "needExpLabel", void 0);
i([ s(cc.Node) ], r.prototype, "upgradeNode", void 0);
i([ s(cc.Label) ], r.prototype, "addExpLabel2", void 0);
i([ s(cc.Label) ], r.prototype, "oldLvlLabel", void 0);
i([ s(cc.Label) ], r.prototype, "newLvlLabel", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Panel": "Panel"
} ],
LifeMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6daafg2/iRBYatsGn3m3Os9", "LifeMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.LifeMng = void 0;
const i = e("../../Frame/CrossPlatform");
class n {
constructor() {
this.max = 3;
this.map = new Map();
this.recoverTime = 9e5;
}
getLife(e) {
if (this.map.has(e)) return this.map.get(e);
{
let t = i.crossPlatform.getStorageSync("life" + e);
"" === t && (t = 3);
this.map.set(e, t);
return t;
}
}
setLife(e, t) {
this.map.set(e, t);
if (t == this.max) {
i.crossPlatform.removeStorageSync("life" + e);
i.crossPlatform.removeStorageSync("lifeStamp" + e);
} else i.crossPlatform.setStorageSync("life" + e, t);
t <= 0 && "" == i.crossPlatform.getStorageSync("lifeStamp" + e) && i.crossPlatform.setStorageSync("lifeStamp" + e, orange.TimeUtil.serverTime);
}
getLifeStamp(e) {
return i.crossPlatform.getStorageSync("lifeStamp" + e) || 0;
}
}
o.LifeMng = n;
n.Ins = new n();
cc._RF.pop();
}, {
"../../Frame/CrossPlatform": "CrossPlatform"
} ],
LinkAccountPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5c9fd4U3LxMa7llK9fqvqaF", "LinkAccountPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/NetworkMgr"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/UIColor"), p = e("../../Game/Hortor"), {ccclass: u, property: m} = cc._decorator;
let f = class extends l.default {
constructor() {
super(...arguments);
this.editBox = null;
this.tipLabel = null;
this.btnLink = null;
this.onSucc = null;
this.onGiveUp = null;
}
onLoad() {
super.onLoad();
this.btnLink.node.on(s.default.CLICK, this.onClickLink, this);
}
onCloseBtnTap() {
super.onCloseBtnTap();
this.onGiveUp && this.onGiveUp();
}
onClickLink() {
let e = this.editBox.string;
null != e && "" != e ? this.tipLabel.node.active ? c.default.ins.OpenPanelByName("MessageBox", t => {
t.label.string = "是否确认关联？\n关联后，将以抖音账号为主，当前帐号将被覆盖！";
t.setLeftBtn({
text: "是",
color: h.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
this.requestLink(e);
})
});
t.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
}) : this.requestLink(e) : d.default.showToast("密钥不能为空");
}
requestLink(e) {
return n(this, void 0, void 0, function*() {
let t = {
code: e,
info: p.Hortor.loginAuthInfo,
platform: p.Hortor.loginPlatform
}, o = yield r.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_BindRole,
params: t
}, a.Game_RBindRole);
if (o && 0 == o.errorCode) {
this.closePanel();
this.onSucc && this.onSucc();
} else d.default.showToast("关联失败");
});
}
};
i([ m(cc.EditBox) ], f.prototype, "editBox", void 0);
i([ m(cc.Label) ], f.prototype, "tipLabel", void 0);
i([ m(s.default) ], f.prototype, "btnLink", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Game/Hortor": "Hortor"
} ],
LoadPoint: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ebf61uWTP1BS5WBZFyOcBK5", "LoadPoint");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/SceneManager"), s = e("../../GameData/GameTypeDefine"), r = e("../Player/Mng"), l = e("../Player/TriggerMng"), c = e("../World/Device"), d = e("../World/Interactable"), {ccclass: h, property: p} = cc._decorator;
let u = i = class extends c.default {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
super.onLoad();
this.node.on(d.default.INTERACT, this.onInteract, this);
}
setData(e, t) {
super.setData(e, t);
e = this.data;
r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
scale: 1,
onInteract: [ {
act: s.TriggerAct.Load
} ]
});
let o = this.getComponent(d.default);
o && (o.canInteract = !0);
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
}
onInteract() {
l.default.Ins.emitTrigger(this.data.extra.onInteract, this.node);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
onInteract: [ {
act: s.TriggerAct.Save
} ]
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addButton("存档说明：", "查看", () => {
a.default.ins.OpenPanelByName("AboutPanel", e => {
e.setData("存档说明", "\n    1.进入游戏不会自动读档，推荐在你的游戏大厅内放置一个读档点。\n    2.读档后，将会直接进入上次所在的地图。\n                ");
});
});
e.addTrigger("点击互动时：", n.extra.onInteract, !0);
}
};
n([ p({
override: !0,
type: cc.Sprite
}) ], u.prototype, "sprite", void 0);
u = i = n([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device",
"../World/Interactable": "Interactable"
} ],
Local: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "950499Uz9hIxoga1JxXvgc5", "Local");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Local = void 0;
const i = e("./CrossPlatform");
(function(e) {
let t = new Map(), o = [];
e.Get = function(e) {
if (t.has(e)) return t.get(e);
{
let o = i.crossPlatform.getStorageSync(e);
t.set(e, o);
return o;
}
};
e.GetAsync = function(e, o) {
t.has(e) ? o(t.get(e)) : i.crossPlatform.getStorage({
key: e,
success: i => {
t.set(e, i);
o(i);
},
fail: () => {
o("");
}
});
};
e.Set = function(e, i) {
t.set(e, i);
o.indexOf(e) < 0 && o.push(e);
n();
};
function n() {
for (let e = 0; e < o.length; e++) {
let n = o[e], a = t.get(n);
i.crossPlatform.setStorage({
key: n,
data: a
});
}
o = [];
}
e.Save = n;
e.setDirty = function(e) {
o.indexOf(e) < 0 && o.push(e);
n();
};
})(o.Local || (o.Local = {}));
cc._RF.pop();
}, {
"./CrossPlatform": "CrossPlatform"
} ],
LockGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3b48dpHnTJFPbrwHQ5xQ+s0", "LockGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/Top"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(n.default.CLICK, this.onClick, this);
}
setData(e) {
this.label.string = e.str;
}
onClick() {
s.default.showToast(this.label.string);
}
};
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Top": "Top"
} ],
LockGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "12b3dF+aP9HP5p5t2+W05NC", "LockGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/Top"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(n.default.CLICK, this.onClick, this);
}
setData(e) {
this.label.string = e.str;
}
onClick() {
s.default.showToast(this.label.string);
}
};
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Top": "Top"
} ],
LoginCreateAccountPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "af949Y/hMhFzpUtFCWJDc6d", "LoginCreateAccountPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/CrossPlatform"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Panel"), {ccclass: d, property: h} = cc._decorator;
let p = class extends c.default {
constructor() {
super(...arguments);
this.editBox = null;
this.tipLabel = null;
this.createBtn = null;
this.onCreate = null;
this.onCancel = null;
this.accountCheckOk = !0;
}
onLoad() {
super.onLoad();
this.createBtn.node.on(s.default.CLICK, this.onClickCreateBtn, this);
this.editBox.node.on("text-changed", this.onEditing, this);
this.tipLabel.node.active = !1;
this.updateBtnStatus();
}
onCloseBtnTap() {
super.onCloseBtnTap();
this.onCancel && this.onCancel();
}
onClickCreateBtn() {
this.createAccount(this.editBox.string);
}
onEditing() {
this.unscheduleAllCallbacks();
if (this.editBox.string.length < 5 || this.editBox.string.length > 16) {
this.accountCheckOk = !1;
this.updateTipLabel("Username length must be 5-16", !0);
this.updateBtnStatus();
} else if (new RegExp(/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/).test(this.editBox.string)) {
this.updateTipLabel("", !1);
this.scheduleOnce(() => {
this.checkAccount(this.editBox.string);
}, .5);
} else {
this.accountCheckOk = !1;
this.updateTipLabel("Username must start with a letter and can only contain letters, numbers and '_'.", !0);
this.updateBtnStatus();
}
}
createAccount(e) {
return n(this, void 0, void 0, function*() {
this.unscheduleAllCallbacks();
yield this.checkAccount(e);
if (!this.accountCheckOk) return;
let t = {
account: e
}, o = (yield l.NetIns.sendHttpAsync({
cmd: a.CMDS.Login_CreateAccount,
params: t
})).decBody;
if (o && o.oTP && o.account) {
r.crossPlatform.setStorageSync("lastLoginOTP", o.oTP);
r.crossPlatform.setStorageSync("lastLoginAccount", o.account);
this.closePanel();
this.onCreate && this.onCreate({
account: o.account,
otp: o.oTP,
password: ""
});
}
});
}
checkAccount(e) {
return n(this, void 0, void 0, function*() {
if (this.editBox.string.length < 5 || this.editBox.string.length > 16) {
this.accountCheckOk = !1;
this.updateTipLabel("Username length must be 5-16", !0);
this.updateBtnStatus();
return;
}
if (!new RegExp(/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/).test(this.editBox.string)) {
this.accountCheckOk = !1;
this.updateTipLabel("Username must start with a letter and can only contain letters, numbers and '_'.", !0);
this.updateBtnStatus();
return;
}
let t = {
account: e
}, o = (yield l.NetIns.sendHttpAsync({
cmd: a.CMDS.Login_CheckAccount,
params: t
})).decBody;
this.accountCheckOk = o && o.ok;
this.updateTipLabel(this.accountCheckOk ? "Available" : "Already taken", !this.accountCheckOk);
this.updateBtnStatus();
});
}
updateTipLabel(e, t) {
this.tipLabel.node.active = !0;
if (t) {
this.tipLabel.string = e;
this.tipLabel.node.color = cc.color(239, 101, 126);
} else {
this.tipLabel.string = e;
this.tipLabel.node.color = cc.color(110, 239, 153);
}
}
updateBtnStatus() {}
};
i([ h(cc.EditBox) ], p.prototype, "editBox", void 0);
i([ h(cc.Label) ], p.prototype, "tipLabel", void 0);
i([ h(s.default) ], p.prototype, "createBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel"
} ],
LoginPanel2: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c89b6neIXZOPoYgJLRbc7tW", "LoginPanel2");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/Util"), h = e("../../Game/Hortor"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.guestBtn = null;
this.mobileBtn = null;
this.userAgreeLine = null;
this.userAgreeBtn = null;
this.userPrivacyBtn = null;
this.toggle = null;
this.call = null;
this._clickTimer = 0;
}
onLoad() {
super.onLoad();
this.guestBtn.node.on(a.default.CLICK, this.onGuestBtn, this);
this.mobileBtn.node.on(a.default.CLICK, this.onMobileBtn, this);
this.userAgreeBtn.node.on(a.default.CLICK, this.onUserAgreeBtn, this);
this.userPrivacyBtn.node.on(a.default.CLICK, this.onUserPrivacyBtn, this);
this.toggle.node.on(s.default.STATE_CHANGE, this.onToggleChange, this);
}
isInClickCd() {
return this._clickTimer > cc.director.getTotalTime();
}
resetClickCd() {
this._clickTimer = cc.director.getTotalTime() + 2e3;
}
clearClickCd() {
this._clickTimer = 0;
}
onToggleChange(e) {
e && h.Hortor.InitAppSDK();
}
onGuestBtn() {
this.onLogin(h.PlatType.Visitor);
}
onMobileBtn() {
this.onLogin(h.PlatType.Mobile);
}
onLogin(e) {
return n(this, void 0, void 0, function*() {
if (this.isInClickCd()) return;
if (!this.toggle.isChecked) {
c.default.showToast("请先同意《用户协议》和《隐私政策》");
return;
}
this.resetClickCd();
let t = this.call;
if (e == h.PlatType.Mobile) l.default.ins.OpenPanelByName("MobileLoginPanel", o => {
o.call = o => {
t && t(e, o);
this.closePanel();
};
}); else {
this.closePanel();
t && t(e);
}
});
}
onUserAgreeBtn() {
return n(this, void 0, void 0, function*() {
let e = yield d.Util.loadBundleRes("Text/UserAgree", cc.TextAsset);
l.default.ins.Enter("DocumentScene", t => {
t.setData("用户协议", e.text);
}, l.ShiftAnima.moveLeftShift);
});
}
onUserPrivacyBtn() {
return n(this, void 0, void 0, function*() {
let e = yield d.Util.loadBundleRes("Text/UserPrivacy", cc.TextAsset);
l.default.ins.Enter("DocumentScene", t => {
t.setData("隐私政策", e.text);
}, l.ShiftAnima.moveLeftShift);
});
}
};
i([ u(a.default) ], m.prototype, "guestBtn", void 0);
i([ u(a.default) ], m.prototype, "mobileBtn", void 0);
i([ u(cc.Node) ], m.prototype, "userAgreeLine", void 0);
i([ u(a.default) ], m.prototype, "userAgreeBtn", void 0);
i([ u(a.default) ], m.prototype, "userPrivacyBtn", void 0);
i([ u(s.default) ], m.prototype, "toggle", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Hortor": "Hortor"
} ],
LoginPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e3dd9BjA+1C+JOVyYlAeR5b", "LoginPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/Util"), h = e("../../Game/GameEnv"), p = e("../../Game/Hortor"), {ccclass: u, property: m} = cc._decorator;
let f = class extends r.default {
constructor() {
super(...arguments);
this.guestBtn = null;
this.wechatBtn = null;
this.qqBtn = null;
this.ttBtn = null;
this.bigQQBtn = null;
this.bigAppleBtn = null;
this.userAgreeLine = null;
this.userAgreeBtn = null;
this.userPrivacyBtn = null;
this.toggle = null;
this.call = null;
this._clickTimer = 0;
}
onLoad() {
super.onLoad();
this.toggle.node.on(s.default.STATE_CHANGE, this.onToggleChange, this);
this.bigQQBtn.node.on(a.default.CLICK, this.onQQBtn, this);
this.bigAppleBtn.node.on(a.default.CLICK, this.onAppleBtn, this);
this.guestBtn.node.on(a.default.CLICK, this.onGuestBtn, this);
this.wechatBtn.node.on(a.default.CLICK, this.onWechatBtn, this);
this.qqBtn.node.on(a.default.CLICK, this.onQQBtn, this);
this.ttBtn.node.on(a.default.CLICK, this.onTTBtn, this);
this.userAgreeBtn.node.on(a.default.CLICK, this.onUserAgreeBtn, this);
this.userPrivacyBtn.node.on(a.default.CLICK, this.onUserPrivacyBtn, this);
this.bigAppleBtn.node.active = p.Hortor.platformSysBigType == p.PlatformSysBigType.IOS;
this.bigQQBtn.node.active = !this.bigAppleBtn.node.active;
this.qqBtn.node.active = this.bigAppleBtn.node.active;
"yingyongbao" == h.gameEnv.androidChannel && (this.ttBtn.node.active = !1);
}
isInClickCd() {
return this._clickTimer > cc.director.getTotalTime();
}
resetClickCd() {
this._clickTimer = cc.director.getTotalTime() + 2e3;
}
clearClickCd() {
this._clickTimer = 0;
}
onToggleChange(e) {
e && p.Hortor.InitAppSDK();
}
onLogin(e) {
if (!this.isInClickCd()) if (this.toggle.isChecked) {
this.resetClickCd();
this.closePanel();
this.call && this.call(e);
} else c.default.showToast("请先同意《用户协议》和《隐私政策》");
}
onGuestBtn() {
this.onLogin(p.PlatType.Visitor);
}
onAppleBtn() {
this.onLogin(p.PlatType.Apple);
}
onWechatBtn() {
this.onLogin(p.PlatType.WeChat);
}
onQQBtn() {
this.onLogin(p.PlatType.QQ);
}
onTTBtn() {
this.onLogin(p.PlatType.TT);
}
onUserAgreeBtn() {
return n(this, void 0, void 0, function*() {
let e = yield d.Util.loadBundleRes("Text/UserAgree", cc.TextAsset);
l.default.ins.Enter("DocumentScene", t => {
t.setData("用户协议", e.text);
}, l.ShiftAnima.moveLeftShift);
});
}
onUserPrivacyBtn() {
return n(this, void 0, void 0, function*() {
let e = yield d.Util.loadBundleRes("Text/UserPrivacy", cc.TextAsset);
l.default.ins.Enter("DocumentScene", t => {
t.setData("隐私政策", e.text);
}, l.ShiftAnima.moveLeftShift);
});
}
};
i([ m(a.default) ], f.prototype, "guestBtn", void 0);
i([ m(a.default) ], f.prototype, "wechatBtn", void 0);
i([ m(a.default) ], f.prototype, "qqBtn", void 0);
i([ m(a.default) ], f.prototype, "ttBtn", void 0);
i([ m(a.default) ], f.prototype, "bigQQBtn", void 0);
i([ m(a.default) ], f.prototype, "bigAppleBtn", void 0);
i([ m(cc.Node) ], f.prototype, "userAgreeLine", void 0);
i([ m(a.default) ], f.prototype, "userAgreeBtn", void 0);
i([ m(a.default) ], f.prototype, "userPrivacyBtn", void 0);
i([ m(s.default) ], f.prototype, "toggle", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor"
} ],
LoginScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3817fhnFvhLmIAMskQyIm23", "LoginScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Scene"), s = e("../../Frame/SceneManager"), r = e("../../Game/Hortor"), l = e("../../Frame/CrossPlatform"), c = e("../../Game/Player/Mng"), d = e("../../Game/GameEnv"), h = e("../../Frame/Util"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/CreditMng"), m = e("../../Frame/Top"), f = e("../../Frame/ScreenRect"), g = e("../../TGA"), y = e("../../../scripts/_autogen/cmd/cmd"), v = e("../../Frame/NetworkMgr"), C = e("../../Role"), _ = e("../../Game/Player/CollectionMng"), S = e("../../Game/Player/FollowMng"), I = e("../../Frame/FightSystem"), G = e("../../Frame/Music"), T = e("../../Frame/Sound"), b = e("../../Frame/Vibrate"), M = e("../../../scripts/_autogen/data/data"), P = e("../../Game/Player/CoinMng"), D = e("../../Game/Player/ShopMng"), w = e("../../Game/Player/MsgMng"), B = e("../../Frame/UIColor"), R = e("../../Game/Player/GameCellDataMng"), x = e("../../Game/Player/DiscoverMng"), L = e("../../Frame/AD"), k = e("../../Game/Player/RcmdMng"), F = e("../../Game/Player/WsMng"), N = e("../../Game/Player/GuideMng"), A = e("../../Game/Player/ColorMng"), O = e("../../Game/Player/GiftRankMng"), U = e("../../CustomUI/Button"), E = e("../../Frame/GameRecorder"), {ccclass: j, property: H, menu: W} = cc._decorator;
let V = class extends a.default {
constructor() {
super(...arguments);
this.versionLabel = null;
this.loadingLabel = null;
this.startBtn = null;
this.accountBtn = null;
this.earth = null;
this.gmRoleId = 0;
this.gmSecret = "";
}
onLoad() {
this.startBtn.node.on(U.default.CLICK, this.onStartBtn, this);
this.accountBtn.node.on(U.default.CLICK, this.onAccountBtn, this);
this.startBtn.node.active = !1;
this.accountBtn.node.active = !1;
cc.dynamicAtlasManager.enabled = !1;
CC_DEV = !1;
this.loadingLabel.string = "3";
this.earth && this.earth.runAction(cc.repeatForever(cc.sequence(cc.rotateBy(30, 360), cc.rotateBy(0, 0))));
}
onDestroy() {
this.startBtn.node.off(U.default.CLICK, this.onStartBtn, this);
this.accountBtn.node.off(U.default.CLICK, this.onAccountBtn, this);
}
onStartBtn() {
return n(this, void 0, void 0, function*() {
s.default.ins.OpenPanelByName("LoginCreateAccountPanel", e => {
e.onCreate = e => {
this.loginFlow(r.PlatType.Visitor, e);
};
});
});
}
onAccountBtn() {
return n(this, void 0, void 0, function*() {
s.default.ins.OpenPanelByName("LoginWithAccountPanel", e => {
e.onLogin = e => {
this.loginFlow(r.PlatType.Visitor, e);
};
});
});
}
start() {
return n(this, void 0, void 0, function*() {
this.versionLabel.string = "v" + d.gameEnv.creatorVersion;
yield r.Hortor.initJSBridge();
r.Hortor.initChannel();
I.FightSystem.init();
c.Mng.switchMine();
F.default.Ins.init();
E.default.init();
this.loadSetting();
yield orange.startup({
debug: !1,
url: d.gameEnv.urlRoot
});
r.Hortor.platformUid = l.crossPlatform.getStorageSync("platformUid");
r.Hortor.bindPlatformUIdMap = l.crossPlatform.getStorageSync("bindPlatformUIdMap") || {};
r.Hortor.bindPlatformUId = r.Hortor.bindPlatformUIdMap[r.Hortor.platformUid] || "";
r.Hortor.loginPlatform = "thecanvas";
l.tt ? r.Hortor.loginPlatform = "hortor-tt" : l.wx ? r.Hortor.loginPlatform = "hortor" : r.Hortor.isApp() && (r.Hortor.loginPlatform = "hortor-native");
this.openLoginPanel();
});
}
openLoginPanel() {
return n(this, void 0, void 0, function*() {
if (r.Hortor.isMiniGame()) {
this.checkUpdateMiniGame();
r.Hortor.InitMiniSDK();
this.loginFlow(r.PlatType.None, null);
} else if (r.Hortor.isApp()) {
let e = r.PlatType.Visitor, t = l.crossPlatform.getStorageSync("lastLoginSelectPlat");
if (t) {
e = r.PlatType[t];
yield r.Hortor.InitAppSDK();
if (yield this.checkUpdateApp()) return;
yield this.loginFlow(e, null);
} else r.Hortor.isMobileLogin ? s.default.ins.OpenPanelByName("LoginPanel2", e => {
e.call = (e, t) => n(this, void 0, void 0, function*() {
yield this.loginFlow(e, t);
});
}) : s.default.ins.OpenPanelByName("LoginPanel", e => {
e.call = e => n(this, void 0, void 0, function*() {
yield this.loginFlow(e, null);
});
});
} else {
let e = l.crossPlatform.getStorageSync("lastLoginOTP"), t = l.crossPlatform.getStorageSync("lastLoginAccount");
if (e && t) this.loginFlow(r.PlatType.TheCanvas, {
otp: e,
account: t,
password: ""
}); else {
this.startBtn.node.active = !0;
this.accountBtn.node.active = !0;
}
}
});
}
loginFlow(e, t) {
return n(this, void 0, void 0, function*() {
this.loadingLabel.enable = !0;
this.loadingLabel.string = "初始化";
yield this.checkSwitch();
this.loadingLabel.string = "登录中.";
let o = yield this.platformLogin(e, t);
if (!o) return;
this.loadingLabel.string = "登录中..";
if (!(yield this.orangeLogin(o))) return;
this.loadingLabel.string = "登录中...";
let i = yield this.roleLogin();
yield this.checkAdGM();
s.default.ins.Enter("HomeScene", e => {
e.checkPanel(i);
L.AD.preloadRewardVideo();
});
l.crossPlatform.setStorageSync("lastLoginSelectPlat", r.PlatType[e]);
l.crossPlatform.setStorageSync("platformUid", r.Hortor.platformUid);
});
}
checkSwitch() {
return n(this, void 0, void 0, function*() {
try {
let e = yield r.Hortor.checkSwitches([ "envIsReview", "isWxReviewCity" ]);
if (e) {
console.log("checkSwitches", e);
let t = !e.envIsReview, o = e.isWxReviewCity;
d.InitGameEnv(t, o);
} else d.InitGameEnv(!0, !1);
} catch (e) {
d.InitGameEnv(!0, !1);
}
});
}
platformLogin(e, t) {
return n(this, void 0, void 0, function*() {
let o = null;
if (r.Hortor.isApp()) {
HAPP.setTGAUserAccountId({
userAccountId: r.Hortor.bindPlatformUId,
isForce: !!r.Hortor.bindPlatformUId
});
if (e == r.PlatType.Mobile) {
let e = yield r.Hortor.loginWithMobile(t);
if (!e) {
this.openLoginPanel();
return null;
}
o = JSON.stringify(e);
} else {
let t = yield r.Hortor.loginApp(e);
if (!t) {
this.openLoginPanel();
return null;
}
o = JSON.stringify(t);
}
} else if (r.Hortor.hasMiniGameSdk) {
let e = yield r.Hortor.loginMiniGame();
if (!e) {
this.openLoginPanel();
return null;
}
o = JSON.stringify(e);
} else {
let e = new M.CDAccountLoginInfo();
e.account = t.account;
e.oTP = t.otp;
e.password = t.password;
o = JSON.stringify(e);
}
return o;
});
}
orangeLogin(e) {
return n(this, void 0, void 0, function*() {
let t = null;
r.Hortor.loginAuthInfo = e;
if (this.gmRoleId > 0) {
let o = {
platform: r.Hortor.loginPlatform,
info: e,
roleId: this.gmRoleId,
secret: this.gmSecret
}, i = yield v.NetIns.sendHttpAsync({
cmd: y.CMDS.Login_GMAuthUserSingle,
params: o
});
if (i.code) return !1;
t = i.decBody;
} else {
let o = {
platform: r.Hortor.loginPlatform,
info: e,
isAppVisitor: r.Hortor.isApp() && r.Hortor.isPlatformVisitorLogin,
clientVersion: d.gameEnv.creatorVersion,
visitorUId: r.Hortor.distinctId
}, i = yield v.NetIns.sendHttpAsync({
cmd: y.CMDS.Login_AuthUserSingle,
params: o
});
if (i.code) {
switch (i.code) {
case 20002:
m.default.showToast("Username does not exist!");
break;

case 20004:
m.default.showToast("Wrong Password!");
}
return !1;
}
if (i.decBody.ext) {
let e = JSON.parse(i.decBody.ext);
l.crossPlatform.setStorageSync("lastLoginAccount", e.account);
l.crossPlatform.setStorageSync("lastLoginOTP", e.oTP);
l.crossPlatform.setStorageSync("isSetPassword", !!e.isSetPassword);
}
t = i.decBody;
}
r.Hortor.linkAccountType = r.PlatType.None;
if (t && t.bindInfo) {
t.bindInfo.bindType == M.GDBindType.tikTok ? r.Hortor.linkAccountType = r.PlatType.TT : t.bindInfo.bindType == M.GDBindType.wechat ? r.Hortor.linkAccountType = r.PlatType.WeChat : t.bindInfo.bindType == M.GDBindType.qQ ? r.Hortor.linkAccountType = r.PlatType.QQ : t.bindInfo.bindType == M.GDBindType.apple && (r.Hortor.linkAccountType = r.PlatType.Apple);
t.bindPlatformUId && "" != t.bindPlatformUId && (r.Hortor.bindPlatformUId = t.bindPlatformUId);
}
if (r.Hortor.isApp()) {
r.Hortor.bindPlatformUIdMap[r.Hortor.platformUid] = r.Hortor.bindPlatformUId;
l.crossPlatform.setStorageSync("bindPlatformUIdMap", r.Hortor.bindPlatformUIdMap);
HAPP.setTGAUserAccountId({
userAccountId: r.Hortor.bindPlatformUId,
isForce: !!r.Hortor.bindPlatformUId
});
}
let o = d.gameEnv.urlRoot + "/agent";
o = cc.sys.platform != cc.sys.ANDROID && d.gameEnv.useWss ? o.replace("https", "wss").replace("http", "wss") : o.replace("https", "ws").replace("http", "ws");
yield v.NetIns.connect(t.roleToken, orange.Encoding.LX, {
role: null
}, o);
v.NetIns.watchNetWork();
return !0;
});
}
roleLogin() {
return n(this, void 0, void 0, function*() {
let e = null;
if (this.gmRoleId > 0) {
let t = {
roleId: this.gmRoleId,
secret: this.gmSecret
};
e = yield v.NetIns.SendCmdAsync({
cmd: y.CMDS.Game_GMLogin,
params: t
}, y.Game_RLogin);
} else {
let t = {
channel: r.Hortor.channel
};
e = yield v.NetIns.SendCmdAsync({
cmd: y.CMDS.Game_Login,
params: t
}, y.Game_RLogin);
}
console.log("roleLogin: " + e);
if (!e) return new Promise(e => {
this.scheduleOnce(() => n(this, void 0, void 0, function*() {
e(this.roleLogin());
}), 3);
});
p.DynamicMng.Ins.init(e.dynamicConfig);
C.default.Ins.init(e.role);
c.Mng.initMine(e);
u.CreditMng.Ins.credit = e.role.creditScore;
_.CollectionMng.Ins.init(e.role);
O.GiftRankMng.Ins.checkVersion(e.giftCfgVersion);
S.FollowMng.Ins.followIds = e.role.follows || [];
P.default.Ins.setCoin(e.role.coin);
D.default.Ins.myGoodsIds = e.role.goodsIds || [];
C.default.Ins.gameSlotUnlockLvls = e.gameSlotUnlockLvls;
C.default.Ins.goodsSlotUnlockLvls = e.goodsSlotUnlockLvls;
w.MsgMng.Ins.newCommentCnt = e.newCommentCnt || 0;
S.FollowMng.Ins.newFansCnt = e.newFansCnt || 0;
w.MsgMng.Ins.newAggregateMsgCnt = e.newAggregateMsgCnt || 0;
L.AD.addCoinByAdvertCnt = e.addCoinByAdvertCnt || 0;
N.default.Ins.completeTaskIds = e.role.completeTaskIds;
N.default.Ins.init();
A.ColorMng.Ins.customColors = e.role.customColors;
if (p.DynamicMng.Ins.isInspectVersion()) {
S.FollowMng.Ins.followIds = [];
_.CollectionMng.Ins.ids = [];
C.default.Ins.role.follows = [];
C.default.Ins.role.fansCount = 0;
}
if (e.newGameDatas) {
x.default.Ins.freshGames = e.newGameDatas;
for (let t = 0; t < e.newGameDatas.length; t++) {
let o = e.newGameDatas[t];
R.default.Ins.cache.set(o.id, o);
}
}
e.followGameDatas && (x.default.Ins.followGameDatas = e.followGameDatas);
k.default.Ins.startUpdate();
g.TGA.track("login");
return e;
});
}
checkAdGM() {
return n(this, void 0, void 0, function*() {
if (!p.DynamicMng.Ins.isGmPlayer()) return;
let e = yield h.Util.loadBundleRes("Prefab/GM"), t = cc.instantiate(e);
f.default.Ins.node.addChild(t);
});
}
loadSetting() {
let e = l.crossPlatform.getStorageSync("setting");
console.log("setting");
if (e) {
G.default.volume = .5;
T.Sound.volume = .5;
b.Vibrate.enable = !0;
void 0 !== e.music && (G.default.volume = e.music);
void 0 !== e.sound && (T.Sound.volume = e.sound);
void 0 !== e.vibrate && (b.Vibrate.enable = e.vibrate);
}
}
checkUpdateMiniGame() {
let e = l.systemInfo.SDKVersion;
if (h.Util.compareVersion(e, "1.9.0") < 0) {
console.log("基础库不支持更新检查");
return;
}
let t = l.crossPlatform.getUpdateManager();
t.onCheckForUpdate(e => {
const {hasUpdate: t} = e;
t && m.default.showToast("即将有更新请留意");
});
t.onUpdateReady(() => {
l.crossPlatform.showModal({
title: "更新提示",
content: "新版本准备好了，点击开始吧！",
showCancel: !1,
success: e => {
e.confirm && t.applyUpdate();
}
});
});
t.onUpdateFailed(() => n(this, void 0, void 0, function*() {
m.default.showToast("更新失败，请重启后再试!");
}));
}
checkUpdateApp() {
return new Promise(e => n(this, void 0, void 0, function*() {
let t = {
version: d.gameEnv.creatorVersion,
channel: r.Hortor.channel
}, o = (yield v.NetIns.sendHttpAsync({
cmd: y.CMDS.Login_GetAppUpdateInfo,
params: t
})).decBody;
if (o) {
console.log("Login_GetAppUpdateInfo", o.find, d.gameEnv);
o.isForceUpdate ? s.default.ins.OpenPanelByName("DownloadNewVerPanel", t => {
t.setData(o.url);
t.callComplete = () => {
e(!0);
};
}) : h.Util.compareVersion(o.version, d.gameEnv.creatorVersion) > 0 ? s.default.ins.OpenPanelByName("MessageBox", t => {
t.label.string = "发现新版本";
t.closeBtn.node.active = !1;
t.setLeftBtn({
text: "关闭",
color: B.UIColor.blue,
call: () => {
e(!1);
}
});
t.setRightBtn({
text: "更新",
color: B.UIColor.green,
call: () => {
s.default.ins.OpenPanelByName("DownloadNewVerPanel", t => {
t.setData(o.url);
t.callComplete = () => {
e(!0);
};
});
}
});
}) : e(!1);
} else e(!1);
}));
}
};
i([ H(cc.Label) ], V.prototype, "versionLabel", void 0);
i([ H(cc.Label) ], V.prototype, "loadingLabel", void 0);
i([ H(U.default) ], V.prototype, "startBtn", void 0);
i([ H(U.default) ], V.prototype, "accountBtn", void 0);
i([ H(cc.Node) ], V.prototype, "earth", void 0);
V = i([ j, W("场景/LoginScene") ], V);
o.default = V;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../Frame/AD": "AD",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/FightSystem": "FightSystem",
"../../Frame/GameRecorder": "GameRecorder",
"../../Frame/Music": "Music",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Sound": "Sound",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Frame/Vibrate": "Vibrate",
"../../Game/GameEnv": "GameEnv",
"../../Game/Hortor": "Hortor",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/ColorMng": "ColorMng",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/DiscoverMng": "DiscoverMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/FollowMng": "FollowMng",
"../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../Game/Player/GiftRankMng": "GiftRankMng",
"../../Game/Player/GuideMng": "GuideMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/MsgMng": "MsgMng",
"../../Game/Player/RcmdMng": "RcmdMng",
"../../Game/Player/ShopMng": "ShopMng",
"../../Game/Player/WsMng": "WsMng",
"../../Role": "Role",
"../../TGA": "TGA"
} ],
LoginWithAccountPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eaf36oH8yVI6LAv/yE4p/KM", "LoginWithAccountPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.editBoxUsername = null;
this.editBoxPassword = null;
this.tipLabel = null;
this.loginBtn = null;
this.onLogin = null;
this.onCancel = null;
this.passwordIsOk = !1;
this.usernameIsOk = !1;
}
onLoad() {
super.onLoad();
this.loginBtn.node.on(n.default.CLICK, this.onClickLoginBtn, this);
this.editBoxPassword.node.on("text-changed", this.onEditingPassword, this);
this.editBoxUsername.node.on("text-changed", this.onEditingUserName, this);
this.tipLabel.node.active = !1;
}
onCloseBtnTap() {
super.onCloseBtnTap();
this.onCancel && this.onCancel();
}
onEditingPassword() {
if (this.editBoxPassword.string.length < 6 || this.editBoxPassword.string.length > 18) {
this.passwordIsOk = !1;
this.updateTipLabel("Password length must be 6-18", !0);
} else if (new RegExp(/^[a-zA-Z]\w{5,17}$/).test(this.editBoxPassword.string)) {
this.passwordIsOk = !0;
this.updateTipLabel("", !1);
} else {
this.passwordIsOk = !1;
this.updateTipLabel("Password must start with a letter and can only contain letters, numbers and '_'.", !0);
}
}
onEditingUserName() {
if (this.editBoxUsername.string.length < 5 || this.editBoxUsername.string.length > 16) {
this.passwordIsOk = !1;
this.updateTipLabel("Username length must be 5-16", !0);
} else if (new RegExp(/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/).test(this.editBoxUsername.string)) {
this.usernameIsOk = !0;
this.updateTipLabel("", !1);
} else {
this.usernameIsOk = !1;
this.updateTipLabel("Username must start with a letter and can only contain letters, numbers and '_'.", !0);
}
}
onClickLoginBtn() {
if (this.editBoxUsername.string.trim()) if (this.editBoxPassword.string) {
if (this.passwordIsOk && this.usernameIsOk) {
this.closePanel();
this.onLogin && this.onLogin({
account: this.editBoxUsername.string,
otp: "",
password: this.editBoxPassword.string
});
}
} else this.updateTipLabel("Password cannot be empty", !0); else this.updateTipLabel("Username cannot be empty", !0);
}
updateTipLabel(e, t) {
this.tipLabel.node.active = !0;
if (t) {
this.tipLabel.string = e;
this.tipLabel.node.color = cc.color(239, 101, 126);
} else {
this.tipLabel.string = e;
this.tipLabel.node.color = cc.color(110, 239, 153);
}
}
};
i([ r(cc.EditBox) ], l.prototype, "editBoxUsername", void 0);
i([ r(cc.EditBox) ], l.prototype, "editBoxPassword", void 0);
i([ r(cc.Label) ], l.prototype, "tipLabel", void 0);
i([ r(n.default) ], l.prototype, "loginBtn", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
Lurker: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "31695E612FGhZUgitUHn2cr", "Lurker");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/Damager"), r = e("../../GameData/GameTypeDefine"), l = e("../CollisionEmiter"), c = e("../Player/Mng"), d = e("../Player/TriggerMng"), h = e("../World/Device"), {ccclass: p, property: u} = cc._decorator;
let m = i = class extends h.default {
constructor() {
super(...arguments);
this.sprite = null;
this.damager = null;
this.collider = null;
this.timer = 0;
this.showing = !0;
}
onLoad() {
super.onLoad();
this.node.on(l.default.onCollisionEnter, this.onCollisionEnter, this);
this.damager = this.sprite.getComponent(s.default);
this.collider = this.sprite.getComponent(cc.Collider);
}
update(e) {
if (!this.world.playing) return;
this.timer += e;
let t = this.shouldShow(this.timer);
t != this.showing && (t ? this.show() : this.hide());
}
onCollisionEnter(e, t) {
this.world.playing && this.isHeroActor(e) && d.default.Ins.emitTrigger(this.data.extra.onActorEnter, this.node);
}
show(e = !0) {
this.showing = !0;
this.enableCollider(!0);
if (e) {
this.sprite.node.scaleY = 0;
cc.tween(this.sprite.node).to(.1, {
scaleY: 1
}).start();
} else this.sprite.node.scaleY = this.data.extra.scale;
}
enableCollider(e) {
this.collider instanceof cc.BoxCollider && (this.collider.offset = e ? cc.v2(0, 32) : cc.v2(1e5, 1e5));
}
hide(e = !0) {
this.showing = !1;
if (e) {
this.sprite.node.scaleY = 1;
cc.tween(this.sprite.node).to(.1, {
scaleY: 0
}).call(() => {
this.enableCollider(!1);
}).start();
} else {
this.sprite.node.scaleY = 0;
this.enableCollider(!1);
}
}
setData(e, t) {
const o = Object.create(null, {
setData: {
get: () => super.setData
}
});
return a(this, void 0, void 0, function*() {
o.setData.call(this, e, t);
(e = this.data).extra || (e.extra = {
speed: 300,
showTime: 1.5,
hideTime: 1.5,
timer: 0,
dmg: 1,
scale: 1,
onActorEnter: []
});
this.timer = e.extra.timer;
for (;this.timer < 0; ) this.timer += e.extra.showTime + e.extra.hideTime;
yield c.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
let i = this.sprite.node.height;
this.sprite.node.anchorY = (i - 64) / 2 / i;
this.data.extra.scale = Math.min(this.data.extra.scale, 8);
this.node.scale = this.data.extra.scale;
this.damager.dmg = e.extra.dmg;
this.damager.ignoreTeam = this.data.ignoreDmgEnemy ? r.Team.Enemy : r.Team.None;
});
}
shouldShow(e) {
let t = this.data.extra.showTime;
return (e %= t + this.data.extra.hideTime) < t;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
speed: 300,
showTime: 1.5,
hideTime: 1.5,
timer: 0,
dmg: 1,
scale: 1,
onActorEnter: []
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("刺出时间(秒)", n.extra.showTime, 0, 999999, e => {
n.extra.showTime = e;
});
e.addNumberEditBox("隐藏时间(秒)", n.extra.hideTime, 0, 999999, e => {
n.extra.hideTime = e;
});
e.addNumberEditBox("时间偏移(秒)", n.extra.timer, -999999, 999999, e => {
n.extra.timer = e;
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = n.extra.scale;
o.world.placeGizmos.setScale(e);
}
});
e.addTrigger("当接触主角时：", n.extra.onActorEnter, !0);
e.addToggle("伤害敌人", !n.ignoreDmgEnemy, e => {
n.ignoreDmgEnemy = !e;
});
e.addNumberEditBox("伤害", n.extra.dmg, 0, 999999, e => {
n.extra.dmg = e;
});
}
};
n([ u({
override: !0,
type: cc.Sprite
}) ], m.prototype, "sprite", void 0);
m = i = n([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../Frame/Damager": "Damager",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../CollisionEmiter": "CollisionEmiter",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device"
} ],
MeleeCtl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7c7ddQsZmRMeYycJ3SUmKav", "MeleeCtl");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.MeleeCtl = void 0;
const n = e("../../../Frame/TweenUtil"), a = e("../../../Frame/Util"), s = e("../../../GameData/GameTypeDefine"), r = e("../../Player/TriggerMng"), l = e("./WeaponCtl");
o.MeleeCtl = class extends l.WeaponCtl {
constructor() {
super(...arguments);
this._actDataList = [];
this._resetAngle = 0;
this._resetX = -20;
this._resetY = -35;
this._resetAnchorX = -.25;
this._resetAnchorY = -.25;
this._worldMat = new cc.Mat4();
this._worldScale = new cc.Vec3();
this._angle = 0;
this._faceDir = new cc.Vec2();
}
reset(e) {
let t = this.weapon.conf && this.weapon.conf.melee && this.weapon.conf.melee.scale > 0 ? 1 / this.weapon.conf.melee.scale : 0;
if (e) {
let e = 1 / this.weapon.conf.ROF;
cc.tween(this.weapon.skin.node).to(.1 * e, {
angle: 0,
x: this._resetX * t,
y: this._resetY * t
}, {
easing: n.Easing.backOut
}).start();
} else {
this.weapon.skin.node.x = this._resetX * t;
this.weapon.skin.node.y = this._resetY * t;
this.weapon.skin.node.anchorX = this._resetAnchorX * t;
this.weapon.skin.node.anchorY = this._resetAnchorY * t;
this.weapon.skin.node.angle = this._resetAngle;
}
if (this.weapon.boxDamager) {
this.weapon.boxDamager.clearRecord();
this.weapon.boxDamager.node.active = !1;
this.weapon.boxDamager.node.angle = 45;
let e = (.5 - this._resetAnchorX * t) * this.weapon.skin.node.width;
this.weapon.boxDamager.SetPosition(e, e);
this.weapon.boxDamager.ApplyPosition();
}
}
init() {
return i(this, void 0, void 0, function*() {
this.weapon.conf && (this.timer = 1 / this.weapon.conf.ROF);
this.weapon.boxDamager && (this.weapon.boxDamager.avoidContinuesDmg = !0);
this.weapon.node.scale = this.weapon.conf.melee.scale;
this.reset(!1);
this._actDataList.length = 0;
this._actDataIdx = 0;
let e = 1 / this.weapon.conf.ROF, t = this.weapon.conf.melee.scale > 0 ? 1 / this.weapon.conf.melee.scale : 0;
if (this.weapon.conf.melee.actType == s.MeleeActType.Swing) {
let o = {
reset: {
angle: 45,
x: -25 * t,
y: -35 * t,
anchorX: -.25,
anchorY: -.25
},
tween: cc.tween(this.weapon.skin.node).call(() => {
if (this.weapon.boxDamager) {
this.weapon.boxDamager.clearRecord();
this.weapon.boxDamager.node.active = !0;
}
}).to(.3 * e, {
angle: -90
}, {
easing: n.Easing.backIn
}).to(.5 * e, {
angle: this._resetAngle,
x: this._resetX * t,
y: this._resetY * t
}, {
easing: n.Easing.backOut
}).call(() => {
this.reset(!0);
})
};
this._actDataList.push(o);
} else if (this.weapon.conf.melee.actType == s.MeleeActType.Jab) {
let o = {
reset: {
angle: -45,
x: this._resetX * t,
y: 0,
anchorX: this._resetAnchorX * t,
anchorY: this._resetAnchorY * t
},
tween: cc.tween(this.weapon.skin.node).to(0 * e, {
x: -40
}, {
easing: n.Easing.backOut
}).call(() => {
if (this.weapon.boxDamager) {
this.weapon.boxDamager.clearRecord();
this.weapon.boxDamager.node.active = !0;
}
}).to(.3 * e, {
x: 60
}, {
easing: n.Easing.backIn
}).call(() => {
this.reset(!0);
})
};
this._actDataList.push(o);
}
});
}
run(e) {
let t = this.weapon.world;
if (t && t.playing && this.weapon.conf) {
this.timer += e;
if (this.weapon.firing && this.timer > 1 / this.weapon.conf.ROF) {
this.timer = 0;
this.playAct();
t.camera.node.position = cc.Vec2.ZERO;
this.weapon.conf.melee.onAttack && r.default.Ins.emitTrigger(this.weapon.conf.melee.onAttack, this.weapon.node);
}
}
}
readyFire() {}
updateFirePower(e) {}
fire(e) {}
setFireDir(e, t) {}
setDir(e, t) {
let o = 0;
if (this.weapon.world.worldLayout.type == s.WorldType.Rpg) {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
this._worldScale.x < 0 && (e = -e);
this._faceDir.x = e;
this._faceDir.y = t;
o = a.Util.angle(this._faceDir);
} else if (0 == t) o = 0; else if (0 == e) o = t > 0 ? 90 : 270; else {
this.weapon.node.getWorldMatrix(this._worldMat);
this._worldMat.getScale(this._worldScale);
let i = this._worldScale.x < 0, n = Math.sqrt(e * e + t * t), a = e / n, s = t / n;
o = 180 * Math.atan(s / a) / Math.PI;
(o %= 360) < 0 && (o += 360);
o = o > 45 && o < 135 ? i ? 270 : 90 : o >= 135 && o <= 225 ? i ? 0 : 180 : o > 225 && o < 315 ? i ? 90 : 270 : 0;
}
this.weapon.node.angle = this._angle = o;
}
playAct() {
if (0 == this._actDataList.length) return;
this._actDataIdx >= this._actDataList.length && (this._actDataIdx = 0);
let e = this._actDataList[this._actDataIdx++];
if (e.reset) {
let t = this.weapon.conf.melee.scale > 0 ? 1 / this.weapon.conf.melee.scale : 0;
this.weapon.skin.node.x = e.reset.x * t;
this.weapon.skin.node.y = e.reset.y * t;
this.weapon.skin.node.anchorX = e.reset.anchorX * t;
this.weapon.skin.node.anchorY = e.reset.anchorY * t;
this.weapon.skin.node.angle = e.reset.angle;
if (this.weapon.boxDamager) {
let o = (.5 - e.reset.anchorX * t) * this.weapon.skin.node.width;
this.weapon.boxDamager.SetPosition(o, o);
this.weapon.boxDamager.ApplyPosition();
}
}
if (e.tween) {
cc.Tween.stopAllByTarget(this.weapon.skin.node);
e.tween.start();
}
}
};
cc._RF.pop();
}, {
"../../../Frame/TweenUtil": "TweenUtil",
"../../../Frame/Util": "Util",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Player/TriggerMng": "TriggerMng",
"./WeaponCtl": "WeaponCtl"
} ],
MenuPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d6b08Y9DoZFkavHA4zYRf6u", "MenuPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.btn = null;
}
setData(e) {
return n(this, void 0, void 0, function*() {
r.Util.makeBro(this.btn.node, e.length, (t, o) => {
let i = e[o], n = t.getComponent(a.default);
n.label.string = i.name;
n.node.on(a.default.CLICK, () => {
i.call();
this.closePanel();
}, this);
});
});
}
};
i([ c(a.default) ], d.prototype, "btn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util"
} ],
MessageBox: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8af88/X+YVI6YGBGYmpMFbH", "MessageBox");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../CustomUI/Button"), a = e("./Panel"), {ccclass: s, menu: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.label = null;
this.leftBtn = null;
this.rightBtn = null;
this.onLeft = null;
this.onRight = null;
}
onLoad() {
super.onLoad();
this.leftBtn.node.on("click", this.onLeftBtnClick, this);
this.rightBtn.node.on("click", this.onRightBtnClick, this);
}
onDestroy() {
super.onDestroy();
this.onLeft = null;
this.onRight = null;
}
onLeftBtnClick() {
this.closePanel();
this.onLeft && this.onLeft();
this.onLeft = null;
this.onRight = null;
}
onRightBtnClick() {
this.closePanel();
this.onRight && this.onRight();
this.onLeft = null;
this.onRight = null;
}
setLeftBtn(e) {
this.leftBtn.label.string = e.text || "";
this.leftBtn.background.node.color = e.color || cc.Color.WHITE;
this.onLeft = e.call;
}
setRightBtn(e) {
this.rightBtn.label.string = e.text || "";
this.rightBtn.background.node.color = e.color || cc.Color.WHITE;
this.onRight = e.call;
}
};
i([ l(cc.Label) ], c.prototype, "titleLabel", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
i([ l(n.default) ], c.prototype, "leftBtn", void 0);
i([ l(n.default) ], c.prototype, "rightBtn", void 0);
c = i([ s, r("面板/MessageBox") ], c);
o.default = c;
cc._RF.pop();
}, {
"../CustomUI/Button": "Button",
"./Panel": "Panel"
} ],
MinePageToggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9be41baFKhCJKoSxJvERC13", "MinePageToggle");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../Frame/CrossPlatform"), r = e("../../../Game/Player/GuideMng"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends cc.Component {
constructor() {
super(...arguments);
this.bubble = null;
this.dotNode = null;
}
onLoad() {
this.node.on(a.default.CLICK, this.onClick, this);
cc.game.on("refreshPasswordDot", this.refreshDot, this);
this.refreshDot();
}
onDestroy() {
cc.game.off("refreshPasswordDot", this.refreshDot, this);
}
onClick() {
this.bubble.scale = 0;
}
onEnable() {
this.bubble.scale = 0;
i.ENABEL_TIMES++;
if (!r.default.Ins.isComplete(r.GuideId.CreateGame) && i.ENABEL_TIMES >= 5) {
i.ENABEL_TIMES = 0;
cc.tween(this.bubble).to(.2, {
scaleX: -1,
scaleY: 1
}).start();
}
}
refreshDot() {
let e = s.crossPlatform.getStorageSync("isSetPassword");
this.dotNode.active = !e;
}
};
d.ENABEL_TIMES = -1;
n([ c(cc.Node) ], d.prototype, "bubble", void 0);
n([ c(cc.Node) ], d.prototype, "dotNode", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Game/Player/GuideMng": "GuideMng"
} ],
MinePage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "daab780M7lCRpQe2iMmDhIP", "MinePage");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../CustomUI/Button"), l = e("../../../CustomUI/ScrollList"), c = e("../../../CustomUI/ToggleGroup"), d = e("../../../Frame/CrossPlatform"), h = e("../../../Frame/SceneManager"), p = e("../../../Frame/Top"), u = e("../../../Frame/Util"), m = e("../../../Game/Player/Mng"), f = e("../../../Game/Player/ShopMng"), g = e("../../../Game/Player/TalkMng"), y = e("../../../Role"), v = e("./CreateTalkCell"), C = e("./MyTalkCell"), {ccclass: _, property: S} = cc._decorator;
let I = i = class extends cc.Component {
constructor() {
super(...arguments);
this.settingBtn = null;
this.settingDotNode = null;
this.toggleGroup = null;
this.gameList = null;
this.goodsList = null;
this.talkList = null;
this.idLabel = null;
}
onLoad() {
this.settingBtn.node.on(r.default.CLICK, this.onClickSetting, this);
this.idLabel.string = "ID:" + y.default.Ins.role.id;
this.toggleGroup.node.on(c.default.TOGGLE_CHANGE, this.onToggleChange, this);
cc.game.on("MyGameChange", this.refreshList, this);
cc.game.on("MyGoodsChange", this.refreshList, this);
cc.game.on("GameStatusChange", this.refreshList, this);
cc.game.on("GoodsStatusChange", this.refreshList, this);
cc.game.on(g.default.Talk_StatusChange, this.refreshList, this);
cc.game.on(i.MinePage_Refresh, this.refreshList, this);
cc.game.on(g.default.Talk_Refresh, this.refreshList, this);
cc.game.on("refreshPasswordDot", this.refreshDot, this);
this.gameList.getPrefabName = e => {
if (e.id) return "MyGameCell";
if (e) {
if ("create" == e.type) return "CreateGameCell";
if ("lock" == e.type) return "LockGameCell";
}
};
this.goodsList.getPrefabName = e => {
if (e.id) return "MyGoodsCell";
if (e) {
if ("create" == e.type) return "CreateGoodsCell";
if ("lock" == e.type) return "LockGoodsCell";
}
};
this.talkList.getPrefabName = e => "create" == e.type ? "CreateTalkCell" : "MyTalkCell";
let e = this.talkList.getComponentInChildren(v.default), t = this.talkList.getComponentInChildren(C.default);
t.node.active = !0;
this.talkList.calculateSizeFunc = o => "create" == o.type ? {
w: 700,
h: e.node.height
} : {
w: 700,
h: t.calcuHeight(o)
};
}
onEnable() {
return a(this, void 0, void 0, function*() {
u.Util.updateAllWidget(this.node);
this.refreshList();
this.refreshDot();
});
}
onDestroy() {
cc.game.off("MyGameChange", this.refreshList, this);
cc.game.off("MyGoodsChange", this.refreshList, this);
cc.game.off("GameStatusChange", this.refreshList, this);
cc.game.off("GoodsStatusChange", this.refreshList, this);
cc.game.off(g.default.Talk_StatusChange, this.refreshList, this);
cc.game.off(i.MinePage_Refresh, this.refreshList, this);
cc.game.off("refreshPasswordDot", this.refreshDot, this);
}
onToggleChange(e, t, o) {
if (o) {
C.default.calcuHeightCache.clear();
this.refreshList();
}
}
refreshList() {
return a(this, void 0, void 0, function*() {
let e = this.toggleGroup.idx;
this.gameList.node.active = !1;
this.goodsList.node.active = !1;
this.talkList.node.active = !1;
switch (e) {
case 0:
{
p.default.showLoading("加载中");
let e = [];
if ((e = yield m.Mng.Ins.gameMng.loadAll()).length < y.default.Ins.role.myGameMaxCnt) e.push({
type: "create"
}); else {
let t = y.default.Ins.gameSlotUnlockLvls[y.default.Ins.role.myGameMaxCnt];
e.push({
type: "lock",
str: s.I18nMgr.exceI18nStringByZh("等级${lvl}解锁新栏位", [ {
paramName: "lvl",
param: t
} ])
});
}
p.default.hideLoading();
this.gameList.node.active = !0;
this.gameList.setDataArr(e);
cc.game.emit(i.GAME_LIST_LOADED);
break;
}

case 1:
{
p.default.showLoading("加载中");
this.goodsList.node.active = !0;
let e = [];
e = yield f.default.Ins.loadMyGoodsInfos();
p.default.hideLoading();
if (e.length < y.default.Ins.role.myGoodsMaxCnt) e.push({
type: "create"
}); else {
let t = y.default.Ins.goodsSlotUnlockLvls[y.default.Ins.role.myGoodsMaxCnt];
e.push({
type: "lock",
str: s.I18nMgr.exceI18nStringByZh("等级${lvl}解锁新栏位", [ {
paramName: "lvl",
param: t
} ])
});
}
this.goodsList.setDataArr(e);
break;
}

case 2:
{
this.talkList.node.active = !0;
p.default.showLoading("加载中");
let e = [];
e.unshift({
type: "create"
});
let t = yield g.default.Ins.loadTalksByUserId();
e = e.concat(t);
p.default.hideLoading();
this.talkList.setDataArr(e);
break;
}
}
});
}
refreshDot() {
let e = d.crossPlatform.getStorageSync("isSetPassword");
this.settingDotNode.active = !e;
}
onClickSetting() {
h.default.ins.OpenPanelByName("SettingPanel");
}
};
I.GAME_LIST_LOADED = "GAME_LIST_LOADED";
I.MinePage_Refresh = "MinePage_Refresh";
n([ S(r.default) ], I.prototype, "settingBtn", void 0);
n([ S(cc.Node) ], I.prototype, "settingDotNode", void 0);
n([ S(c.default) ], I.prototype, "toggleGroup", void 0);
n([ S(l.default) ], I.prototype, "gameList", void 0);
n([ S(l.default) ], I.prototype, "goodsList", void 0);
n([ S(l.default) ], I.prototype, "talkList", void 0);
n([ S(cc.Label) ], I.prototype, "idLabel", void 0);
I = i = n([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/Util": "Util",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/ShopMng": "ShopMng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../Role": "Role",
"./CreateTalkCell": "CreateTalkCell",
"./MyTalkCell": "MyTalkCell"
} ],
Mng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e94164uPQFBNZ6rMJLgTo/O", "Mng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Mng = void 0;
const n = e("./../../GameScript/index"), a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../../scripts/_autogen/data/data"), r = e("../../Frame/NetworkMgr"), l = e("../../Frame/Top"), c = e("./AssetGroupMng"), d = e("./ActorMng"), h = e("./BulletMng"), p = e("./DeviceMng"), u = e("./GameMng"), m = e("./GameShopMng"), f = e("./GameRankMng"), g = e("./PropMng"), y = e("./PublishMng"), v = e("./SpriteMng"), C = e("./TileMng"), _ = e("./VariableMng"), S = e("./WeaponMng"), I = e("./WorldMng"), G = e("../../GameData/GameTypeDefine"), T = e("./GamePackageMng");
class b {
constructor() {
this.assetGroupMng = null;
this.actorMng = null;
this.bulletMng = null;
this.gameMng = null;
this.spriteMng = null;
this.propMng = null;
this.tileMng = null;
this.weaponMng = null;
this.deviceMng = null;
this.worldMng = null;
this.variableMng = null;
this.gameShopMng = null;
this.gameRankMng = null;
this.actorMng = new d.default();
this.bulletMng = new h.default();
this.gameMng = new u.default();
this.spriteMng = new v.default();
this.propMng = new g.default();
this.tileMng = new C.default();
this.weaponMng = new S.default();
this.worldMng = new I.default();
this.deviceMng = new p.default();
this.variableMng = new _.default();
this.gameShopMng = new m.default();
this.gameRankMng = new f.default();
this.assetGroupMng = new c.default();
}
static initMine(e) {
this.mine.gameMng.gameIds = e.role.games || [];
this.mine.tileMng.customIds = e.roleGameConf.tileConfIds || [];
this.mine.actorMng.customIds = e.roleGameConf.actorConfIds || [];
this.mine.deviceMng.customIds = e.roleGameConf.deviceConfIds || [];
this.mine.propMng.customIds = e.roleGameConf.propConfIds || [];
this.mine.weaponMng.customIds = e.roleGameConf.weaponConfIds || [];
this.mine.bulletMng.customIds = e.roleGameConf.bulletConfIds || [];
this.mine.assetGroupMng.customGroups = e.customActorGroups || [];
}
static switchMine() {
this.Ins = this.mine;
this.resetExtra();
}
static switchMineGame(e) {
return i(this, void 0, void 0, function*() {
this.switchMine();
let t = yield this.Ins.gameMng.loadOne(e);
if (t.parnetGame) {
l.default.showLoading("加载模版中..");
let e = [], o = yield T.default.Ins.load(t.parnetGame.packUrl);
if (o) {
t.projectLayout || (t.projectLayout = o.gameData.projectLayout);
let i = (e, o) => {
e.forEach(e => {
e.belongGameId = t.id;
o.extraCache.set(e.id, e);
});
};
i(o.tileConfs, this.Ins.tileMng);
i(o.actorConfs, this.Ins.actorMng);
i(o.deviceConfs, this.Ins.deviceMng);
i(o.propConfs, this.Ins.propMng);
i(o.weaponConfs, this.Ins.weaponMng);
i(o.bulletConfs, this.Ins.bulletMng);
i(o.gameShopConfs, this.Ins.gameShopMng);
i(o.gameRankConfs, this.Ins.gameRankMng);
for (let e of o.worldDatas) {
this.Ins.worldMng.extraCache.set(e.id, e);
e.info.selectedActorGroup = t.name;
e.belongGameId = t.id;
if (e.worldLayout && e.worldLayout.gsData) {
e.worldLayout.gsData.worldId = e.id;
n.GSMng.instance.load(e.worldLayout.gsData);
}
}
for (let e = 0; e < o.gameData.variableDatas.length; e++) {
let t = o.gameData.variableDatas[e];
this.Ins.variableMng.extraCache.set(t.id, t);
this.Ins.variableMng.extraIds.push(t.id);
}
let a = yield y.default.Ins.makeGamePackRaw(t.parnetGame.worldIds), s = (t, o, i) => {
o.forEach(o => {
t.extraIds.push(o.id);
e.push({
confType: i,
confId: o.id
});
});
};
s(b.Ins.tileMng, a.tileConfs, G.CommonDataType.Tile);
s(b.Ins.actorMng, a.actorConfs, G.CommonDataType.Actor);
s(b.Ins.deviceMng, a.deviceConfs, G.CommonDataType.Device);
s(b.Ins.propMng, a.propConfs, G.CommonDataType.Prop);
s(b.Ins.weaponMng, a.weaponConfs, G.CommonDataType.Weapon);
s(b.Ins.bulletMng, a.bulletConfs, G.CommonDataType.Bullet);
a.worldDatas.forEach(e => {
b.Ins.worldMng.extraIds.push(e.id);
});
a.gameShopConfs.forEach(e => {
b.Ins.gameShopMng.extraIds.push(e.id);
});
a.gameRankConfs.forEach(e => {
b.Ins.gameRankMng.extraIds.push(e.id);
});
} else l.default.hideLoading("加载模版失败");
l.default.showLoading("加载数据中..");
let i = {
gameId: t.id
}, c = yield r.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_GetRoleCreativeConf,
params: i
}, a.Game_RGetRoleCreativeConf);
if (c) {
let t = (t, o, i) => {
let n = c.confMap.get(o);
if (n) for (let o in n) {
i.extraCache.set(o, n[o]);
i.extraIds.unshift(o);
if (t >= 0) {
let i = e.findIndex(e => e.confId == o);
i >= 0 ? e[i] = {
confType: t,
confId: o
} : e.unshift({
confType: t,
confId: o
});
}
}
};
t(G.CommonDataType.Tile, s.CreativeAttrType.tile, b.Ins.tileMng);
t(G.CommonDataType.Actor, s.CreativeAttrType.actor, b.Ins.actorMng);
t(G.CommonDataType.Device, s.CreativeAttrType.device, b.Ins.deviceMng);
t(G.CommonDataType.Prop, s.CreativeAttrType.prop, b.Ins.propMng);
t(G.CommonDataType.Weapon, s.CreativeAttrType.weapon, b.Ins.weaponMng);
t(G.CommonDataType.Bullet, s.CreativeAttrType.bullet, b.Ins.bulletMng);
t(G.CommonDataType.Shop, s.CreativeAttrType.shop, b.Ins.gameShopMng);
l.default.hideLoading();
} else l.default.hideLoading("加载数据失败");
b.Ins.assetGroupMng.initExtraGroup(t.name, e);
}
});
}
static switchGamePackage(e) {
this.resetExtra();
let t = this.mngCache.find(t => t.id == e.id), o = null;
if (t) {
o = t.mng;
this.Ins = o;
} else {
o = new b();
this.Ins = o;
o.gameMng.appendCustom(e.gameData);
o.worldMng.initWithGamePackage(e);
o.tileMng.appendCustom(e.tileConfs);
o.actorMng.appendCustom(e.actorConfs);
o.deviceMng.appendCustom(e.deviceConfs);
o.propMng.appendCustom(e.propConfs);
o.weaponMng.appendCustom(e.weaponConfs);
o.bulletMng.appendCustom(e.bulletConfs);
o.gameShopMng.appendCustom(e.gameShopConfs);
o.gameRankMng.appendCustom(e.gameRankConfs);
this.mngCache.unshift({
id: e.id,
mng: o
});
this.mngCache = this.mngCache.slice(0, 3);
}
}
static switchTalkProject(e) {
return i(this, void 0, void 0, function*() {
this.switchMine();
let t = this.extraCache.find(t => t.id == e), o = [], i = yield this.Ins.gameMng.loadOne(e);
yield this.Ins.variableMng.switchGame(i);
if (t) {
let e = (e, t, i) => {
e.extraIds = t.extraIds || [];
e.extraCache = t.extraCache || new Map();
for (let t = 0; t < e.extraIds.length; t++) {
let n = e.extraIds[t];
o.push({
confType: i,
confId: n
});
}
};
e(b.Ins.tileMng, t.tileMng, G.CommonDataType.Tile);
e(b.Ins.actorMng, t.actorMng, G.CommonDataType.Actor);
e(b.Ins.deviceMng, t.deviceMng, G.CommonDataType.Device);
e(b.Ins.propMng, t.propMng, G.CommonDataType.Prop);
e(b.Ins.weaponMng, t.weaponMng, G.CommonDataType.Weapon);
e(b.Ins.bulletMng, t.bulletMng, G.CommonDataType.Bullet);
e(b.Ins.gameRankMng, t.gameRankMng, G.CommonDataType.Rank);
e(b.Ins.gameShopMng, t.gameShopMng, G.CommonDataType.Shop);
} else {
let t = yield y.default.Ins.makeGamePackRaw(i.worldIds), a = (t, i, n) => {
for (let a = 0; a < i.length; a++) {
let s = i[a];
s.belongGameId = e;
t.extraIds.unshift(s.id);
t.extraCache.set(s.id, s);
o.push({
confType: n,
confId: s.id
});
}
};
a(b.Ins.tileMng, t.tileConfs, G.CommonDataType.Tile);
a(b.Ins.actorMng, t.actorConfs, G.CommonDataType.Actor);
a(b.Ins.deviceMng, t.deviceConfs, G.CommonDataType.Device);
a(b.Ins.propMng, t.propConfs, G.CommonDataType.Prop);
a(b.Ins.weaponMng, t.weaponConfs, G.CommonDataType.Weapon);
a(b.Ins.bulletMng, t.bulletConfs, G.CommonDataType.Bullet);
a(b.Ins.gameRankMng, t.gameRankConfs, G.CommonDataType.Rank);
a(b.Ins.gameShopMng, t.gameShopConfs, G.CommonDataType.Shop);
for (let e of t.worldDatas) {
e.info.selectedActorGroup = i.name;
this.Ins.worldMng.extraCache.set(e.id, e);
if (e.worldLayout && e.worldLayout.gsData) {
e.worldLayout.gsData.worldId = e.id;
n.GSMng.instance.load(e.worldLayout.gsData);
}
}
for (let e = 0; e < i.variableDatas.length; e++) {
let t = i.variableDatas[e];
this.Ins.variableMng.extraCache.set(t.id, t);
this.Ins.variableMng.extraIds.push(t.id);
}
this.extraCache.unshift({
id: e,
tileMng: {
extraIds: b.Ins.tileMng.extraIds,
extraCache: b.Ins.tileMng.extraCache
},
actorMng: {
extraIds: b.Ins.actorMng.extraIds,
extraCache: b.Ins.actorMng.extraCache
},
deviceMng: {
extraIds: b.Ins.deviceMng.extraIds,
extraCache: b.Ins.deviceMng.extraCache
},
propMng: {
extraIds: b.Ins.propMng.extraIds,
extraCache: b.Ins.propMng.extraCache
},
weaponMng: {
extraIds: b.Ins.weaponMng.extraIds,
extraCache: b.Ins.weaponMng.extraCache
},
bulletMng: {
extraIds: b.Ins.bulletMng.extraIds,
extraCache: b.Ins.bulletMng.extraCache
},
gameRankMng: {
extraIds: b.Ins.gameRankMng.extraIds,
extraCache: b.Ins.gameRankMng.extraCache
},
gameShopMng: {
extraIds: b.Ins.gameShopMng.extraIds,
extraCache: b.Ins.gameShopMng.extraCache
}
});
this.extraCache = this.extraCache.slice(0, 3);
}
b.Ins.assetGroupMng.initExtraGroup(i.name, o);
});
}
static resetExtra() {
return i(this, void 0, void 0, function*() {
this.Ins.worldMng.tempCache.clear();
this.Ins.worldMng.resetExtra();
this.Ins.tileMng.resetExtra();
this.Ins.actorMng.resetExtra();
this.Ins.deviceMng.resetExtra();
this.Ins.propMng.resetExtra();
this.Ins.weaponMng.resetExtra();
this.Ins.bulletMng.resetExtra();
this.Ins.gameShopMng.resetExtra();
this.Ins.variableMng.resetExtra();
this.Ins.assetGroupMng.resetExtra();
});
}
}
o.Mng = b;
b.Ins = null;
b.mine = new b();
b.mngCache = [];
b.extraCache = [];
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./../../GameScript/index": "index",
"./ActorMng": "ActorMng",
"./AssetGroupMng": "AssetGroupMng",
"./BulletMng": "BulletMng",
"./DeviceMng": "DeviceMng",
"./GameMng": "GameMng",
"./GamePackageMng": "GamePackageMng",
"./GameRankMng": "GameRankMng",
"./GameShopMng": "GameShopMng",
"./PropMng": "PropMng",
"./PublishMng": "PublishMng",
"./SpriteMng": "SpriteMng",
"./TileMng": "TileMng",
"./VariableMng": "VariableMng",
"./WeaponMng": "WeaponMng",
"./WorldMng": "WorldMng"
} ],
MobileLoginPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "30c90GK7fJLkZ0lfauHmMV2", "MobileLoginPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/Top"), r = e("../../Game/Hortor"), {ccclass: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.getCodeBtn = null;
this.loginBtn = null;
this.labelGetCode = null;
this.editMobileNumber = null;
this.editCodeNumaber = null;
this.call = null;
this._clickTimer = 0;
this._sendSmsTimer = 0;
}
onLoad() {
super.onLoad();
this.getCodeBtn.node.on(n.default.CLICK, this.onGetCode, this);
this.loginBtn.node.on(n.default.CLICK, this.onLogin, this);
}
isInClickCd() {
return this._clickTimer > cc.director.getTotalTime();
}
resetClickCd() {
this._clickTimer = cc.director.getTotalTime() + 2e3;
}
clearClickCd() {
this._clickTimer = 0;
}
reSendSmsLeftTime() {
let e = this._sendSmsTimer - cc.director.getTotalTime();
return e > 0 ? Math.ceil(e / 1e3) : 0;
}
update() {
let e = this.reSendSmsLeftTime();
if (e > 0) {
this.labelGetCode.string = `${e}秒`;
this.getCodeBtn.interactable && (this.getCodeBtn.interactable = !1);
} else {
this.labelGetCode.string = "获取验证码";
this.getCodeBtn.interactable || (this.getCodeBtn.interactable = !0);
}
}
onGetCode() {
if (this.isInClickCd()) return;
let e = this.editMobileNumber.string;
if (0 == e.length) {
s.default.showToast("请输入手机号");
return;
}
let t = parseInt(e);
if (Number.isNaN(t) || 11 != e.length) s.default.showToast("请输入正确手机号"); else {
this.resetClickCd();
r.Hortor.sendSMSCode(e, e => {
if (e) {
s.default.showToast("发送验证码成功，请查看短信");
this._sendSmsTimer = 6e4 + cc.director.getTotalTime();
} else s.default.showToast("发送验证码失败，请稍后再试");
});
}
}
onLogin() {
if (this.isInClickCd()) return;
let e = this.editMobileNumber.string;
if (0 == e.length) {
s.default.showToast("请输入手机号");
return;
}
let t = parseInt(e);
if (Number.isNaN(t) || 11 != e.length) {
s.default.showToast("请输入正确手机号");
return;
}
let o = this.editCodeNumaber.string;
if (0 == o.length) {
s.default.showToast("请输入验证码");
return;
}
let i = parseInt(o);
if (Number.isNaN(i) || 6 != o.length) s.default.showToast("请输入正确验证码"); else {
this.resetClickCd();
this.closePanel();
this.call && this.call({
mobile: e,
smsCode: o
});
}
}
};
i([ c(n.default) ], d.prototype, "getCodeBtn", void 0);
i([ c(n.default) ], d.prototype, "loginBtn", void 0);
i([ c(cc.Label) ], d.prototype, "labelGetCode", void 0);
i([ c(cc.EditBox) ], d.prototype, "editMobileNumber", void 0);
i([ c(cc.EditBox) ], d.prototype, "editCodeNumaber", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Hortor": "Hortor"
} ],
MonsterSpawner: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "52ebbvvkANFNqLGxi8Oizcy", "MonsterSpawner");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/FightSystem"), r = e("../../Frame/SceneManager"), l = e("../../Scene/GameScene/GameScene"), c = e("../Player/Mng"), d = e("../Player/TriggerMng"), h = e("../World/Actor"), p = e("../World/Device"), {ccclass: u, property: m} = cc._decorator;
let f = i = class extends p.default {
constructor() {
super(...arguments);
this.sprite = null;
this._liveLimitCount = 1;
this._spawnedTotalCount = 0;
this._spawnedCount = 0;
this._curSpawnIdx = 0;
this._spawnList = [];
this._liveMonsterIds = [];
this._spawnTimer = .01;
this._spawnInterval = 0;
this._isRandom = !1;
}
onLoad() {
super.onLoad();
}
update(e) {
if (this.world.playing && this._spawnList && 0 != this._spawnList.length) if (this._spawnTimer >= 0) this._spawnTimer -= e; else {
this._spawnTimer = this._spawnInterval;
if (this._spawnedCount < this._spawnedTotalCount && this._liveMonsterIds.length < this._liveLimitCount) {
this._isRandom && (this._curSpawnIdx = Math.floor(this._spawnList.length * Math.random()));
this._curSpawnIdx >= this._spawnList.length && (this._curSpawnIdx = 0);
let e = this._spawnList[this._curSpawnIdx++];
this.spawn(e);
}
}
}
spawn(e) {
return a(this, void 0, void 0, function*() {
if (!e) return;
let t = r.default.ins.findScene(l.default);
if (!t) return;
let o = c.Mng.Ins.worldMng.getActorData(t.curWorldId, e.actorId);
if (!o) return;
let i = this.node.getComponent(cc.Animation);
i.play();
i.once(cc.Animation.EventType.STOP, () => a(this, void 0, void 0, function*() {
let e = this.world.addActor(this.node.position.add(cc.v2(0, 10)));
this._liveMonsterIds.push(e.id);
++this._spawnedCount;
e.node.on(s.FightSystem.Event.Killed, this.onMonsterDead, this);
yield e.setData(o.data);
t.initAi(t.world.worldLayout.type, e);
d.default.Ins.emitTrigger(this.data.extra.onSpawn, this.node);
}));
});
}
onMonsterDead(e) {
if (!e || !e.hper) return;
let t = e.hper.getComponent(h.default);
if (t) {
let e = this._liveMonsterIds.findIndex(e => e == t.id);
if (e >= 0) {
this._liveMonsterIds.splice(e, 1);
t.node.off(s.FightSystem.Event.Killed, this.onMonsterDead, this);
}
}
}
setData(e, t) {
const o = Object.create(null, {
setData: {
get: () => super.setData
}
});
return a(this, void 0, void 0, function*() {
o.setData.call(this, e, t);
e = this.data;
let i = this.world;
e.extra || (e.extra = {
count: 10,
interval: 1,
isRandom: !1,
spawnMonsters: [],
liveLimitCount: 3,
onSpawn: [],
scale: 1
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
this._isRandom = e.extra.isRandom;
this._spawnInterval = e.extra.interval;
this._spawnedTotalCount = e.extra.count;
this._liveLimitCount = e.extra.liveLimitCount;
this._spawnedCount = 0;
this._curSpawnIdx = 0;
this._spawnList = e.extra.spawnMonsters;
if (i.isGameScene && this._spawnList) for (let e of this._spawnList) {
let t = i.GetActNodeByDataId(e.actorId);
t instanceof h.default && i.removeActor(t);
}
yield c.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
let n = this.sprite.node.height;
this.sprite.node.anchorY = (n - 64) / 2 / n;
});
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
count: 10,
interval: 1,
isRandom: !1,
spawnMonsters: [],
liveLimitCount: 3,
onSpawn: [],
scale: 1
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addNumberEditBox("生成总数量", n.extra.count, 0, 99999, e => {
n.extra.count = e;
});
e.addNumberEditBox("同时存在数", n.extra.liveLimitCount, 1, 999999, e => {
n.extra.liveLimitCount = e;
});
e.addNumberEditBox("生成间隔（秒）", n.extra.interval, 0, 999999, e => {
n.extra.interval = e;
});
e.addToggle("随机生成", n.extra.isRandom, e => {
n.extra.isRandom = e;
});
o && e.addSpawnMonster("怪物列表：", n.extra.spawnMonsters);
e.addTrigger("当生成怪物时：", n.extra.onSpawn, !1);
}
};
n([ m({
override: !0,
type: cc.Sprite
}) ], f.prototype, "sprite", void 0);
f = i = n([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../Frame/FightSystem": "FightSystem",
"../../Frame/SceneManager": "SceneManager",
"../../Scene/GameScene/GameScene": "GameScene",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Actor": "Actor",
"../World/Device": "Device"
} ],
MovePlatform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0bb69GJadhOkqPo4hGdRJ6m", "MovePlatform");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Util"), s = e("../Player/Mng"), r = e("../World/AICtrl/Com/AiComDirLineMover"), l = e("./Platform"), {ccclass: c, property: d} = cc._decorator;
var h;
(function(e) {
e[e.Up = 0] = "Up";
e[e.UpLeft = 1] = "UpLeft";
e[e.UpRight = 2] = "UpRight";
e[e.Down = 3] = "Down";
e[e.DownLeft = 4] = "DownLeft";
e[e.DownRight = 5] = "DownRight";
e[e.Left = 6] = "Left";
e[e.Right = 7] = "Right";
})(h || (h = {}));
new cc.Vec2(), new cc.Vec2(), new cc.Vec2();
let p = i = class extends l.Platform {
constructor() {
super(...arguments);
this.platform = null;
this.content = null;
this._onPlatformActors = [];
}
get width() {
return this._boxCollider.size.width;
}
get height() {
return this._boxCollider.size.height;
}
onLoad() {
super.onLoad();
a.Util.makeBro(this.platform, 0);
this._aiMove = new r.AiComDirLineMover();
}
setCutting(e) {
if (this.content) {
let t = this.data.extra.cnt * this.data.extra.cnty;
t > this.content.childrenCount && (t = this.content.childrenCount);
for (let o = 0; o < t; ++o) this.content.children[o].active = !e;
}
}
initCollider() {
this._boxCollider = this.content.getComponent(cc.BoxCollider);
}
onActorOnPlatform(e) {
this._onPlatformActors.indexOf(e) < 0 && this._onPlatformActors.push(e);
}
onActorExistPlatform(e) {
let t = this._onPlatformActors.indexOf(e);
t >= 0 && this._onPlatformActors.splice(t, 1);
}
lateUpdate(e) {
this.world.playing && this._aiMove.run(e);
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
moveDir: h.Up,
speed: 2,
distance: 2,
cnt: 3,
cnty: 1
});
e.extra.cnty = e.extra.cnty || 1;
this.refresh(e, t);
this._aiMove.setData(this, e.extra);
}
refresh(e, t) {
let o = e.extra.cnt, i = e.extra.cnty;
a.Util.makeBro(this.platform, o * i, (e, i) => {
let n = i % o, a = Math.floor(i / o), r = cc.v2(64 * n, 64 * a);
e.position = r;
let l = e.getComponent(cc.Sprite);
s.Mng.Ins.spriteMng.setDeviceSprite(l, t.textureName, 64);
});
let n = this._boxCollider.size;
n.width = 64 * e.extra.cnt;
n.height = 64 * e.extra.cnty;
this._boxCollider.size = n;
let r = this._boxCollider.offset;
r.x = .5 * n.width - 32;
r.y = .5 * n.height - 32;
this._boxCollider.offset = r;
}
PositionMoveDelta(e, t) {
super.PositionMoveDelta(e, t);
for (let o of this._onPlatformActors) o.PositionMoveDelta(e, t);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
moveDir: h.Up,
speed: 2,
distance: 2,
cnt: 3,
cnty: 1
};
o && e.addHead(t.name, t.textureName);
r.AiComDirLineMover.displayInspector(e, n.extra);
e.addNumberEditBox("横向个数", n.extra.cnt, 1, 64, e => {
n.extra.cnt = e;
o && o.refresh(i, t);
});
e.addNumberEditBox("纵向个数", n.extra.cnty, 1, 64, e => {
n.extra.cnty = e;
o && o.refresh(i, t);
});
}
};
n([ d(cc.Node) ], p.prototype, "platform", void 0);
n([ d(cc.Node) ], p.prototype, "content", void 0);
p = i = n([ c ], p);
o.default = p;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../Player/Mng": "Mng",
"../World/AICtrl/Com/AiComDirLineMover": "AiComDirLineMover",
"./Platform": "Platform"
} ],
Mover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "12030PCJrpNQLb9iSo5Xt4d", "Mover");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../WorldChild"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {};
r.ActorMove = "ActorMove";
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../WorldChild": "WorldChild"
} ],
MsgCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb402yosElIYrawKRYys+9G", "MsgCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../../scripts/_autogen/data/data"), a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/HeadIcon"), r = e("../../../CustomUI/ScrollList"), l = e("../../../Frame/SceneManager"), c = e("../../../Frame/Util"), d = e("../../../Game/Player/GameIconMng"), h = e("../../../Game/Player/Mng"), p = e("../../../TGA"), {ccclass: u, property: m} = cc._decorator;
let f = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon = null;
this.nameLabel = null;
this.msgLabel = null;
this.icon = null;
this.dot = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.headIcon.node.on(a.default.CLICK, this.onHeadIcon, this);
this.nameLabel.node.on(a.default.CLICK, this.onHeadIcon, this);
this.msgLabel.node.on(a.default.CLICK, this.onMsgLabel, this);
this.node.on(a.default.CLICK, this.onClick, this);
}
onHeadIcon() {
if (!this.data) return;
let e = this.data.userInfoList[0];
l.default.ins.Enter("FriendScene", t => {
t.setData(e.playerId);
}, l.ShiftAnima.moveLeftShift);
}
onMsgLabel() {
if (!this.data) return;
let e = [];
for (let t = 0; t < this.data.userInfoList.length; t++) e.push(this.data.userInfoList[t].playerId);
let t = "";
switch (this.data.type) {
case n.MsgType.collectionGame:
t = "收藏了你的游戏";
break;

case n.MsgType.thumbGame:
t = "点赞了你的游戏";
break;

case n.MsgType.playGame:
t = "玩了你的游戏";
break;

case n.MsgType.hurryGame:
t = "催更了你的游戏";
break;

case n.MsgType.buyGoods:
t = "购买了你的素材";
}
this.data.isNew = !1;
this.dot.active = !1;
l.default.ins.Enter("PlayerListScene", o => {
o.setData(t, e);
}, l.ShiftAnima.moveLeftShift);
}
setData(e) {
this.data = e;
let t = e.userInfoList[0], o = c.Util.clampStr(t.userName, 9, "..");
this.nameLabel.string = o;
this.headIcon.loadUrl(t.userImg);
this.headIcon.setLevel(t.userLevel);
this.dot.active = e.isNew;
let i = "";
if (e.userInfoList.length > 1) {
i = `等${e.userInfoList.length}人`;
this.msgLabel.getComponent(a.default).interactable = !0;
} else this.msgLabel.getComponent(a.default).interactable = !1;
switch (e.type) {
case n.MsgType.collectionGame:
d.GameIconMng.Ins.setSprite(this.icon, e.gameIcon, 120);
this.msgLabel.string = i + "收藏了你的游戏";
break;

case n.MsgType.thumbGame:
d.GameIconMng.Ins.setSprite(this.icon, e.gameIcon, 120);
this.msgLabel.string = i + "点赞了你的游戏";
break;

case n.MsgType.playGame:
d.GameIconMng.Ins.setSprite(this.icon, e.gameIcon, 120);
this.msgLabel.string = i + "玩了你的游戏";
break;

case n.MsgType.hurryGame:
d.GameIconMng.Ins.setSprite(this.icon, e.gameIcon, 120);
this.msgLabel.string = i + "催更了你的游戏";
break;

case n.MsgType.buyGoods:
h.Mng.Ins.spriteMng.setSprite(this.icon, e.goodsTextureName, 120);
this.msgLabel.string = i + "购买了你的素材";
}
}
onClick() {
let e = this.data;
switch (e.type) {
case n.MsgType.collectionGame:
case n.MsgType.thumbGame:
case n.MsgType.playGame:
case n.MsgType.hurryGame:
this.enterGameCoverScene(e.gameId);
break;

case n.MsgType.buyGoods:
}
}
enterGameCoverScene(e) {
this.data.isNew = !1;
this.dot.active = !1;
l.default.ins.Enter("GameCoverScene", t => {
t.setData(e);
t.backAnima = l.ShiftAnima.moveRightShift;
}, l.ShiftAnima.moveLeftShift);
p.TGA.track("clickGameCell", {
gameId: this.data.gameId,
from: "MsgCell"
});
}
};
i([ m(s.default) ], f.prototype, "headIcon", void 0);
i([ m(cc.Label) ], f.prototype, "nameLabel", void 0);
i([ m(cc.Label) ], f.prototype, "msgLabel", void 0);
i([ m(cc.Sprite) ], f.prototype, "icon", void 0);
i([ m(cc.Node) ], f.prototype, "dot", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/Player/GameIconMng": "GameIconMng",
"../../../Game/Player/Mng": "Mng",
"../../../TGA": "TGA"
} ],
MsgMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a178+U8slAMr8Kuv2hems5", "MsgMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.MsgMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./DynamicMng");
class r {
constructor() {
this.msgs = [];
this.newAggregateMsgCnt = 0;
this.commentMeList = [];
this.newCommentCnt = 0;
this.commentMeStartIdx = 0;
}
appendLoadMsgs() {
return i(this, void 0, void 0, function*() {
if (s.DynamicMng.Ins.isInspectVersion()) return [];
let e = this.msgs.length, t = e + 10;
if (e >= (t = Math.min(t, 999))) return this.msgs;
let o = {
startIndex: e,
endIndex: t
}, i = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetAggregateMsgList,
params: o
}, n.Game_RGetAggregateMsgList);
if (i) {
this.newAggregateMsgCnt = i.newAggregateMsgCnt;
for (let e = 0; e < i.aggregateMsgList.length; e++) {
let t = i.aggregateMsgList[e];
this.msgs.push(t);
}
}
return this.msgs;
});
}
clearMsgDot() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearNewMsg,
params: {}
}, n.Game_RClearNewMsg);
this.newAggregateMsgCnt = 0;
});
}
appendLoadCommentMe() {
return i(this, void 0, void 0, function*() {
if (s.DynamicMng.Ins.isInspectVersion()) return [];
let e = {
startIndex: this.commentMeStartIdx,
count: 8
}, t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetNewCommentListV2,
params: e
}, n.Game_RGetNewCommentListV2);
if (t) {
this.commentMeStartIdx = t.startIndex;
this.newCommentCnt = t.newCommentCnt;
for (let e = 0; e < t.commentList.length; e++) {
let o = t.commentList[e];
this.commentMeList.push(o);
}
this.commentMeList.sort((e, t) => t.stamp - e.stamp);
}
return this.commentMeList;
});
}
clearCommentMeDot() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearNewComment,
params: {}
}, n.Game_RClearNewComment);
this.newCommentCnt = 0;
});
}
}
o.MsgMng = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"./DynamicMng": "DynamicMng"
} ],
MsgPageToggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0f9afpgJzlEsroDzTUdsBLc", "MsgPageToggle");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../Frame/Util"), s = e("../../../Game/Player/FollowMng"), r = e("../../../Game/Player/MsgMng"), l = e("../../../TGA"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.dot = null;
this.label = null;
}
onLoad() {
cc.game.on("refreshDot", this.refresh, this);
this.node.on(n.default.CLICK, this.onClick, this);
}
onDestroy() {
cc.game.off("refreshDot", this.refresh, this);
}
onEnable() {
this.refresh();
}
onClick() {
l.TGA.track("click", {
btn: "msgBtn"
});
}
refresh() {
let e = s.FollowMng.Ins.newFansCnt + r.MsgMng.Ins.newAggregateMsgCnt + r.MsgMng.Ins.newCommentCnt;
this.dot.active = e > 0;
this.label.string = a.Util.dotLabelString(e);
}
};
i([ d(cc.Node) ], h.prototype, "dot", void 0);
i([ d(cc.Label) ], h.prototype, "label", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/Util": "Util",
"../../../Game/Player/FollowMng": "FollowMng",
"../../../Game/Player/MsgMng": "MsgMng",
"../../../TGA": "TGA"
} ],
MsgPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "05dfaxwnRRKNLkfOqEP6dhN", "MsgPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../../scripts/_autogen/data/data"), r = e("../../../CustomUI/Button"), l = e("../../../CustomUI/ScrollList"), c = e("../../../Frame/Top"), d = e("../../../Frame/UIColor"), h = e("../../../Frame/Util"), p = e("../../../Game/Player/FollowMng"), u = e("../../../Game/Player/MsgMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.fansBtn = null;
this.msgBtn = null;
this.commentBtn = null;
this.scrollList = null;
this.loadingNode = null;
this.emptyLabel = null;
this.idx = 0;
}
onLoad() {
this.fansBtn.node.on(r.default.CLICK, this.onFansBtn, this);
this.msgBtn.node.on(r.default.CLICK, this.onMsgBtn, this);
this.commentBtn.node.on(r.default.CLICK, this.onCommentBtn, this);
cc.game.on("refreshDot", this.refreshDot, this);
this.refreshDot();
this.onCommentBtn();
this.scrollList.getPrefabName = e => e instanceof s.UserSimpleMsg ? "FansCell" : e instanceof s.AggregateMsgData ? "MsgCell" : e instanceof s.CommentMeData ? "CommentMeCell" : void 0;
this.loadingNode.width = this.loadingNode.height = 0;
h.Util.updateAllWidget(this.node);
}
onDestroy() {
cc.game.off("refreshDot", this.refreshDot, this);
}
refreshDot() {
this.fansBtn.dot.active = p.FollowMng.Ins.newFansCnt > 0;
this.msgBtn.dot.active = u.MsgMng.Ins.newAggregateMsgCnt > 0;
this.commentBtn.dot.active = u.MsgMng.Ins.newCommentCnt > 0;
this.fansBtn.dotLabel.string = h.Util.dotLabelString(p.FollowMng.Ins.newFansCnt);
this.msgBtn.dotLabel.string = h.Util.dotLabelString(u.MsgMng.Ins.newAggregateMsgCnt);
this.commentBtn.dotLabel.string = h.Util.dotLabelString(u.MsgMng.Ins.newCommentCnt);
}
selectBtn(e) {
this.idx = e;
let t = [ this.fansBtn, this.msgBtn, this.commentBtn ];
for (let o = 0; o < t.length; o++) {
let i = o == e ? d.UIColor.blue : d.UIColor.white;
t[o].background.node.color = i;
}
}
onFansBtn() {
return n(this, void 0, void 0, function*() {
this.selectBtn(0);
this.refresh();
});
}
onMsgBtn() {
return n(this, void 0, void 0, function*() {
this.selectBtn(1);
this.refresh();
});
}
onCommentBtn() {
return n(this, void 0, void 0, function*() {
this.selectBtn(2);
this.refresh();
});
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = 0, t = [];
if (0 == this.idx) {
this.emptyLabel.string = a.I18nMgr.getI18nStringByZh("暂无粉丝");
if ((e = p.FollowMng.Ins.newFansCnt) > 0) {
yield p.FollowMng.Ins.clearFansDot();
cc.game.emit("refreshDot");
}
let o = p.FollowMng.Ins.fansIds;
o.length < 10 && (o = yield p.FollowMng.Ins.appendLoadFansIds());
t = yield p.FollowMng.Ins.loadInfos(o);
}
if (1 == this.idx) {
this.emptyLabel.string = a.I18nMgr.getI18nStringByZh("暂无消息");
if ((e = u.MsgMng.Ins.newAggregateMsgCnt) > 0) {
yield u.MsgMng.Ins.clearMsgDot();
cc.game.emit("refreshDot");
}
(t = u.MsgMng.Ins.msgs).length < 10 && (t = yield u.MsgMng.Ins.appendLoadMsgs());
}
if (2 == this.idx) {
this.emptyLabel.string = a.I18nMgr.getI18nStringByZh("暂无评论");
if ((e = u.MsgMng.Ins.newCommentCnt) > 0) {
yield u.MsgMng.Ins.clearCommentMeDot();
cc.game.emit("refreshDot");
}
(t = u.MsgMng.Ins.commentMeList).length < 10 && (t = yield u.MsgMng.Ins.appendLoadCommentMe());
}
for (let o = 0; o < t.length; o++) {
let i = t[o];
i && (i.isNew = o < e);
}
this.scrollList.setDataArr(t);
this.emptyLabel.node.active = 0 == t.length;
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (o > 100) {
0 == this.idx && (p.FollowMng.Ins.fansIds = []);
1 == this.idx && (u.MsgMng.Ins.msgs = []);
if (2 == this.idx) {
u.MsgMng.Ins.commentMeStartIdx = 0;
u.MsgMng.Ins.commentMeList = [];
}
yield this.refresh();
c.default.showToast("已刷新");
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
0 == this.idx && (yield p.FollowMng.Ins.appendLoadFansIds());
1 == this.idx && (yield u.MsgMng.Ins.appendLoadMsgs());
2 == this.idx && (yield u.MsgMng.Ins.appendLoadCommentMe());
this.refresh();
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(o, 100);
this.loadingNode.angle = o;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
};
i([ f(r.default) ], g.prototype, "fansBtn", void 0);
i([ f(r.default) ], g.prototype, "msgBtn", void 0);
i([ f(r.default) ], g.prototype, "commentBtn", void 0);
i([ f(l.default) ], g.prototype, "scrollList", void 0);
i([ f(cc.Node) ], g.prototype, "loadingNode", void 0);
i([ f(cc.Label) ], g.prototype, "emptyLabel", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Top": "Top",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/Player/FollowMng": "FollowMng",
"../../../Game/Player/MsgMng": "MsgMng"
} ],
Music: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2e713M2NZJCXrG2c73td7uN", "Music");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("./Util"), {ccclass: r, property: l} = cc._decorator;
let c = i = class extends cc.Component {
constructor() {
super(...arguments);
this.clip = null;
this.loop = !1;
this.volume = 1;
this.id = null;
this.playing = !1;
this.pausing = !1;
this.playingWhenDisable = !1;
this.url = "";
}
onLoad() {}
onEnable() {
this.playingWhenDisable && this.resume();
}
onDisable() {
this.playingWhenDisable = this.playing;
this.playing && this.pause();
}
onDestroy() {
this.stop();
}
loadMusic(e, t = null) {
return a(this, void 0, void 0, function*() {
this.url = e;
this.clip = null;
let o = yield s.Util.loadBundleRes("Music/" + e, cc.AudioClip);
if (this.url == e) {
this.clip = o;
if (t && this.isValid) {
t();
this.node.emit(i.Loaded);
}
}
});
}
play() {
if (!(this.volume <= 0)) {
null != this.id && this.stop();
this.id = cc.audioEngine.play(this.clip, this.loop, this.volume * i.volume);
this.pausing && this.pause();
cc.audioEngine.setFinishCallback(this.id, e => {
this.node.emit(i.Finish);
this.playing = !1;
this.id = null;
console.log("Music Finish", e);
});
this.playing = !0;
}
}
stop() {
cc.audioEngine.stop(this.id);
this.id = null;
this.playing = !1;
}
pause() {
this.pausing = !0;
if (this.id) {
cc.audioEngine.pause(this.id);
this.playing = !1;
}
}
resume() {
this.pausing = !1;
if (this.id) {
cc.audioEngine.resume(this.id);
this.playing = !0;
}
}
getDuration() {
return cc.audioEngine.getDuration(this.id);
}
setCurrentTime(e) {
cc.audioEngine.setCurrentTime(this.id, e);
}
getCurrentTime() {
return cc.audioEngine.getCurrentTime(this.id);
}
getState() {
return cc.audioEngine.getState(this.id);
}
hasId() {
return null !== this.id;
}
isLoaded() {
return null !== this.clip;
}
};
c.Finish = "MusicFinish";
c.Loaded = "MusicLoaded";
c.volume = 1;
n([ l({
type: cc.AudioClip
}) ], c.prototype, "clip", void 0);
n([ l ], c.prototype, "loop", void 0);
n([ l ], c.prototype, "volume", void 0);
c = i = n([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"./Util": "Util"
} ],
MyFollowComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b173amd/11FWYEVn75WnwX0", "MyFollowComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.list = null;
this.data = null;
}
onLoad() {
this.moreBtn.node.on(a.default.CLICK, this.onMoreBtn, this);
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
this.data = e;
this.list.setDataArr(e.games);
}
onMoreBtn() {
r.default.ins.Enter("GameListScene", e => {
e.setData({
title: "我的关注",
games: this.data.games,
from: "MyFollowComp",
appendFunc: () => n(this, void 0, void 0, function*() {
return [];
})
});
});
}
};
i([ c(a.default) ], d.prototype, "moreBtn", void 0);
i([ c(s.default) ], d.prototype, "list", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager"
} ],
MyGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "67e77hBNRhHF5cdWYXCwGJO", "MyGameCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/GameIcon"), d = e("../../../CustomUI/ScrollList"), h = e("../../../Frame/SceneManager"), p = e("../../../Frame/Top"), u = e("../../../Frame/UIColor"), m = e("../../../Frame/Util"), f = e("../../../Game/Player/CreditMng"), g = e("../../../Game/Player/DynamicMng"), y = e("../../../TGA"), {ccclass: v, property: C} = cc._decorator;
let _ = i = class extends cc.Component {
constructor() {
super(...arguments);
this.label_name = null;
this.label_playNum = null;
this.label_thumbNum = null;
this.label_collectNum = null;
this.label_hurryNum = null;
this.stateLabel = null;
this.editBtn = null;
this.detailBtn = null;
this.gameIcon = null;
this.publishBtn = null;
this.parentGameBtn = null;
this.gameData = null;
}
onLoad() {
this.publishBtn.node.on(l.default.CLICK, this.onPublishBtn, this);
this.node.on(l.default.CLICK, this.onClickCell, this);
this.node.on(d.default.SET_DATA, this.setData, this);
this.editBtn.node.on(l.default.CLICK, this.onClickEdit, this);
this.detailBtn.node.on(l.default.CLICK, this.onClickDetail, this);
this.parentGameBtn.node.on(l.default.CLICK, this.onParentBtn, this);
this.stateLabel.node.on(l.default.CLICK, this.onStateBtn, this);
}
setData(e) {
return a(this, void 0, void 0, function*() {
this.gameData = e;
this.label_name.string = m.Util.clampStr(e.name, 6, "..");
this.label_playNum.string = "" + (e.playCnt || 0);
this.label_thumbNum.string = "" + (e.thumbCnt || 0);
this.label_collectNum.string = "" + (e.collectionCnt || 0);
this.label_hurryNum.string = "" + (e.hurryCnt || 0);
this.parentGameBtn.node.active = !1;
this.detailBtn.node.active = !1;
this.stateLabel.node.getComponent(l.default).interactable = !1;
this.stateLabel.node.color = u.UIColor.gray;
switch (e.status) {
case r.GameStatus.noPublish:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("未发布");
this.node.color = u.UIColor.lightOrange;
this.publishBtn.node.active = !0;
this.parentGameBtn.node.active = !!e.parnetGame;
break;

case r.GameStatus.inReview:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核中");
this.stateLabel.node.color = u.UIColor.black;
break;

case r.GameStatus.success:
this.detailBtn.node.active = !0;
this.node.color = u.UIColor.white;
this.publishBtn.node.active = !1;
this.stateLabel.string = m.Util.parseDataString(e.lastPublishStamp);
break;

case r.GameStatus.fail:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核未通过");
this.stateLabel.node.color = u.UIColor.red;
this.stateLabel.node.getComponent(l.default).interactable = !0;
break;

case r.GameStatus.off:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("已下架");
}
this.gameIcon.loadUrl(e.iconTextureName);
});
}
onPublishBtn() {
g.DynamicMng.Ins.isDisable(g.FunctionEnum.PublishGame, !0) || (this.gameData.worldIds.length <= 0 ? p.default.showToast("游戏至少包含一个地图") : h.default.ins.OpenPanelByName("PublishGamePanel", e => {
e.setData(this.gameData);
}));
}
onClickCell() {
return a(this, void 0, void 0, function*() {
g.DynamicMng.Ins.isDisable(g.FunctionEnum.PublishGame, !0) || (f.CreditMng.Ins.credit <= 2 ? p.default.showToast("近期违规，不能创造或编辑") : this.onClickEdit());
});
}
onClickEdit() {
return a(this, void 0, void 0, function*() {
if (!g.DynamicMng.Ins.isDisable(g.FunctionEnum.PublishGame, !0)) if (f.CreditMng.Ins.credit <= 2) p.default.showToast("近期违规，不能创造或编辑"); else if (!i.clickLock) {
i.clickLock = !0;
h.default.ins.Enter("EditGameScene", e => a(this, void 0, void 0, function*() {
i.clickLock = !1;
let t = this.gameData;
e.setData(t);
}));
}
});
}
onClickDetail() {
return a(this, void 0, void 0, function*() {
if (!this.gameData.isOff && !i.clickLock) {
i.clickLock = !0;
if (this.gameData && this.gameData.lastPublishStamp) {
h.default.ins.Enter("GameCoverScene", e => {
i.clickLock = !1;
e.setData(this.gameData.id);
});
y.TGA.track("clickGameCell", {
gameId: this.gameData.id,
from: "MineGameCell"
});
} else i.clickLock = !1;
}
});
}
onParentBtn() {
return a(this, void 0, void 0, function*() {
h.default.ins.Enter("GameCoverScene", e => {
e.setData(this.gameData.parnetGame.id);
}, h.ShiftAnima.moveLeftShift);
});
}
onStateBtn() {
return a(this, void 0, void 0, function*() {
h.default.ins.OpenPanelByName("ReviewFailReasonPanel", e => {
e.setData(this.gameData.offReason);
});
});
}
};
_.clickLock = !1;
n([ C(cc.Label) ], _.prototype, "label_name", void 0);
n([ C(cc.Label) ], _.prototype, "label_playNum", void 0);
n([ C(cc.Label) ], _.prototype, "label_thumbNum", void 0);
n([ C(cc.Label) ], _.prototype, "label_collectNum", void 0);
n([ C(cc.Label) ], _.prototype, "label_hurryNum", void 0);
n([ C(cc.Label) ], _.prototype, "stateLabel", void 0);
n([ C(l.default) ], _.prototype, "editBtn", void 0);
n([ C(l.default) ], _.prototype, "detailBtn", void 0);
n([ C(c.default) ], _.prototype, "gameIcon", void 0);
n([ C(l.default) ], _.prototype, "publishBtn", void 0);
n([ C(l.default) ], _.prototype, "parentGameBtn", void 0);
_ = i = n([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/GameIcon": "GameIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../TGA": "TGA"
} ],
MyGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "76bff+TGWFM5IlyAh3Dkab6", "MyGoodsCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/ScrollList"), d = e("../../../Frame/SceneManager"), h = e("../../../Frame/Share"), p = e("../../../Frame/Top"), u = e("../../../Frame/UIColor"), m = e("../../../Frame/Util"), f = e("../../../Game/GameEnv"), g = e("../../../Game/Hortor"), y = e("../../../Game/OperationFlow"), v = e("../../../Game/Player/CreditMng"), C = e("../../../Game/Player/DynamicMng"), _ = e("../../../Game/Player/Mng"), S = e("../../../Game/Player/ShopMng"), I = e("../../../Game/Player/TalkMng"), G = e("../../../Role"), T = e("../../../TGA"), {ccclass: b, property: M} = cc._decorator;
let P = i = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.priceLabel = null;
this.saleCntLabel = null;
this.stateLabel = null;
this.offBtn = null;
this.editBtn = null;
this.shareBtn = null;
this.data = null;
}
onLoad() {
this.node.on(c.default.SET_DATA, this.setData, this);
this.node.on(l.default.CLICK, this.onEditBtn, this);
this.offBtn.node.on(l.default.CLICK, this.onOffBtn, this);
this.editBtn.node.on(l.default.CLICK, this.onEditBtn, this);
this.shareBtn.node.on(l.default.CLICK, this.onShareBtn, this);
this.stateLabel.node.on(l.default.CLICK, this.onStateBtn, this);
}
setData(e) {
this.data = e;
this.nameLabel.string = m.Util.clampStr(e.name, 9, "..");
this.priceLabel.string = e.price + "";
this.saleCntLabel.string = e.saleCnt + "";
this.stateLabel.node.getComponent(l.default).interactable = !1;
this.stateLabel.node.color = u.UIColor.gray;
switch (e.status) {
case r.GoodsStatus.inReview:
this.stateLabel.string = "审核中";
this.stateLabel.node.color = u.UIColor.black;
break;

case r.GoodsStatus.success:
this.stateLabel.string = m.Util.parseDataString(e.upStamp);
break;

case r.GoodsStatus.fail:
this.stateLabel.string = "审核未通过";
this.stateLabel.node.color = u.UIColor.red;
this.stateLabel.node.getComponent(l.default).interactable = !0;
}
_.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 160);
}
onEditBtn() {
return a(this, void 0, void 0, function*() {
if (C.DynamicMng.Ins.isDisable(C.FunctionEnum.PublishGoods, !0)) return;
if (v.CreditMng.Ins.credit <= 2) {
p.default.showToast("近期违规，不能上传作品");
return;
}
let e = {
goodsId: "",
name: "",
iconTextureName: "",
advert: "",
price: 0,
goodsType: r.GoodsType.all,
tileConfIds: [],
actorConfIds: [],
propConfIds: [],
deviceConfIds: [],
weaponConfIds: [],
bulletConfIds: [],
sensitiveMsg: "",
reviewStr: "",
reviewImageMap: null
};
if (this.data) {
e.goodsId = this.data.id;
e.iconTextureName = this.data.iconTextureName;
e.advert = this.data.advert;
e.name = this.data.name;
e.price = this.data.price;
e.goodsType = this.data.goodsType;
this.data.goodsContent.tileConfs.forEach(t => {
e.tileConfIds.push(t.id);
});
this.data.goodsContent.actorConfs.forEach(t => {
e.actorConfIds.push(t.id);
});
this.data.goodsContent.deviceConfs.forEach(t => {
e.deviceConfIds.push(t.id);
});
this.data.goodsContent.propConfs.forEach(t => {
e.propConfIds.push(t.id);
});
this.data.goodsContent.weaponConfs.forEach(t => {
e.weaponConfIds.push(t.id);
});
this.data.goodsContent.bulletConfs.forEach(t => {
e.bulletConfIds.push(t.id);
});
}
if (!i.clickLock) {
i.clickLock = !0;
d.default.ins.OpenPanelByName("UploadGoodsPanel", t => {
i.clickLock = !1;
t.setData(e, this.data ? "modify" : "upload");
t.uploadCall = () => {
cc.game.emit("MyGoodsChange");
};
});
}
});
}
onOffBtn() {
d.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = s.I18nMgr.exceI18nStringByZh("是否下架作品：${this.data.name}？", [ {
paramName: "this.data.name",
param: this.data.name
} ]);
e.setLeftBtn({
text: "下架",
color: u.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
yield S.default.Ins.offGoods(this.data.id);
cc.game.emit("MyGoodsChange");
})
});
e.setRightBtn({
text: "点错了",
color: u.UIColor.blue
});
});
}
onShareBtn() {
let e = {
type: "goods",
isMine: this.data.playerId == G.default.Ins.role.id,
goodsId: this.data.id
}, t = {
shareType: "shareGoods",
title: g.Hortor.isApp() ? this.data.name : `${this.data.name}：${this.data.advert}`,
desc: this.data.advert,
imageUrl: f.gameEnv.fileCDN + this.data.iconTextureName,
imageName: this.data.iconTextureName,
query: m.Util.toQueryStr(e),
talk: {
title: "",
sections: [ {
type: I.TalkSectionType.Goods,
goodsId: this.data.id
} ]
},
success: () => {
p.default.showToast("分享成功");
T.TGA.track("share", e);
},
fail: e => {
e || p.default.showToast("分享失败");
}
};
h.Share.share(t);
}
onStateBtn() {
d.default.ins.OpenPanelByName("ReviewFailReasonPanel", e => {
let t = y.OperationFlow.makeOffReason(this.data.offReason);
e.setData(t);
});
}
};
P.clickLock = !1;
n([ M(cc.Sprite) ], P.prototype, "sprite", void 0);
n([ M(cc.Label) ], P.prototype, "nameLabel", void 0);
n([ M(cc.Label) ], P.prototype, "priceLabel", void 0);
n([ M(cc.Label) ], P.prototype, "saleCntLabel", void 0);
n([ M(cc.Label) ], P.prototype, "stateLabel", void 0);
n([ M(l.default) ], P.prototype, "offBtn", void 0);
n([ M(l.default) ], P.prototype, "editBtn", void 0);
n([ M(l.default) ], P.prototype, "shareBtn", void 0);
P = i = n([ b ], P);
o.default = P;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Share": "Share",
"../../../Frame/Top": "Top",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/GameEnv": "GameEnv",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/ShopMng": "ShopMng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../Role": "Role",
"../../../TGA": "TGA"
} ],
MyTalkCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f0fceluBSpGpIkg+S9jbnK2", "MyTalkCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/ScrollList"), d = e("../../../Frame/SceneManager"), h = e("../../../Frame/UIColor"), p = e("../../../Frame/Util"), u = e("../../../Game/OperationFlow"), m = e("../../../Game/Player/TalkMng"), f = e("../../../TGA"), {ccclass: g, property: y} = cc._decorator;
let v = i = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.stateLabel = null;
this.menuBtn = null;
this.commentCntLabel = null;
this.upBtn = null;
this.data = null;
}
onLoad() {
this.node.on(l.default.CLICK, this.onClickCell, this);
this.node.on(c.default.SET_DATA, this.setData, this);
this.menuBtn.node.on(l.default.CLICK, () => {
m.default.Ins.onMenuBtn(this.data, this.menuBtn);
}, this);
this.stateLabel.node.on(l.default.CLICK, this.onStateBtn, this);
this.upBtn.node.on(l.default.CLICK, this.onUpBtn, this);
}
setData(e) {
this.data = e;
this.titleLabel.string = p.Util.clampStr(e.title, 45, `..(${p.Util.parseDataString(e.upStamp)})`);
p.Util.updateLabel(this.titleLabel);
this.node.height = this.titleLabel.node.height + 150;
this.stateLabel.node.getComponent(l.default).interactable = !1;
this.stateLabel.node.color = h.UIColor.gray;
this.stateLabel.node.active = !1;
this.upBtn.node.active = !1;
this.commentCntLabel.node.parent.active = !1;
this.upBtn.icon.node.color = e.isUp ? h.UIColor.blue : h.UIColor.white;
switch (e.status) {
case r.ManReviewStatus.noPublish:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("未发布");
break;

case r.ManReviewStatus.inReview:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核中");
this.stateLabel.node.color = h.UIColor.black;
break;

case r.ManReviewStatus.success:
this.upBtn.node.active = !0;
this.commentCntLabel.node.parent.active = !0;
this.upBtn.label.string = Math.max(e.upCnt, 0) + s.I18nMgr.getI18nStringByZh("点赞");
this.commentCntLabel.string = e.commentsCntSum + s.I18nMgr.getI18nStringByZh("评论");
break;

case r.ManReviewStatus.fail:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核未通过");
this.stateLabel.node.color = h.UIColor.red;
this.stateLabel.node.getComponent(l.default).interactable = !0;
break;

case r.ManReviewStatus.off:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("已下架");
break;

case r.ManReviewStatus.delete:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("已被删除");
break;

case r.ManReviewStatus.unknown:
this.stateLabel.node.active = !0;
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("未知错误");
}
}
calcuHeight(e) {
let t = i.calcuHeightCache.get(e.uId);
if (!t) {
this.titleLabel.string = p.Util.clampStr(e.title, 45, `..(${p.Util.parseDataString(e.upStamp)})`);
p.Util.updateLabel(this.titleLabel);
t = this.titleLabel.node.height + 150;
i.calcuHeightCache.set(e.uId, t);
}
return t;
}
onClickCell() {
return a(this, void 0, void 0, function*() {
d.default.ins.Enter("TalkScene", e => {
e.setData(this.data.uId);
}, d.ShiftAnima.moveLeftShift);
});
}
onClickEdit() {
return a(this, void 0, void 0, function*() {
let e = yield m.default.Ins.loadTalkDetail(this.data.uId);
d.default.ins.Enter("EditTalkScene", t => {
t.toModifyStyle(e);
}, d.ShiftAnima.moveLeftShift);
});
}
onStateBtn() {
return a(this, void 0, void 0, function*() {
d.default.ins.OpenPanelByName("ReviewFailReasonPanel", e => {
let t = u.OperationFlow.makeOffReason(this.data.offReason);
e.setData(t);
});
});
}
onUpBtn() {
return a(this, void 0, void 0, function*() {
if (this.data.isUp) yield m.default.Ins.cancelUpTalk(this.data.uId); else if (this.data.isDown) yield m.default.Ins.cancelDownTalk(this.data.uId); else {
yield m.default.Ins.upTalk(this.data.uId);
f.TGA.track("Talk", {
step: "clickThumbBtn3"
});
}
this.setData(this.data);
});
}
};
v.calcuHeightCache = new Map();
n([ y(cc.Label) ], v.prototype, "titleLabel", void 0);
n([ y(cc.Label) ], v.prototype, "stateLabel", void 0);
n([ y(l.default) ], v.prototype, "menuBtn", void 0);
n([ y(cc.Label) ], v.prototype, "commentCntLabel", void 0);
n([ y(l.default) ], v.prototype, "upBtn", void 0);
v = i = n([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../TGA": "TGA"
} ],
NetworkMgr: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0d3feFvvQhFQaAvqx9jjfJ8", "NetworkMgr");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.NetIns = o.NetworkMgr = void 0;
class n {
constructor() {
this.reconnectTime = 0;
this.reconnectWaitTime = 0;
this.httpDelegate = new orange.HttpDelegate();
this.wsDelegate = new orange.WebSocketDelegate();
this._isInited = !1;
this._isNetworkError = !1;
this._watchReConnect = null;
this._dictionaryServerCodeResponse = new Map();
}
get isInited() {
return this._isInited;
}
init() {
this._isInited = !0;
}
connect(e, t, o, n) {
return i(this, void 0, void 0, function*() {
this.token = e;
this.wsDelegate.root = o;
this.connectOptions = {
token: this.token,
encoding: t,
url: n
};
return this.wsDelegate.connect(this.connectOptions);
});
}
get connected() {
return this.wsDelegate.connected;
}
sendHttpAsync(e) {
return i(this, void 0, void 0, function*() {
return yield this.httpDelegate.sendAsync(e);
});
}
send(e) {
this.wsDelegate.send(e);
}
sendAsync(e) {
return i(this, void 0, void 0, function*() {
return yield this.wsDelegate.sendAsync(e);
});
}
on(e, t, o) {
this.wsDelegate.events.on(e, t, o);
}
off(e, t, o) {
this.wsDelegate.events.off(e, t, o);
}
onClose(e, t) {
this.wsDelegate.events.on(orange.WebSocketDelegate.EVENT_CLOSED, e, t);
}
deWatchNetWork() {
this.wsDelegate.events.off(orange.WebSocketDelegate.EVENT_CLOSED, this.onOrangeClose, this);
}
watchNetWork() {
console.log("watchNetWork..");
this.onClose(this.onOrangeClose, this);
console.log("watchNetWork reg onOrangeClose");
}
checkNetworkStatus() {
let e = this._isNetworkError;
this._isNetworkError = !0;
cc.sys.getNetworkType() != cc.sys.NetworkType.NONE && (this._isNetworkError = !1);
if (e && !this._isNetworkError) {
console.log(">>Is Network Reconnet.");
this.onNetstatusChange({
isConnected: !e
});
}
}
onOrangeClose() {
this.startConnectTimer();
}
setWatchReConnect(e) {
this._watchReConnect = e;
}
retryConnectExcute() {
this.wsDelegate.connected || cc.director.getTotalTime() >= this.reconnectTime && this.retryContent();
}
retryContent() {
return i(this, void 0, void 0, function*() {
cc.sys.platform == cc.sys.WECHAT_GAME && wx.showLoading({
title: "网络环境不好哦",
mask: !0
});
yield this.wsDelegate.connect(this.connectOptions);
if (this.wsDelegate.connected) {
cc.sys.platform == cc.sys.WECHAT_GAME && wx.hideLoading();
this._watchReConnect && this._watchReConnect();
console.log("---Net---断线重连成功");
this.clearReconnectTimer();
} else {
this.reconnectWaitTime = this.reconnectWaitTime || 1e3;
this.reconnectTime = cc.director.getTotalTime() + this.reconnectWaitTime;
this.reconnectWaitTime *= 2;
this.reconnectWaitTime > 256e3 && (this.reconnectWaitTime = 256e3);
console.log("---Net---断线重连失败，下次重连时间", this.reconnectTime);
}
});
}
startConnectTimer() {
console.log(">>startConnectTimer");
this.reconnectWaitTime = 1e3;
this.reconnectTime = 0;
this.reconnectHandle || (this.reconnectHandle = setInterval(this.retryConnectExcute.bind(this), 1e3));
}
clearReconnectTimer() {
this.reconnectWaitTime = 0;
this.reconnectTime = 0;
if (this.reconnectHandle) {
clearInterval(this.reconnectHandle);
this.reconnectHandle = null;
}
}
onNetstatusChange(e) {
if (!this.wsDelegate.connected && e.isConnected) {
console.log("---Net---网络状态变化,立即重连", e);
this.startConnectTimer();
}
}
RegistServerCodeResponse(e, t) {
this._dictionaryServerCodeResponse.has(e) || this._dictionaryServerCodeResponse.set(e, []);
this._dictionaryServerCodeResponse.get(e).indexOf(t) < 0 && this._dictionaryServerCodeResponse.get(e).push(t);
}
SendCmdAsync(e, t) {
return i(this, void 0, void 0, function*() {
let o = yield this.sendAsync(e);
return new Promise(e => {
if (o && 0 == o.code) e(this.DecodeMsg(o.decBody, t)); else {
console.error(o.error);
e(null);
}
});
});
}
DecodeMsg(e, t) {
let o = new t();
o.setValue(e);
return o;
}
}
o.NetworkMgr = n;
o.NetIns = new n();
cc._RF.pop();
}, {} ],
NoticePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0246boVSGxNnbBmH8Tng8Nb", "NoticePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.label = null;
this.okBtn = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onOkBtn, this);
}
setData(e) {
this.label.string = e;
}
onOkBtn() {
this.closePanel();
}
};
i([ r(cc.Label) ], l.prototype, "label", void 0);
i([ r(n.default) ], l.prototype, "okBtn", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
NumberEditBoxItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "79f0dcCXbBBcaiCNjlxMY0d", "NumberEditBoxItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../Frame/SceneManager"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.surfixLabel = null;
this.editor = null;
this.label_num = null;
this.onChange = null;
}
setData(e, t, o) {
this.editor.off(a.default.CLICK, this.onClickBtn, this);
this.editor.removeComponent(a.default);
this.editor.addComponent(a.default);
this.editor.on(a.default.CLICK, this.onClickBtn, this);
this.onChange = o;
this._name = e;
this.nameLabel && (this.nameLabel.string = e);
this.surfixLabel && (this.surfixLabel.string = "");
this.label_num.node.active = !0;
this.label_num.string = t;
}
setDataWithSurfix(e, t, o, i) {
this.editor.off(a.default.CLICK, this.onClickBtn, this);
this.editor.removeComponent(a.default);
this.editor.addComponent(a.default);
this.editor.on(a.default.CLICK, this.onClickBtn, this);
this.onChange = i;
this._name = e;
this.nameLabel && (this.nameLabel.string = e);
this.surfixLabel && (this.surfixLabel.string = t);
this.label_num.node.active = !0;
this.label_num.string = o;
}
onClickBtn() {
return n(this, void 0, void 0, function*() {
s.default.ins.OpenPanelByName("NumberInputPanel", e => {
e.setData(this._name, this.label_num.string, e => {
this.label_num.string = e;
this.onChange && this.onChange(e);
});
});
});
}
};
i([ l(cc.Label) ], c.prototype, "nameLabel", void 0);
i([ l(cc.Label) ], c.prototype, "surfixLabel", void 0);
i([ l(cc.Node) ], c.prototype, "editor", void 0);
i([ l(cc.Label) ], c.prototype, "label_num", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager"
} ],
NumberInputPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0bd30O3QddBZ4VGH4/FM1m5", "NumberInputPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.label_title = null;
this.okBtn = null;
this.backBtn = null;
this.btn1 = null;
this.btn2 = null;
this.btn3 = null;
this.btn4 = null;
this.btn5 = null;
this.btn6 = null;
this.btn7 = null;
this.btn8 = null;
this.btn9 = null;
this.btn0 = null;
this.btnc = null;
this.btnSign = null;
this.ed_box = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onClickOk, this);
this.backBtn.node.on(n.default.CLICK, this.onClickBack, this);
this.btn0.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn1.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn2.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn3.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn4.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn5.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn6.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn7.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn8.node.on(n.default.CLICK, this.onClickNumber, this);
this.btn9.node.on(n.default.CLICK, this.onClickNumber, this);
this.btnc.node.on(n.default.CLICK, this.onClickNumber, this);
this.btnSign.node.on(n.default.CLICK, this.onSignBtn, this);
}
onSignBtn() {
let e = this.ed_box.textLabel.string || "";
e && (e = e.includes("-") ? e.substr(1, e.length - 1) : "-" + e);
this.ed_box.string = e;
}
onClickNumber(e) {
let t = this.ed_box.textLabel.string || "";
if (!(t.length >= this.ed_box.maxLength)) {
switch (e.node.name[e.node.name.length - 1]) {
case "1":
t += "1";
break;

case "2":
t += "2";
break;

case "3":
t += "3";
break;

case "4":
t += "4";
break;

case "5":
t += "5";
break;

case "6":
t += "6";
break;

case "7":
t += "7";
break;

case "8":
t += "8";
break;

case "9":
t += "9";
break;

case "0":
t += "0";
break;

case "c":
t.includes(".") || (t += ".");
}
this.ed_box.string = t;
}
}
onClickBack() {
let e = this.ed_box.textLabel.string;
e = e.slice(0, -1);
this.ed_box.string = e;
}
onClickOk() {
let e = this.ed_box.textLabel.string, t = Number.parseFloat(e) || 0;
this.call && this.call(t);
this.closePanel();
}
setData(e, t, o) {
this.label_title.string = e;
this.ed_box.string = t;
this.call = o;
}
};
i([ r(cc.Label) ], l.prototype, "label_title", void 0);
i([ r(n.default) ], l.prototype, "okBtn", void 0);
i([ r(n.default) ], l.prototype, "backBtn", void 0);
i([ r(n.default) ], l.prototype, "btn1", void 0);
i([ r(n.default) ], l.prototype, "btn2", void 0);
i([ r(n.default) ], l.prototype, "btn3", void 0);
i([ r(n.default) ], l.prototype, "btn4", void 0);
i([ r(n.default) ], l.prototype, "btn5", void 0);
i([ r(n.default) ], l.prototype, "btn6", void 0);
i([ r(n.default) ], l.prototype, "btn7", void 0);
i([ r(n.default) ], l.prototype, "btn8", void 0);
i([ r(n.default) ], l.prototype, "btn9", void 0);
i([ r(n.default) ], l.prototype, "btn0", void 0);
i([ r(n.default) ], l.prototype, "btnc", void 0);
i([ r(n.default) ], l.prototype, "btnSign", void 0);
i([ r(cc.EditBox) ], l.prototype, "ed_box", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel"
} ],
OpenGamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "40d52AcldtKg5T++J+MlRZP", "OpenGamePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/GameIconMng"), c = e("../../Scene/GameCoverScene/GameCoverScene"), {ccclass: d, property: h} = cc._decorator;
let p = class extends s.default {
constructor() {
super(...arguments);
this.gameNameLabel = null;
this.titleLabel = null;
this.sprite = null;
this.okBtn = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.titleLabel.string = e;
this.data = t;
this.gameNameLabel.string = `《${t.name}》`;
l.GameIconMng.Ins.setSprite(this.sprite, t.iconTextureName, 300);
});
}
onOkBtn() {
this.closePanel();
let e = this.data.id, t = r.default.ins.findScene(c.default);
t ? t.setData(e) : r.default.ins.Enter("GameCoverScene", t => {
t.setData(e);
});
}
};
i([ h(cc.Label) ], p.prototype, "gameNameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "titleLabel", void 0);
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(a.default) ], p.prototype, "okBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/GameIconMng": "GameIconMng",
"../../Scene/GameCoverScene/GameCoverScene": "GameCoverScene"
} ],
OperationFlow: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "551efCJKrZAJJLA5RVkjhic", "OperationFlow");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.OperationFlow = void 0;
const n = e("../Frame/Top"), a = e("../Frame/Util"), s = e("../Frame/Sound"), r = e("../Frame/SceneManager"), l = e("./Player/Mng"), c = e("./World/Tile"), d = e("../TGA"), h = e("../Role"), p = e("../../scripts/_autogen/cmd/cmd"), u = e("../Frame/NetworkMgr"), m = e("../../scripts/_autogen/data/data"), f = e("../GameData/GameTypeDefine"), g = e("./Player/GameCellDataMng"), y = e("./Player/ShopMng"), v = e("../Frame/UIColor"), C = e("../Scene/GameCoverScene/GameCoverScene"), _ = e("./Player/DynamicMng"), S = e("../CustomUI/Button"), I = e("../../i18n/i18nMgr");
(function(e) {
e.flyCoin = function(e) {
let t = e.cnt;
if (t <= 0) return;
let o = 5;
o = t >= 800 ? 40 : t >= 400 ? 20 : t >= 200 ? 10 : 5;
let i = Math.ceil(t / o), r = Math.min(1 / i, 50);
n.default.bezierSprite({
url: "Atlas/UI/coin",
from: a.Util.convertPosition(e.fromNode, n.default.node),
to: a.Util.convertPosition(e.toNode, n.default.node),
time: .6,
cnt: i,
deltaT: r,
onEnd: n => {
s.Sound.play("gainCoin");
if (n) {
let n = t - o * (i - 1);
n > 0 && e.onArrive(n);
} else e.onArrive(o);
}
});
};
e.flyEnergy = function(e) {
n.default.bezierSprite({
url: "Atlas/UI/energy",
from: a.Util.convertPosition(e.fromNode, n.default.node),
to: a.Util.convertPosition(e.toNode, n.default.node),
time: .6,
cnt: e.cnt,
onEnd: t => {
s.Sound.play("gainEnergy");
e.onArrive(1, t);
}
});
};
e.flyDiamond = function(e) {
n.default.bezierSprite({
url: "Atlas/UI/diamond",
from: a.Util.convertPosition(e.fromNode, n.default.node),
to: a.Util.convertPosition(e.toNode, n.default.node),
time: .6,
cnt: e.cnt,
onBegin: () => {
s.Sound.play("gainDiamond1");
},
onEnd: t => {
s.Sound.play("gainDiamond2");
e.onArrive(1, t);
}
});
};
e.getConfTypeByRewardType = function(e) {
switch (e) {
case "tile":
return f.CommonDataType.Tile;

case "actor":
return f.CommonDataType.Actor;

case "device":
return f.CommonDataType.Device;

case "prop":
return f.CommonDataType.Prop;

case "weapon":
return f.CommonDataType.Weapon;
}
return -1;
};
e.openRewards = function(e, t = null) {
for (let t = 0; t < e.length; t++) {
let o = e[t];
switch (o.type) {
case "coin":
r.default.ins.pushPanel("GainCoinPanel", e => {
e.setData(o.cnt);
});
break;

case "tile":
r.default.ins.pushPanel("GainTilePanel", e => {
e.setData(o.id);
});
break;

case "actor":
r.default.ins.pushPanel("GainActorPanel", e => {
e.setData(o.id);
});
break;

case "device":
r.default.ins.pushPanel("GainDevicePanel", e => {
e.setData(o.id);
});
break;

case "prop":
r.default.ins.pushPanel("GainPropPanel", e => {
e.setData(o.id);
});
break;

case "weapon":
r.default.ins.pushPanel("GainWeaponPanel", e => {
e.setData(o.id);
});
break;

case "PublishTicket":
r.default.ins.pushPanel("GainPublishTicketPanel", e => {
e.setData(o.cnt);
});
break;

case "unlock":
r.default.ins.pushPanel("UnlockPanel", e => {
e.setData(o.title, o.str);
});
}
}
r.default.ins.pushCall(() => {
t && t();
});
r.default.ins.checkNextPanel();
};
e.paintTile = function(e, t) {
r.default.ins.Enter("PaintScene", o => {
o.toPaintTile();
o.completeCall = (o, n, a) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreateCommonPanel", s => {
let c = {
type: f.CommonDataType.Tile,
id: "",
tileType: e,
name: "自定义地块",
author: h.default.Ins.userName,
textureName: "",
tilePhyType: f.TilePhysicType.Block,
shape: f.TileShape.Normal,
importOthersImg: n,
belongGameId: a
};
s.setData(f.CommonDataType.Tile, c, null, e => i(this, void 0, void 0, function*() {
yield l.Mng.Ins.assetGroupMng.curGroupAppend(e);
r.default.ins.Back();
t(e);
d.TGA.track("paint", {
type: "tile"
});
}));
s.setPixel(o);
});
});
});
};
e.paintActor = function(e) {
r.default.ins.Enter("PaintScene", t => {
t.toPaintActor();
t.completeCall = (t, o, s, p) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreateActorPanel", u => {
let g = a.Util.getPixelTirmBounds(t, 256, 256), y = a.Util.bounds2OffsetAndSize(g), v = {
type: f.CommonDataType.Actor,
id: "",
name: "自定义角色",
textureName: "",
author: h.default.Ins.userName,
gunId: "",
hp: 1,
hpMax: 1,
collider: y,
rpgConf: {
moveSpeed: 256,
aiMoveType: f.AIMoveType.None,
beatenLockHpTime: .8
},
jumpPlatformConf: {
moveSpeed: 3 * c.default.SIZE,
jumpStep: 2,
jumpHight: 2.5 * c.default.SIZE,
aiMoveType: f.AIMoveType.None,
beatenLockHpTime: .8
},
importOthersImg: o,
belongGameId: s
};
u.setData(v, t);
u.confirmCall = o => i(this, void 0, void 0, function*() {
n.default.showLoading("正在上传（1/2）");
let i = yield a.Util.uploadPng(t, m.ImageFileType.actor, p);
if (i.err) n.default.hideLoading("图片违规：" + i.err); else {
o.textureName = i.url;
n.default.showLoading("正在上传（2/2）");
if (yield l.Mng.Ins.actorMng.create(o)) {
yield l.Mng.Ins.assetGroupMng.curGroupAppend(o);
n.default.hideLoading("上传成功");
r.default.ins.Back();
e();
d.TGA.track("paint", {
type: "actor"
});
} else n.default.hideLoading("网络错误，上传失败!");
}
});
});
});
});
};
e.paintDevice = function(e) {
r.default.ins.OpenPanelByName("DeviceTypePanel", t => {
t.call = t => {
r.default.ins.Enter("PaintScene", o => {
o.toPaintTile();
o.completeCall = (o, s, c, p) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreateDevicePanel", u => {
let f = a.Util.deepCopy(t);
u.setData(f, o);
u.confirmCall = () => i(this, void 0, void 0, function*() {
f.author = h.default.Ins.userName;
f.importOthersImg = s;
f.belongGameId = c;
n.default.showLoading("正在上传（1/2）");
let t = yield a.Util.uploadPng(o, m.ImageFileType.device, p);
if (t.err) n.default.hideLoading("图片违规：" + t.err); else {
n.default.showLoading("正在上传（2/2）");
f.textureName = t.url;
delete f.isBuildIn;
yield l.Mng.Ins.deviceMng.create(f);
yield l.Mng.Ins.assetGroupMng.curGroupAppend(f);
n.default.hideLoading("上传成功");
r.default.ins.Back();
e();
d.TGA.track("paint", {
type: "device"
});
}
});
});
});
});
};
});
};
e.paintProp = function(e) {
r.default.ins.Enter("PaintScene", t => {
t.toPaintTile();
t.completeCall = (t, o, s, c) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreatePropPanel", p => {
let u = {
type: f.CommonDataType.Prop,
id: "",
name: "自定义物品",
intro: "",
textureName: "",
author: h.default.Ins.userName,
once: !0,
useWhenPick: !1,
defaultPrice: 10,
salePrice: 5,
importOthersImg: o,
belongGameId: s
};
p.setData(u, t);
p.confirmCall = o => i(this, void 0, void 0, function*() {
n.default.showLoading("正在上传（1/2）");
let i = yield a.Util.uploadPng(t, m.ImageFileType.prop, c);
if (i.err) n.default.hideLoading("图片违规：" + i.err); else {
n.default.showLoading("正在上传（2/2）");
o.textureName = i.url;
if (yield l.Mng.Ins.propMng.create(o)) {
yield l.Mng.Ins.assetGroupMng.curGroupAppend(o);
n.default.hideLoading("上传成功");
r.default.ins.Back();
e(o);
d.TGA.track("paint", {
type: "prop"
});
} else n.default.hideLoading("上传失败");
}
});
});
});
});
};
e.paintHeadIcon = function(e, t) {
r.default.ins.Enter("PaintScene", o => i(this, void 0, void 0, function*() {
o.toPaintHeadIcon();
if (a.Util.isCdnPng(e)) {
let t = yield a.Util.downloadPngPixel(e);
o.graphics.drawPixels(t);
}
o.completeCall = (e, o, s, l) => {
r.default.ins.OpenPanelByName("MessageBox", o => {
o.titleLabel.string = "提示";
o.label.string = "是否上传头像？";
o.leftBtn.node.active = !1;
o.setRightBtn({
text: "确定",
color: v.UIColor.blue,
call: () => i(this, void 0, void 0, function*() {
n.default.showLoading("正在上传（1/2）");
let o = yield a.Util.uploadPng(e, m.ImageFileType.actor, l);
if (o.err) {
n.default.hideLoading("图片违规：" + o.err);
return;
}
n.default.showLoading("正在上传（2/2）");
let i = {
newUserImg: o.url
};
if (yield u.NetIns.SendCmdAsync({
cmd: p.CMDS.Game_UpdateUserImg,
params: i
}, p.Game_RUpdateUserImg)) {
h.default.Ins.role.newUserImg = o.url;
h.default.Ins.role.newUserImgReviewStatus = m.ManReviewStatus.inReview;
n.default.hideLoading("上传成功");
r.default.ins.Back();
t();
} else n.default.hideLoading("网络错误，上传失败！");
})
});
});
};
}));
};
e.paintWeapon = function(e, t) {
let o = e;
var s = () => {
r.default.ins.Enter("PaintScene", e => {
e.toPaintWeapon(o);
e.completeCall = (e, s, p, u) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreateWeaponPanel", g => i(this, void 0, void 0, function*() {
let y, v = yield l.Mng.Ins.weaponMng.loadAll(), C = 1;
do {
y = I.I18nMgr.getI18nStringByZh("武器") + C;
C++;
} while (v.find(e => e.name == y));
let _ = null;
o == f.WeaponType.Gun ? _ = {
author: h.default.Ins.userName,
type: f.CommonDataType.Weapon,
id: "",
name: y,
textureName: "Weapon/BuildIn1/gun",
ROF: 5,
weaponType: f.WeaponType.Gun,
gun: {
scatter: 0,
fireShake: !1,
muzzles: [ cc.Vec2.ZERO ],
bulletId: "1",
bulletSpeed: 5 * c.default.SIZE,
bulletRange: 5 * c.default.SIZE
},
importOthersImg: s,
belongGameId: p
} : o == f.WeaponType.Melee ? _ = {
author: h.default.Ins.userName,
type: f.CommonDataType.Weapon,
id: "",
name: y,
textureName: "Weapon/BuildIn2/melee1",
ROF: 2,
weaponType: f.WeaponType.Melee,
melee: {
damage: 1,
scale: 1.5,
actType: f.MeleeActType.Swing
},
importOthersImg: s
} : o == f.WeaponType.Cast && (_ = {
author: h.default.Ins.userName,
type: f.CommonDataType.Weapon,
id: "",
name: y,
textureName: "Weapon/BuildIn3/cast1",
ROF: 1,
weaponType: f.WeaponType.Cast,
cast: {
fireShake: !1,
bulletId: "5",
outSpeed: 18 * c.default.SIZE,
flyDistance: 16 * c.default.SIZE,
airResistanceCof: .1,
defaultAngle: 70,
dragInverse: !1
},
importOthersImg: s
});
g.setData(_, e);
g.confirmCall = o => i(this, void 0, void 0, function*() {
n.default.showLoading("正在上传（1/2）");
let i = yield a.Util.uploadPng(e, m.ImageFileType.bullet, u);
if (i.err) n.default.hideLoading("图片违规：" + i.err); else {
n.default.showLoading("正在上传（2/2）");
o.textureName = i.url;
if (yield l.Mng.Ins.weaponMng.create(o)) {
n.default.hideLoading("上传成功");
r.default.ins.Back();
t(o.id);
d.TGA.track("paint", {
type: "weapon"
});
} else n.default.hideLoading("上传失败");
}
});
}));
});
});
};
null == o ? r.default.ins.OpenPanelByName("WeaponTypePanel", e => {
e.call = e => {
o = e.type;
s();
};
}) : s();
};
e.paintBullet = function(e) {
r.default.ins.Enter("PaintScene", t => {
t.toPaintTile();
t.completeCall = (t, o, s, c) => i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("CreateBulletPanel", p => i(this, void 0, void 0, function*() {
let u, g = yield l.Mng.Ins.bulletMng.loadAll(), y = 1;
do {
u = I.I18nMgr.getI18nStringByZh("子弹") + y;
y++;
} while (g.find(e => e.name == u));
let v = {
author: h.default.Ins.userName,
type: f.CommonDataType.Bullet,
id: "",
name: u,
textureName: "",
speed: 5,
range: 5,
damage: 1,
hitShake: !0,
hitDestroy: !0,
angleSpeed: 0,
importOthersImg: o,
belongGameId: s
};
p.setData(v, t);
p.confirmCall = o => i(this, void 0, void 0, function*() {
n.default.showLoading("正在上传（1/2）");
let i = yield a.Util.uploadPng(t, m.ImageFileType.bullet, c);
if (i.err) n.default.hideLoading("图片违规：" + i.err); else {
n.default.showLoading("正在上传（2/2）");
o.textureName = i.url;
yield l.Mng.Ins.bulletMng.create(o);
n.default.hideLoading("上传成功");
r.default.ins.Back();
e(o.id);
d.TGA.track("paint", {
type: "bullet"
});
}
});
}));
});
});
};
e.deelOnShow = function(e) {
return i(this, void 0, void 0, function*() {
if (n.default.isBlocking()) return;
console.log("scene.onShow", e);
let t = e.query;
if (t) {
let e = t.type || "game";
if ("game" == e) {
let e = t.cyGameId || t.gameId;
if (e && !e.includes("game-")) {
let o = yield g.default.Ins.loadGames([ e ]);
o && o[0] && r.default.ins.pushPanel("OpenGamePanel", e => {
let i = "";
i = !0 === t.isMine || void 0 === t.isMine ? "欢迎你玩我的游戏！" : "这个游戏超好玩！";
e.setData(i, o[0]);
});
}
}
if ("goods" == e) {
let e = t.goodsId;
if (e) {
let t = yield y.default.Ins.loadGoodsInfos([ e ]);
t && t[0] && r.default.ins.pushPanel("BuyGoodsPanel", e => {
e.setData(t[0]);
e.buyCall = () => {
cc.game.emit("RefreshShopList");
};
});
}
}
if ("gameRank" == e) {
let e = e => i(this, void 0, void 0, function*() {
let o = t.cyGameId;
e.setData(o);
let i = yield a.Util.once(C.default.GameCoverScene_GamePackLoaded), n = yield l.Mng.Ins.gameRankMng.loadOne(t.gameRankId);
n && o == i.gameData.id && r.default.ins.OpenPanelByName("GameRankPanel", e => {
e.setData(n, i.gameData);
});
});
r.default.ins.curScene instanceof C.default ? e(r.default.ins.curScene) : r.default.ins.Enter("GameCoverScene", e);
}
r.default.ins.checkNextPanel();
}
});
};
e.openVisitorPanel = function() {
return i(this, void 0, void 0, function*() {
r.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "提示";
e.label.string = "        游客登陆不支持编辑个人资料、发布作品、写评论等，为避免您的作品丢失，请选择其他登陆方式。";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "好的",
color: v.UIColor.blue
});
});
});
};
e.getReviewImageMap = function(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.tileConfIds.length; o++) {
let i = e.tileConfIds[o], n = yield l.Mng.Ins.tileMng.loadOne(i);
n && t.push(n.textureName);
}
for (let o = 0; o < e.actorConfIds.length; o++) {
let i = e.actorConfIds[o], n = yield l.Mng.Ins.actorMng.loadOne(i);
n && t.push(n.textureName);
}
for (let o = 0; o < e.deviceConfIds.length; o++) {
let i = e.deviceConfIds[o], n = yield l.Mng.Ins.deviceMng.loadOne(i);
n && t.push(n.textureName);
}
for (let o = 0; o < e.propConfIds.length; o++) {
let i = e.propConfIds[o], n = yield l.Mng.Ins.propMng.loadOne(i);
n && t.push(n.textureName);
}
for (let o = 0; o < e.weaponConfIds.length; o++) {
let i = e.weaponConfIds[o], n = yield l.Mng.Ins.weaponMng.loadOne(i);
n && t.push(n.textureName);
}
let o = new Map();
{
n.default.showLoading("正在上传(2/3)");
let e = {
imageList: t
}, i = yield u.NetIns.SendCmdAsync({
cmd: p.CMDS.Game_GetNeedReviewImageList,
params: e
}, p.Game_RGetNeedReviewImageList);
if (!i) {
n.default.hideLoading();
return null;
}
let s = 0;
for (;s < i.needImageList.length; ) {
let e = i.needImageList.slice(s, s + 64), t = yield a.Util.mergeImage(e);
o.set(t, e);
s += 64;
}
}
return o;
});
};
e.getImgGridSize = function(e) {
return {
row: Math.ceil(e / 3),
col: 3
};
};
e.makeOffReason = function(e) {
let t = [];
if (!e) return t;
for (let o = 0; o < e.imageOffReasonList.length; o++) {
let i = e.imageOffReasonList[o], n = i.sensitiveImageResult.score, a = [];
n.Porn && a.push(I.I18nMgr.getI18nStringByZh("图片涉黄"));
n.Cartoon_leader && a.push(I.I18nMgr.getI18nStringByZh("领导人漫画"));
n.Anniversary_flag && a.push(I.I18nMgr.getI18nStringByZh("特殊标志"));
n.Sensitive_flag && a.push(I.I18nMgr.getI18nStringByZh("敏感旗帜"));
n.Sensitive_text && a.push(I.I18nMgr.getI18nStringByZh("敏感文字"));
n.Leader_recognition && a.push(I.I18nMgr.getI18nStringByZh("敏感人物"));
n.Bloody && a.push(I.I18nMgr.getI18nStringByZh("图片血腥"));
n.Fandongtaibiao && a.push(I.I18nMgr.getI18nStringByZh("未准入台标"));
n.Plant_ppx && a.push(I.I18nMgr.getI18nStringByZh("图片涉毒"));
n.High_risk_social_event && a.push(I.I18nMgr.getI18nStringByZh("社会事件"));
n.High_risk_boom && a.push(I.I18nMgr.getI18nStringByZh("爆炸"));
n.High_risk_money && a.push(I.I18nMgr.getI18nStringByZh("人民币"));
n.High_risk_terrorist_uniform && a.push(I.I18nMgr.getI18nStringByZh("极端服饰"));
n.High_risk_sensitive_map && a.push(I.I18nMgr.getI18nStringByZh("敏感地图"));
n.Great_hall && a.push(I.I18nMgr.getI18nStringByZh("大会堂"));
n.Cartoon_porn && a.push(I.I18nMgr.getI18nStringByZh("色情动漫"));
n.Party_founding_memorial && a.push(I.I18nMgr.getI18nStringByZh("建党纪念"));
n.Abuse && a.push(I.I18nMgr.getI18nStringByZh("谩骂"));
n.Polity && a.push(I.I18nMgr.getI18nStringByZh("涉政"));
n.Terror && a.push(I.I18nMgr.getI18nStringByZh("恐怖"));
t.push({
imageUrl: i.imageUrl,
reason: a.join("，")
});
}
return t;
};
e.setNameLabel = function(e, t, o, i = 99) {
if (_.DynamicMng.Ins.isDisable(_.FunctionEnum.UserName, !1)) {
let t = e.getComponent(S.default);
t && t.destroy();
e.string = I.I18nMgr.exceI18nStringByZh("玩家${playerId}", [ {
paramName: "playerId",
param: o
} ]);
} else {
t = a.Util.clampStr(t, i, "..");
e.string = t || I.I18nMgr.exceI18nStringByZh("玩家${playerId}", [ {
paramName: "playerId",
param: o
} ]);
}
};
})(o.OperationFlow || (o.OperationFlow = {}));
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"../../scripts/_autogen/cmd/cmd": "cmd",
"../../scripts/_autogen/data/data": "data",
"../CustomUI/Button": "Button",
"../Frame/NetworkMgr": "NetworkMgr",
"../Frame/SceneManager": "SceneManager",
"../Frame/Sound": "Sound",
"../Frame/Top": "Top",
"../Frame/UIColor": "UIColor",
"../Frame/Util": "Util",
"../GameData/GameTypeDefine": "GameTypeDefine",
"../Role": "Role",
"../Scene/GameCoverScene/GameCoverScene": "GameCoverScene",
"../TGA": "TGA",
"./Player/DynamicMng": "DynamicMng",
"./Player/GameCellDataMng": "GameCellDataMng",
"./Player/Mng": "Mng",
"./Player/ShopMng": "ShopMng",
"./World/Tile": "Tile"
} ],
OtherTalkCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5fe47Fd+i9CvpJWYqlHxHTj", "OtherTalkCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../Game/Player/CollectionMng"), p = e("../../Game/Player/CreditMng"), u = e("../../Game/Player/TalkMng"), m = e("../../TGA"), f = e("../HomeScene/MinePage/MyTalkCell"), {ccclass: g, property: y} = cc._decorator;
let v = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.menuBtn = null;
this.commentCntLabel = null;
this.upBtn = null;
this.data = null;
}
onLoad() {
this.node.on(a.default.CLICK, this.onClickCell, this);
this.node.on(s.default.SET_DATA, this.setData, this);
this.menuBtn.node.on(a.default.CLICK, this.onMenuBtn, this);
this.upBtn.node.on(a.default.CLICK, this.onUpBtn, this);
}
setData(e) {
this.data = e;
this.titleLabel.string = d.Util.clampStr(e.title, 45, `..(${d.Util.parseDataString(e.upStamp)})`);
d.Util.updateLabel(this.titleLabel);
this.node.height = this.titleLabel.node.height + 150;
this.upBtn.node.active = !1;
this.commentCntLabel.node.parent.active = !1;
this.upBtn.icon.node.color = e.isUp ? c.UIColor.blue : c.UIColor.white;
}
calcuHeight(e) {
let t = f.default.calcuHeightCache.get(e.uId);
if (!t) {
this.titleLabel.string = d.Util.clampStr(e.title, 45, `..(${d.Util.parseDataString(e.upStamp)})`);
d.Util.updateLabel(this.titleLabel);
t = this.titleLabel.node.height + 150;
f.default.calcuHeightCache.set(e.uId, t);
}
return t;
}
onClickCell() {
return n(this, void 0, void 0, function*() {
r.default.ins.Enter("TalkScene", e => {
e.setData(this.data.uId);
}, r.ShiftAnima.moveLeftShift);
});
}
onUpBtn() {
return n(this, void 0, void 0, function*() {
if (this.data.isUp) yield u.default.Ins.cancelUpTalk(this.data.uId); else if (this.data.isDown) yield u.default.Ins.cancelDownTalk(this.data.uId); else {
yield u.default.Ins.upTalk(this.data.uId);
m.TGA.track("Talk", {
step: "clickThumbBtn3"
});
}
this.setData(this.data);
});
}
onReportBtn() {
p.CreditMng.Ins.credit <= 2 ? l.default.showToast("近期违规，不可举报") : this.data && r.default.ins.Enter("ReportScene", e => {
e.initReportTalk(this.data.uId);
}, r.ShiftAnima.moveLeftShift);
}
onMenuBtn() {
let e = this.data, t = [];
t.push({
str: "举报",
icon: {
url: "Atlas/UI/reportBtn",
color: c.UIColor.white,
w: 50,
h: 40
},
call: () => {
this.onReportBtn();
}
});
let o = h.CollectionMng.Ins.isCollectTalk(e.uId);
t.push({
str: o ? "取消收藏" : "收藏",
icon: {
url: "Atlas/Paint/pencil",
color: o ? c.UIColor.yellow : c.UIColor.gray,
w: 40,
h: 40
},
call: () => n(this, void 0, void 0, function*() {
o ? h.CollectionMng.Ins.unCollectTalk(e.uId) : h.CollectionMng.Ins.collectTalk(e.uId);
})
});
l.default.showMenu(this.menuBtn.node, t);
}
};
v.calcuHeightCache = new Map();
i([ y(cc.Label) ], v.prototype, "titleLabel", void 0);
i([ y(a.default) ], v.prototype, "menuBtn", void 0);
i([ y(cc.Label) ], v.prototype, "commentCntLabel", void 0);
i([ y(a.default) ], v.prototype, "upBtn", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/TalkMng": "TalkMng",
"../../TGA": "TGA",
"../HomeScene/MinePage/MyTalkCell": "MyTalkCell"
} ],
PaintGuide: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "09634PztztLZYb1D5vQHpob", "PaintGuide");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Util"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
}
loadUrl(e) {
return n(this, void 0, void 0, function*() {
this.sprite.spriteFrame = yield a.Util.loadBundleRes("Atlas/Guide/" + e, cc.SpriteFrame);
});
}
};
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../Frame/Util": "Util"
} ],
PaintScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "37edcROusBEBrsQ4I9C40hd", "PaintScene");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Graphics"), r = e("../../CustomUI/ScrollList"), l = e("../../CustomUI/Slider"), c = e("../../Frame/SceneManager"), d = e("../../CustomUI/Button"), h = e("../../Frame/Util"), p = e("../../Frame/GameRecorder"), u = e("../../Frame/Scene"), m = e("../../Frame/UIColor"), f = e("../../Frame/Top"), g = e("../../Game/OperationFlow"), y = e("../../CustomUI/DropDownBox"), v = e("../../Game/Player/ColorMng"), C = e("../../Frame/ScreenRect"), _ = e("../../Frame/Config"), S = e("../../GameData/GameTypeDefine"), I = e("../../Game/Player/CoinMng"), {ccclass: G, menu: T, property: b} = cc._decorator;
var M;
(function(e) {
e[e.Select = 0] = "Select";
e[e.Pencil = 1] = "Pencil";
e[e.StraightLine = 2] = "StraightLine";
e[e.Rect = 3] = "Rect";
e[e.FillRect = 4] = "FillRect";
e[e.Circle = 5] = "Circle";
e[e.FillCircle = 6] = "FillCircle";
e[e.Eraser = 7] = "Eraser";
e[e.Bucket = 8] = "Bucket";
e[e.Move = 9] = "Move";
})(M || (M = {}));
let P = i = class extends u.default {
constructor() {
super(...arguments);
this.backBtn = null;
this.colorList = null;
this.selectBtn = null;
this.moveBtn = null;
this.pencilBtn = null;
this.shapeBtn = null;
this.eraserBtn = null;
this.revertBtn = null;
this.clearBtn = null;
this.bucketBtn = null;
this.saveBtn = null;
this.recorderBtn = null;
this.graphics = null;
this.sizeSlider = null;
this.shapeDropDown = null;
this.bucketPointer = null;
this.eraserPointer = null;
this.examples = null;
this.tileExample = null;
this.actorIdleExample = null;
this.actorJumpExample = null;
this.meleeWeaponExample = null;
this.shopExample = null;
this.rankExample = null;
this.importBtn = null;
this.importTipLabel = null;
this.importOthersImg = !1;
this.belongGameId = "";
this.sensitiveName = "";
this.state = M.Pencil;
this.pencilColor = null;
this.completeCall = null;
this._temp_v2_0 = new cc.Vec2();
this._graphicsScaleMin = 1;
this._graphicsScaleMax = 80;
this._graphicsFocus = new cc.Vec2();
this._multiTouchStartDiameter = 0;
this._startMultiTouch = !1;
this._graphicsStartScale = 1;
this._startScalePos = new cc.Vec2();
this._currentTouchList = [];
}
onLoad() {
super.onLoad();
this.backBtn.node.on(d.default.CLICK, this.onBackBtnTap, this);
this.graphics.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.graphics.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove10, this);
this.graphics.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd11, this);
this.graphics.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd11, this);
this.selectBtn.node.on(d.default.CLICK, this.onSelectBtn, this);
this.moveBtn.node.on(d.default.CLICK, this.onMoveBtn, this);
this.pencilBtn.node.on(d.default.CLICK, this.onPencilTap, this);
this.shapeBtn.node.on(d.default.CLICK, this.onShapeBtn, this);
this.eraserBtn.node.on(d.default.CLICK, this.onEraserTap, this);
this.revertBtn.node.on(d.default.CLICK, this.onRevertTap, this);
this.clearBtn.node.on(d.default.CLICK, this.onClearTap, this);
this.bucketBtn.node.on(d.default.CLICK, this.onBucketTap, this);
this.saveBtn.node.on(d.default.CLICK, this.onSaveBtnTap, this);
this.sizeSlider.node.on(l.default.MOVE, this.onSizeChange, this);
this.importBtn.node.on(d.default.CLICK, this.onImportBtn, this);
this.shapeDropDown.node.on(y.default.SELECT_CHANGE, this.onShapeDropDown, this);
this.colorList.node.on(r.default.SELECT_ITEM, this.selectColorChild, this);
this.colorList.getPrefabName = this.colorPrefabFun;
this.colorList.canSelect = this.canSelectFunc;
this.tileExample.active = !1;
this.actorIdleExample.active = !1;
this.actorJumpExample.active = !1;
this.meleeWeaponExample.active = !1;
this.bucketPointer.active = !1;
this.eraserPointer.active = !1;
this.setImportOthersImg(!1);
this.setBelongGameId("");
this.sensitiveName = "stamp" + orange.TimeUtil.serverTime;
this.shapeDropDown.setDataArr([ {
state: M.StraightLine,
img: "Paint/line"
}, {
state: M.Rect,
img: "Paint/rect"
}, {
state: M.FillRect,
img: "Paint/fillRect"
}, {
state: M.Circle,
img: "Paint/circle"
}, {
state: M.FillCircle,
img: "Paint/fillCircle"
} ]);
p.default.attachRecordButton(this.recorderBtn, {
video_title: "This game is so much fun!",
topics: [ "Julianseditor", "Makeurgame" ],
tgaFrom: "PaintScene",
query: "",
succ: () => a(this, void 0, void 0, function*() {
if (this.recorderBtn.dot.active) {
let e = yield I.default.Ins.requestAddCoinByShare();
if (!e) return;
g.OperationFlow.openRewards(e, () => {});
}
})
});
}
onDestroy() {
p.default.dettachRecordButton();
}
onShapeDropDown(e, t, o) {
o && (this.state = t.state);
}
onShow(e) {
g.OperationFlow.deelOnShow(e);
}
onEnterScene() {
super.onEnterScene();
p.default.stopAndClear();
}
onExitScene() {
p.default.stopAndClear();
}
start() {
this.refreshColorList(1);
this.highLightBtn(this.pencilBtn);
this.state = M.Pencil;
this.graphics.lineWidth = this.sizeSlider.value = 8;
}
refreshColorList(e) {
let t = [];
t = t.concat(_.Config.colors);
for (let e = 0; e < v.ColorMng.Ins.customColors.length; e++) {
let o = v.ColorMng.Ins.customColors[e];
t.push({
id: o.id,
color: cc.color(o.data.r, o.data.g, o.data.b),
isCustom: !0
});
}
t.push({
type: "EditColorBtn"
});
this.colorList.setDataArr(t);
let o = t.findIndex(t => t.id == e);
o < 0 && (o = 0);
this.colorList.selectByIdx(o);
}
addColorGuide(e) {
return a(this, void 0, void 0, function*() {
let t = yield h.Util.loadBundleRes("Prefab/ColorGuide"), o = cc.instantiate(t);
this.node.addChild(o);
o.position = h.Util.convertPosition(e, this.node, cc.v2(0, 20));
let i = o.convertToWorldSpaceAR(cc.Vec2.ZERO);
o.scaleX = i.x > C.default.width / 2 ? -1 : 1;
for (let e = 0; e < o.children.length; e++) o.children[e].scaleX = o.scaleX;
this.scheduleOnce(() => {
o.destroy();
}, 2);
});
}
colorPrefabFun(e) {
return "EditColorBtn" == e.type ? "EditColorBtn" : "ColorBtn";
}
canSelectFunc(e) {
return "EditColorBtn" != e.type;
}
selectColorChild(e, t) {
this.pencilColor = t.color;
}
onBackBtnTap() {
this.graphics.checkFinishSelectBox();
h.Util.isAlphaPixels(this.graphics.pixels) ? c.default.ins.Back() : c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否放弃绘图？";
e.setLeftBtn({
text: "放弃",
color: m.UIColor.pink,
call: () => {
c.default.ins.Back();
}
});
e.setRightBtn({
text: "继续画",
color: m.UIColor.blue
});
});
}
onMoveBtn() {
this.highLightBtn(this.moveBtn);
this.state = M.Move;
}
onPencilTap() {
this.graphics.checkFinishSelectBox();
this.highLightBtn(this.pencilBtn);
this.state = M.Pencil;
}
onShapeBtn() {
this.graphics.checkFinishSelectBox();
this.highLightBtn(this.shapeBtn);
this.state = this.shapeDropDown.getCurData().state;
}
onEraserTap() {
this.graphics.checkFinishSelectBox();
this.highLightBtn(this.eraserBtn);
this.state = M.Eraser;
}
onBucketTap() {
this.graphics.checkFinishSelectBox();
this.highLightBtn(this.bucketBtn);
this.state = M.Bucket;
}
onSelectBtn() {
this.highLightBtn(this.selectBtn);
this.state = M.Select;
}
onRevertTap() {
this.graphics.selectBox.node.active ? this.graphics.checkFinishSelectBox() : this.graphics.revert();
}
onClearTap() {
this.graphics.checkFinishSelectBox();
c.default.ins.OpenPanelByName("MessageBox", e => {
this.importOthersImg ? e.label.string = "是否清空画布？\n(并清空导入标记)" : e.label.string = "是否清空画布？";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "确定",
color: m.UIColor.pink,
call: () => {
this.setImportOthersImg(!1);
this.setBelongGameId("");
this.graphics.clear();
}
});
});
}
onImportBtn() {
return a(this, void 0, void 0, function*() {
this.graphics.checkFinishSelectBox();
c.default.ins.OpenPanelByName("SelectImagePanel", e => {
e.call = (e, t, o) => a(this, void 0, void 0, function*() {
f.default.showLoading("下载中");
let i = yield h.Util.downloadPngPixel(e);
this.state = M.Select;
this.highLightBtn(this.selectBtn);
this.graphics.importPixels(i);
f.default.hideLoading();
this.setImportOthersImg(this.importOthersImg || t);
this.setBelongGameId(this.belongGameId || o);
});
});
});
}
onSaveBtnTap() {
return a(this, void 0, void 0, function*() {
this.graphics.checkFinishSelectBox();
h.Util.isAlphaPixels(this.graphics.pixels) ? c.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "多画几笔吧";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "确定",
color: m.UIColor.blue
});
}) : this.completeCall && this.completeCall(this.graphics.pixels, this.importOthersImg, this.belongGameId, this.sensitiveName);
});
}
highLightBtn(e) {
let t = [ this.pencilBtn, this.shapeBtn, this.eraserBtn, this.bucketBtn, this.moveBtn, this.selectBtn ];
for (let o = 0; o < t.length; o++) {
let i = t[o], n = h.Util.searchChild(i.node, "select");
n && (n.active = i == e);
}
}
onSizeChange(e) {
console.log(e);
this.graphics.lineWidth = e;
}
onTouchStart(e) {
this.startMultiTouch(e);
if (this._startMultiTouch) {
this.endPaint();
return;
}
let t = e.getLocation();
this.graphics.node.convertToNodeSpaceAR(t, t);
switch (this.state) {
case M.Bucket:
{
this.bucketPointer.scale = 1 / this.graphics.node.scale;
this.bucketPointer.position = t;
let e = h.Util.searchChild(this.bucketPointer, "posNode");
t = h.Util.convertPosition(e, this.graphics.node);
this.bucketPointer.active = !0;
h.Util.searchChild(this.bucketPointer, "sight").color = this.pencilColor;
break;
}

case M.Pencil:
this.graphics.color = this.pencilColor;
this.graphics.beginLine(t);
this.graphics.lineTo(t);
break;

case M.Eraser:
{
this.eraserPointer.scale = 1 / this.graphics.node.scale;
let e = this.eraserPointer.getComponentInChildren(cc.Graphics);
e.clear();
e.fillColor = e.strokeColor = cc.Color.WHITE;
e.circle(0, 0, this.graphics.lineWidth / this.eraserPointer.scale);
e.stroke();
this.eraserPointer.position = t;
let o = h.Util.searchChild(this.eraserPointer, "posNode");
t = h.Util.convertPosition(o, this.graphics.node);
this.eraserPointer.active = !0;
this.graphics.color = cc.Color.TRANSPARENT;
this.graphics.beginLine(t);
this.graphics.lineTo(t);
break;
}

case M.Select:
this.graphics.selectBoxTouchStart(t);
break;

case M.StraightLine:
this.graphics.color = this.pencilColor;
this.graphics.beginStraightLine(t);
break;

case M.Rect:
this.graphics.color = this.pencilColor;
this.graphics.beginRect(!1, t);
break;

case M.FillRect:
this.graphics.color = this.pencilColor;
this.graphics.beginRect(!0, t);
break;

case M.Circle:
this.graphics.color = this.pencilColor;
this.graphics.beginCircle(!1, t);
break;

case M.FillCircle:
this.graphics.color = this.pencilColor;
this.graphics.beginCircle(!0, t);
}
}
onTouchMove10(e) {
let t = e.getLocation();
this.graphics.node.convertToNodeSpaceAR(t, t);
switch (this.state) {
case M.Bucket:
this.bucketPointer.position = t;
break;

case M.Pencil:
this.graphics.lineTo(t);
break;

case M.Eraser:
{
let e = this.eraserPointer;
e.position = t;
let o = h.Util.searchChild(e, "posNode");
t = h.Util.convertPosition(o, this.graphics.node);
this.graphics.lineTo(t);
break;
}

case M.Move:
this.multiTouchMove(e);
break;

case M.Select:
this.graphics.selectBoxTouchMove(t);
break;

case M.StraightLine:
this.graphics.dragStraightLine(t);
break;

case M.Rect:
this.graphics.dragRect(!1, t);
break;

case M.FillRect:
this.graphics.dragRect(!0, t);
break;

case M.Circle:
this.graphics.dragCircle(!1, t);
break;

case M.FillCircle:
this.graphics.dragCircle(!0, t);
}
}
onTouchEnd11(e) {
this.endMultiTouch(e);
this.endPaint();
}
endPaint() {
switch (this.state) {
case M.Bucket:
{
this.bucketPointer.active = !1;
let e = h.Util.searchChild(this.bucketPointer, "posNode"), t = h.Util.convertPosition(e, this.graphics.node);
this.graphics.bucketFill(t, this.pencilColor);
break;
}

case M.Pencil:
case M.Eraser:
this.eraserPointer.active = !1;
this.graphics.endLine();
break;

case M.Select:
this.graphics.selectBoxTouchEnd();
break;

case M.StraightLine:
this.graphics.endStraightLine();
break;

case M.Rect:
this.graphics.endRect(!1);
break;

case M.FillRect:
this.graphics.endRect(!0);
break;

case M.Circle:
this.graphics.endCircle(!1);
break;

case M.FillCircle:
this.graphics.endCircle(!0);
}
}
setSize(e, t) {
let o = Math.min(this.graphics.node.width / e, this.graphics.node.height / t);
this.graphics.setScale(o);
this.bucketPointer.scale = 1 / o;
this.eraserPointer.scale = 1 / o;
this.graphics.setSize(e, t);
this._graphicsScaleMin = o;
}
toPaintTile() {
this.tileExample.active = !0;
this.setSize(256, 256);
cc.game.emit(i.PaintScene_Entered, this);
}
toPaintHeadIcon() {
this.tileExample.active = !1;
this.setSize(256, 256);
}
toPaintGameIcon() {
this.tileExample.active = !1;
this.setSize(256, 256);
}
toPaintActor() {
this.tileExample.active = !0;
this.actorIdleExample.active = !0;
this.actorIdleExample.width = 182;
this.actorIdleExample.height = 182;
this.setSize(256, 256);
}
toPaintWeapon(e) {
this.tileExample.active = !0;
if (e == S.WeaponType.Melee) {
this.meleeWeaponExample.active = !0;
this.actorIdleExample.width = 182;
this.actorIdleExample.height = 182;
} else this.meleeWeaponExample.active = !1;
this.setSize(256, 256);
}
toPaintShop() {
this.shopExample.active = !0;
this.setSize(256, 256);
}
toPaintRank() {
this.rankExample.active = !0;
this.setSize(256, 256);
}
startMultiTouch(e) {
if (this.state != M.Move) {
this._currentTouchList.length = 0;
this._startMultiTouch = !1;
return;
}
if (this._currentTouchList.length < 2) {
let t = !0;
for (let o of this._currentTouchList) if (o.getID() == e.touch.getID()) {
t = !1;
break;
}
if (t) {
this._currentTouchList.push(e.touch);
console.log("add touch:", e.touch.getID());
}
}
if (this._currentTouchList.length < 2) return;
let t = this.graphics.node.convertToWorldSpaceAR(cc.Vec2.ZERO, this._temp_v2_0), o = [];
for (let e of this._currentTouchList) o.push({
x: e.getLocationX() - t.x,
y: e.getLocationY() - t.y
});
let i = this.getCenterPoint(o), n = 0;
for (let e of o) {
let t = .5 * (Math.abs(e.x - i.x) + Math.abs(e.y - i.y));
n < t && (n = t);
}
this._multiTouchStartDiameter = n;
if (this._startMultiTouch) {
this._graphicsStartScale = this.graphics.node.scale;
this._startScalePos.set(this.graphics.node.position);
} else {
this._startMultiTouch = !0;
this._graphicsStartScale = this.graphics.node.scale;
let e = this.graphics.node.width * this._graphicsStartScale, t = this.graphics.node.height * this._graphicsStartScale;
this._graphicsFocus.x = i.x / e;
this._graphicsFocus.y = i.y / t;
this._startScalePos.set(this.graphics.node.position);
}
}
multiTouchMove(e) {
if (this._currentTouchList.length > 1) {
let e = this.graphics.node.convertToWorldSpaceAR(cc.Vec2.ZERO, this._temp_v2_0), t = [];
for (let o of this._currentTouchList) t.push({
x: o.getLocationX() - e.x,
y: o.getLocationY() - e.y
});
let o = this.getCenterPoint(t), i = 0;
for (let e of t) {
let t = .5 * (Math.abs(e.x - o.x) + Math.abs(e.y - o.y));
i < t && (i = t);
}
let n = .005 * (i - this._multiTouchStartDiameter) * this.graphics.node.scale, a = this._graphicsStartScale + n;
a < this._graphicsScaleMin && (a = this._graphicsScaleMin);
a > this._graphicsScaleMax && (a = this._graphicsScaleMax);
n = a - this._graphicsStartScale;
this.graphics.setScale(a);
let s = .5 * -this.graphics.node.parent.width, r = .5 * -this.graphics.node.parent.height, l = s - (this.graphics.node.width * this.graphics.node.scale - this.graphics.node.parent.width), c = r - (this.graphics.node.height * this.graphics.node.scale - this.graphics.node.parent.height), d = -this.graphics.node.width * this._graphicsFocus.x * n, h = -this.graphics.node.height * this._graphicsFocus.y * n, p = this._startScalePos.x + d, u = this._startScalePos.y + h;
p > s && (p = s);
u > r && (u = r);
p < l && (p = l);
u < c && (u = c);
this.graphics.node.x = p;
this.graphics.node.y = u;
} else {
let t = .5 * -this.graphics.node.parent.width, o = .5 * -this.graphics.node.parent.height, i = t - (this.graphics.node.width * this.graphics.node.scale - this.graphics.node.parent.width), n = o - (this.graphics.node.height * this.graphics.node.scale - this.graphics.node.parent.height), a = e.touch.getDelta(), s = this.graphics.node.x + a.x, r = this.graphics.node.y + a.y;
s > t && (s = t);
r > o && (r = o);
s < i && (s = i);
r < n && (r = n);
this.graphics.node.x = s;
this.graphics.node.y = r;
}
}
endMultiTouch(e) {
for (let t = 0; t < this._currentTouchList.length; ++t) if (this._currentTouchList[t].getID() == e.touch.getID()) {
this._currentTouchList.splice(t, 1);
console.log("remove touch:", e.touch.getID());
break;
}
0 == this._currentTouchList.length && (this._startMultiTouch = !1);
}
getCenterPoint(e) {
if (!e || 0 == e.length) return {
x: 0,
y: 0
};
let t = e.length;
if (1 == t) return e[0];
if (2 == t) {
let t = e[0], o = e[1];
return {
x: .5 * (t.x + o.x),
y: .5 * (t.y + o.y)
};
}
let o = [];
for (let i = 0; i < t - 1; ++i) {
let t = e[i], n = e[i + 1];
o.push({
x: .5 * (t.x + n.x),
y: .5 * (t.y + n.y)
});
}
return this.getCenterPoint(o);
}
setImportOthersImg(e) {
this.importOthersImg = !!e;
this.updateImportTipLabel();
}
setBelongGameId(e) {
this.belongGameId = e;
this.updateImportTipLabel();
}
updateImportTipLabel() {
let e = [];
this.importOthersImg && e.push("导入标记");
this.belongGameId && e.push("工坊素材");
this.importTipLabel.node.active = e.length > 0;
this.importTipLabel.string = e.join(" / ");
}
};
P.PaintScene_Entered = "PaintScene_Entered";
n([ b(d.default) ], P.prototype, "backBtn", void 0);
n([ b(r.default) ], P.prototype, "colorList", void 0);
n([ b(d.default) ], P.prototype, "selectBtn", void 0);
n([ b(d.default) ], P.prototype, "moveBtn", void 0);
n([ b(d.default) ], P.prototype, "pencilBtn", void 0);
n([ b(d.default) ], P.prototype, "shapeBtn", void 0);
n([ b(d.default) ], P.prototype, "eraserBtn", void 0);
n([ b(d.default) ], P.prototype, "revertBtn", void 0);
n([ b(d.default) ], P.prototype, "clearBtn", void 0);
n([ b(d.default) ], P.prototype, "bucketBtn", void 0);
n([ b(d.default) ], P.prototype, "saveBtn", void 0);
n([ b(d.default) ], P.prototype, "recorderBtn", void 0);
n([ b(s.default) ], P.prototype, "graphics", void 0);
n([ b(l.default) ], P.prototype, "sizeSlider", void 0);
n([ b(y.default) ], P.prototype, "shapeDropDown", void 0);
n([ b(cc.Node) ], P.prototype, "bucketPointer", void 0);
n([ b(cc.Node) ], P.prototype, "eraserPointer", void 0);
n([ b(cc.Node) ], P.prototype, "examples", void 0);
n([ b(cc.Node) ], P.prototype, "tileExample", void 0);
n([ b(cc.Node) ], P.prototype, "actorIdleExample", void 0);
n([ b(cc.Node) ], P.prototype, "actorJumpExample", void 0);
n([ b(cc.Node) ], P.prototype, "meleeWeaponExample", void 0);
n([ b(cc.Node) ], P.prototype, "shopExample", void 0);
n([ b(cc.Node) ], P.prototype, "rankExample", void 0);
n([ b(d.default) ], P.prototype, "importBtn", void 0);
n([ b(cc.Label) ], P.prototype, "importTipLabel", void 0);
P = i = n([ G, T("面板/PaintPanel") ], P);
o.default = P;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/Graphics": "Graphics",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Slider": "Slider",
"../../Frame/Config": "Config",
"../../Frame/GameRecorder": "GameRecorder",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/CoinMng": "CoinMng",
"../../Game/Player/ColorMng": "ColorMng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
PanelQueue: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e87023iNYxHP7dWyKf4SMmn", "PanelQueue");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("./Panel"), s = e("./Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super();
this.queue = [];
this.curPanel = null;
}
pushPanel(e, t = null, o = !1) {
this.pushCheckFunc((o, i) => n(this, void 0, void 0, function*() {
let n = yield s.Util.loadBundleRes(`Panel/${e}/${e}`);
var r = cc.instantiate(n);
r.name = e;
r.position = cc.Vec2.ZERO;
let l = r.getComponent(a.default);
if (l) {
o(l);
t && t(l);
} else i();
}), o);
}
pushCall(e, t = !1) {
this.pushCheckFunc((t, o) => {
o();
e();
}, t);
}
pushCheckFunc(e, t = !1) {
t ? this.queue.unshift(e) : this.queue.push(e);
}
checkNext() {
if (this.curPanel) {
this.curPanel.closeCallback && this.curPanel.closeCallback();
this.curPanel.node.removeFromParent();
this.curPanel.node.destroy();
this.curPanel = null;
this.printQueue();
}
let e = () => {
if (this.queue.length > 0) {
this.node.active = !0;
this.queue.shift()(e => {
e.panelQueue = this;
this.node.addChild(e.node);
e.openAnim();
this.curPanel = e;
this.printQueue();
}, () => {
e();
});
} else this.node.active = !1;
};
e();
}
printQueue() {
let e = "PanelQueue:";
for (let t = 0; t < this.node.childrenCount; t++) e += this.node.children[t].name + " >> ";
console.log(e);
}
};
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"./Panel": "Panel",
"./Util": "Util"
} ],
PanelStack: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e9c7aPt/Q5I1pZGTsQYSiWC", "PanelStack");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator, r = e("./Panel"), l = e("./Top"), c = e("./Util");
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.blockInput = null;
this.stack = [];
this.list = [];
}
onLoad() {
this.blockInput.node.active = !1;
}
showBlockInput(e) {
this.blockInput.node.stopAllActions();
this.blockInput.node.opacity = 180;
if (this.blockInput.node.active != e) if (e) {
this.blockInput.node.active = !0;
this.blockInput.node.opacity = 0;
cc.tween(this.blockInput.node).to(.15, {
opacity: 180
}).start();
} else {
this.blockInput.node.opacity = 180;
cc.tween(this.blockInput.node).to(.15, {
opacity: 0
}).call(() => {
this.blockInput.node.active = !1;
}).start();
}
}
OpenByName(e, t = (() => {})) {
this.list.push({
name: e,
call: t
});
1 == this.list.length && this.checkNext();
}
checkNext() {
return n(this, void 0, void 0, function*() {
if (this.list.length > 0) {
this.showBlockInput(!0);
let t = this.list[0];
l.default.showLoading("界面加载中");
let o = yield c.Util.loadBundleRes(`Panel/${t.name}/${t.name}`);
l.default.hideLoading();
var e = cc.instantiate(o);
e.name = t.name;
e.position = cc.Vec2.ZERO;
let i = e.getComponent(r.default);
if (i) {
if (this.stack.length > 0) {
let e = this.stack[this.stack.length - 1];
i.autoHidePrePanel && e.closeAnim();
}
i.panelStack = this;
this.blockInput.node.setSiblingIndex(this.node.childrenCount - 1);
this.node.addChild(i.node);
this.stack.push(i);
t.call(i);
i.openAnim();
this.printStack();
} else {
this.showBlockInput(!1);
console.error("PanelManager: cannot find panel component on node : ");
}
this.list.shift();
this.checkNext();
}
});
}
PopCurrent() {
let e = !0;
if (this.stack.length > 0) {
let t = this.stack.pop();
e = t.autoHidePrePanel;
t.closeAnim(() => {
t.closeCallback && t.closeCallback();
t.panelStack = null;
t.node.destroy();
this.printStack();
});
}
if (this.stack.length > 0) {
let t = this.stack[this.stack.length - 1];
this.blockInput.node.setSiblingIndex(this.node.childrenCount - 1);
t.node.setSiblingIndex(this.node.childrenCount - 1);
e && t.openAnim();
} else this.showBlockInput(!1);
}
printStack() {
let e = "PanelStack:";
for (let t = 0; t < this.node.childrenCount; t++) e += this.node.children[t].name + " >> ";
console.log(e);
}
};
i([ s(cc.BlockInputEvents) ], d.prototype, "blockInput", void 0);
d = i([ a ], d);
o.default = d;
cc._RF.pop();
}, {
"./Panel": "Panel",
"./Top": "Top",
"./Util": "Util"
} ],
Panel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "32159zk+TJAmYlXWBH+M2+e", "Panel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./DataBind"), a = e("./SceneManager"), s = e("../CustomUI/Button"), r = e("./TweenUtil"), {ccclass: l, property: c} = cc._decorator;
var d;
(function(e) {
e[e.None = 0] = "None";
e[e.Normal = 1] = "Normal";
e[e.MoveUpDown = 2] = "MoveUpDown";
})(d || (d = {}));
let h = class extends n.DB.DataBindComponent {
constructor() {
super(...arguments);
this.autoHidePrePanel = !0;
this.panelAnimType = d.Normal;
this.closeBtn = null;
this.panelStack = null;
this.panelQueue = null;
this.closeCallback = null;
}
onLoad() {
this.closeBtn && this.closeBtn.node.on("click", this.onCloseBtnTap, this);
}
onDestroy() {
super.onDestroy();
this.closeCallback = null;
}
closeAnim(e = null) {
switch (this.panelAnimType) {
case d.None:
e && e();
break;

case d.Normal:
cc.tween(this.node).to(.1, {
opacity: 0
}).start();
cc.tween(this.node).to(.15, {
scale: .8
}, {
easing: r.Easing.quadOut
}).call(e).start();
break;

case d.MoveUpDown:
cc.tween(this.node).to(.2, {
y: this.node.y - this.node.height
}, {
easing: r.Easing.quadOut
}).call(() => {
e && e();
}).start();
}
}
openAnim(e = null) {
switch (this.panelAnimType) {
case d.None:
e && e();
this.onOpend();
break;

case d.Normal:
this.node.scale = .8;
this.node.opacity = 0;
cc.tween(this.node).to(.1, {
opacity: 255
}).start();
cc.tween(this.node).to(.15, {
scale: 1
}, {
easing: r.Easing.backOut
}).call(() => {
e && e();
this.onOpend();
}).start();
break;

case d.MoveUpDown:
let t = this.node.getComponent(cc.Widget);
t.bottom = -this.node.height;
t.updateAlignment();
cc.tween(this.node).to(.2, {
y: this.node.y + this.node.height
}, {
easing: r.Easing.quadOut
}).call(() => {
e && e();
this.onOpend();
}).start();
}
}
onOpend() {}
closePanel() {
this.panelStack && a.default.ins.popPanel();
this.panelQueue && this.panelQueue.checkNext();
}
onCloseBtnTap() {
this.closePanel();
}
};
i([ c ], h.prototype, "autoHidePrePanel", void 0);
i([ c({
type: cc.Enum(d),
displayName: "PanelAnimType"
}) ], h.prototype, "panelAnimType", void 0);
i([ c(s.default) ], h.prototype, "closeBtn", void 0);
h = i([ l ], h);
o.default = h;
cc._RF.pop();
}, {
"../CustomUI/Button": "Button",
"./DataBind": "DataBind",
"./SceneManager": "SceneManager",
"./TweenUtil": "TweenUtil"
} ],
Particle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "24749EqdghILYHXNtn9u/vE", "Particle");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.speedX = 0;
this.speedY = 0;
this.lifeTime = 0;
}
};
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
PathConfig: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e7036BEDZNLOL+uc1pOucy+", "PathConfig");
Object.defineProperty(o, "__esModule", {
value: !0
});
class i {}
o.default = i;
i.ICON_MENU_COLLECTION = "Atlas/UI/star2";
cc._RF.pop();
}, {} ],
PatrolAI: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f0629TFJBNKaqTeGXjlru8b", "PatrolAI");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../Game/World/WorldChild"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
constructor() {
super(...arguments);
this.posArr = [];
this.posIdx = 0;
this.moveSpeed = 100;
this.skin = null;
}
update(e) {
if (!this.world.playing) return;
if (this.posArr.length <= 0) return;
let t = this.node.position, o = this.posArr[this.posIdx % this.posArr.length], i = o.sub(t), n = i.magSqr(), a = this.moveSpeed * e;
if (n < a * a) {
this.node.position = o;
this.posIdx++;
} else this.node.position = t.addSelf(i.normalizeSelf().mulSelf(a));
this.skin && (i.x > 0 ? this.skin.scaleX = 1 : i.x < 0 && (this.skin.scaleX = -1));
}
};
i([ s(cc.Node) ], r.prototype, "skin", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../Game/World/WorldChild": "WorldChild"
} ],
PausePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f5fe0cUihRArozLzn7k0cN2", "PausePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/GameSaveMng"), d = e("../../Scene/GameScene/GameScene"), {ccclass: h, property: p} = cc._decorator;
let u = class extends s.default {
constructor() {
super(...arguments);
this.resumeBtn = null;
this.resetBtn = null;
this.loadBtn = null;
this.exitBtn = null;
this.resumeCall = null;
this.exitCall = null;
}
onLoad() {
super.onLoad();
this.resumeBtn.node.on(a.default.CLICK, this.onResumeBtn, this);
this.exitBtn.node.on(a.default.CLICK, this.onExitBtn, this);
this.resetBtn.node.on(a.default.CLICK, this.onResetBtn, this);
this.loadBtn.node.on(a.default.CLICK, this.onLoadBtn, this);
}
closeAnim(e = null) {
e && e();
}
onCloseBtnTap() {
super.onCloseBtnTap();
this.resumeCall && this.resumeCall();
}
onResumeBtn() {
this.closePanel();
this.resumeCall && this.resumeCall();
}
onExitBtn() {
this.closePanel();
this.exitCall && this.exitCall();
}
onResetBtn() {
r.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否删除存档，重新开始？";
e.setLeftBtn({
text: "是",
color: l.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
this.closePanel();
let e = r.default.ins.findScene(d.default);
c.default.Ins.remove(e.gameData.id);
e.initWithSave(null);
})
});
e.setRightBtn({
text: "点错了",
color: l.UIColor.blue
});
});
}
onLoadBtn() {
this.closePanel();
let e = r.default.ins.findScene(d.default), t = c.default.Ins.load(e.gameData.id);
e.initWithSave(t);
}
};
i([ p(a.default) ], u.prototype, "resumeBtn", void 0);
i([ p(a.default) ], u.prototype, "resetBtn", void 0);
i([ p(a.default) ], u.prototype, "loadBtn", void 0);
i([ p(a.default) ], u.prototype, "exitBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/GameSaveMng": "GameSaveMng",
"../../Scene/GameScene/GameScene": "GameScene"
} ],
PetItemCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "946d2VV2QtGIKWa3F0tDSP/", "PetItemCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.icon = null;
this.btnDelete = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.btnDelete.node.on(a.default.CLICK, this.onClickDelete, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this._data = e;
r.Mng.Ins.spriteMng.setActorSprite(this.icon, e.icon, 55);
});
}
onClickDelete() {
this._data.onDelete(this._data.id);
}
};
i([ c(cc.Sprite) ], d.prototype, "icon", void 0);
i([ c(a.default) ], d.prototype, "btnDelete", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
PhyExt: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "275b5wXlyNAB4xhI03uc4+V", "PhyExt");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = window.b2;
class n {
constructor() {
this._aabb = null;
this._point = new i.Vec2();
this._isPoint = !1;
this._fixtures = [];
}
init(e, t) {
this._aabb = e;
if (t) {
this._isPoint = !0;
this._point.x = t.x;
this._point.y = t.y;
} else this._isPoint = !1;
this._fixtures.length = 0;
}
ReportFixture(e) {
if (this._isPoint) e.TestPoint(this._point) && this._fixtures.push(e); else {
for (var t = !1, o = e.GetShape().GetChildCount(), n = 0; n < o; n++) {
var a = e.GetAABB(n);
if (i.TestOverlapAABB(this._aabb, a)) {
t = !0;
break;
}
}
t && this._fixtures.push(e);
}
return !0;
}
getFixture() {
return this._fixtures[0];
}
getFixtures() {
return this._fixtures;
}
}
o.default = n;
var a = new i.AABB(), s = new i.Vec2(), r = new n();
cc.PhysicsManager.prototype.testPoint2 = function(e) {
const t = cc.PhysicsManager.PTM_RATIO;
var o = s.x = e.x / t, i = s.y = e.y / t, n = .2 / t;
a.lowerBound.x = o - n;
a.lowerBound.y = i - n;
a.upperBound.x = o + n;
a.upperBound.y = i + n;
var l = r;
l.init(a, s);
this._world.QueryAABB(l, a);
return l.getFixtures().map(function(e) {
return e.collider;
});
};
cc.PhysicsManager.prototype.testAABB2 = function(e) {
const t = cc.PhysicsManager.PTM_RATIO;
a.lowerBound.x = e.xMin / t;
a.lowerBound.y = e.yMin / t;
a.upperBound.x = e.xMax / t;
a.upperBound.y = e.yMax / t;
var o = r;
o.init(a);
this._world.QueryAABB(o, a);
return o.getFixtures().map(function(e) {
return e.collider;
});
};
cc._RF.pop();
}, {} ],
PhyObj: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11d88ONxHhBW4ljCqql81pI", "PhyObj");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.velocity = cc.Vec2.ZERO;
this.angleSpeed = 0;
this.flying = !1;
this.g = 1500;
this.needDestroy = !0;
}
update(e) {
if (this.flying) {
this.velocity.y -= e * this.g;
this.node.x += this.velocity.x * e;
this.node.y += this.velocity.y * e;
this.node.angle += this.angleSpeed * e;
}
}
fly(e, t, o) {
this.flying = !0;
this.velocity.x = e;
this.velocity.y = t;
this.angleSpeed = o;
}
fadeOut() {
this.node.active = !0;
cc.tween(this.node).delay(1).to(.5, {
opacity: 0
}).call(() => {
this.flying = !1;
this.needDestroy ? this.node.destroy() : this.node.active = !1;
}).start();
}
};
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
PiecewiseFunc: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3e3391O/ARMyIrlEn3uA1Op", "PiecewiseFunc");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("./Util");
o.default = class {
constructor(e) {
this.points = e;
e.sort((e, t) => e.x - t.x);
}
getY(e) {
let t = this.points.length;
if (t <= 0) return 0;
if (e <= this.points[0].x) return this.points[0].y;
if (e >= this.points[t - 1].x) return this.points[t - 1].y;
for (let o = 1; o < t; o++) if (e <= this.points[o].x) {
let t = this.points[o - 1].x, n = this.points[o].x, a = this.points[o - 1].y, s = this.points[o].y;
return i.Util.lerp01(a, s, (e - t) / (n - t));
}
}
};
cc._RF.pop();
}, {
"./Util": "Util"
} ],
PlaceGizmos: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "edb98sVzu1PTIlX/AVCmWh5", "PlaceGizmos");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.CanPlaceType = void 0;
const a = e("../../../CustomUI/Button"), s = e("../Tile"), r = e("../TiledMap"), l = e("../TouchWorldCtrl"), {ccclass: c, property: d} = cc._decorator;
var h;
(function(e) {
e[e.EmptySpace = 1] = "EmptySpace";
e[e.DecorateTile = 2] = "DecorateTile";
e[e.BlockTile = 4] = "BlockTile";
e[e.All = 7] = "All";
})(h = o.CanPlaceType || (o.CanPlaceType = {}));
let p = i = class extends cc.Component {
constructor() {
super(...arguments);
this.touchNode = null;
this.confirmBtn = null;
this.cancelBtn = null;
this.rotateBtn = null;
this.flipXBtn = null;
this.camera = null;
this.tiledMap = null;
this.data = null;
this.rotateIdx = 0;
}
onLoad() {
this.confirmBtn.node.on(a.default.CLICK, this.onConfirmBtnTap, this);
this.cancelBtn.node.on(a.default.CLICK, this.onCancelBtnTap, this);
this.rotateBtn.node.on(a.default.CLICK, this.onRotateBtnTap, this);
this.flipXBtn.node.on(a.default.CLICK, this.onFlipXBtn, this);
this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove6, this);
this.touchNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
}
setScale(e) {
this.touchNode.scale = e || 1;
}
onTouchEnd(e) {
let t = this.touchToGrid(e);
e.getLocation().sub(e.getStartLocation()).magSqr() < 100 && cc.game.emit(l.default.CLICK_WORLD, t);
}
onTouchMove6(e) {
let t = this.touchToGrid(e), o = this.touchNode.scale, i = t.iCol - Math.floor(.5 * o), n = t.iRow - Math.floor(.5 * o), a = t.iCol + Math.floor(.5 * o), r = t.iRow + Math.floor(.5 * o), l = !0;
for (let e = n; e <= r; ++e) {
for (let t = i; t <= a; ++t) {
let o = !0, i = this.tiledMap.getTile(t, e);
if (i) {
this.data.canPlaceType & h.BlockTile && i.block && (o = !1);
this.data.canPlaceType & h.DecorateTile && (i.block || (o = !1));
let e = i.data.layerIdx || 0;
this.data.canPlaceType & h.EmptySpace && e != this.data.layerIdx && (o = !1);
} else this.data.canPlaceType & h.EmptySpace && (o = !1);
if (o) {
l = !1;
break;
}
}
if (!l) break;
}
if (l) {
let e = (t.iCol + .5) * s.default.SIZE, o = (t.iRow + .5) * s.default.SIZE, i = cc.v2(e, o);
this.node.position = i;
this.data.target ? this.data.target.position = i : this.data.body.SetPosition(i.x, i.y);
}
}
touchToGrid(e) {
let t = e.getLocation();
this.camera.getScreenToWorldPoint(t, t);
this.node.parent.convertToNodeSpaceAR(t, t);
let o = Math.floor(t.x / s.default.SIZE), i = Math.floor(t.y / s.default.SIZE);
return {
x: t.x,
y: t.y,
iCol: o,
iRow: i
};
}
onConfirmBtnTap() {
this.hide();
this.data.onConfirm && this.data.onConfirm();
this.data.onComplete && this.data.onComplete();
cc.game.emit(i.PlaceGizmos_Confirm);
}
onCancelBtnTap() {
this.hide();
this.data.onCancel && this.data.onCancel();
this.data.onComplete && this.data.onComplete();
}
onRotateBtnTap() {
this.rotateIdx++;
let e = this.data.target ? this.data.target : this.data.body.node, t = this.data.rotateArr, o = this.rotateIdx % t.length;
e.angle = t[o];
this.data.onRotate && this.data.onRotate(o, e.angle);
}
onFlipXBtn() {
this.data.onFlipX && this.data.onFlipX();
}
show(e) {
this.node.active && cc.game.emit(i.PlaceGizmos_Confirm);
this.touchNode.scale = e.scale || 1;
this.data = e;
this.rotateIdx = 0;
this.node.active = !0;
let t = this.data.target ? this.data.target : this.data.body.node;
this.node.x = t.x;
this.node.y = t.y;
if (e.rotateArr && e.rotateArr.length > 0) {
this.rotateBtn.node.active = !0;
this.rotateIdx = e.rotateIdx || 0;
} else this.rotateBtn.node.active = !1;
this.flipXBtn.node.active = !!e.showFlipX;
this.cancelBtn.node.active = !e.noCancel;
cc.game.emit(i.PlaceGizmos_Show, this);
}
hide() {
this.node.active = !1;
}
};
p.PlaceGizmos_Show = "PlaceGizmos_Show";
p.PlaceGizmos_Confirm = "PlaceGizmos_Confirm";
n([ d(cc.Node) ], p.prototype, "touchNode", void 0);
n([ d(a.default) ], p.prototype, "confirmBtn", void 0);
n([ d(a.default) ], p.prototype, "cancelBtn", void 0);
n([ d(a.default) ], p.prototype, "rotateBtn", void 0);
n([ d(a.default) ], p.prototype, "flipXBtn", void 0);
n([ d(cc.Camera) ], p.prototype, "camera", void 0);
n([ d(r.default) ], p.prototype, "tiledMap", void 0);
p = i = n([ c ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../Tile": "Tile",
"../TiledMap": "TiledMap",
"../TouchWorldCtrl": "TouchWorldCtrl"
} ],
PlatformInterface: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ab029F3yKtHCaSkT2ZKrrFz", "PlatformInterface");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.PlatType = void 0;
(function(e) {
e[e.None = -1] = "None";
e[e.Visitor = 0] = "Visitor";
e[e.WeChat = 1] = "WeChat";
e[e.QQ = 2] = "QQ";
e[e.Apple = 3] = "Apple";
e[e.TT = 4] = "TT";
e[e.Mobile = 5] = "Mobile";
e[e.YingYongBao = 6] = "YingYongBao";
})(o.PlatType || (o.PlatType = {}));
cc._RF.pop();
}, {} ],
PlatformJumpAiComMoveCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "20c7dHwX8NLG51+jWeiqFSz", "PlatformJumpAiComMoveCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../GameData/GameTypeDefine"), a = e("./AiCtrlBase"), s = e("./Com/AiComDirLineMover"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this._aicoms = [];
}
onDestroy() {
for (let e of this._aicoms) e.onDestroy();
}
setActor(e) {
this._actor = e;
this._actor.gun.firing = !0;
if (e.data.aiMoveType == n.AIMoveType.PlatformJump_DirLine) {
e.ignoreTile = !0;
let t = new s.AiComDirLineMover();
t.setData(e, e.data.dirLineMoveData, !0);
this._aicoms.push(t);
}
}
update(e) {
if (this._actor && this._actor.world.playing && this._actor.hper.isAlive()) for (let t of this._aicoms) t.run(e);
}
};
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"./AiCtrlBase": "AiCtrlBase",
"./Com/AiComDirLineMover": "AiComDirLineMover"
} ],
PlatformJumpAiFollowHeroCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "91ff2hGDhVLP5FEu1UakFum", "PlatformJumpAiFollowHeroCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./AiCtrlBase"), a = e("./Com/AiComPlatformJumpFollow"), {ccclass: s, property: r} = cc._decorator;
let l = class extends n.default {
constructor() {
super(...arguments);
this._aicoms = [];
}
onDestroy() {
for (let e of this._aicoms) e.onDestroy();
}
setActor(e) {
this._actor = e;
e.ignoreTile = !0;
this._comFollow = new a.AiComPlatformJumpFollow();
this._comFollow.setActor(e);
this._aicoms.push(this._comFollow);
this.node.on("onAddPet", this.onAddTarget, this);
this.node.on("onRemovePet", this.onRemoveTarget, this);
}
update(e) {
if (!this._actor) return;
let t = this._actor.world;
if (t.playing && this._actor.hper.isAlive()) {
for (let t of this._aicoms) t.run(e);
if (t.hero && !this._comFollow.hasTarget()) {
let e = this._actor.node.x - t.hero.node.x, o = this._actor.node.y - t.hero.node.y;
e * e + o * o <= 4096 && t.hero.addPet(this._actor);
}
}
}
onAddTarget(e) {
this._comFollow.setTarget(e);
}
onRemoveTarget() {
this._comFollow.clearTarget();
}
};
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"./AiCtrlBase": "AiCtrlBase",
"./Com/AiComPlatformJumpFollow": "AiComPlatformJumpFollow"
} ],
PlatformJumpAiMoveCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8f34a2i1V1IfKg/zozza4aV", "PlatformJumpAiMoveCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../GameData/GameTypeDefine"), a = e("../Mover/PlatformJumpMover"), s = e("../Tile"), r = e("./AiCtrlBase"), {ccclass: l, property: c} = cc._decorator;
let d = class extends r.default {
constructor() {
super(...arguments);
this._isMisstepBack = !1;
this._isJump = !1;
this._isTraceHero = !1;
this._traceRange = 0;
this._jumpInterval = 0;
this._nextJumpTimer = 0;
this._doJump = !1;
this.dir = -1;
this.mover = null;
}
setMover(e) {
this._isMisstepBack = e.actor.data.aiMoveType == n.AIMoveType.PlatformJump_Ground_MisstepBack;
this._isJump = e.actor.data.aiMoveType == n.AIMoveType.PlatformJump_Jump_WallBack || e.actor.data.aiMoveType == n.AIMoveType.PlatformJump_Jump_Trace;
if (this._isJump) {
this._jumpInterval = e.actor.data.jumpInterval;
this._nextJumpTimer = 0;
}
this._isTraceHero = e.actor.data.aiMoveType == n.AIMoveType.PlatformJump_Jump_Trace;
if (this._isTraceHero) {
this._traceRange = e.actor.data.traceHeroRange;
this._isMisstepBack = !1;
}
this.mover && this.mover.node.off(a.default.HitWall, this.onHitWall, this);
this.mover = e;
if (this.mover) {
this.mover.node.on(a.default.HitWall, this.onHitWall, this);
this.mover.curJumpTimes = 0;
this.mover.jumpTimesMax = this.mover.actor.data.jumpStep;
}
this.dir = this.mover.actor.getScaleX();
this.mover.actor.gun.firing = !0;
}
onHitWall() {
if (!this._isTraceHero) {
this.dir *= -1;
this.mover.setDirX(this.dir);
}
}
update(e) {
if (!this.mover) return;
if (this.mover.isInSpring) return;
let t = this.mover.world, o = this.mover.actor.getRuntimeBoundingBox(), i = !0;
if (!this.mover.isInAir && !this.mover.isJumping) {
let e = !1;
if (this._isMisstepBack) {
let i = o.xMin + 10 * this.dir, n = i + o.width, a = o.yMin - 10, r = a + o.height, l = Math.floor(i / s.default.SIZE), c = Math.floor(n / s.default.SIZE), d = Math.floor(a / s.default.SIZE), h = Math.floor(r / s.default.SIZE);
for (let o = l; o <= c; ++o) for (let i = d; i <= h; ++i) {
let n = t.tiledMap.getTiles(o, i);
if (n.length > 0) for (let t of n) if (t.block) {
e = !0;
break;
}
}
e || (this.dir *= -1);
}
if (this._isTraceHero && t.hero) {
let e = t.hero.node.x - this.mover.node.x, o = t.hero.node.y - this.mover.node.y;
Math.abs(e) > this._traceRange || Math.abs(o) > this._traceRange ? i = !1 : this.dir = e >= 0 ? 1 : -1;
}
}
if (i) {
this.mover.setDirX(this.dir);
if (this._isJump && this.mover.isGround) {
if (this._doJump) {
this._doJump = !1;
this._nextJumpTimer = cc.director.getTotalTime() + 1e3 * this._jumpInterval;
}
if (!this._doJump && this._nextJumpTimer <= cc.director.getTotalTime()) {
let e = this.mover.actor.data.jumpHight;
this.mover.isInSpring && (e = this.mover.springBounceHeight);
this.mover.jumpByHeight(e);
this._doJump = !0;
}
}
} else this.mover.setDirX(0);
}
};
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../Mover/PlatformJumpMover": "PlatformJumpMover",
"../Tile": "Tile",
"./AiCtrlBase": "AiCtrlBase"
} ],
PlatformJumpAiStaticCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "28852XitudHNrjJG10clXEA", "PlatformJumpAiStaticCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./AiCtrlBase"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {
constructor() {
super(...arguments);
this.actor = null;
}
setActor(e) {
this.actor = e;
this.actor.gun.firing = !0;
}
};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"./AiCtrlBase": "AiCtrlBase"
} ],
PlatformJumpMoverCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11f92GAKJZFxoZccMyTgOkr", "PlatformJumpMoverCtrl");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/Joystick"), r = e("../../../GameData/GameTypeDefine"), l = e("../Mover/PlatformJumpMover"), c = e("./BaseMoveCtrl"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends c.default {
constructor() {
super(...arguments);
this.curWallFaceDir = 0;
this._hitWllTimer = 0;
this._onLandTimer = 0;
this._jumpWllTimer = 0;
this._beginJumpStamp = 0;
this._pressJump = !1;
this._holdJump = !1;
this.joystick = null;
this.btnA = null;
this.btnB = null;
this.joystickB = null;
this.mover = null;
this._tmpDir = cc.v2();
this._tmpBDir = cc.v2();
this._joystickBMag = 0;
this._isReadyJoystickBFire = !1;
this._jumpMaxVy = 0;
this._jumpHoldTime = 0;
}
get isHitWall() {
return cc.director.getTotalTime() < this._hitWllTimer;
}
get isOnLand() {
return cc.director.getTotalTime() < this._onLandTimer;
}
get isInJumpWll() {
return cc.director.getTotalTime() < this._jumpWllTimer;
}
onLoad() {
this.joystick.node.on(s.default.TOUCH_BEGIN, this.onJoystickTouchBegin, this);
this.joystick.node.on(s.default.TOUCHING, this.onJoystickTouching, this);
this.joystick.node.on(s.default.TOUCH_END, this.onJoystickTouchEnd, this);
this.joystick.node.on(s.default.ANGLE_CHANGE, this.onJoystickAngleChange, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndA, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndB, this);
this.joystickB.node.on(s.default.TOUCH_BEGIN, this.onJoystickBTouchBegin, this);
this.joystickB.node.on(s.default.TOUCHING, this.onJoystickBTouching, this);
this.joystickB.node.on(s.default.TOUCH_END, this.onJoystickBTouchEnd, this);
}
setMover(e) {
super.setMover(e);
if (this.mover) {
this.mover.node.off(l.default.Land, this.onMoverLand, this);
this.mover.node.off(l.default.Roof, this.onMoverRoof, this);
this.mover.node.off(l.default.InAir, this.onMoverInAir, this);
this.mover.node.off(l.default.HitWall, this.onMoverWall, this);
this.mover.node.off(l.default.LeaveWall, this.onMoverLeaveWall, this);
}
this.mover = e;
if (this.mover) {
this.mover.node.on(l.default.Land, this.onMoverLand, this);
this.mover.node.on(l.default.Roof, this.onMoverRoof, this);
this.mover.node.on(l.default.InAir, this.onMoverInAir, this);
this.mover.node.on(l.default.HitWall, this.onMoverWall, this);
this.mover.node.on(l.default.LeaveWall, this.onMoverLeaveWall, this);
this.mover.curJumpTimes = 0;
}
}
onMoverLand() {
this.mover.curJumpTimes = 0;
this._onLandTimer = cc.director.getTotalTime() + 50;
}
onMoverRoof() {
this._holdJump && (this._holdJump = !1);
}
onMoverInAir() {
this._onLandTimer = 0;
}
onMoverWall(e) {
if (this.mover.actor.data.enableClimbWall) {
this.curWallFaceDir = e;
this._hitWllTimer = cc.director.getTotalTime() + 50;
this.mover.curJumpTimes = 0;
}
}
onMoverLeaveWall() {
this.mover.actor.data.enableClimbWall && (this._hitWllTimer = 0);
}
onJoystickTouchBegin() {
this._isTouchDir = !0;
}
onJoystickTouching(e) {
if (this.mover && !this.mover.isInSpring && !this.isInJumpWll) {
this._tmpDir.set(e);
this._tmpDir.normalizeSelf();
this.mover.setDir(this._tmpDir.x, this._tmpDir.y);
}
}
onJoystickTouchEnd() {
this._isTouchDir = !1;
this.mover && this.mover.setDir(0, 0);
}
onJoystickAngleChange(e) {}
readyJoystickBFire() {
this._isReadyJoystickBFire = !0;
this.mover.actor.gun.readyFire();
this._joystickBMag = .65 * this.joystickB.maxR;
}
onJoystickBTouchBegin() {
this.mover && this.mover.actor.gun && this.joystickB.node.active && this.readyJoystickBFire();
}
onJoystickBTouching(e) {
if (!this.mover || !this.mover.actor.gun || !this.joystickB.node.active) return;
if (this.mover.isInSpring) return;
if (this.isInJumpWll) return;
this._tmpBDir.set(e);
this._joystickBMag = this._tmpBDir.mag();
let t = this._joystickBMag / this.joystickB.maxR;
t > 1 && (t = 1);
this._tmpBDir.normalizeSelf();
this.mover.actor.gun.updateFirePower(t);
this.mover.actor.gun.updateFireDir(this._tmpBDir.x, this._tmpBDir.y);
}
onJoystickBTouchEnd() {
if (!this.mover || !this.mover.actor.gun || !this.joystickB.node.active) return;
this._isReadyJoystickBFire || this.readyJoystickBFire();
this._isReadyJoystickBFire = !1;
let e = this._joystickBMag / this.joystickB.maxR;
e > 1 && (e = 1);
this.mover.actor.gun.fire(e);
this.mover.actor.gun.updateFireDir(0, 0);
}
onTouchStartA() {
if (this.mover && !(this.mover.curJumpTimes >= this.mover.jumpTimesMax) && this.mover.actor) {
this._pressJump = !0;
this.mover.isInSpring ? this._holdJump = !1 : this._holdJump = !0;
if (this.mover.actor.data.enableClimbWall && this.isHitWall && !this.isOnLand) {
let e = this.mover.actor.data.jumpHight, t = e * this.curWallFaceDir, o = Math.sqrt(-2 * this.mover.g * e), i = -o / this.mover.g, n = t / i;
this.mover.jumpBySpeed(n, o);
this.mover.onJumpOnWall();
this._jumpWllTimer = cc.director.getTotalTime() + 250 * i;
this.mover.curJumpTimes = 0;
} else {
let e = -this.mover.g, t = 0, o = i.JumpHoldTime;
if (0 == this.mover.curJumpTimes && this.mover.isInSpring) {
t = this.mover.springBounceHeight;
this._jumpMaxVy = this.mover.jumpByHeight(t);
} else {
if (0 == this.mover.curJumpTimes) {
t = this.mover.actor.data.jumpHight;
this.mover.isInSpring && (t = this.mover.springBounceHeight);
} else {
t = .5 * this.mover.actor.data.jumpHight;
o *= .5;
}
this._jumpHoldTime = o;
let i = t + 20, n = Math.sqrt(2 * e * i + e * e * o * o) - e * o;
n < 0 && (n = 0);
this._jumpMaxVy = n;
this.mover.jumpBySpeed(this.mover.velocity.x, this._jumpMaxVy);
}
}
this._beginJumpStamp = cc.director.getTotalTime();
this.mover.curJumpTimes++;
this._onLandTimer = 0;
}
}
onTouchHoldA() {
if (this.mover && this._holdJump) {
let e = this._pressJump ? 1e3 * this._jumpHoldTime : 100;
cc.director.getTotalTime() - this._beginJumpStamp <= e ? this.mover.setJumpSpeedY(this._jumpMaxVy) : this._holdJump = !1;
}
}
onTouchEndA() {
this._pressJump = !1;
}
onTouchStartB() {
this.mover && (this.mover.actor.gun.firing = !0);
}
onTouchEndB() {
this.mover && (this.mover.actor.gun.firing = !1);
}
setMoveDir(e) {
e.equals(cc.Vec2.ZERO) ? this.onJoystickTouchEnd() : this.onJoystickTouching(e);
}
update() {
super.update && super.update();
this.onTouchHoldA();
if (this.mover && this.mover.actor) if (this.mover.actor.gun && this.mover.actor.gun.conf && this.mover.actor.gun.conf.weaponType == r.WeaponType.Cast) {
this.joystickB.node.active = !0;
this.btnB.node.active = !1;
} else {
this.joystickB.node.active = !1;
this.btnB.node.active = !0;
}
}
};
p.JumpHoldTime = .3;
n([ h(s.default) ], p.prototype, "joystick", void 0);
n([ h(a.default) ], p.prototype, "btnA", void 0);
n([ h(a.default) ], p.prototype, "btnB", void 0);
n([ h(s.default) ], p.prototype, "joystickB", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/Joystick": "Joystick",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../Mover/PlatformJumpMover": "PlatformJumpMover",
"./BaseMoveCtrl": "BaseMoveCtrl"
} ],
PlatformJumpMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8d94eSpNt5F2btZyxOgyv2g", "PlatformJumpMover");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../Frame/FightSystem"), s = e("../../Device/Ladder"), r = e("../../Device/Platform"), l = e("../../Device/Spring"), c = e("../../Player/TriggerMng"), d = e("../Tile"), h = e("../WorldNodeBody"), p = e("./Mover"), {ccclass: u, property: m} = cc._decorator;
let f = i = class extends p.default {
constructor() {
super(...arguments);
this.actor = null;
this.box = null;
this.velocity = cc.Vec2.ZERO;
this.canFly = !1;
this.beatenSpeedX = 300;
this.g = -2500;
this.resistanceCof = 2;
this.frictionCof = 1;
this._touchWallTimer = 0;
this._slidingOnWall = !1;
this._jumpOnWallTimer = 0;
this.moveDistance = 0;
this._onGroundTimer = 0;
this.forceVelocityX = 0;
this.useForceVelocityX = !1;
this.groundGroupNames = [ "Tile", "Ground" ];
this._moveDir = new cc.Vec2();
this._moveVelocity = new cc.Vec2();
this._jumpTimer = 0;
this.jumpTimesMax = 2;
this.curJumpTimes = 0;
this.lastPos = cc.Vec2.ZERO;
this._onPlatform = !1;
this._inLadderTimer = 0;
this._ladderSpeed = 0;
this._ladderFriction = .25;
this.isInSpring = !1;
this.springBounceHeight = 0;
}
get moveSpeedX() {
return this.actor && this.actor.data.moveSpeed || 300;
}
onDestroy() {
this.actor && (this.actor.onBlockedByTile = null);
}
get isTouchWall() {
let e = cc.director.getTotalTime() < this._touchWallTimer;
e || (this._slidingOnWall = !1);
return e;
}
get isJumpOnWall() {
return cc.director.getTotalTime() < this._jumpOnWallTimer;
}
onJumpOnWall() {
this._jumpOnWallTimer = cc.director.getTotalTime() + 300;
}
get isGround() {
return cc.director.getTotalTime() < this._onGroundTimer;
}
get isInAir() {
return !this.isGround;
}
setDirX(e) {
this._moveDir.x = e;
this.updateMoveVelocity();
let t = e;
t > 0 ? this.actor.setScaleX(1) : t < 0 && this.actor.setScaleX(-1);
this.isGround ? this.actor.setDir(t, 0) : (this.canFly, this.actor.setDir(t, 0));
}
setDirY(e) {
this.inLadder || this.canFly ? this._moveDir.y = e : this._moveDir.y = 0;
this.updateMoveVelocity();
}
setDir(e, t) {
if (this.actor) {
!this.isJumping && this.actor.gun && this.actor.gun.firing && 0 != e && Math.abs(t / e) > 8.144 && (e = 0);
this._moveDir.x = e;
if (this.inLadder || this.canFly) this._moveDir.y = t; else {
this._moveDir.y = 0;
this._moveDir.x > 0 ? this._moveDir.x = 1 : this._moveDir.x < 0 && (this._moveDir.x = -1);
}
this.updateMoveVelocity();
e > 0 ? this.actor.setScaleX(1) : e < 0 && this.actor.setScaleX(-1);
this.isGround ? this.actor.setDir(e, t < 0 ? 0 : t) : this.canFly ? this.actor.setDir(e, 0) : this.actor.setDir(e, t);
}
}
updateMoveVelocity() {
let e = this.moveSpeedX, t = 1;
this.isJumpOnWall && (t = .2);
if (this.inLadder) {
e = this._ladderSpeed;
this.velocity.x * this._moveDir.x < 0 && (this.velocity.x = 0);
this.velocity.y * this._moveDir.y < 0 && (this.velocity.y = 0);
} else {
this.isJumpOnWall || (this.velocity.x = 0);
this.canFly && (this.velocity.y = 0);
}
cc.Vec2.multiplyScalar(this._moveVelocity, this._moveDir, e);
if (Math.abs(this.velocity.x) < Math.abs(this._moveVelocity.x) || this.velocity.x * this._moveDir.x < 0) {
let e = this.velocity.x + this._moveVelocity.x * t;
e * this._moveDir.x > 0 && Math.abs(e) > Math.abs(this._moveVelocity.x) && (e = this._moveVelocity.x);
this.velocity.x = e;
}
if (Math.abs(this.velocity.y) < Math.abs(this._moveVelocity.y)) {
let e = this.velocity.y + this._moveVelocity.y;
Math.abs(e) > Math.abs(this._moveVelocity.y) && (e = this._moveVelocity.y);
this.isJumping || (this.velocity.y = e);
}
}
onLoad() {
this.box = this.node.getComponent(cc.BoxCollider);
this.node.on(a.FightSystem.Event.Beaten, this.onBeaten, this);
}
setActor(e) {
if (this.actor) {
e.ignoreTile = !1;
this.actor.node.off(r.Platform.ONPLATFORM, this.onPlatform, this);
this.actor.node.off(r.Platform.EXISTPLATFORM, this.onPlatformExist, this);
this.actor.node.off(r.Platform.BLOCKBYPLATFORM, this.onPlatformBlock, this);
this.actor.node.off(s.default.INLADDER, this.onInLadder, this);
this.actor.node.off(s.default.OUTLADDER, this.onOutLadder, this);
this.node.off(l.default.REBOUND, this.onSpringReBound, this);
this.node.off(l.default.ENTERSPRING, this.onSpringEnter, this);
this.node.off(l.default.EXISTSPRING, this.onSpringExist, this);
}
this.actor = e;
if (this.actor) {
this.actor.node.on(r.Platform.ONPLATFORM, this.onPlatform, this);
this.actor.node.on(r.Platform.EXISTPLATFORM, this.onPlatformExist, this);
this.actor.node.on(r.Platform.BLOCKBYPLATFORM, this.onPlatformBlock, this);
this.actor.node.on(s.default.INLADDER, this.onInLadder, this);
this.actor.node.on(s.default.OUTLADDER, this.onOutLadder, this);
this.node.on(l.default.REBOUND, this.onSpringReBound, this);
this.node.on(l.default.ENTERSPRING, this.onSpringEnter, this);
this.node.on(l.default.EXISTSPRING, this.onSpringExist, this);
}
this.actor.onBlockedByTile = e => {
let t = e.moveBackX, o = e.moveBackY;
this.actor.PositionMoveDelta(t, o);
this.isGround && !this.isTouchWall && this.actor.LimitMoveDelta(this.moveSpeedX / cc.game.getFrameRate());
if (this.velocity.y < 0 && o > 0) {
this.velocity.y = 0;
this.node.emit(i.Land);
this._onGroundTimer = cc.director.getTotalTime() + 50;
} else this.isGround || this.node.emit(i.InAir);
if (this.velocity.y > 0 && o < 0) {
this.velocity.y = 0;
this.node.emit(i.Roof);
}
if (this.velocity.x * t < 0) {
this._touchWallTimer = cc.director.getTotalTime() + 50;
this.node.emit(i.HitWall, t > 0 ? 1 : -1);
} else if (!this.isTouchWall) {
this._touchWallTimer = 0;
this._slidingOnWall = !1;
this.node.emit(i.LeaveWall);
}
};
void 0 !== this.actor.data.beatenBackRange && (this.beatenSpeedX = this.actor.data.beatenBackRange * d.default.SIZE);
}
get isJumping() {
return cc.director.getTotalTime() < this._jumpTimer;
}
jumpBySpeed(e, t) {
this.velocity.x = e;
this.velocity.y = t;
let o = t > 0 ? t / Math.abs(this.g) : 0;
console.log("upDuration=" + o);
this._jumpTimer = cc.director.getTotalTime() + 1e3 * o;
c.default.Ins.emitTrigger(this.actor.data.onJump, this.node);
}
jumpByHeight(e) {
c.default.Ins.emitTrigger(this.actor.data.onJump, this.node);
let t = Math.sqrt(-2 * this.g * e);
this.velocity.y = t;
let o = t > 0 ? t / Math.abs(this.g) : 0;
this._jumpTimer = cc.director.getTotalTime() + 1e3 * o;
c.default.Ins.emitTrigger(this.actor.data.onJump, this.node);
return t;
}
setJumpSpeedY(e) {
this.velocity.y = e;
}
addSpeed(e, t) {
this.velocity.x += e;
this.velocity.y += t;
}
update(e) {
let t = this.world;
if (!t.playing) return;
if (!this.actor.hper.isAlive()) return;
this.jumpTimesMax = this.actor.data.jumpStep;
e = Math.min(.2, e);
let o = 0;
this.useForceVelocityX ? o = this.forceVelocityX : (o = this.velocity.x) > 0 ? this.actor.setScaleX(1) : o < 0 && this.actor.setScaleX(-1);
this.actor.PositionMoveDelta(o * e, this.velocity.y * e);
if (this.inLadder) {
if (!this.isJumping) {
if (0 == this._moveVelocity.x || Math.abs(this.velocity.x) > Math.abs(this._moveVelocity.x)) {
let e = -this.velocity.x * this._ladderFriction;
this.velocity.x += e;
}
if (0 == this._moveVelocity.y || Math.abs(this.velocity.y) > Math.abs(this._moveVelocity.y)) {
let e = -this.velocity.y * this._ladderFriction;
this.velocity.y += e;
}
}
} else if (!this._onPlatform) {
let o = this.canFly ? 0 : this.g, i = -this.velocity.x * this.resistanceCof, n = this.velocity.y < 0 ? -this.velocity.y * this.resistanceCof : 0, a = this.isInAir ? 0 : this.frictionCof, s = -this.velocity.x * a;
if (this.actor.data.enableClimbWall && this.isTouchWall && this.velocity.y < 0) {
if (!this._slidingOnWall) {
this._slidingOnWall = !0;
let e = this.actor.PositionX, o = this.actor.PositionY, i = t.tiledMap.getGridPos(e, o), n = 0;
for (;n <= 2; ) {
let e = t.tiledMap.getTiles(i.iCol, i.iRow - n);
++n;
for (let t of e) if (t && t.block) {
this._slidingOnWall = !1;
break;
}
if (!this._slidingOnWall) break;
}
}
this._slidingOnWall && (n = -this.velocity.y * Math.abs(o) / 100);
}
this.velocity.y += (o + n) * e;
this.velocity.x += (i + s) * e;
Math.abs(this.velocity.x) < .001 && (this.velocity.x = 0);
}
let i = this.node.position.sub(this.lastPos).mag();
this.moveDistance += i;
this.lastPos = this.node.position;
if (this.moveDistance > 32) {
this.moveDistance = 0;
this.emitActorMove();
}
}
emitActorMove() {
this.world;
this.node.emit(p.default.ActorMove, this.actor);
this.isGround ? c.default.Ins.emitTrigger(this.actor.data.onGroundMove, this.node) : c.default.Ins.emitTrigger(this.actor.data.onAirMove, this.node);
}
onBeaten(e) {
if (this.actor.data.beatenBackRange > 0) {
let t = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO).x, o = e.damager.node.convertToWorldSpaceAR(cc.Vec2.ZERO).x;
this.useForceVelocityX = !0;
if (t < o) {
this.forceVelocityX = -this.beatenSpeedX;
this.actor.setScaleX(1);
} else if (t > o) {
this.forceVelocityX = this.beatenSpeedX;
this.actor.setScaleX(-1);
}
this.velocity.x = 0;
this.velocity.y = 300;
this.scheduleOnce(() => {
this.useForceVelocityX = !1;
}, .4);
}
let t = this.actor.data.beatenLockHpTime || 0;
this.actor.hper.lockHp = !0;
this.scheduleOnce(() => {
this.actor.hper.lockHp = !1;
}, t);
}
onPlatform() {
this._onPlatform = this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Platform);
this._onPlatform && this.node.emit(i.Land);
}
onPlatformExist() {
this._onPlatform = this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Platform);
}
onPlatformBlock(e) {
if (this._onPlatform && e.y < 0 && this.velocity.y > 0) return;
let t = 0 != e.x ? this.actor.node.x : this.actor.PositionX, o = 0 != e.y ? this.actor.node.y : this.actor.PositionY;
(e.y > 0 && this.actor.PositionY > o || e.y < 0 && this.actor.PositionY < o) && (o = this.actor.PositionY);
(e.x > 0 && this.actor.PositionX > t || e.x < 0 && this.actor.PositionX < t) && (t = this.actor.PositionX);
this.actor.SetPosition(t, o);
this.actor.onBlockedByTile({
moveBackX: e.x,
moveBackY: e.y
});
}
get inLadder() {
return cc.director.getTotalTime() < this._inLadderTimer;
}
onInLadder(e) {
if (this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Ladder)) {
this.isJumping || this.node.emit(i.Land);
this._ladderSpeed = e;
this._inLadderTimer = cc.director.getTotalTime() + 50;
}
}
onOutLadder() {
this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Ladder) || (this._inLadderTimer = 0);
}
onSpringEnter(e) {
console.log("onSpringEnter");
this.springBounceHeight = e;
this.isInSpring = !0;
this.velocity.x = 0;
this.node.emit(i.Land);
}
onSpringExist() {
console.log("onSpringExist");
this.isInSpring = !1;
}
onSpringReBound(e) {
this.isInSpring = !1;
this.curJumpTimes = this.jumpTimesMax - 1;
this.jumpByHeight(e);
}
};
f.Land = "Land";
f.InAir = "InAir";
f.Roof = "Roof";
f.HitWall = "HitWall";
f.LeaveWall = "LeaveWall";
f.GroundMove = "GroundMove";
f.AirMove = "AirMove";
f = i = n([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../Frame/FightSystem": "FightSystem",
"../../Device/Ladder": "Ladder",
"../../Device/Platform": "Platform",
"../../Device/Spring": "Spring",
"../../Player/TriggerMng": "TriggerMng",
"../Tile": "Tile",
"../WorldNodeBody": "WorldNodeBody",
"./Mover": "Mover"
} ],
PlatformRecorderApp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "81ec0QMBZBHy7W1JHpcgZsL", "PlatformRecorderApp");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.default = class {
constructor() {
this._timer = -1;
}
name() {
return cc.sys.os === cc.sys.OS_ANDROID ? "app_Android" : "app_iOS";
}
start(e) {
cc.sys.os === cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "startRecordingScreen", "()V") : jsb.reflection.callStaticMethod("AppController", "startRecordingScreen");
}
stop() {
cc.sys.os === cc.sys.OS_ANDROID ? jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "stopRecordingScreen", "()V") : jsb.reflection.callStaticMethod("AppController", "stopRecordingScreen");
}
onStart(e) {
this._onStart = e;
}
onStop(e) {
this._onStop = e;
}
isButtonShare() {
return !0;
}
share(e) {
if (cc.sys.os === cc.sys.OS_ANDROID) {
if (!jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "isTikTokInstalled", "()Z")) {
e.fail({
success: !1,
errMsg: "Please Install TikTok"
});
return;
}
jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "shareVideo", "(Ljava/lang/String;Ljava/lang/String;)V", e.extra.videoPath, e.query);
} else {
if (!jsb.reflection.callStaticMethod("AppController", "isTikTokInstalled")) {
e.fail({
success: !1,
errMsg: "Please Install TikTok"
});
return;
}
jsb.reflection.callStaticMethod("AppController", "shareVideoWithPath:andQuery:", e.extra.videoPath, e.query);
}
this._onShareSuccess = e.success;
this._onShareFail = e.fail;
this._timer = setTimeout(() => {
this._onShareFail({
success: !1
});
}, 15e3);
}
onNativeStarted() {
this._onStart({});
}
onNativeStopped(e) {
console.log("video path:" + e);
this._onStop({
videoPath: e
});
}
onNativeShareEnd(e) {
if (this._timer > 0) {
clearTimeout(this._timer);
this._timer = -1;
}
e ? this._onShareSuccess({
success: !0
}) : this._onShareFail({
success: !1
});
}
};
cc._RF.pop();
}, {} ],
PlatformRecorderInterface: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "acfdc96lglGxLF3/hE4YUQ9", "PlatformRecorderInterface");
Object.defineProperty(o, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
PlatformRecorderTT: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0e813rAamZHy6A/qxFnxMPZ", "PlatformRecorderTT");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../../Frame/CrossPlatform");
o.default = class {
name() {
return "tt";
}
isButtonShare() {
return !0;
}
share(e) {
i.tt.shareAppMessage(e);
}
start(e) {
i.tt.getGameRecorderManager().start({
duration: e
});
}
stop() {
i.tt.getGameRecorderManager().stop();
}
onStart(e) {
i.tt.getGameRecorderManager().onStart(t => {
e(t);
});
}
onStop(e) {
i.tt.getGameRecorderManager().onStop(t => {
e(t);
});
}
};
cc._RF.pop();
}, {
"../../Frame/CrossPlatform": "CrossPlatform"
} ],
PlatformRecorderTest: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4a6c66oOMxKn6HyqgL9iLla", "PlatformRecorderTest");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.default = class {
name() {
return "test";
}
start(e) {
setTimeout(() => {
var e;
null === (e = this._onStart) || void 0 === e || e.call(this, null);
}, 100);
}
stop() {
setTimeout(() => {
var e;
null === (e = this._onStop) || void 0 === e || e.call(this, {
videoPath: "test"
});
}, 100);
}
onStart(e) {
this._onStart = e.bind(this);
}
onStop(e) {
this._onStop = e.bind(this);
}
isButtonShare() {
return !0;
}
share(e) {
setTimeout(() => {
e.success && e.success({
success: !0
});
}, 5e3);
}
};
cc._RF.pop();
}, {} ],
PlatformRecorderWechat: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0b2d60uf+tPUoSJOOpohxJX", "PlatformRecorderWechat");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../../Frame/CrossPlatform");
o.default = class {
name() {
return "wechat";
}
start(e) {
i.wx.getGameRecorder().start({
duration: e,
hookBgm: !1
}).then(e => {
console.log("wx GameRecorde.start then", e);
}).catch(e => {
console.log("wx GameRecorde.start catch", e);
});
}
stop() {
i.wx.getGameRecorder().stop().then(e => {
console.log("GameRecorde.stop then", e);
}).catch(e => {
console.log("GameRecorde.stop catch", e);
});
}
onStart(e) {
i.wx.getGameRecorder().on("start", t => {
e(t);
});
}
onStop(e) {
i.wx.getGameRecorder().on("stop", t => {
e(t);
});
}
isButtonShare() {
return !1;
}
share(e) {
i.wx.shareAppMessage(e);
}
};
cc._RF.pop();
}, {
"../../Frame/CrossPlatform": "CrossPlatform"
} ],
Platform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9fccbEMniFIzafMZhlUbnQI", "Platform");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Platform = void 0;
const i = e("../../GameData/GameTypeDefine"), n = e("../CollisionEmiter"), a = e("../World/Actor"), s = e("../World/Device"), r = e("../World/WorldNodeBody");
var l;
(function(e) {
e[e.Btm = 1] = "Btm";
e[e.Top = 2] = "Top";
e[e.Left = 4] = "Left";
e[e.Right = 8] = "Right";
})(l || (l = {}));
const c = new cc.Vec2();
class d extends s.default {
constructor() {
super(...arguments);
this._isTopView = !1;
this._blockBackVector = new cc.Vec2();
this._testRect = cc.rect();
this._blockMask = l.Btm;
}
get isBlockBtm() {
return (this._blockMask & l.Btm) > 0;
}
get isBlockTop() {
return (this._blockMask & l.Top) > 0;
}
get isBlockRight() {
return (this._blockMask & l.Right) > 0;
}
get isBlockLeft() {
return (this._blockMask & l.Left) > 0;
}
onLoad() {
super.onLoad();
this.initCollider();
this.registCollider();
}
registCollider() {
this.node.on(n.default.onCollisionEnter, this.onCollisionStay, this);
this.node.on(n.default.onCollisionStay, this.onCollisionStay, this);
this.node.on(n.default.onCollisionExit, this.onCollisionExit, this);
}
onCollisionStay(e, t) {
this.world.worldLayout.type == i.WorldType.Rpg ? this._isTopView = !0 : this._isTopView = !1;
let o = e.getComponent(a.default);
if (o) {
let i = e.world.aabb, n = t.world.aabb, a = this._testRect;
n.intersection(a, i);
let s = c;
cc.Vec2.subtract(s, o.node.position, o.lastPosition);
this._blockBackVector.set(cc.Vec2.ZERO);
let l = o.hasEnteredCollider(r.WorldBodyColliderType.Platform, t);
if (this._isTopView) {
let e = .5 * (i.xMin + i.xMax), a = e - 5, s = e + 5, c = i.yMin, h = c + 5;
if (a <= n.xMax && s >= n.xMin && c <= n.yMax && h >= n.yMin) {
if (!l) {
o.enterCollider(r.WorldBodyColliderType.Platform, t);
o.node.emit(d.ONPLATFORM);
this.onActorOnPlatform(o);
}
} else if (l) {
o.existCollider(r.WorldBodyColliderType.Platform, t);
o.node.emit(d.EXISTPLATFORM);
this.onActorExistPlatform(o);
}
} else {
if (a.height > 0) {
if (this.isBlockBtm && s.y <= 0 && i.yMin + 10 - s.y >= n.yMax) {
this._blockBackVector.y += a.height - .1;
if (!l) {
o.enterCollider(r.WorldBodyColliderType.Platform, t);
o.node.emit(d.ONPLATFORM, this);
this.onActorOnPlatform(o);
}
}
this.isBlockTop && s.y >= 0 && i.yMax - 10 - s.y < n.yMin && (this._blockBackVector.y += .1 - a.height);
}
if (0 == this._blockBackVector.y && a.width > 0) {
this.isBlockRight && i.xMin + 10 - s.x > n.xMax && (this._blockBackVector.x += a.width - .1);
this.isBlockLeft && i.xMax - 10 - s.x < n.xMin && (this._blockBackVector.x += .1 - a.width);
}
if (this._blockBackVector.equals(cc.Vec2.ZERO)) {
if (Math.abs(i.yMin - n.yMax) > 5 && l) {
o.existCollider(r.WorldBodyColliderType.Platform, t);
o.node.emit(d.EXISTPLATFORM);
this.onActorExistPlatform(o);
}
} else o.node.emit(d.BLOCKBYPLATFORM, this._blockBackVector);
}
}
}
onCollisionExit(e, t) {
let o = e.getComponent(a.default);
if (o) {
o.existCollider(r.WorldBodyColliderType.Platform, t);
o.node.emit(d.EXISTPLATFORM);
this.onActorExistPlatform(o);
}
}
}
o.Platform = d;
d.ONPLATFORM = "ONPLATFORM";
d.EXISTPLATFORM = "EXISTPLATFORM";
d.BLOCKBYPLATFORM = "BLOCKBYPLATFORM";
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../CollisionEmiter": "CollisionEmiter",
"../World/Actor": "Actor",
"../World/Device": "Device",
"../World/WorldNodeBody": "WorldNodeBody"
} ],
PlayerDetailMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "82ed8TABMpJE4NqhhXMsfrE", "PlayerDetailMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr");
class s {
constructor() {
this.cache = new Map();
}
load(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
let o = {
id: e
}, i = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetUserDetailMsg,
params: o
}, n.Game_RGetUserDetailMsg);
if (i) {
t = i.userDetailMsg;
this.cache.set(e, t);
}
}
return t;
});
}
deleteCache(e) {
this.cache.delete(e);
}
}
o.default = s;
s.Ins = new s();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr"
} ],
PlayerListScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7731cSAtCFNZrYvQa2mUUnv", "PlayerListScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Scene"), l = e("../../Frame/SceneManager"), c = e("../../Game/OperationFlow"), d = e("../../Game/Player/FollowMng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.backBtn = null;
this.titleLabel = null;
}
onLoad() {
super.onLoad();
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
}
onBackBtn() {
l.default.ins.Back(null, l.ShiftAnima.moveRightShift);
}
onShow(e) {
c.OperationFlow.deelOnShow(e);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.titleLabel.string = e;
let o = yield d.FollowMng.Ins.loadInfos(t);
this.list.setDataArr(o);
});
}
};
i([ p(s.default) ], u.prototype, "list", void 0);
i([ p(a.default) ], u.prototype, "backBtn", void 0);
i([ p(cc.Label) ], u.prototype, "titleLabel", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/FollowMng": "FollowMng"
} ],
Pool: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0ec39JRUA5P26yP6z7ujz1v", "Pool");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator;
let r = i = class extends cc.Component {
constructor() {
super(...arguments);
this.prefab = null;
this.nodePool = new cc.NodePool();
}
onLoad() {
this.prefab.active = !1;
}
get() {
let e = null;
this.nodePool.size() > 0 ? e = this.nodePool.get() : (e = cc.instantiate(this.prefab)).on(i.PUT, () => {
this.put(e);
});
e.active = !0;
return e;
}
put(e) {
this.nodePool.put(e);
}
};
r.PUT = "PUT";
n([ s(cc.Node) ], r.prototype, "prefab", void 0);
r = i = n([ a ], r);
o.default = r;
cc._RF.pop();
}, {} ],
ProgressBar: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9feeb7njNlFzqYFXPbnZ0lO", "ProgressBar");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, menu: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.maskWidget = null;
this.barWidget = null;
this.slot = null;
this.isHor = !0;
this.min = 0;
this.max = 1;
this.cur = 1;
this.tw = null;
this.onProgressChange = null;
}
onLoad() {
this.maskWidget.enabled = !1;
this.barWidget.enabled = !1;
}
setRange(e, t) {
this.min = e;
this.max = t;
}
setValue(e) {
this.cur = e;
let t = (this.cur - this.min) / (this.max - this.min);
if (this.isHor) {
this.maskWidget.node.width = this.barWidget.node.width * t;
this.slot && (this.slot.x = this.maskWidget.node.x + this.maskWidget.node.width);
} else {
this.maskWidget.node.height = this.barWidget.node.height * t;
this.slot && (this.slot.y = this.maskWidget.node.y + this.maskWidget.node.height);
}
this.onProgressChange && this.onProgressChange(this.min, this.max, this.cur, t);
}
stopAnim() {
this.tw && this.tw.stop();
}
animaTo(e, t, o = (() => {})) {
this.stopAnim();
this.tw = cc.tween(this).to(t, {
cur: e
}, {
progress: (t, o, i, n) => {
let a = t + n * (2 - n) * (o - t);
this.setValue(a);
return e;
}
}).call(o).start();
}
};
i([ s(cc.Widget) ], r.prototype, "maskWidget", void 0);
i([ s(cc.Widget) ], r.prototype, "barWidget", void 0);
i([ s(cc.Node) ], r.prototype, "slot", void 0);
i([ s ], r.prototype, "isHor", void 0);
r = i([ n, a("自定义UI/ProgressBar") ], r);
o.default = r;
cc._RF.pop();
}, {} ],
ProjectMsgPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7e2c2p/V3tL94WjubHMdoFP", "ProjectMsgPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Panel"), {ccclass: a, property: s} = cc._decorator;
let r = class extends n.default {};
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Panel": "Panel"
} ],
PropCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b497af3cPpCGZsXgKQaiU5B", "PropCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.optionBtn = null;
this.createNewNode = null;
this.conf = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.optionBtn.node.on(s.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.optionBtn.node.active = !e.createNew;
this.createNewNode.active = e.createNew;
e.createNew ? a.I18nMgr.getSprite("createNewBtn", e => {
cc.isValid(this.sprite) && (this.sprite.spriteFrame = e);
}) : c.Mng.Ins.spriteMng.setPropSprite(this.sprite, e.textureName, 100);
});
}
onOptionBtnTap() {
l.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(s.default) ], p.prototype, "optionBtn", void 0);
i([ h(cc.Node) ], p.prototype, "createNewNode", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng"
} ],
PropMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "717bbNhqy9JNY2PdRLruJSV", "PropMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Config"), r = e("../../../scripts/_autogen/data/data"), l = e("../../GameData/GameTypeDefine"), c = e("./BaseConfMng");
o.default = class extends c.BaseConfMng {
constructor() {
super();
this.confType = l.CommonDataType.Prop;
this.creativeConfType = r.CreativeConfType.prop;
this.appendBuildIn(s.Config.propConfs);
}
upgradeConf(e) {
e && (e.type = l.CommonDataType.Prop);
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRolePropConf,
params: t
}, n.Game_RGetRolePropConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRolePropConf,
params: t
}, n.Game_RSaveRolePropConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRolePropConf,
params: t
}, n.Game_RSaveRolePropConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRolePropConf,
params: t
}, n.Game_RDelRolePropConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
PropOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "15b3cejZDNIaZO7lciJXut7", "PropOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.PropOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Game/Player/Mng"), s = e("./CommonOptionHelper");
o.PropOptionHelper = class extends s.CommonOptionHelper {
constructor() {
super(...arguments);
this.propConf = null;
this.imageFileType = n.ImageFileType.prop;
this.optionName = "道具";
this.refreshMsgName = "refreshPropList";
this.changeDataMsgName = null;
}
setConf(e) {
super.setConf(e);
this.propConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
yield a.Mng.Ins.propMng.save(this.propConf);
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield a.Mng.Ins.propMng.delete(this.propConf);
});
}
displayWorldType() {
return !1;
}
initInspector(e) {
e.reset();
this.propConf.onPick = this.propConf.onPick || [];
this.propConf.onUse = this.propConf.onUse || [];
this.propConf.onDrop = this.propConf.onDrop || [];
e.addEditBox("道具描述：", this.propConf.intro, e => {
this.propConf.intro = e;
});
e.addNumberEditBox("商店售价：", this.propConf.defaultPrice || 10, 1, 999999, e => {
this.propConf.defaultPrice = e;
});
e.addNumberEditBox("商店回收价：", this.propConf.salePrice || 1, 1, 999999, e => {
this.propConf.salePrice = e;
});
e.addToggle("一次性道具：", this.propConf.once, e => {
this.propConf.once = e;
});
e.addToggle("捡起时立刻使用：", this.propConf.useWhenPick, e => {
this.propConf.useWhenPick = e;
});
e.addTrigger("捡起时：", this.propConf.onPick, !1);
e.addTrigger("使用时：", this.propConf.onUse, !1);
e.addTrigger("丢弃时：", this.propConf.onDrop, !1);
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Game/Player/Mng": "Mng",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
PropPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9ab512Dm+JEKql91r0fZzxG", "PropPage");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../CustomUI/ScrollList"), r = e("../../../Game/OperationFlow"), l = e("../../../Game/Player/DynamicMng"), c = e("../../../Game/Player/Mng"), d = e("../../../Game/World/Tile"), h = e("../../../GameData/GameTypeDefine"), p = e("../EditWorldScene"), u = e("../TouchWorldShowGizmos"), m = e("./EditPageBase"), {ccclass: f, property: g} = cc._decorator;
let y = i = class extends m.EditPageBase {
constructor() {
super(...arguments);
this.editWorldScene = null;
this.list = null;
}
onLoad() {
this.list.node.on(s.default.CLICK_ITEM, this.onClickPropCell, this);
}
onEnable() {
cc.game.on("refreshPropList", this.refreshList, this);
this.refreshList();
this.editWorldScene.gameData.parnetGame || cc.game.emit(i.PropPage_Enable, this);
}
onDisable() {
cc.game.off("refreshPropList", this.refreshList, this);
}
refreshList() {
return a(this, void 0, void 0, function*() {
this.editWorldScene.elementBox.emptyLabel.node.active = !1;
let e = this.editWorldScene.elementBox.filter.getCurData(), t = yield c.Mng.Ins.assetGroupMng.findGroup(e.str);
t || (t = c.Mng.Ins.assetGroupMng.all);
let o = [];
for (let e of t.refDataList) e.confType == h.CommonDataType.Prop && o.push(e.confId);
let i = yield c.Mng.Ins.propMng.loadMany(o), n = [];
l.DynamicMng.Ins.isDisable(l.FunctionEnum.PaintAsset, !1) || n.push({
createNew: !0
});
n = n.concat(i);
this.list.setDataArr(n);
this.list.selectByIdx(1);
this.editWorldScene.elementBox.emptyLabel.node.active = 1 == n.length;
});
}
onClickPropCell(e, t) {
if (t.createNew) this.createPropConf(); else {
this.instanceProp(t);
cc.game.emit(i.PropPage_PUT_PROP, t);
}
}
createPropConf() {
r.OperationFlow.paintProp(e => {
this.refreshList();
cc.game.emit(i.PropPage_CREATE_PROP, e);
});
}
instanceProp(e) {
return a(this, void 0, void 0, function*() {
let t = this.editWorldScene.world, o = t.camera.node.position, i = Math.round(o.x / d.default.SIZE), n = Math.round(o.y / d.default.SIZE), a = t.addProp({
iCol: i,
iRow: n
}), s = {
id: "prop" + t.worldLayout.incId++,
confId: e.id,
useGravity: !1
};
yield a.setData(s);
u.default.Ins.clickProp(a);
});
}
};
y.PropPage_Enable = "PropPage_Enable";
y.PropPage_PUT_PROP = "PropPage_PUT_PROP";
y.PropPage_CREATE_PROP = "PropPage_CREATE_PROP";
n([ g(p.default) ], y.prototype, "editWorldScene", void 0);
n([ g(s.default) ], y.prototype, "list", void 0);
y = i = n([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/World/Tile": "Tile",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../EditWorldScene": "EditWorldScene",
"../TouchWorldShowGizmos": "TouchWorldShowGizmos",
"./EditPageBase": "EditPageBase"
} ],
Prop: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bb05dPG2G5BNrTx4RCSDiKt", "Prop");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/SceneManager"), s = e("../../Frame/Util"), r = e("../Player/GameBagMng"), l = e("../Player/GameSaveMng"), c = e("../Player/Mng"), d = e("../Player/SpriteMng"), h = e("../Player/TriggerMng"), p = e("./AICtrl/Com/AiComSimplerMover"), u = e("./WorldNodeBody"), {ccclass: m, property: f} = cc._decorator;
let g = class extends u.default {
constructor() {
super(...arguments);
this.sprite = null;
this.conf = null;
this.data = null;
this.box = null;
this.rigi = null;
this.canPick = !0;
}
get gravity() {
return this.data && this.data.useGravity ? -1500 : 0;
}
setCutting(e) {
this.sprite.enabled = !e;
}
onLoad() {
cc.game.on(d.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
this.box = this.getComponent(cc.PhysicsBoxCollider);
this.rigi = this.getComponent(cc.RigidBody);
}
onDestroy() {
cc.game.off(d.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
}
onPixelsUpdate(e, t) {
return n(this, void 0, void 0, function*() {
this.conf && this.conf.id == e && c.Mng.Ins.spriteMng.setPropSprite(this.sprite, t, 64);
});
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
let t = yield c.Mng.Ins.propMng.loadOne(e.confId);
this.conf = t;
c.Mng.Ins.spriteMng.setPropSprite(this.sprite, t ? t.textureName : void 0, 64);
this.canPick = !1;
this.scheduleOnce(() => {
this.canPick = !0;
}, .3);
this.collider = this.getComponent(cc.Collider);
this._mover = new p.AiComSimplerMover();
this._mover.setBody(this);
});
}
addImpulse(e, t, o) {
this._mover && this._mover.addForceMover({
impulse: !0,
sx: e,
sy: t,
duration: o
});
}
update(e) {
let t = this.world;
if (t.playing) {
this.node.y < -500 && t.removeProp(this);
this._mover.run(e);
}
}
onCollisionEnter(e, t) {
let o = this.world;
if (o.playing && this.canPick && this.conf && o.isHeroActor(e.node)) if (0 == r.default.Ins.add(this.conf.id, 1)) {
let e = s.Util.deepCopy(this.conf.onPick, []);
h.default.Ins.emitTrigger(e, this.node);
if (this.conf.useWhenPick) {
this.conf.once && r.default.Ins.sub(this.conf.id, 1);
let e = s.Util.deepCopy(this.conf.onUse, []);
h.default.Ins.emitTrigger(e, this.node);
}
this.canPick = !1;
o.removeProp(this);
this.data.onlyOnce && l.default.Ins.setPropFlag(o.worldData.id, this.data.id);
} else {
let e = this.node.position;
e.y += this.node.height / 2;
o.playFloatLabel({
str: "背包已满",
pos: e,
color: cc.Color.YELLOW,
anim: "FlashLabel",
size: 40
});
}
}
initInspector(e) {
e.addHead(this.conf ? this.conf.name : "错误道具", this.conf ? this.conf.textureName : void 0);
if (this.conf) {
this.conf.isBuildIn ? e.addLabel("内置道具不可编辑属性") : e.addButton("编辑道具", "点击编辑", () => {
a.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
});
e.addToggle("是否受到重力？", this.data.useGravity, e => {
this.data.useGravity = e;
});
e.addToggle("捡起后不再出现：", this.data.onlyOnce, e => {
this.data.onlyOnce = e;
});
} else e.addLabel("道具模版已被删除");
}
};
i([ f(cc.Sprite) ], g.prototype, "sprite", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../Player/GameBagMng": "GameBagMng",
"../Player/GameSaveMng": "GameSaveMng",
"../Player/Mng": "Mng",
"../Player/SpriteMng": "SpriteMng",
"../Player/TriggerMng": "TriggerMng",
"./AICtrl/Com/AiComSimplerMover": "AiComSimplerMover",
"./WorldNodeBody": "WorldNodeBody"
} ],
PublishGamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0d4f7JqqB5DVJJnlwz2U+n+", "PublishGamePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/AD"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/Util"), h = e("../../Game/Player/Mng"), p = e("../../Game/Player/CreditMng"), u = e("../../TGA"), m = e("../../../scripts/_autogen/data/data"), f = e("../../Game/Player/PublishMng"), g = e("../../Game/Player/GameIconMng"), y = e("../../Frame/UIColor"), v = e("../../Frame/CrossPlatform"), C = e("../../../i18n/i18nMgr"), {ccclass: _, property: S} = cc._decorator;
let I = class extends r.default {
constructor() {
super(...arguments);
this.sprite = null;
this.nameEditbox = null;
this.advertEditbox = null;
this.versionEditbox = null;
this.paintBtn = null;
this.tipLabel = null;
this.creativeBtn = null;
this.publishBtn = null;
this.richText = null;
this.gameData = null;
this.creativeOption = null;
this.coodTime = 6e5;
}
onLoad() {
super.onLoad();
this.publishBtn.node.on(a.default.CLICK, this.onPublishBtnTap, this);
this.paintBtn.node.on(a.default.CLICK, this.onPaint, this);
this.creativeBtn.node.on(a.default.CLICK, this.onCreativeBtn, this);
let e = this.richText.node.width + 750;
this.richText.node.x = 350;
this.richText.node.runAction(cc.repeatForever(cc.sequence(cc.moveBy(15, -e, 0), cc.moveBy(0, e, 0))));
s.AD.preloadRewardVideo();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.gameData = e;
this.creativeOption = e.creativeOp;
this.updateCreativeBtn();
this.creativeBtn.dot.active = !v.crossPlatform.getStorageSync("PublishGamePanel-creativeBtn");
this.nameEditbox.string = e.name;
this.advertEditbox.string = e.advert;
this.versionEditbox.string = d.Util.nextVersion(e.version) || "0.0.1";
this.loadSpriteFrame(this.gameData.iconTextureName);
this.paintBtn.dot.active = "icon1" == this.gameData.iconTextureName;
this.gameData.lastPublishStamp + this.coodTime - orange.TimeUtil.serverTime > 0 ? this.startCooling() : this.tipLabel.node.active = !1;
});
}
updateCreativeBtn() {
let e = this.creativeOption;
e.isOpenAll ? this.creativeBtn.label.string = "分享所有" : e.isClose ? this.creativeBtn.label.string = "关闭" : this.creativeBtn.label.string = "分享部分";
}
startCooling() {
return n(this, void 0, void 0, function*() {
this.coolingUpdate();
this.schedule(this.coolingUpdate, 1, cc.macro.REPEAT_FOREVER);
this.publishBtn.icon.node.active = !1;
this.publishBtn.icon.spriteFrame = yield d.Util.loadBundleRes("Atlas/UI/ad", cc.SpriteFrame);
this.publishBtn.icon.node.active = !0;
});
}
coolingUpdate() {
return n(this, void 0, void 0, function*() {
let e = this.gameData.lastPublishStamp + this.coodTime - orange.TimeUtil.serverTime;
if (e > 0) {
this.tipLabel.node.active = !0;
this.publishBtn.icon.node.active = !0;
this.tipLabel.string = C.I18nMgr.exceI18nStringByZh("${Util.parseDateMMSS(time)}后可免费发布", [ {
paramName: "Util.parseDateMMSS(time)",
param: d.Util.parseDateMMSS(e)
} ]);
} else {
this.tipLabel.node.active = !1;
this.publishBtn.icon.node.active = !1;
this.unschedule(this.coolingUpdate);
this.publishBtn.icon.spriteFrame = yield d.Util.loadBundleRes("Atlas/UI/upload", cc.SpriteFrame);
}
});
}
loadSpriteFrame(e) {
return n(this, void 0, void 0, function*() {
g.GameIconMng.Ins.setSprite(this.sprite, e, 180);
});
}
onVersionTextChange() {
let e = d.Util.parseVersion(this.versionEditbox.textLabel.string);
this.versionEditbox.string = e;
}
onPaint() {
l.default.ins.Enter("PaintScene", e => n(this, void 0, void 0, function*() {
e.toPaintGameIcon();
if (d.Util.isCdnPng(this.gameData.iconTextureName)) {
let t = yield d.Util.downloadPngPixel(this.gameData.iconTextureName);
e.graphics.drawPixels(t);
}
e.completeCall = (e, t, o, i) => n(this, void 0, void 0, function*() {
c.default.showLoading("正在上传");
let t = yield d.Util.uploadPng(e, m.ImageFileType.gameIcon, i);
if (t.err) c.default.hideLoading("图片违规：" + t.err); else {
this.gameData.iconTextureName = t.url;
yield h.Mng.Ins.gameMng.save(this.gameData);
this.loadSpriteFrame(t.url);
l.default.ins.Back();
c.default.hideLoading("图标已保存");
this.paintBtn.dot.active = !1;
}
});
}));
}
onCreativeBtn() {
return n(this, void 0, void 0, function*() {
v.crossPlatform.setStorageSync("PublishGamePanel-creativeBtn", !0);
this.creativeBtn.dot.active = !1;
let e = yield h.Mng.Ins.worldMng.loadMany(this.gameData.worldIds);
l.default.ins.OpenPanelByName("SelectCreativeWorldPanel", t => {
t.setData(e, this.creativeOption);
t.call = e => {
this.creativeOption = e;
this.updateCreativeBtn();
};
});
});
}
onPublishBtnTap() {
return n(this, void 0, void 0, function*() {
p.CreditMng.Ins.credit <= 2 ? c.default.showToast("近期违规，不能发布游戏") : this.gameData.lastPublishStamp + this.coodTime - orange.TimeUtil.serverTime > 0 ? s.AD.showVideoAd({
id: s.AdUnitId.PublishGame,
succ: () => {
this.publishGame();
}
}) : this.publishGame();
});
}
publishGame() {
return n(this, void 0, void 0, function*() {
if (this.gameData.isOldTangData) {
c.default.showToast("旧服数据不可发布");
return;
}
let e = d.Util.deepCopy(this.gameData);
e.name = this.nameEditbox.textLabel.string;
e.advert = this.advertEditbox.textLabel.string;
e.version = this.versionEditbox.textLabel.string;
e.creativeOp = this.creativeOption;
e.lastPublishStamp = orange.TimeUtil.serverTime;
e.firstPublishStamp || (e.firstPublishStamp = orange.TimeUtil.serverTime);
let t = yield f.default.Ins.publish(e);
if (t) {
t.msg && c.default.showToast(t.msg);
t.checkStrItems && t.sensitiveWords && l.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "发布失败";
e.label.string = "检测到敏感词,请修改后重新发布";
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "定位敏感词",
color: y.UIColor.pink,
call: () => {
l.default.ins.OpenPanelByName("SensitiveCheckPanel", e => {
e.setData(t.checkStrItems, t.sensitiveWords);
});
}
});
});
} else {
c.default.showToast("发布成功");
yield h.Mng.Ins.gameMng.save(e);
this.closePanel();
u.TGA.track("gameOperate", {
gameId: this.gameData.id,
step: "publish",
gameVer: this.gameData.version,
gameName: this.gameData.name,
openCreative: !this.creativeOption.isClose
});
}
});
}
};
i([ S(cc.Sprite) ], I.prototype, "sprite", void 0);
i([ S(cc.EditBox) ], I.prototype, "nameEditbox", void 0);
i([ S(cc.EditBox) ], I.prototype, "advertEditbox", void 0);
i([ S(cc.EditBox) ], I.prototype, "versionEditbox", void 0);
i([ S(a.default) ], I.prototype, "paintBtn", void 0);
i([ S(cc.Label) ], I.prototype, "tipLabel", void 0);
i([ S(a.default) ], I.prototype, "creativeBtn", void 0);
i([ S(a.default) ], I.prototype, "publishBtn", void 0);
i([ S(cc.RichText) ], I.prototype, "richText", void 0);
I = i([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../Frame/AD": "AD",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/GameIconMng": "GameIconMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/PublishMng": "PublishMng",
"../../TGA": "TGA"
} ],
PublishMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ea6f7BOlOJDUZ0XsuO0ogNZ", "PublishMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../Frame/NetworkMgr"), r = e("../../Frame/Top"), l = e("../../Frame/Util"), c = e("../../GameData/GameTypeDefine"), d = e("../../Role"), h = e("../GameEnv"), p = e("./CreativeRankMng"), u = e("./FreshGameMng"), m = e("./GameCellDataMng"), f = e("./GameCoverMng"), g = e("./GamePackageMng"), y = e("./HotGameMng"), v = e("./Mng"), C = e("./PlayerDetailMng"), _ = e("../../../scripts/_autogen/data/data"), S = e("./GameRankMng"), I = e("../../Frame/Config");
class G {
publish(e) {
return i(this, void 0, void 0, function*() {
r.default.showLoading("正在打包");
let t = yield this.makeGamePackRaw(e.worldIds);
r.default.showLoading("正在检测文本");
t.checkStrItems.unshift({
from: "广告词",
str: e.advert
});
t.checkStrItems.unshift({
from: "游戏名",
str: e.name
});
let o = new Set();
for (let e = 0; e < t.checkStrItems.length; e++) o.add(t.checkStrItems[e].str);
let i = {
msg: Array.from(o).join("哈")
}, n = yield s.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SensitiveMsg,
params: i
}, a.Game_RSensitiveMsg);
if (!n) {
r.default.hideLoading();
return {
msg: "发布失败"
};
}
if (n.sensitiveWords && n.sensitiveWords.length > 0) {
r.default.hideLoading();
return {
checkStrItems: t.checkStrItems,
sensitiveWords: n.sensitiveWords
};
}
r.default.showLoading("正在压缩");
let c = {
id: e.id,
name: e.name,
gameData: e,
worldDatas: t.worldDatas,
tileConfs: t.tileConfs,
actorConfs: t.actorConfs,
deviceConfs: t.deviceConfs,
propConfs: t.propConfs,
weaponConfs: t.weaponConfs,
bulletConfs: t.bulletConfs,
gameShopConfs: t.gameShopConfs,
gameRankConfs: t.gameRankConfs,
creatorVersion: h.gameEnv.creatorVersion
}, v = bon.encode(c), S = pako.gzip(v, {
level: 1
}), I = "";
{
r.default.showLoading("正在上传(1/3)");
let t = {
dataVersion: e.version,
content: S
}, o = yield s.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_UploadReleaseGame,
params: t
}, a.Game_RUploadReleaseGame);
if (!o) {
r.default.hideLoading();
return {
msg: "发布失败"
};
}
I = o.cdnUrl;
}
let G, T = new Map();
{
r.default.showLoading("正在上传(2/3)");
let o = [];
for (let e = 0; e < t.assets.length; e++) {
let i = t.assets[e];
o.push(i.textureName);
}
"icon1" !== e.iconTextureName && o.push(e.iconTextureName);
let i = {
imageList: o
}, n = yield s.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_GetNeedReviewImageList,
params: i
}, a.Game_RGetNeedReviewImageList);
if (!n) {
r.default.hideLoading();
return {
msg: "发布失败"
};
}
let c = 0;
for (;c < n.needImageList.length; ) {
let e = n.needImageList.slice(c, c + 64), t = yield l.Util.mergeImage(e);
console.log(h.gameEnv.fileCDN + t);
T.set(t, e);
c += 64;
}
}
G = e.creativeOp.isClose ? [] : e.creativeOp.isOpenAll ? e.worldIds : e.creativeOp.openWorldIds;
let b = {
id: e.id,
name: e.name,
advert: e.advert,
dataVersion: e.version,
iconTextureName: e.iconTextureName,
gameDataCdnUrl: I,
gameTags: [ "ZongBang" ],
openCreativeGame: !e.creativeOp.isClose,
openData: {
openWorldIds: G,
creativeResList: t.assets
},
reviewStr: "",
reviewImageMap: T
};
r.default.showLoading("正在上传(3/3)");
e.status = _.GameStatus.inReview;
if (!(yield s.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_PublishGame,
params: b
}, a.Game_RPublishGame))) {
r.default.hideLoading();
return {
msg: "发布失败"
};
}
r.default.hideLoading("上传成功");
m.default.Ins.deleteCache(e.id);
f.default.Ins.deleteCache(e.id);
if (e.parnetGame) {
f.default.Ins.deleteCache(e.parnetGame.id);
p.default.Ins.deleteCache(e.parnetGame.id);
} else p.default.Ins.deleteCache(e.id);
C.default.Ins.deleteCache(d.default.Ins.role.id);
y.default.Ins.clearAll();
u.default.Ins.clear();
g.default.Ins.addCache(I, c);
});
}
makeGamePackRaw(e) {
return i(this, void 0, void 0, function*() {
let t = [], o = new Set(), a = new Set(), s = new Set(), r = new Set(), l = new Set(), d = new Set(), p = new Set(), u = new Set(), m = [], f = e => i(this, void 0, void 0, function*() {
if (e) for (var t in e) {
if (!e.hasOwnProperty(t)) continue;
let o = e[t];
if ("object" == typeof o) {
o && o.gunId && l.add(o.gunId);
o && o.bulletId && d.add(o.bulletId);
o && o.propConfId && r.add(o.propConfId);
o && o.actorConfId && a.add(o.actorConfId);
o && o.gameShopId && p.add(o.gameShopId);
yield f(o);
}
}
});
yield v.Mng.Ins.worldMng.loadMany(e, !0);
for (let i = 0; i < e.length; i++) {
let l = e[i], c = yield v.Mng.Ins.worldMng.loadOne(l, !0);
if (!c || !c.worldLayout) continue;
let d = c.worldLayout, h = {
id: c.id,
info: c.info,
layoutMin: void 0,
worldLayout: d
};
t.push(h);
m.push({
from: "地图名",
str: h.info.name
});
d.tiles && d.tiles.forEach(e => {
o.add(e.data.confId);
});
d.actors && d.actors.forEach(e => {
a.add(e.data.confId);
});
d.devices && d.devices.forEach(e => {
s.add(e.data.confId);
});
d.props && d.props.forEach(e => {
r.add(e.data.confId);
});
let p = n.GSMng.instance.getNodesByType(l, n.GSDataNodeType.GDATA_DropItem);
p && p.forEach(e => {
e.itemId && r.add(e.itemId);
});
let u = n.GSMng.instance.getNodesByType(l, n.GSDataNodeType.GDATA_ChangeBagItem);
u && u.forEach(e => {
e.itemId && r.add(e.itemId);
});
yield f(d);
this.collectCheckStr(d, m);
}
let g = Array.from(p);
yield v.Mng.Ins.gameShopMng.loadMany(g);
let y = [];
for (let e = 0; e < g.length; e++) {
let t = g[e], o = yield v.Mng.Ins.gameShopMng.loadOne(t);
if (o) {
a.add(o.actorId);
for (let e = 0; e < o.goodses.length; e++) {
let t = o.goodses[e];
r.add(t.propId);
}
y.push(o);
}
}
let C = Array.from(u);
yield v.Mng.Ins.gameRankMng.loadMany(g);
let _ = [];
for (let e = 0; e < C.length; e++) {
let t = C[e], o = yield v.Mng.Ins.gameRankMng.loadOne(t);
if (o) {
o.propId && o.rankType == S.GameRankType.PropRank && r.add(o.propId);
_.push(o);
}
}
let G = Array.from(r);
yield v.Mng.Ins.propMng.loadMany(G);
let T = [];
for (let e = 0; e < G.length; e++) {
let t = G[e], o = yield v.Mng.Ins.propMng.loadOne(t);
if (o && !o.isBuildIn) {
T.push(o);
m.push({
from: "道具名",
str: o.name
});
m.push({
from: "道具介绍",
str: o.intro
});
yield f(o);
}
}
let b = Array.from(o);
yield v.Mng.Ins.tileMng.loadMany(b);
let M = [];
for (let e = 0; e < b.length; e++) {
let t = b[e], o = yield v.Mng.Ins.tileMng.loadOne(t);
if (o && !o.isBuildIn) {
M.push(o);
m.push({
from: "地块名",
str: o.name
});
}
}
let P = Array.from(a);
yield v.Mng.Ins.actorMng.loadMany(P);
let D = [];
for (let e = 0; e < P.length; e++) {
let t = P[e], o = yield v.Mng.Ins.actorMng.loadOne(t);
if (o && !o.isBuildIn) {
D.push(o);
m.push({
from: "角色名",
str: o.name
});
}
}
let w = Array.from(s);
yield v.Mng.Ins.deviceMng.loadMany(w);
let B = [];
for (let e = 0; e < w.length; e++) {
let t = w[e], o = yield v.Mng.Ins.deviceMng.loadOne(t);
if (o && !o.isBuildIn) {
B.push(o);
m.push({
from: "装置名",
str: o.name
});
}
}
let R = Array.from(l);
yield v.Mng.Ins.weaponMng.loadMany(R);
let x = [];
for (let e = 0; e < R.length; e++) {
let t = R[e], o = yield v.Mng.Ins.weaponMng.loadOne(t);
if (o && !o.isBuildIn) {
x.push(o);
m.push({
from: "武器名",
str: o.name
});
o.gun && o.gun.bulletId && d.add(o.gun.bulletId);
o.cast && o.cast.bulletId && d.add(o.cast.bulletId);
}
}
let L = Array.from(d);
yield v.Mng.Ins.bulletMng.loadMany(L);
let k = [];
for (let e = 0; e < L.length; e++) {
let t = L[e], o = yield v.Mng.Ins.bulletMng.loadOne(t);
if (o && !o.isBuildIn) {
k.push(o);
m.push({
from: "子弹名",
str: o.name
});
}
}
let F = [];
M.forEach(e => {
F.push({
name: e.name,
textureName: e.textureName,
typeName: "地块"
});
});
D.forEach(e => {
F.push({
name: e.name,
textureName: e.textureName,
typeName: "角色"
});
});
B.forEach(e => {
let t = I.Config.getDeviceTypeName(e.deviceType);
F.push({
name: e.name,
textureName: e.textureName,
typeName: t
});
});
T.forEach(e => {
F.push({
name: e.name,
textureName: e.textureName,
typeName: "道具"
});
});
x.forEach(e => {
let t = "";
t = e.weaponType == c.WeaponType.Gun ? "直射武器" : e.weaponType == c.WeaponType.Melee ? "近战武器" : "武器";
F.push({
name: e.name,
textureName: e.textureName,
typeName: t
});
});
return {
worldDatas: t,
tileConfs: M,
actorConfs: D,
deviceConfs: B,
weaponConfs: x,
bulletConfs: k,
propConfs: T,
creatorVersion: h.gameEnv.creatorVersion,
gameShopConfs: y,
gameRankConfs: _,
checkStrItems: m,
assets: F
};
});
}
collectCheckStr(e, t) {
if (e) for (var o in e) {
if (!e.hasOwnProperty(o)) continue;
let i = e[o];
if ("object" == typeof i) {
if (i && i.act == c.TriggerAct.Dialog && i.extra && i.extra.lines) {
let e = i.extra.lines;
for (let o = 0; o < e.length; o++) t.push({
from: "剧情对话",
str: e[o].str
});
}
i && i.act == c.TriggerAct.GameWin && i.extra && i.extra.str && t.push({
from: "游戏胜利文本",
str: i.extra.str
});
i && i.act == c.TriggerAct.GameOver && i.extra && i.extra.str && t.push({
from: "游戏失败文本",
str: i.extra.str
});
i && i.act == c.TriggerAct.ShareGame && i.extra && i.extra.str && t.push({
from: "分享面板",
str: i.extra.str
});
this.collectCheckStr(i, t);
}
}
}
makeReviewStr(e, t, o) {
let i = new Set(), n = new Set(), a = new Set(), s = new Set(), r = new Set(), l = new Set(), c = new Set(), d = new Set(), h = new Set();
o.checkStrItems.forEach(e => {
"地图名" == e.from && i.add(e.str);
"地块名" == e.from && n.add(e.str);
"角色名" == e.from && a.add(e.str);
"装置名" == e.from && s.add(e.str);
"道具名" == e.from && r.add(e.str);
"道具介绍" == e.from && l.add(e.str);
"武器名" == e.from && c.add(e.str);
"子弹名" == e.from && d.add(e.str);
"剧情对话" == e.from && h.add(e.str);
});
let p = "";
p += "游戏名：" + e + "哈\n";
p += "介绍：" + t + "哈\n";
p += "地图名：" + Array.from(i).join("哈") + "\n";
p += "地块名：" + Array.from(n).join("哈") + "\n";
p += "角色名：" + Array.from(a).join("哈") + "\n";
p += "装置名：" + Array.from(s).join("哈") + "\n";
p += "武器名：" + Array.from(c).join("哈") + "\n";
return (p += "子弹名：" + Array.from(d).join("哈") + "\n") + "剧情：\n" + Array.from(h).join("哈\n") + "\n";
}
}
o.default = G;
G.Ins = new G();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../GameScript/index": "index",
"../../Role": "Role",
"../GameEnv": "GameEnv",
"./CreativeRankMng": "CreativeRankMng",
"./FreshGameMng": "FreshGameMng",
"./GameCellDataMng": "GameCellDataMng",
"./GameCoverMng": "GameCoverMng",
"./GamePackageMng": "GamePackageMng",
"./GameRankMng": "GameRankMng",
"./HotGameMng": "HotGameMng",
"./Mng": "Mng",
"./PlayerDetailMng": "PlayerDetailMng"
} ],
RcmdMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dff2bEddspJ35iBTlmehZpH", "RcmdMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/EngineManager"), r = e("../../Frame/NetworkMgr"), l = e("../../Role");
class c {
constructor() {
this.gameShowDatas = [];
this.tempGameShowDatas = [];
this.goodsShowDatas = [];
this.tempGoodsShowDatas = [];
}
startUpdate() {
s.default.Ins.startSchedule(() => {
this.checkUploadGameShow();
this.checkUploadGoodsShow();
}, 1);
}
gameShow(e, t, o = 0, i = "", n = "") {
"GD:8616435:2" == e && console.log("dasdasd");
o || (o = orange.TimeUtil.serverTime);
let a = this.gameShowDatas.find(o => o.gameId == e && o.showType == t);
a || (a = this.tempGameShowDatas.find(o => o.gameId == e && o.showType == t));
if (!a) {
let a = {
gameId: e,
showType: t,
showId: l.default.Ins.role.id + "-" + o,
bk: i,
st: n
};
this.tempGameShowDatas.unshift(a);
}
}
checkUploadGameShow() {
return i(this, void 0, void 0, function*() {
if (this.tempGameShowDatas.length > 0) {
let e = [];
for (let t = 0; t < this.tempGameShowDatas.length; t++) e.push(this.tempGameShowDatas[t].gameId);
let t = {
showList: []
};
for (let e = 0; e < this.tempGameShowDatas.length; e++) {
let o = this.tempGameShowDatas[e], i = new a.AnalyticsGameData();
i.gameId = o.gameId;
i.showType = o.showType;
i.showId = o.showId;
i.bk = o.bk;
i.st = o.st;
t.showList.push(i);
this.gameShowDatas.unshift(o);
}
this.tempGameShowDatas = [];
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGameShow,
params: t
}, n.Game_RReportGameShow);
}
});
}
gameClick(e, t, o = "", s = "") {
return i(this, void 0, void 0, function*() {
let i = this.tempGameShowDatas.concat(this.gameShowDatas).find(o => o.gameId == e && o.showType == t);
if (i) {
let l = new a.AnalyticsGameData();
l.gameId = e;
l.showType = t;
l.showId = i.showId;
l.bk = o;
l.st = s;
let c = {
clickGameData: l
};
console.log("RcmdMng.gameClick", c);
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGameClick,
params: c
}, n.Game_RReportGameClick);
}
});
}
goodsShow(e, t, o = 0, i = "", n = "") {
o || (o = orange.TimeUtil.serverTime);
let a = this.goodsShowDatas.find(o => o.goodsId == e && o.showType == t);
a || (a = this.tempGoodsShowDatas.find(o => o.goodsId == e && o.showType == t));
if (!a) {
let a = {
goodsId: e,
showType: t,
showId: l.default.Ins.role.id + "-" + o,
bk: i,
st: n
};
this.tempGoodsShowDatas.unshift(a);
}
}
checkUploadGoodsShow() {
return i(this, void 0, void 0, function*() {
if (this.tempGoodsShowDatas.length > 0) {
let e = {
showList: []
};
for (let t = 0; t < this.tempGoodsShowDatas.length; t++) {
let o = this.tempGoodsShowDatas[t], i = new a.AnalyticsGoodsData();
i.goodsId = o.goodsId;
i.showType = o.showType;
i.showId = o.showId;
i.bk = o.bk;
i.st = o.st;
e.showList.push(i);
this.goodsShowDatas.unshift(o);
}
this.tempGoodsShowDatas = [];
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGoodsShow,
params: e
}, n.Game_RReportGoodsShow);
}
});
}
goodsClick(e, t, o = "", s = "") {
return i(this, void 0, void 0, function*() {
let i = this.tempGoodsShowDatas.concat(this.goodsShowDatas).find(o => o.goodsId == e && o.showType == t);
if (i) {
let l = new a.AnalyticsGoodsData();
l.goodsId = e;
l.showType = t;
l.showId = i.showId;
l.bk = o;
l.st = s;
let c = {
clickGameData: l
};
console.log("RcmdMng.goodsClick", c);
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGoodsClick,
params: c
}, n.Game_RReportGoodsClick);
}
});
}
}
o.default = c;
c.Ins = new c();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/EngineManager": "EngineManager",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Role": "Role"
} ],
RecommendComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "73269ftRJVOtZjuZ92/m6rr", "RecommendComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../scripts/_autogen/cmd/cmd"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/NetworkMgr"), l = e("../../../Frame/Util"), c = e("../GameCell"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.gameCell = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
let t = orange.TimeUtil.serverTime;
e.games = e.games.filter(e => !!e);
l.Util.makeBro(this.gameCell.node, e.games.length, (o, i) => {
let s = o.getComponent(c.default), l = e.games[i], d = l.gameCellData;
s.from = "RecommendComp";
s.setData(d, t, l.bk, l.st);
s.clickCall = () => n(this, void 0, void 0, function*() {
let e = {
id: d.id
};
yield r.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_ClickRecommendsGames,
params: e
}, a.Game_RClickRecommendsGames);
});
});
}
};
i([ h(c.default) ], p.prototype, "gameCell", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/NetworkMgr": "NetworkMgr",
"../../../Frame/Util": "Util",
"../GameCell": "GameCell"
} ],
RedMark: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4973bUMELpAVZ1h3JLLZAMI", "RedMark");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.RedMark = void 0;
const i = e("./DataBind");
(function(e) {
let t = {};
i.DB.Set("RedMardRoot", t);
e.setValue = function(e, n) {
let a = e.split("/"), s = t, r = [], l = [], c = "RedMardRoot";
for (let e = 0; e < a.length; e++) {
if (e == a.length - 1) {
s[a[e]] = n;
for (let e = r.length - 1; e >= 0; e--) i.DB.Set(l[e], o(r[e]));
return;
}
void 0 === s[a[e]] && (s[a[e]] = {});
s = s[a[e]];
r.push(s);
c += "/" + a[e];
l.push(c);
}
};
function o(e) {
let t = Object.keys(e);
for (let i = 0; i < t.length; i++) {
let n = e[t[i]];
if (n.constructor == Object) return o(n);
if (n) return !0;
}
return !1;
}
})(o.RedMark || (o.RedMark = {}));
cc._RF.pop();
}, {
"./DataBind": "DataBind"
} ],
Region: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "33855LeqL1Nb7q16Hpv+N4J", "Region");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/CustomSpriteLine"), s = e("../../Frame/Util"), r = e("../CollisionEmiter"), l = e("../Player/TriggerMng"), c = e("../World/Device"), d = e("../World/Tile"), {ccclass: h, property: p} = cc._decorator;
let u = i = class extends c.default {
constructor() {
super(...arguments);
this.linePrefab = null;
this.content = null;
}
get width() {
return this._boxCollider.size.width;
}
get height() {
return this._boxCollider.size.height;
}
setCutting(e) {
if (this.content) for (let t = 0; t < this.content.childrenCount; ++t) this.content.children[t].active = !e;
}
initCollider() {
this._boxCollider = this.content.getComponent(cc.BoxCollider);
}
registCollider() {
this.node.on(r.default.onCollisionEnter, this.onCollisionEnter, this);
this.node.on(r.default.onCollisionExit, this.onCollisionExit, this);
}
onCollisionEnter(e, t) {
this.world.playing && this.isHeroActor(e) && l.default.Ins.emitTrigger(this.data.extra.onActorEnter, this.node);
}
onCollisionExit(e, t) {
this.world.playing && this.isHeroActor(e) && l.default.Ins.emitTrigger(this.data.extra.onActorExit, this.node);
}
onLoad() {
super.onLoad();
s.Util.makeBro(this.linePrefab.node, 0);
this.initCollider();
this.registCollider();
}
update(e) {
this.world.playing;
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
width: 3 * d.default.SIZE,
height: 3 * d.default.SIZE,
onActorEnter: [],
onActorExit: []
});
e.extra.scale = 1;
this.refresh(e, t);
}
refresh(e, t) {
let o = e.extra.width, i = e.extra.height;
if (this.world.isGameScene) s.Util.makeBro(this.linePrefab.node, 0); else {
let e = [ {
sx: 0,
sy: 0,
ex: o,
ey: 0,
len: o
}, {
sx: 0,
sy: 0,
ex: 0,
ey: i,
len: i
}, {
sx: 0,
sy: i,
ex: o,
ey: i,
len: o
}, {
sx: o,
sy: 0,
ex: o,
ey: i,
len: i
} ];
s.Util.makeBro(this.linePrefab.node, e.length, (t, o) => {
let i = e[o];
t.getComponent(a.default).drawLine(i.sx, i.sy, i.ex, i.ey, 16, i.len);
});
}
let n = this._boxCollider.size;
n.width = o;
n.height = i;
this._boxCollider.size = n;
let r = this._boxCollider.offset;
r.x = .5 * n.width;
r.y = .5 * n.height;
this._boxCollider.offset = r;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
onActorEnter: [],
onActorExit: []
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("宽（格）", n.extra.width / d.default.SIZE, 1, 64, e => {
n.extra.width = e * d.default.SIZE;
o && o.refresh(i, t);
});
e.addNumberEditBox("高（格）", n.extra.height / d.default.SIZE, 1, 64, e => {
n.extra.height = e * d.default.SIZE;
o && o.refresh(i, t);
});
e.addTrigger("当接触主角时：", n.extra.onActorEnter, !0);
e.addTrigger("当主角离开时：", n.extra.onActorExit, !0);
}
};
n([ p(a.default) ], u.prototype, "linePrefab", void 0);
n([ p(cc.Node) ], u.prototype, "content", void 0);
u = i = n([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/CustomSpriteLine": "CustomSpriteLine",
"../../Frame/Util": "Util",
"../CollisionEmiter": "CollisionEmiter",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device",
"../World/Tile": "Tile"
} ],
RemoteStorage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d90846+V3tKALw97bRQ5bUL", "RemoteStorage");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
class n {
constructor() {
this.cache = new Map();
}
load(e) {
return i(this, void 0, void 0, function*() {
return this.cache.has(e) ? this.cache.get(e) : void 0;
});
}
set(e, t) {
return i(this, void 0, void 0, function*() {});
}
}
o.default = n;
n.Ins = new n();
cc._RF.pop();
}, {} ],
ReportBugPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "88f95mhsw5Pm4z97nW5lPFW", "ReportBugPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/NetworkMgr"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/Util"), p = e("../../Game/Player/DynamicMng"), {ccclass: u, property: m} = cc._decorator;
let f = class extends l.default {
constructor() {
super(...arguments);
this.btn = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
let t = (yield p.DynamicMng.Ins.loadOne("BugList")) || [];
h.Util.makeBro(this.btn.node, t.length, (e, o) => {
let i = t[o], a = e.getComponent(s.default);
a.label.string = i;
a.node.on(s.default.CLICK, () => {
c.default.ins.OpenPanelByName("InputPanel", e => {
e.titleLabel.string = "详细描述";
e.minChar = 20;
e.call = e => n(this, void 0, void 0, function*() {
yield this.reportBug(i, e);
this.closePanel();
d.default.showToast("感谢您的反馈！");
});
});
}, this);
});
});
}
reportBug(e, t) {
return n(this, void 0, void 0, function*() {
let o = {
type: e,
msg: t
};
yield r.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_ReportBugMsg,
params: o
}, a.Game_RReportBugMsg);
});
}
};
i([ m(s.default) ], f.prototype, "btn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng"
} ],
ReportMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "43b54vKgtBKd6HUE52aDhtL", "ReportMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ReportMng = o.ReportType = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("./ShopMng");
(function(e) {
e[e.game = 0] = "game";
e[e.player = 1] = "player";
e[e.goods = 2] = "goods";
e[e.comment = 3] = "comment";
e[e.talk = 4] = "talk";
})(o.ReportType || (o.ReportType = {}));
class r {
reportGame(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGame,
params: t
}, n.Game_RReportGame);
});
}
loadGames() {
return i(this, void 0, void 0, function*() {
let e = [], t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReportGameIdList,
params: {
start: 0,
end: 1e3
}
}, n.Game_RGetReportGameList);
if (t && t.reportGameIdList && t.reportGameIdList.length > 0) {
let o = {
ids: t.reportGameIdList
};
e = (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetBeReportGameData,
params: o
}, n.Game_RGetBeReportGameData)).gameDatas || [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
i.reportCnt = t.reportScoreMap.get(i.id);
}
}
return e;
});
}
banGame(e, t, o, s) {
return i(this, void 0, void 0, function*() {
let i = {
id: e,
score: t,
reason: o,
needDelSourceGame: s
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_OffGame,
params: i
}, n.Game_ROffGame);
});
}
clearGame() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearReportGame,
params: {}
}, n.Game_RClearReportGame);
});
}
reportPlayer(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e
};
a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportPlayer,
params: t
}, n.Game_RReportPlayer);
});
}
loadPlayer() {
return i(this, void 0, void 0, function*() {
let e = [], t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReportPlayerIdList,
params: {
start: 0,
end: 1e3
}
}, n.Game_RGetReportPlayerList);
if (t && t.reportPlayerIdList && t.reportPlayerIdList.length > 0) {
let o = {
ids: t.reportPlayerIdList
};
e = (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetUserSimpleMsg,
params: o
}, n.Game_RGetUserSimpleMsg)).userSimpleMsgList;
for (let o = 0; o < e.length; o++) {
let i = e[o];
i.reportCnt = t.reportScoreMap.get(i.playerId + "");
}
}
return e;
});
}
banPlayer(e, t, o, s, r, l) {
return i(this, void 0, void 0, function*() {
let i = {
id: e,
score: o,
reason: t,
needResetUserName: s,
needResetUserImg: r,
needResetIntro: l
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DealWithReportPlayer,
params: i
}, n.Game_RDealWithReportPlayer);
});
}
clearPlayer() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearReportPlayer,
params: {}
}, n.Game_RClearReportPlayer);
});
}
reportGoods(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e
};
a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGoods,
params: t
}, n.Game_RReportGoods);
});
}
loadGoods() {
return i(this, void 0, void 0, function*() {
let e = [], t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReportGoodsIdList,
params: {
start: 0,
end: 1e3
}
}, n.Game_RGetReportGoodsList);
if (t && t.reportGoodsIdList && t.reportGoodsIdList.length > 0) {
e = yield s.default.Ins.loadGoodsCellDatas(t.reportGoodsIdList);
for (let o = 0; o < e.length; o++) {
let i = e[o];
i.reportCnt = t.reportScoreMap.get(i.id);
}
}
return e;
});
}
banGoods(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = {
id: e,
score: o,
reason: t
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DealWithReportGoods,
params: i
}, n.Game_RDealWithReportGoods);
});
}
clearGoods() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearReportGoods,
params: {}
}, n.Game_RClearReportGoods);
});
}
reportComment(e) {
return i(this, void 0, void 0, function*() {
let t = {
commentId: e
};
a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportGameComment,
params: t
}, n.Game_RReportGameComment);
});
}
loadComments() {
return i(this, void 0, void 0, function*() {
let e = [], t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReportGameCommentList,
params: {
start: 0,
end: 1e3
}
}, n.Game_RGetReportGameCommentList);
t && t.reportGameCommentList && t.reportGameCommentList.length > 0 && (e = t.reportGameCommentList);
return e;
});
}
banComments(e, t, o) {
return i(this, void 0, void 0, function*() {
let i = {
id: e,
score: o,
reason: t
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DealWithReportGameComment,
params: i
}, n.Game_RDealWithReportGameComment);
});
}
clearComments() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearReportGameComment,
params: {}
}, n.Game_RClearReportGameComment);
});
}
reportTalk(e) {
return i(this, void 0, void 0, function*() {
let t = {
talkId: e
};
a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReportTalk,
params: t
}, n.Game_RReportTalk);
});
}
loadTalks() {
return i(this, void 0, void 0, function*() {
let e = [], t = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetReportTalkList,
params: {
start: 0,
end: 1e3
}
}, n.Game_RGetReportTalkList);
t && t.talkList && t.talkList.length > 0 && (e = t.talkList);
return e;
});
}
banTalk(e, t, o) {
return i(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_OfficialDeleteTalk,
params: t
}, n.Game_ROfficialDeleteTalk);
});
}
clearTalks() {
return i(this, void 0, void 0, function*() {
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ClearReportTalk,
params: {}
}, n.Game_RClearReportTalk);
});
}
}
o.ReportMng = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"./ShopMng": "ShopMng"
} ],
ReportScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dfa53ODt05HIog4khQTU7uO", "ReportScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Scene"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/OperationFlow"), u = e("../../Game/Player/ReportMng"), {ccclass: m, property: f} = cc._decorator;
let g = class extends r.default {
constructor() {
super(...arguments);
this.title = null;
this.subTitle = null;
this.backBtn = null;
this.okBtn = null;
this.toggle = null;
this.editBox = null;
this.id = 0;
this.reportType = u.ReportType.game;
}
onLoad() {
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
onShow(e) {
p.OperationFlow.deelOnShow(e);
}
initReportGame(e) {
this.reportType = u.ReportType.game;
this.id = e;
this.title.string = "举报游戏";
this.subTitle.string = "你觉得这个游戏有什么问题？";
let t = [ "色情低俗", "政治敏感", "挑拨引战", "引人不适", "其他问题" ];
h.Util.makeBro(this.toggle.node, t.length, (e, o) => {
e.getComponent(s.default).label.string = t[o];
});
}
initReportPlayer(e) {
this.reportType = u.ReportType.player;
this.id = e;
this.title.string = "举报玩家";
this.subTitle.string = "你觉得这个玩家有什么问题？";
let t = [ "图标违规", "名称违规", "其他问题" ];
h.Util.makeBro(this.toggle.node, t.length, (e, o) => {
e.getComponent(s.default).label.string = t[o];
});
}
initReportGoods(e) {
this.reportType = u.ReportType.goods;
this.id = e;
this.title.string = "举报商品";
this.subTitle.string = "你觉得这个素材有什么问题？";
let t = [ "色情低俗", "政治敏感", "挑拨引战", "引人不适", "其他问题" ];
h.Util.makeBro(this.toggle.node, t.length, (e, o) => {
e.getComponent(s.default).label.string = t[o];
});
}
initReportComments(e) {
this.reportType = u.ReportType.comment;
this.id = e;
this.title.string = "举报评论";
this.subTitle.string = "你觉得这个素材有什么问题？";
let t = [ "色情低俗", "政治敏感", "挑拨引战", "引人不适", "其他问题" ];
h.Util.makeBro(this.toggle.node, t.length, (e, o) => {
e.getComponent(s.default).label.string = t[o];
});
}
initReportTalk(e) {
this.reportType = u.ReportType.talk;
this.id = e;
this.title.string = "举报帖子";
this.subTitle.string = "你觉得这个帖子有什么问题？";
let t = [ "色情低俗", "政治敏感", "挑拨引战", "引人不适", "其他问题" ];
h.Util.makeBro(this.toggle.node, t.length, (e, o) => {
e.getComponent(s.default).label.string = t[o];
});
}
onBackBtn() {
l.default.ins.Back(() => {}, l.ShiftAnima.moveRightShift);
}
onOkBtn() {
return n(this, void 0, void 0, function*() {
let e = this.toggle.node.parent.getComponentsInChildren(s.default), t = 0;
for (let o = 0; o < e.length; o++) e[o].isChecked && t++;
if (t <= 0) c.default.showToast("至少选择一项"); else {
c.default.showLoading("上报中");
this.reportType == u.ReportType.game ? yield u.ReportMng.Ins.reportGame(this.id) : this.reportType == u.ReportType.player ? yield u.ReportMng.Ins.reportPlayer(this.id) : this.reportType == u.ReportType.goods ? yield u.ReportMng.Ins.reportGoods(this.id) : this.reportType == u.ReportType.comment ? yield u.ReportMng.Ins.reportComment(this.id) : this.reportType == u.ReportType.talk && (yield u.ReportMng.Ins.reportTalk(this.id));
c.default.hideLoading();
l.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "反馈成功";
e.label.string = "感谢您的反馈！";
e.leftBtn.node.active = !1;
e.closeBtn.node.active = !1;
e.setRightBtn({
text: "确定",
color: d.UIColor.green,
call: () => {
this.onBackBtn();
}
});
});
}
});
}
};
i([ f(cc.Label) ], g.prototype, "title", void 0);
i([ f(cc.Label) ], g.prototype, "subTitle", void 0);
i([ f(a.default) ], g.prototype, "backBtn", void 0);
i([ f(a.default) ], g.prototype, "okBtn", void 0);
i([ f(s.default) ], g.prototype, "toggle", void 0);
i([ f(cc.EditBox) ], g.prototype, "editBox", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/ReportMng": "ReportMng"
} ],
ReviewFailReasonCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "033d9zB7WdP/6atCg0/ho++", "ReviewFailReasonCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Game/GameEnv"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.resonLabel = null;
this.sprite = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.resonLabel.string = e.reason;
s.Mng.Ins.spriteMng.setSprite(this.sprite, e.imageUrl, 500);
console.log(a.gameEnv.fileCDN + e.imageUrl);
}
};
i([ l(cc.Label) ], c.prototype, "resonLabel", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/GameEnv": "GameEnv",
"../../Game/Player/Mng": "Mng"
} ],
ReviewFailReasonPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ffb19myjLVJKrfGgduhKK+s", "ReviewFailReasonPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), {ccclass: c, property: d} = cc._decorator;
let h = class extends r.default {
constructor() {
super(...arguments);
this.scrollList = null;
this.toggleGroup = null;
this.okBtn = null;
}
onLoad() {
super.onLoad();
this.toggleGroup.node.on(s.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd10, this);
this.scrollList.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd10, this);
this.okBtn.node.on(n.default.CLICK, this.closePanel, this);
}
onToggleChange(e) {
this.scrollList.centerToIdx(e, .3);
this.scrollList.selectByIdx(e);
}
setData(e) {
l.Util.makeBro(this.toggleGroup.node.children[0], e.length);
this.scrollList.setDataArr(e);
}
onTouchEnd10(e) {
let t = e.target, o = t.convertToWorldSpaceAR(e.getStartLocation()), i = t.convertToWorldSpaceAR(e.getLocation()).sub(o), n = this.scrollList.curSelectIdx;
i.x > 50 && n > 0 ? this.toggleGroup.selectIdx(n - 1) : i.x < -50 && n < this.scrollList.getDataArr().length - 1 && this.toggleGroup.selectIdx(n + 1);
}
};
i([ d(a.default) ], h.prototype, "scrollList", void 0);
i([ d(s.default) ], h.prototype, "toggleGroup", void 0);
i([ d(n.default) ], h.prototype, "okBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util"
} ],
RoleCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "34a03ra1T1MT4YJBstOAhIy", "RoleCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/HeadIcon"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Game/Player/FollowMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.headIcon = null;
this.followBtn = null;
this.info = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.followBtn.node.on(a.default.CLICK, this.onFollowBtn, this);
this.node.on(a.default.CLICK, this.enterFriendScene, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
if (e) {
this.info = e;
this.nameLabel.string = e.userName;
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.level);
this.followBtn.label.string = e.isFollow ? "已关注" : "关注";
}
});
}
onFollowBtn() {
return n(this, void 0, void 0, function*() {
if (this.info) if (this.info.isFollow) {
if (1 == (yield c.FollowMng.Ins.unFollow(this.info.playerId))) {
this.info.isFollow = !1;
this.followBtn.label.string = "关注";
}
} else if (1 == (yield c.FollowMng.Ins.follow(this.info.playerId))) {
this.info.isFollow = !0;
this.followBtn.label.string = "已关注";
}
});
}
enterFriendScene() {
this.info && l.default.ins.Enter("FriendScene", e => {
e.setData(this.info.playerId);
}, l.ShiftAnima.moveLeftShift);
}
};
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(s.default) ], p.prototype, "headIcon", void 0);
i([ h(a.default) ], p.prototype, "followBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/FollowMng": "FollowMng"
} ],
RoleListScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d3e690yUi5Jj7b6pVXd8Isb", "RoleListScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Scene"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), {ccclass: d, property: h} = cc._decorator;
let p = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.backBtn = null;
this.titleLabel = null;
this.data = null;
}
onLoad() {
super.onLoad();
this.backBtn.node.on(a.default.CLICK, this.onBackBtn, this);
}
onBackBtn() {
l.default.ins.Back();
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.titleLabel.string = e.title;
this.list.setDataArr(e.roles);
});
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
let e = yield this.data.appendFunc();
if (e && e.length > 0) {
for (let t = 0; t < e.length; t++) this.data.roles.push(e[t]);
this.list.setDataArr(this.data.roles);
} else c.default.showToast("没有了...");
}
});
}
};
i([ h(s.default) ], p.prototype, "list", void 0);
i([ h(a.default) ], p.prototype, "backBtn", void 0);
i([ h(cc.Label) ], p.prototype, "titleLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top"
} ],
Role: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c42923iivxHOJpyq5jKRaJM", "Role");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../i18n/i18nMgr");
class n {
constructor() {
this.role = null;
this.gameSlotUnlockLvls = [];
this.goodsSlotUnlockLvls = [];
}
static get Ins() {
this.ins || (this.ins = new n());
return this.ins;
}
init(e) {
this.role = e;
e.userIntro = e.userIntro || i.I18nMgr.getI18nStringByZh("这个家伙很懒，什么东西也没有留下");
}
get userName() {
return this.role.userName;
}
get userImg() {
return this.role.userImg;
}
get userIntro() {
return this.role.userIntro;
}
set userName(e) {
this.role.userName = e;
}
set userImg(e) {
this.role.userImg = e;
}
set userIntro(e) {
this.role.userIntro = e;
}
}
o.default = n;
n.UserInfoChange = "UserInfoChange";
n.UserImgChange = "UserImgChange";
cc._RF.pop();
}, {
"../i18n/i18nMgr": "i18nMgr"
} ],
RpgMoverCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "235bdKnhp9FgKmUGkwjngRt", "RpgMoverCtrl");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/Joystick"), s = e("../../../GameData/GameTypeDefine"), r = e("./BaseMoveCtrl"), {ccclass: l, property: c} = cc._decorator;
let d = class extends r.default {
constructor() {
super(...arguments);
this.joystick = null;
this.btnA = null;
this.btnB = null;
this.joystickB = null;
this.mover = null;
this._tmpDir = cc.v2();
this._tmpBDir = cc.v2();
this._joystickBMag = 0;
this._isReadyJoystickBFire = !1;
}
onLoad() {
this.joystick.node.on(a.default.TOUCH_BEGIN, this.onJoystickTouchBegin, this);
this.joystick.node.on(a.default.TOUCHING, this.onJoystickTouching, this);
this.joystick.node.on(a.default.TOUCH_END, this.onJoystickTouchEnd, this);
this.joystick.node.on(a.default.ANGLE_CHANGE, this.onJoystickAngleChange, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndA, this);
this.btnA.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndA, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStartB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEndB, this);
this.btnB.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEndB, this);
this.joystickB.node.on(a.default.TOUCH_BEGIN, this.onJoystickBTouchBegin, this);
this.joystickB.node.on(a.default.TOUCHING, this.onJoystickBTouching, this);
this.joystickB.node.on(a.default.TOUCH_END, this.onJoystickBTouchEnd, this);
}
setMover(e) {
this.mover = e;
this.mover && this.mover.actor && (this.mover.actor.ignoreTile = !1);
}
setMoveDir(e) {
this.mover && this.mover.setDir(e.x, e.y, !0);
}
onTouchStartA() {}
onTouchEndA() {}
onTouchHoldA() {
this.mover;
}
onTouchStartB() {
this.mover && (this.mover.actor.gun.firing = !0);
}
onTouchEndB() {
this.mover && (this.mover.actor.gun.firing = !1);
}
onJoystickTouchBegin() {}
onJoystickTouching(e) {
if (this.mover) {
this._isTouchDir = !0;
this._tmpDir.set(e);
this._tmpDir.normalizeSelf();
this.setMoveDir(this._tmpDir);
}
}
onJoystickTouchEnd() {
this._isTouchDir = !1;
this._tmpDir.x = 0;
this._tmpDir.y = 0;
this.mover && this.setMoveDir(this._tmpDir);
}
onJoystickAngleChange(e) {}
readyJoystickBFire() {
this._isReadyJoystickBFire = !0;
this.mover.actor.gun.readyFire();
this._joystickBMag = .65 * this.joystickB.maxR;
}
onJoystickBTouchBegin() {
this.mover && this.mover.actor.gun && this.joystickB.node.active && this.readyJoystickBFire();
}
onJoystickBTouching(e) {
if (!this.mover || !this.mover.actor.gun || !this.joystickB.node.active) return;
this._tmpBDir.set(e);
this._joystickBMag = this._tmpBDir.mag();
let t = this._joystickBMag / this.joystickB.maxR;
t > 1 && (t = 1);
this._tmpBDir.normalizeSelf();
this.mover.actor.gun.updateFirePower(t);
this.mover.actor.gun.updateFireDir(this._tmpBDir.x, this._tmpBDir.y);
}
onJoystickBTouchEnd() {
if (!this.mover || !this.mover.actor.gun || !this.joystickB.node.active) return;
this._isReadyJoystickBFire || this.readyJoystickBFire();
this._isReadyJoystickBFire = !1;
let e = this._joystickBMag / this.joystickB.maxR;
e > 1 && (e = 1);
this.mover.actor.gun.fire(e);
this.mover.actor.gun.updateFireDir(0, 0);
}
update() {
super.update && super.update();
this.onTouchHoldA();
if (this.mover && this.mover.actor) if (this.mover.actor.gun && this.mover.actor.gun.conf && this.mover.actor.gun.conf.weaponType == s.WeaponType.Cast) {
this.joystickB.node.active = !0;
this.btnB.node.active = !1;
} else {
this.joystickB.node.active = !1;
this.btnB.node.active = !0;
}
}
};
i([ c(a.default) ], d.prototype, "joystick", void 0);
i([ c(n.default) ], d.prototype, "btnA", void 0);
i([ c(n.default) ], d.prototype, "btnB", void 0);
i([ c(a.default) ], d.prototype, "joystickB", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/Joystick": "Joystick",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseMoveCtrl": "BaseMoveCtrl"
} ],
RpgMover: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d7131u5yldLb4OeEMpky/En", "RpgMover");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../Frame/FightSystem"), a = e("../../../Frame/TweenUtil"), s = e("../../Device/Ladder"), r = e("../../Device/Platform"), l = e("../../Device/Spring"), c = e("../../Player/TriggerMng"), d = e("../Tile"), h = e("../WorldNodeBody"), p = e("./Mover"), {ccclass: u, property: m} = cc._decorator;
let f = class extends p.default {
constructor() {
super(...arguments);
this.actor = null;
this.box = null;
this.velocity = cc.Vec2.ZERO;
this.resistanceCof = 3;
this.frictionCof = 1;
this.canFly = !1;
this.beatenSpeedX = 300;
this.moveDistance = 0;
this._blockTimer = 0;
this._blockedDuration = 0;
this._moveDir = new cc.Vec2();
this._moveVelocity = new cc.Vec2();
this._v_t1 = new cc.Vec2();
this._v_t2 = new cc.Vec2();
this._v_t3 = new cc.Vec2();
this._isFalling = !1;
this._fallTween = null;
this._lastFallPos = new cc.Vec2();
this._vh = 0;
this._isJumping = !1;
this._jumpG = -1500;
this._isJumpingOverBlock = !1;
this._jumpOverStartX = 0;
this._jumpOverStartY = 0;
this._jumpOverMagSqr = 0;
this._onPlatform = !1;
this._inLadderTimer = 0;
this._ladderSpeed = 0;
this._ladderFriction = .25;
this._inSpring = !1;
this._springBounceHeight = 0;
}
get moveSpeed() {
return this.actor && this.actor.data.moveSpeed || 300;
}
onDisable() {
if (this.actor) {
this.actor.onBlockedByTile = null;
this.actor.onFallFromTile = null;
}
}
get isBlocking() {
return cc.director.getTotalTime() < this._blockTimer;
}
countBlockTime(e) {
this.isBlocking && (this._blockedDuration += e);
}
setBlockState() {
this.isBlocking || (this._blockedDuration = 0);
this._blockTimer = cc.director.getTotalTime() + 100;
}
setDir(e, t, o) {
if (!this._isJumpingOverBlock) {
this._moveDir.x = e;
this._moveDir.y = t;
this.updateMoveVelocity(o);
e > 0 ? this.actor.setScaleX(1) : e < 0 && this.actor.setScaleX(-1);
0 == e && 0 == t || this.actor.setDir(e, t);
}
}
updateMoveVelocity(e) {
if (this._moveVelocity.equals(cc.Vec2.ZERO) && !this._moveDir.equals(cc.Vec2.ZERO)) {
this.moveDistance = 0;
this.emitActorMove();
}
let t = this.moveSpeed;
if (this.inLadder) {
e = !0;
t = this._ladderSpeed;
}
if (e) {
this.velocity.x * this._moveDir.x <= 0 && (this.velocity.x = 0);
this.velocity.y * this._moveDir.y <= 0 && (this.velocity.y = 0);
}
cc.Vec2.multiplyScalar(this._moveVelocity, this._moveDir, t);
if (Math.abs(this.velocity.x) < Math.abs(this._moveVelocity.x) || this.velocity.x * this._moveDir.x < 0) {
let e = this.velocity.x + 1 * this._moveVelocity.x;
e * this._moveDir.x > 0 && Math.abs(e) > Math.abs(this._moveVelocity.x) && (e = this._moveVelocity.x);
this.velocity.x = e;
}
if (Math.abs(this.velocity.y) < Math.abs(this._moveVelocity.y) || this.velocity.y * this._moveDir.y < 0) {
let e = this.velocity.y + 1 * this._moveVelocity.y;
e * this._moveDir.y > 0 && Math.abs(e) > Math.abs(this._moveVelocity.y) && (e = this._moveVelocity.y);
this.velocity.y = e;
}
}
onLoad() {
this.box = this.node.getComponent(cc.BoxCollider);
this.node.on(n.FightSystem.Event.Beaten, this.onBeaten, this);
}
setActor(e) {
this._fallTween && this._fallTween.stop();
this._isFalling = !1;
this._isJumping = !1;
this._isJumpingOverBlock = !1;
if (this.actor) {
e.ignoreTile = !1;
this.actor.node.off(r.Platform.ONPLATFORM, this.onPlatform, this);
this.actor.node.off(r.Platform.EXISTPLATFORM, this.onPlatformExist, this);
this.actor.node.off(r.Platform.BLOCKBYPLATFORM, this.onPlatformBlock, this);
this.actor.node.off(s.default.INLADDER, this.onInLadder, this);
this.actor.node.off(s.default.OUTLADDER, this.onOutLadder, this);
this.node.off(l.default.REBOUND, this.onSpringReBound, this);
this.node.off(l.default.ENTERSPRING, this.onSpringEnter, this);
this.node.off(l.default.EXISTSPRING, this.onSpringExist, this);
}
this.actor = e;
if (this.actor) {
this.actor.node.on(r.Platform.ONPLATFORM, this.onPlatform, this);
this.actor.node.on(r.Platform.EXISTPLATFORM, this.onPlatformExist, this);
this.actor.node.on(r.Platform.BLOCKBYPLATFORM, this.onPlatformBlock, this);
this.actor.node.on(s.default.INLADDER, this.onInLadder, this);
this.actor.node.on(s.default.OUTLADDER, this.onOutLadder, this);
this.node.on(l.default.REBOUND, this.onSpringReBound, this);
this.node.on(l.default.ENTERSPRING, this.onSpringEnter, this);
this.node.on(l.default.EXISTSPRING, this.onSpringExist, this);
}
this.actor.onBlockedByTile = e => {
if (this._isJumpingOverBlock || this._isFalling) return;
let t = e.moveBackX, o = e.moveBackY;
this.actor.PositionMoveDelta(t, o);
this.actor.LimitMoveDelta(this.moveSpeed / cc.game.getFrameRate());
if (0 != this._moveDir.x || 0 != this._moveDir.y) {
this.setBlockState();
if (this._blockedDuration >= .3) {
let e = this.world, t = this.actor.getRuntimeBoundingBox(), o = .5 * t.width, i = .5 * t.height;
this._v_t1.x = t.x + o + this._moveDir.x * (o + 1);
this._v_t1.y = t.y + i + this._moveDir.y * (i + 1);
this._v_t2.x = this._v_t1.x + this._moveDir.x * d.default.SIZE;
this._v_t2.y = this._v_t1.y + this._moveDir.y * d.default.SIZE;
if (!this._onPlatform && !this.inLadder && e.tiledMap.getValidJumpOverTilePoint(this._v_t1, this._v_t2, this._v_t3)) {
this._blockedDuration = 0;
let e = 0 != this._moveDir.y ? this._moveDir.y > 0 ? this._moveDir.y * i * 2 + 10 : 5 : 2 * i;
this.doJumpOver(this._v_t3.x + this._moveDir.x * o, this._v_t3.y + e);
}
}
}
};
this.actor.onFallFromTile = (e, t) => {
if (!this._onPlatform && !this.inLadder && !this._isFalling && this.actor.hper && this.actor.hper.isAlive()) {
this.stopJump();
this.doFall(e.x, e.y, t);
}
};
void 0 !== this.actor.data.beatenBackRange && (this.beatenSpeedX = this.actor.data.beatenBackRange * d.default.SIZE);
}
addSpeed(e, t) {
this.velocity.x += e;
this.velocity.y += t;
}
doFall(e, t, o) {
this._isFalling = !0;
let i = this.actor;
this._lastFallPos.x = i.historyValidTileCol * d.default.SIZE + .5 * d.default.SIZE;
this._lastFallPos.y = i.historyValidTileRow * d.default.SIZE + .5 * d.default.SIZE;
this._fallTween && this._fallTween.stop();
this.actor.Angle = 0;
this._fallTween = cc.tween(i).to(.7, {
Move2PositionX: e,
Move2PositionY: t,
Scale: 0,
Angle: 360
}, {
easing: a.Easing.quadIn
}).to(1, {}).call(() => {
this._isFalling = !1;
this.actor.Angle = 0;
i.onDamageByTile(o);
if (i.hper.isAlive()) {
i.SetPosition(this._lastFallPos.x, this._lastFallPos.y + 10);
i.ApplyPosition();
this.actor.Angle = 0;
this.actor.Scale = 1;
}
});
this._fallTween.start();
}
doJumpOver(e, t) {
this._jumpOverStartX = this.actor.PositionX;
this._jumpOverStartY = this.actor.PositionY;
let o = e - this.actor.PositionX, i = t - this.actor.PositionY;
this._v_t1.x = o;
this._v_t1.y = i;
let n = this._v_t1.mag();
this._jumpOverMagSqr = n * n;
this._v_t1.normalizeSelf();
let a = n / .5;
this.doJump(a, .5, this._v_t1.x, this._v_t1.y);
this._isJumpingOverBlock = !0;
}
doJump(e, t, o, i) {
this.setDir(o, o, !0);
this._isJumping = !0;
this.velocity.x = o * e;
this.velocity.y = i * e;
this._vh = -this._jumpG * t * .5;
}
updateJump(e) {
if (this._isJumping) {
let t = this._vh * e;
this.actor.updateH(this.actor.h + t);
this._vh += this._jumpG * e;
this.actor.h <= 0 && this._vh < 0 && (this._isJumping = !1);
} else if (this._isJumpingOverBlock) {
let e = this.actor.node.x - this._jumpOverStartX, t = this.actor.node.y - this._jumpOverStartY;
if (e * e + t * t > this._jumpOverMagSqr) {
this._isJumpingOverBlock = !1;
this.setDir(0, 0, !0);
}
}
}
stopJump() {
if (this._isJumping || this._isJumpingOverBlock) {
this._isJumping = !1;
this._isJumpingOverBlock = !1;
this.actor.updateH(0);
this.setDir(0, 0, !0);
}
}
update(e) {
let t = this.world;
if (!t.playing) return;
if (!this.actor.hper.isAlive() || this._isFalling) return;
e = Math.min(.2, e);
this.countBlockTime(e);
let o = this.velocity.x;
o > 0 ? this.actor.setScaleX(1) : o < 0 && this.actor.setScaleX(-1);
let i = o * e, n = this.velocity.y * e, a = t.tiledMap.nCol * d.default.SIZE + .5 * d.default.SIZE, s = t.tiledMap.nRow * d.default.SIZE + .5 * d.default.SIZE, r = this.actor.getRuntimeBoundingBox();
(i < 0 && r.xMin + i < 0 || i > 0 && r.xMax + i > a) && (i = 0);
(n < 0 && r.yMin + n < 0 || n > 0 && r.yMax + n > s) && (n = 0);
this.actor.PositionMoveDelta(i, n);
this.updateJump(e);
if (this.inLadder) {
if (0 == this._moveVelocity.x || Math.abs(this.velocity.x) > Math.abs(this._moveVelocity.x)) {
let e = -this.velocity.x * this._ladderFriction;
this.velocity.x += e;
}
if (0 == this._moveVelocity.y || Math.abs(this.velocity.y) > Math.abs(this._moveVelocity.y)) {
let e = -this.velocity.y * this._ladderFriction;
this.velocity.y += e;
}
} else if (!this._onPlatform && !this._isJumpingOverBlock) {
let t = -this.velocity.x * this.resistanceCof, o = -this.velocity.y * this.resistanceCof, i = this.frictionCof, n = -this.velocity.x * i, a = -this.velocity.y * i;
this.velocity.y += (o + a) * e;
this.velocity.x += (t + n) * e;
if (Math.abs(this.velocity.magSqr()) < .001) {
this.velocity.x = 0;
this.velocity.y = 0;
}
}
let l = this.actor.PositionX - this.node.x, c = this.actor.PositionY - this.node.y;
this.moveDistance += Math.sqrt(l * l + c * c);
if (this.moveDistance > 32) {
this.moveDistance = 0;
this.emitActorMove();
}
}
emitActorMove() {
this.node.emit(p.default.ActorMove, this.actor);
c.default.Ins.emitTrigger(this.actor.data.onMove, this.node);
}
onBeaten(e) {
let t = this.actor.data.beatenLockHpTime || 0;
this.actor.hper.lockHp = !0;
this.scheduleOnce(() => {
this.actor.hper.lockHp = !1;
}, t);
}
onPlatform() {
this._onPlatform = this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Platform);
}
onPlatformExist() {
this._onPlatform = this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Platform);
}
onPlatformBlock(e) {
if (this._onPlatform && e.y < 0 && this.velocity.y > 0) return;
let t = 0 != e.x ? this.actor.node.x : this.actor.PositionX, o = 0 != e.y ? this.actor.node.y : this.actor.PositionY;
(e.y > 0 && this.actor.PositionY > o || e.y < 0 && this.actor.PositionY < o) && (o = this.actor.PositionY);
(e.x > 0 && this.actor.PositionX > t || e.x < 0 && this.actor.PositionX < t) && (t = this.actor.PositionX);
this.actor.SetPosition(t, o);
this.actor.onBlockedByTile({
moveBackX: e.x,
moveBackY: e.y
});
}
get inLadder() {
return cc.director.getTotalTime() < this._inLadderTimer;
}
onInLadder(e) {
if (this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Ladder)) {
this._ladderSpeed = e;
this._inLadderTimer = cc.director.getTotalTime() + 50;
}
}
onOutLadder() {
this.actor.hasEnteredColliderType(h.WorldBodyColliderType.Ladder) || (this._inLadderTimer = 0);
}
onSpringReBound(e) {
this._inSpring = !1;
}
get isInSpring() {
return this._inSpring;
}
get springBounceHeight() {
return this._springBounceHeight;
}
onSpringEnter(e) {
this._springBounceHeight = 2 * e;
this._inSpring = !0;
this.velocity.x = 0;
}
onSpringExist() {
this._inSpring = !1;
}
};
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../Frame/FightSystem": "FightSystem",
"../../../Frame/TweenUtil": "TweenUtil",
"../../Device/Ladder": "Ladder",
"../../Device/Platform": "Platform",
"../../Device/Spring": "Spring",
"../../Player/TriggerMng": "TriggerMng",
"../Tile": "Tile",
"../WorldNodeBody": "WorldNodeBody",
"./Mover": "Mover"
} ],
RunDataMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "19edbIvYNpPloe37XIdxKcZ", "RunDataMng");
Object.defineProperty(o, "__esModule", {
value: !0
});
class i {
constructor() {
this.map = new Map();
}
get(e) {
let t = this.map.get(e);
return t ? t.value : null;
}
set(e, t) {
let o = this.map.get(e);
if (!o) {
o = {
key: e,
value: t
};
this.map.set(e, o);
}
o.value = t;
return o;
}
clear() {
this.map.clear();
}
}
o.default = i;
i.Ins = new i();
cc._RF.pop();
}, {} ],
SaleGameBagItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9dd3ekG3r9OlqkGylNFuIzo", "SaleGameBagItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Slider"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), c = e("../../Game/Player/GameBagMng"), d = e("../../Game/Player/Mng"), h = e("../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.sprite = null;
this.saleCntLabel = null;
this.slider = null;
this.saleBtn = null;
this.call = null;
this.data = null;
this.prop = null;
}
onLoad() {
super.onLoad();
this.saleBtn.node.on(a.default.CLICK, this.onSaleBtn, this);
this.slider.node.on(s.default.MOVE, this.onSliderMove, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
let t = yield d.Mng.Ins.propMng.loadOne(e.propConfId);
this.prop = t;
this.titleLabel.string = "Sell " + t.name;
let o = c.default.Ins.getCnt(e.propConfId);
this.slider.setRange(1, o);
this.slider.step = o;
this.slider.value = 1;
d.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, 150);
let i = yield d.Mng.Ins.gameShopMng.getCostIconUrl(h.GameGoodsCostType.Coin);
d.Mng.Ins.spriteMng.setPropSprite(this.saleBtn.icon, i, 50);
});
}
onSliderMove(e) {
this.saleCntLabel.string = `${e}`;
let t = this.prop.salePrice || 1;
this.saleBtn.label.string = `Get ${e * t}`;
}
onSaleBtn() {
let e = this.slider.value || 1, t = c.default.Ins.getCnt(this.data.propConfId);
e = l.Util.clamp(e, 1, t);
this.call && this.call(e);
this.closePanel();
}
};
i([ u(cc.Label) ], m.prototype, "titleLabel", void 0);
i([ u(cc.Sprite) ], m.prototype, "sprite", void 0);
i([ u(cc.Label) ], m.prototype, "saleCntLabel", void 0);
i([ u(s.default) ], m.prototype, "slider", void 0);
i([ u(a.default) ], m.prototype, "saleBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Slider": "Slider",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"../../Game/Player/GameBagMng": "GameBagMng",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
SavePoint: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "82754pZSYZJkK6K3RUekUmm", "SavePoint");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/SceneManager"), s = e("../../GameData/GameTypeDefine"), r = e("../Player/Mng"), l = e("../Player/TriggerMng"), c = e("../World/Device"), d = e("../World/Interactable"), {ccclass: h, property: p} = cc._decorator;
let u = i = class extends c.default {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
super.onLoad();
this.node.on(d.default.INTERACT, this.onInteract, this);
}
setData(e, t) {
super.setData(e, t);
e = this.data;
r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
scale: 1,
onInteract: [ {
act: s.TriggerAct.Save
} ]
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
let o = this.getComponent(d.default);
o && (o.canInteract = !0);
}
onInteract() {
l.default.Ins.emitTrigger(this.data.extra.onInteract, this.node);
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
scale: 1,
onInteract: [ {
act: s.TriggerAct.Save
} ]
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addButton("存档说明：", "查看", () => {
a.default.ins.OpenPanelByName("AboutPanel", e => {
e.setData("存档说明", "\n    1.存档时，背包物品、变量状态、主角状态、当前地图和坐标等信息将被保存。\n    2.新存档会覆盖旧存档。\n    3.存档存储在本地中，所以清理手机缓存有可能会删除存档。\n                ");
});
});
e.addTrigger("点击互动时：", n.extra.onInteract, !0);
}
};
n([ p({
override: !0,
type: cc.Sprite
}) ], u.prototype, "sprite", void 0);
u = i = n([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"../World/Device": "Device",
"../World/Interactable": "Interactable"
} ],
Saw: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0aeffJxbPBIGL4/1FO6+NCZ", "Saw");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Damager"), s = e("../../GameData/GameTypeDefine"), r = e("../Player/Mng"), l = e("../World/Device"), {ccclass: c, property: d} = cc._decorator;
let h = i = class extends l.default {
constructor() {
super(...arguments);
this.sprite = null;
this.speed = 300;
this.damager = null;
}
onLoad() {
super.onLoad();
this.damager = this.sprite.getComponent(a.default);
}
update(e) {
this.world.playing && (this.sprite.node.angle += this.speed * e);
}
setData(e, t) {
super.setData(e, t);
e = this.data;
r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
e.extra || (e.extra = {
speed: 300,
dmg: 1,
scale: 1
});
this.speed = e.extra.speed;
this.damager.dmg = e.extra.dmg;
this.damager.ignoreTeam = this.data.ignoreDmgEnemy ? s.Team.Enemy : s.Team.None;
this.node.scale = e.extra.scale;
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
speed: 300,
dmg: 1,
scale: 1
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("转速(度/秒)", n.extra.speed, -999999, 999999, e => {
n.extra.speed = e;
});
e.addToggle("伤害敌人", !n.ignoreDmgEnemy, e => {
n.ignoreDmgEnemy = !e;
});
e.addNumberEditBox("伤害", n.extra.dmg, 0, 999999, e => {
n.extra.dmg = e;
});
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
}
};
n([ d({
override: !0,
type: cc.Sprite
}) ], h.prototype, "sprite", void 0);
h = i = n([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../Frame/Damager": "Damager",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/Mng": "Mng",
"../World/Device": "Device"
} ],
SceneManager: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f912c8jm1RLg4r97MiX+pH/", "SceneManager");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ShiftAnima = void 0;
const {ccclass: s, property: r} = cc._decorator, l = e("./Scene"), c = e("./ScreenRect"), d = e("./Util"), h = e("./CrossPlatform"), p = e("./Top");
let u = i = class extends cc.Component {
constructor() {
super(...arguments);
this.stack = [];
this.curScene = null;
this.firstScene = "";
this.homeScene = "";
this.content = null;
this.blockInput = null;
this.prefabCache = new Map();
}
onLoad() {
i.ins = this;
for (let e = 0; e < this.content.childrenCount; e++) this.content.children[e].active = !1;
h.crossPlatform.onShow(this.onShow.bind(this));
h.crossPlatform.onHide(this.onHide.bind(this));
this.blockInput.node.active = !1;
this.Enter(this.firstScene);
}
Enter(e, t = null, o = m.simpleShift) {
return a(this, void 0, void 0, function*() {
let i = yield this.createScene(e);
if (i) {
this.shiftScene(i, o);
this.stack.push(i);
t && t(i);
}
});
}
Back(e = null, t = m.simpleShift) {
return a(this, void 0, void 0, function*() {
if (this.stack.length >= 2) {
let o = this.stack.pop(), i = this.stack[this.stack.length - 1];
this.shiftScene(i, t, () => {
o.node.destroy();
});
e && e(i);
} else console.error("前面没有场景了!");
});
}
BackTo(e, t = null, o = m.simpleShift) {
let i = this.stack.pop();
for (;this.stack.length > 1 && e != this.stack[this.stack.length - 1].node.name; ) this.stack.pop().destroy();
let n = this.stack[this.stack.length - 1];
this.shiftScene(n, o, () => {
i.node.destroy();
});
t && t(n);
}
shiftScene(e, t, o = null) {
let i = this.curScene;
this.curScene = e;
this.blockInput.node.active = !0;
t(i, e, () => {
i && i.onExitScene();
e.onEnterScene();
this.printState();
o && o();
this.blockInput.node.active = !1;
});
return e;
}
createScene(e) {
return a(this, void 0, void 0, function*() {
p.default.showLoading("界面加载中");
let t = this.prefabCache.get(e);
if (!t) {
if (!(t = yield d.Util.loadBundleRes("Scene/" + e + "/" + e))) {
p.default.hideLoading("界面加载失败");
return;
}
this.prefabCache.set(e, t);
}
var o = cc.instantiate(t);
o.name = e;
o.position = cc.Vec2.ZERO;
o.active = !1;
let i = o.getComponent(l.default);
i ? this.content.addChild(i.node, 0) : cc.error("这个场景有问题！：" + e);
p.default.hideLoading();
return i;
});
}
findScene(e) {
for (let t = this.stack.length - 1; t >= 0; t--) {
let o = this.stack[t].getComponent(e);
if (o) return o;
}
}
OpenPanelByName(e, t = (() => {})) {
this.curScene.OpenPanelByName(e, t);
}
pushPanel(e, t = null, o = !1) {
this.curScene.pushPanel(e, t, o);
}
pushCall(e = null, t = !1) {
this.curScene.pushCall(e, t);
}
checkNextPanel() {
this.curScene.checkNextPanel();
}
popPanel() {
this.curScene && this.curScene.panelStack && this.curScene.panelStack.PopCurrent();
}
printState() {
let e = "\n++++++++++++SceneManager++++++++++++\n+ stack: ";
for (let t = 0; t < this.stack.length; t++) e += " >> " + this.stack[t];
e += "\n+ cache: ";
for (let t = 0; t < this.content.childrenCount; t++) e += `${t}:${this.content.children[t].name},`;
e += "\n++++++++++++++++++++++++++++++++++++\n";
console.log(e);
}
onShow(e) {
console.log("onShow", e);
this.curScene && this.curScene.onShow(e);
}
onHide(e) {
console.log("onHide", e);
this.curScene && this.curScene.onHide(e);
}
};
u.ins = null;
n([ r ], u.prototype, "firstScene", void 0);
n([ r ], u.prototype, "homeScene", void 0);
n([ r(cc.Node) ], u.prototype, "content", void 0);
n([ r(cc.BlockInputEvents) ], u.prototype, "blockInput", void 0);
u = i = n([ s ], u);
o.default = u;
var m;
(function(e) {
e.simpleShift = function(e, t, o) {
e && (e.node.active = !1);
if (t) {
t.node.active = !0;
t.node.position = cc.Vec2.ZERO;
}
o();
};
e.moveLeftShift = function(e, t, o) {
if (e) {
e.node.position = cc.v2(0, 0);
cc.tween(e.node).to(.5, {
position: cc.v2(.25 * -c.default.width, 0)
}, {
easing: "quintOut"
}).call(() => {
e.node.active = !1;
}).start();
}
if (t) {
let e = t.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
e.enabled = !1;
}
t.node.position = cc.v2(c.default.width, 0);
t.node.active = !0;
cc.tween(t.node).to(.5, {
position: cc.v2(0, 0)
}, {
easing: "quintOut"
}).call(() => {
o();
}).start();
}
};
e.moveRightShift = function(e, t, o) {
if (e) {
e.node.position = cc.v2(0, 0);
cc.tween(e.node).to(.5, {
position: cc.v2(c.default.width, 0)
}, {
easing: "quintOut"
}).call(() => {
e.node.active = !1;
}).start();
}
if (t) {
let e = t.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
e.enabled = !1;
}
t.node.position = cc.v2(.25 * -c.default.width, 0);
t.node.active = !0;
cc.tween(t.node).to(.5, {
position: cc.v2(0, 0)
}, {
easing: "quintOut"
}).call(() => {
o();
}).start();
}
};
e.moveUpShift = function(e, t, o) {
if (e) {
e.node.position = cc.v2(0, 0);
cc.tween(e.node).to(.5, {
position: cc.v2(0, c.default.height)
}, {
easing: "quintOut"
}).call(() => {
e.node.active = !1;
}).start();
}
if (t) {
let e = t.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
e.enabled = !1;
}
t.node.position = cc.v2(0, -c.default.height);
t.node.active = !0;
cc.tween(t.node).to(.5, {
position: cc.v2(0, 0)
}, {
easing: "quintOut"
}).call(() => {
o();
}).start();
}
};
e.moveDownShift = function(e, t, o) {
if (e) {
e.node.position = cc.v2(0, 0);
cc.tween(e.node).to(.5, {
position: cc.v2(0, -c.default.height)
}, {
easing: "quintOut"
}).call(() => {
e.node.active = !1;
}).start();
}
if (t) {
let e = t.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
e.enabled = !1;
}
t.node.position = cc.v2(0, c.default.height);
t.node.active = !0;
cc.tween(t.node).to(.5, {
position: cc.v2(0, 0)
}, {
easing: "quintOut"
}).call(() => {
o();
}).start();
}
};
e.scaleShift = function(e, t, o) {
if (e) {
e.node.scale = 1;
cc.tween(e.node).to(1, {
scale: 0
}).call(() => {
e.node.active = !1;
}).start();
}
if (t) {
e.node.scale = 0;
t.node.active = !0;
cc.tween(t.node).delay(1).to(1e3, {
scale: 1
}).call(() => {
o();
}).start();
}
};
e.blackShift = function(e, t, o) {
return a(this, void 0, void 0, function*() {
let i = new cc.Node();
i.color = cc.Color.BLACK;
let n = i.addComponent(cc.Sprite), a = yield d.Util.loadBundleRes("Atlas/UI/white", cc.SpriteFrame);
n.spriteFrame = a;
i.width = e.node.width;
i.height = e.node.height;
i.opacity = 0;
e.node.addChild(i);
cc.tween(i).to(.15, {
opacity: 255
}).call(() => {
e.node.active = !1;
i.removeFromParent();
t.node.addChild(i);
t.node.active = !0;
}).to(.15, {
opacity: 0
}).call(() => {
i.removeFromParent();
o();
}).start();
});
};
})(m = o.ShiftAnima || (o.ShiftAnima = {}));
cc._RF.pop();
}, {
"./CrossPlatform": "CrossPlatform",
"./Scene": "Scene",
"./ScreenRect": "ScreenRect",
"./Top": "Top",
"./Util": "Util"
} ],
Scene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3554cd0qP1PD6eqeP58khBo", "Scene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator, r = e("./DataBind"), l = e("./PanelStack"), c = e("./Util"), d = e("./PanelQueue"), h = e("./SceneManager");
let p = class extends r.DB.DataBindComponent {
constructor() {
super(...arguments);
this.panelStack = null;
this.panelQueue = null;
this.panelQueuePromise = null;
}
onLoad() {}
onExitScene() {}
onEnterScene() {}
onShow(e) {}
onHide(e) {}
initPanelStack() {
return n(this, void 0, void 0, function*() {
if (!this.panelStack) {
let e = yield c.Util.loadBundleRes("Prefab/PanelStack");
if (this.panelStack) return this.panelStack;
let t = cc.instantiate(e);
this.node.addChild(t);
this.panelStack = t.getComponent(l.default);
this.panelStack.scene = this;
}
return this.panelStack;
});
}
OpenPanelByName(e, t = (() => {})) {
if (this.panelStack) {
this.panelStack.node.setSiblingIndex(this.node.childrenCount - 1);
this.panelStack.OpenByName(e, t);
} else this.initPanelStack().then(o => {
o.node.setSiblingIndex(this.node.childrenCount - 1);
o.OpenByName(e, t);
});
}
PopPanel() {
this.panelStack && h.default.ins.popPanel();
}
initPanelQueue() {
if (!this.panelQueuePromise) {
h.default.ins.blockInput.node.active = !0;
this.panelQueuePromise = new Promise(e => n(this, void 0, void 0, function*() {
if (this.panelQueue) {
h.default.ins.blockInput.node.active = !1;
e(this.panelQueue);
} else {
let t = yield c.Util.loadBundleRes("Prefab/PanelQueue");
h.default.ins.blockInput.node.active = !1;
let o = cc.instantiate(t);
this.node.addChild(o);
this.panelQueue = o.getComponent(d.default);
this.panelQueue.scene = this;
e(this.panelQueue);
}
}));
}
return this.panelQueuePromise;
}
pushPanel(e, t = null, o = !1) {
if (this.panelQueue) {
this.panelQueue.node.setSiblingIndex(this.node.childrenCount - 1);
this.panelQueue.pushPanel(e, t, o);
} else this.initPanelQueue().then(i => {
i.node.setSiblingIndex(this.node.childrenCount - 1);
i.pushPanel(e, t, o);
});
}
pushCall(e = null, t = !1) {
if (this.panelQueue) {
this.panelQueue.node.setSiblingIndex(this.node.childrenCount - 1);
this.panelQueue.pushCall(e, t);
} else this.initPanelQueue().then(o => {
o.node.setSiblingIndex(this.node.childrenCount - 1);
o.pushCall(e, t);
});
}
checkNextPanel() {
if (this.panelQueue) {
this.panelQueue.node.setSiblingIndex(this.node.childrenCount - 1);
this.panelQueue.checkNext();
} else this.initPanelQueue().then(e => {
e.node.setSiblingIndex(this.node.childrenCount - 1);
e.checkNext();
});
}
closeCurPanel() {
this.panelQueue && this.panelQueue.node.active && this.checkNextPanel();
this.panelStack && this.panelStack.node.active && this.PopPanel();
}
closeAllPanel() {
var e, t;
null === (e = this.panelQueue) || void 0 === e || e.node.destroy();
null === (t = this.panelStack) || void 0 === t || t.node.destroy();
this.panelQueue = null;
this.panelStack = null;
}
};
p = i([ a ], p);
o.default = p;
cc._RF.pop();
}, {
"./DataBind": "DataBind",
"./PanelQueue": "PanelQueue",
"./PanelStack": "PanelStack",
"./SceneManager": "SceneManager",
"./Util": "Util"
} ],
ScorePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef822xgH1FGrq/j/pPiKR+Q", "ScorePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/Panel"), s = e("../../Frame/UIColor"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.tipLabel = null;
this.starBtn = null;
this.okBtn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.onOkBtn, this);
let e = this.starBtn.node.parent, t = [ "额...", "还行", "平均水平", "好玩", "精品！" ];
this.okBtn.node.active = !1;
r.Util.makeBro(this.starBtn.node, t.length, (o, i) => {
o.on(n.default.CLICK, () => {
for (let o = 0; o < t.length; o++) e.children[o].color = o <= i ? s.UIColor.yellow : s.UIColor.gray;
this.tipLabel.string = t[i];
this.okBtn.node.active = !0;
});
});
}
onOkBtn() {
this.closePanel();
this.call && this.call();
}
};
i([ c(cc.Label) ], d.prototype, "titleLabel", void 0);
i([ c(cc.Label) ], d.prototype, "tipLabel", void 0);
i([ c(n.default) ], d.prototype, "starBtn", void 0);
i([ c(n.default) ], d.prototype, "okBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util"
} ],
ScreenRect: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d8589yRxJxCcKP0ToQiLkcb", "ScreenRect");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: s, property: r} = cc._decorator;
let l = i = class extends cc.Component {
constructor() {
super(...arguments);
this.canvas = null;
this.menuBtnPos = null;
}
onLoad() {
return a(this, void 0, void 0, function*() {
this.node.width = this.canvas.designResolution.width;
this.node.height = this.canvas.designResolution.height;
let e = cc.winSize, t = this.node.height / this.node.width, o = e.height / e.width;
if (o < t) this.node.scale = o / t; else {
this.node.height = e.height;
this.node.width = e.width;
}
i.width = this.node.width;
i.height = this.node.height;
i.Ins = this;
});
}
};
l.Ins = null;
l.width = 1334;
l.height = 750;
n([ r(cc.Canvas) ], l.prototype, "canvas", void 0);
n([ r(cc.Node) ], l.prototype, "menuBtnPos", void 0);
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {} ],
ScrollListItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0afe52CiHpAB6wKML56lFsI", "ScrollListItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.ScrollView {};
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
ScrollList: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8e08eQY6CVJEL2v0fGzBOBG", "ScrollList");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ExtraData = void 0;
const {ccclass: a, menu: s, property: r} = cc._decorator;
var l;
(function(e) {
e[e.Hor = 0] = "Hor";
e[e.Ver = 1] = "Ver";
e[e.Grid = 2] = "Grid";
})(l || (l = {}));
class c {
constructor() {
this.data = null;
this.prefab = null;
this.item = null;
this.x = 0;
this.y = 0;
this.top = 0;
this.bottom = 0;
this.left = 0;
this.right = 0;
}
}
o.ExtraData = c;
let d = i = class extends cc.ScrollView {
constructor() {
super(...arguments);
this.paddingLeft = 0;
this.paddingRight = 0;
this.paddingTop = 0;
this.paddingBottom = 0;
this.spacingX = 0;
this.spacingY = 0;
this.layoutType = l.Hor;
this.autoCenter = !1;
this.emitContentMove = !1;
this.prefabs = [];
this.mask = null;
this.dataArr = [];
this.extraArr = [];
this._offset = null;
this._pos = null;
this._isDirty = !0;
this.lastStartIdx = -1;
this.lastEndIdx = -1;
this.getPrefabName = () => this.prefabs[0].name;
this.calculateSizeFunc = (e, t) => ({
w: t.prefab.width,
h: t.prefab.height
});
this.canSelect = () => !0;
this.pools = new Map();
this.curSelectIdx = -1;
}
onLoad() {
for (let e = 0; e < this.prefabs.length; e++) this.prefabs[e].active = !1;
this.node.on("scrolling", this.onScrolling, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd3, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd3, this);
}
onTouchEnd3() {
if (this.autoCenter) {
let e = this.getScrollOffset();
if (this.layoutType == l.Ver) {
let t = -e.y + this.mask.node.height / 2, o = 1e5, i = 0;
for (let e = 0; e < this.extraArr.length; e++) {
let n = this.extraArr[e], a = Math.abs(n.y - t);
if (a < o) {
o = a;
i = e;
}
}
this.centerToIdx(i, .3);
} else if (this.layoutType == l.Hor) {
let t = -e.x + this.mask.node.width / 2, o = 1e5, i = 0;
for (let e = 0; e < this.extraArr.length; e++) {
let n = this.extraArr[e], a = Math.abs(n.x - t);
if (a < o) {
o = a;
i = e;
}
}
this.centerToIdx(i, .3);
}
}
}
onDisable() {
this._pos = this.content.getPosition();
this._offset = this.getScrollOffset();
super.onDisable();
}
onEnable() {
super.onEnable();
this._offset && this.scheduleOnce(() => {
console.log(`setContentPosition ${this._offset}`);
this.content.setPosition(this._pos);
this.scrollToOffset(this._offset, 0);
this._isDirty = !0;
});
}
onScrolling() {
this.scheduleOnce(() => {
this._isDirty = !0;
});
}
update(e) {
super.update(e);
if (this._isDirty) {
this.updateList();
this._isDirty = !1;
}
}
updateList() {
let e = this.getScrollOffset(), t = -1, o = -1;
for (let i = 0; i < this.extraArr.length; i++) {
let n = this.extraArr[i];
if (this.layoutType == l.Ver) {
-n.bottom > e.y && -1 == t && (t = i);
-n.top < e.y + this.mask.node.height && (o = i);
} else if (this.layoutType == l.Hor) {
n.right > -e.x && -1 == t && (t = i);
n.left < -e.x + this.mask.node.width && (o = i);
} else {
-n.bottom > e.y && -1 == t && (t = i);
-n.top < e.y + this.mask.node.height && (o = i);
}
}
if (this.lastStartIdx !== t || this.lastEndIdx !== o) {
this.lastStartIdx = t;
this.lastEndIdx = o;
for (let e = 0; e < this.dataArr.length; e++) {
let n = this.dataArr[e], a = this.extraArr[e];
if (a) if (e >= t && e <= o) {
if (!a.item) {
a.item = this.newItem(a.prefab);
a.item.x = a.x;
a.item.y = a.y;
a.item.emit(i.SET_DATA, n);
a.item.emit(i.ITEM_STATE_CHANGE, e == this.curSelectIdx);
}
} else if (a.item) {
this.returnPool(a.prefab, a.item);
a.item = null;
}
}
}
if (this.emitContentMove) {
let t = e.sub(cc.v2(this.mask.node.width / 2, this.mask.node.height / 2));
for (let e = 0; e < this.extraArr.length; e++) {
let o = this.extraArr[e];
o.item && o.item.emit(i.CONTENT_MOVE, t);
}
}
}
setDataArr(e) {
this.reset();
e = e || [];
this.dataArr = e;
for (;this.extraArr.length < e.length; ) this.extraArr.push(new c());
let t = this.paddingTop, o = this.paddingLeft, i = 0;
for (let n = 0; n < e.length; n++) {
let a = e[n], s = this.extraArr[n];
s.data = a;
let r = this.getPrefabName(a, s);
for (let e = 0; e < this.prefabs.length; e++) if (this.prefabs[e].name == r) {
s.prefab = this.prefabs[e];
break;
}
let c = this.calculateSizeFunc(a, s);
if (this.layoutType == l.Ver) {
s.top = -t;
t += (1 - s.prefab.anchorY) * c.h;
s.x = 0;
s.y = -t;
t += s.prefab.anchorY * c.h;
s.bottom = -t;
t += this.spacingY;
} else if (this.layoutType == l.Hor) {
s.left = o;
o += (1 - s.prefab.anchorX) * c.w;
s.x = o;
o += s.prefab.anchorX * c.w;
s.right = o;
o += this.spacingX;
} else {
if (this.mask.node.width - o - this.paddingRight < c.w) {
o = this.paddingLeft;
i = (t += c.h + this.spacingY) + c.h + this.paddingBottom;
}
s.top = -t;
s.bottom = -c.h - t;
s.y = -t - (1 - s.prefab.anchorY) * c.h;
s.left = o;
o += (1 - s.prefab.anchorX) * c.w;
s.x = o;
o += s.prefab.anchorX * c.w;
s.right = o;
o += this.spacingX;
}
}
if (this.layoutType == l.Ver) {
t += this.paddingBottom;
this.content.height = t;
} else if (this.layoutType == l.Hor) {
o += this.paddingRight;
this.content.width = o;
} else {
this.content.width = this.mask.node.width;
this.content.height = i;
}
this.scheduleOnce(() => {
this._isDirty = !0;
});
}
reset() {
this.lastStartIdx = -1;
this.lastEndIdx = -1;
for (let e = 0; e < this.extraArr.length; e++) {
let t = this.extraArr[e];
if (t.item) {
this.returnPool(t.prefab, t.item);
t.item = null;
}
}
}
centerToIdx(e, t) {
if (this.layoutType == l.Ver) if (e < 0) this.scrollTo(cc.v2(1, 1), t); else if (e >= this.extraArr.length) this.scrollTo(cc.v2(0, 0), t); else {
let o = 1 - (-this.extraArr[e].top - this.mask.node.height / 2) / (this.content.height - this.mask.node.height);
this.scrollTo(cc.v2(0, o), t);
} else if (this.layoutType == l.Hor) if (e < 0) this.scrollTo(cc.v2(0, 0), t); else if (e >= this.extraArr.length) this.scrollTo(cc.v2(1, 1), t); else {
let o = (this.extraArr[e].x - this.mask.node.width / 2) / (this.content.width - this.mask.node.width);
this.scrollTo(cc.v2(o, 0), t);
}
}
newItem(e) {
let t = this.pools.get(e) || [];
this.pools.set(e, t);
let o = null;
if (t.length > 0) o = t.shift(); else {
o = cc.instantiate(e);
this.content.addChild(o);
o.on("click", this.onItemTap, this);
}
o.active = !0;
this.layoutType == l.Ver ? o.x = 0 : this.layoutType == l.Hor && (o.y = 0);
return o;
}
returnPool(e, t) {
let o = this.pools.get(e) || [];
this.pools.set(e, o);
o.push(t);
t.active = !1;
this.layoutType == l.Ver ? t.x = -1e5 : this.layoutType == l.Hor ? t.y = -1e5 : t.x = t.y = -1e5;
}
onItemTap(e) {
let t = e.target, o = this.extraArr, n = this.dataArr;
for (let e = 0; e < n.length; e++) {
let a = n[e], s = o[e];
if (s.item == t) {
this.canSelect(a, s) && this.selectByIdx(e);
this.node.emit(i.CLICK_ITEM, e, a);
}
}
}
selectByIdx(e) {
if (this.curSelectIdx >= 0 && this.curSelectIdx < this.extraArr.length) {
let e = this.extraArr[this.curSelectIdx];
e.item && e.item.emit(i.ITEM_STATE_CHANGE, !1);
}
this.curSelectIdx != e && this.node.emit(i.SELECT_ITEM, e, this.dataArr[e]);
this.curSelectIdx = e;
let t = this.extraArr[e];
t && t.item && t.item.emit(i.ITEM_STATE_CHANGE, !0);
}
getCurData() {
return this.dataArr[this.curSelectIdx];
}
getExtraData(e) {
return this.extraArr[e];
}
getDataArr() {
return this.dataArr;
}
};
d.SET_DATA = "SET_DATA";
d.CONTENT_MOVE = "CONTENT_MOVE";
d.ITEM_STATE_CHANGE = "ITEM_STATE_CHANGE";
d.SELECT_ITEM = "SELECT_ITEM";
d.CLICK_ITEM = "CLICK_ITEM";
n([ r ], d.prototype, "paddingLeft", void 0);
n([ r ], d.prototype, "paddingRight", void 0);
n([ r ], d.prototype, "paddingTop", void 0);
n([ r ], d.prototype, "paddingBottom", void 0);
n([ r ], d.prototype, "spacingX", void 0);
n([ r ], d.prototype, "spacingY", void 0);
n([ r({
type: cc.Enum(l),
displayName: "LayoutType"
}) ], d.prototype, "layoutType", void 0);
n([ r ], d.prototype, "autoCenter", void 0);
n([ r ], d.prototype, "emitContentMove", void 0);
n([ r({
type: [ cc.Node ]
}) ], d.prototype, "prefabs", void 0);
n([ r(cc.Mask) ], d.prototype, "mask", void 0);
d = i = n([ a, s("自定义UI/ScrollList") ], d);
o.default = d;
cc._RF.pop();
}, {} ],
SearchGameComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e5842bLZV9JOq45B7fdiQ5p", "SearchGameComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../CustomUI/Button"), l = e("../../Frame/CrossPlatform"), c = e("../../Frame/NetworkMgr"), d = e("../../Frame/SceneManager"), h = e("../../Frame/Top"), p = e("../../Frame/Util"), u = e("../../Game/Player/CreditMng"), m = e("../../Game/Player/DynamicMng"), f = e("../../Game/Player/GameCellDataMng"), {ccclass: g, property: y} = cc._decorator;
let v = class extends cc.Component {
constructor() {
super(...arguments);
this.block = null;
this.editBox = null;
this.searchHelp = null;
this.searchGameBtn = null;
this.searchRoleBtn = null;
this.oldSearchLabel = null;
this.clearSearchBtn = null;
this.oldSearchBtn = null;
}
onLoad() {
this.searchGameBtn.node.on(r.default.CLICK, this.onSearchGameBtn, this);
this.searchRoleBtn.node.on(r.default.CLICK, this.onSearchRoleBtn, this);
this.clearSearchBtn.node.on(r.default.CLICK, this.onClearSearchBtn, this);
this.block.on(cc.Node.EventType.TOUCH_END, this.onClickBlock, this);
}
start() {
this.showSearchHelp(!1);
}
onClickBlock() {
l.crossPlatform.hideKeyboard({});
this.showSearchHelp(!1);
}
showSearchHelp(e) {
this.searchHelp.active = e;
this.block.active = e;
}
onSearchBagin(e) {
return n(this, void 0, void 0, function*() {
this.showSearchHelp(!0);
this.block.active = !0;
this.onTextChange(this.editBox.textLabel.string);
let e = l.crossPlatform.getStorageSync("oldSearchList") || [];
this.oldSearchLabel.node.active = e.length > 0;
this.oldSearchBtn.node.parent.active = e.length > 0;
p.Util.makeBro(this.oldSearchBtn.node, e.length, (t, o) => {
let i = t.getComponent(r.default);
i.label.string = p.Util.clampStr(e[o], 15, "..");
i.node.off(r.default.CLICK, this.onOldSearchBtn, this);
i.node.on(r.default.CLICK, this.onOldSearchBtn, this);
});
});
}
onTextChange(e) {
return n(this, void 0, void 0, function*() {
this.searchGameBtn.label.string = a.I18nMgr.exceI18nStringByZh('查找"${Util.clampStr(str, 10, "..")}"相关的游戏', [ {
paramName: 'Util.clampStr(str, 10, "..")',
param: p.Util.clampStr(e, 10, "..")
} ]);
this.searchRoleBtn.label.string = a.I18nMgr.exceI18nStringByZh('查找"${Util.clampStr(str, 10, "..")}"相关的玩家', [ {
paramName: 'Util.clampStr(str, 10, "..")',
param: p.Util.clampStr(e, 10, "..")
} ]);
this.searchGameBtn.node.active = !!e;
this.searchRoleBtn.node.active = !!e;
});
}
onSearchEnd(e) {
return n(this, void 0, void 0, function*() {
this.showSearchHelp(!1);
this.searchGame(e.textLabel.string);
});
}
onSearchGameBtn() {
l.crossPlatform.hideKeyboard({});
this.showSearchHelp(!1);
let e = this.editBox.textLabel.string;
this.searchGame(e);
}
onSearchRoleBtn() {
l.crossPlatform.hideKeyboard({});
this.showSearchHelp(!1);
let e = this.editBox.textLabel.string;
this.searchRole(e);
}
onOldSearchBtn(e) {
this.showSearchHelp(!1);
let t = e.target.getComponent(r.default);
this.searchGame(t.label.string);
}
onClearSearchBtn() {
l.crossPlatform.removeStorageSync("oldSearchList");
p.Util.makeBro(this.oldSearchBtn.node, 0);
this.oldSearchLabel.node.active = !1;
}
searchGame(e) {
return n(this, void 0, void 0, function*() {
this.showSearchHelp(!1);
if (u.CreditMng.Ins.credit <= 1) {
h.default.showToast("近期违规，不可搜索游戏");
return;
}
let t = [];
if (e) if (m.DynamicMng.Ins.isInspectVersion()) f.default.Ins.cache.forEach(o => {
o.name.includes(e) && t.push(o);
}); else {
h.default.showLoading("搜索中");
let o = {
searchName: e,
start: 0,
end: 15
}, i = yield c.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchGame,
params: o
}, s.Game_RSearchGame);
i && (t = i.gameDatas);
h.default.hideLoading();
}
if (t && t.length > 0) {
let o = l.crossPlatform.getStorageSync("oldSearchList") || [], i = o.indexOf(e);
i >= 0 && o.splice(i, 1);
o.unshift(e);
o = o.slice(0, 8);
l.crossPlatform.setStorageSync("oldSearchList", o);
d.default.ins.Enter("GameListScene", o => {
o.setData({
title: "搜索游戏",
games: t,
from: "search",
appendFunc: () => n(this, void 0, void 0, function*() {
let o = t.length, i = {
searchName: e,
start: o,
end: o + 15
}, n = yield c.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchGame,
params: i
}, s.Game_RSearchGame);
return n ? n.gameDatas : [];
})
});
});
} else h.default.showToast("找不到游戏");
});
}
searchRole(e) {
return n(this, void 0, void 0, function*() {
if (m.DynamicMng.Ins.isInspectVersion()) {
h.default.showToast("找不到玩家");
return;
}
let t = [];
if (e) {
h.default.showLoading("搜索中");
let o = {
searchName: e,
start: 0,
end: 15
}, i = yield c.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchRole,
params: o
}, s.Game_RSearchRole);
i && (t = i.roleDatas);
h.default.hideLoading();
}
t && t.length > 0 ? d.default.ins.Enter("RoleListScene", o => {
o.setData({
title: "搜索玩家",
roles: t,
from: "search",
appendFunc: () => n(this, void 0, void 0, function*() {
let o = t.length, i = {
searchName: e,
start: o,
end: o + 15
}, n = yield c.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchRole,
params: i
}, s.Game_RSearchGame);
return n ? n.roleDatas : [];
})
});
}) : h.default.showToast("找不到玩家");
});
}
};
i([ y(cc.Node) ], v.prototype, "block", void 0);
i([ y(cc.EditBox) ], v.prototype, "editBox", void 0);
i([ y(cc.Node) ], v.prototype, "searchHelp", void 0);
i([ y(r.default) ], v.prototype, "searchGameBtn", void 0);
i([ y(r.default) ], v.prototype, "searchRoleBtn", void 0);
i([ y(cc.Label) ], v.prototype, "oldSearchLabel", void 0);
i([ y(r.default) ], v.prototype, "clearSearchBtn", void 0);
i([ y(r.default) ], v.prototype, "oldSearchBtn", void 0);
v = i([ g ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/GameCellDataMng": "GameCellDataMng"
} ],
SearchTalkComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f3f5cUv9xxKN4DHJzjCQFBt", "SearchTalkComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/CrossPlatform"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/Top"), d = e("../../Frame/Util"), h = e("../../Game/Player/CreditMng"), p = e("../../Game/Player/DynamicMng"), {ccclass: u, property: m} = cc._decorator;
let f = class extends cc.Component {
constructor() {
super(...arguments);
this.block = null;
this.editBox = null;
this.searchHelp = null;
this.oldSearchLabel = null;
this.clearSearchBtn = null;
this.oldSearchBtn = null;
this.closeBtn = null;
}
onLoad() {
this.clearSearchBtn.node.on(s.default.CLICK, this.onClearSearchBtn, this);
this.closeBtn.node.on(s.default.CLICK, this.closeSearch, this);
this.block.on(cc.Node.EventType.TOUCH_END, this.onClickBlock, this);
this.closeSearch();
}
start() {
this.showSearchHelp(!1);
}
closeSearch() {
this.showSearchHelp(!1);
r.crossPlatform.hideKeyboard({});
this.editBox.string = "";
this.closeBtn.node.active = !1;
}
onClickBlock() {
r.crossPlatform.hideKeyboard({});
this.showSearchHelp(!1);
}
showSearchHelp(e) {
this.searchHelp.active = e;
this.block.active = e;
}
onSearchBagin(e) {
return n(this, void 0, void 0, function*() {
this.showSearchHelp(!0);
this.block.active = !0;
this.closeBtn.node.active = !0;
let e = r.crossPlatform.getStorageSync("oldSearchTalkList") || [];
this.oldSearchLabel.node.active = e.length > 0;
this.oldSearchBtn.node.parent.active = e.length > 0;
d.Util.makeBro(this.oldSearchBtn.node, e.length, (t, o) => {
let i = t.getComponent(s.default);
i.label.string = d.Util.clampStr(e[o], 15, "..");
i.node.off(s.default.CLICK, this.onOldSearchBtn, this);
i.node.on(s.default.CLICK, this.onOldSearchBtn, this);
});
});
}
onSearchEnd(e) {
return n(this, void 0, void 0, function*() {
this.closeBtn.node.active = !1;
this.showSearchHelp(!1);
this.searchTalk(e.textLabel.string);
});
}
onOldSearchBtn(e) {
this.showSearchHelp(!1);
let t = e.target.getComponent(s.default);
this.editBox.string = t.label.string;
this.searchTalk(t.label.string);
}
onClearSearchBtn() {
r.crossPlatform.removeStorageSync("oldSearchTalkList");
d.Util.makeBro(this.oldSearchBtn.node, 0);
this.oldSearchLabel.node.active = !1;
}
searchTalk(e) {
return n(this, void 0, void 0, function*() {
this.showSearchHelp(!1);
if (h.CreditMng.Ins.credit <= 1) {
c.default.showToast("近期违规，不可搜索帖子");
return;
}
let t = [];
if (e) if (p.DynamicMng.Ins.isInspectVersion()) t = []; else {
c.default.showLoading("搜索中");
let o = {
searchName: e,
start: 0,
end: 15
}, i = yield l.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SearchTalk,
params: o
}, a.Game_RSearchTalk);
i && (t = i.talkList);
c.default.hideLoading();
}
if (t && t.length > 0) {
let o = r.crossPlatform.getStorageSync("oldSearchTalkList") || [], i = o.indexOf(e);
i >= 0 && o.splice(i, 1);
o.unshift(e);
o = o.slice(0, 8);
r.crossPlatform.setStorageSync("oldSearchTalkList", o);
console.log(t);
} else c.default.showToast("找不到帖子");
});
}
};
i([ m(cc.Node) ], f.prototype, "block", void 0);
i([ m(cc.EditBox) ], f.prototype, "editBox", void 0);
i([ m(cc.Node) ], f.prototype, "searchHelp", void 0);
i([ m(cc.Label) ], f.prototype, "oldSearchLabel", void 0);
i([ m(s.default) ], f.prototype, "clearSearchBtn", void 0);
i([ m(s.default) ], f.prototype, "oldSearchBtn", void 0);
i([ m(s.default) ], f.prototype, "closeBtn", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/CreditMng": "CreditMng",
"../../Game/Player/DynamicMng": "DynamicMng"
} ],
SelectAIPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f3a3fGOYtpN7YflWFXvWb8z", "SelectAIPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends s.default {
constructor() {
super(...arguments);
this.btn = null;
this.selectCall = null;
}
openAnim(e) {
super.openAnim(() => {
e && e();
cc.game.emit(i.SelectAIPanel_Opend, this);
});
}
setData(e, t) {
r.Util.makeBro(this.btn.node, e.length, (t, o) => {
let n = t.getComponent(a.default), s = e[o];
n.label.string = s.str;
n.node.on(a.default.CLICK, () => {
this.closePanel();
this.selectCall && this.selectCall(s);
cc.game.emit(i.SelectAIPanel_Close, this);
});
});
}
};
d.SelectAIPanel_Opend = "SelectAIPanel_Opend";
d.SelectAIPanel_Close = "SelectAIPanel_Close";
n([ c(a.default) ], d.prototype, "btn", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util"
} ],
SelectActorCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8a9f0K/LydKQbkAAQ0U4shN", "SelectActorCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield s.Mng.Ins.actorMng.loadOne(e.id);
s.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 150);
});
}
};
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
SelectActorPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ad4b2pKZQhD2aRoNFmuEDew", "SelectActorPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Config"), r = e("../../Frame/Panel"), l = e("../../Game/Player/Mng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.selectCall = null;
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield l.Mng.Ins.actorMng.loadAll(), o = s.Config.actorConfs.filter(e => !e.disuse), i = t.concat(o);
this.list.setDataArr(i);
this.list.node.on(a.default.CLICK_ITEM, this.onClickCell, this);
let n = i.findIndex(t => t.id == e);
this.list.selectByIdx(n);
});
}
onClickCell(e, t) {
this.closePanel();
this.selectCall && this.selectCall(t);
}
};
i([ d(a.default) ], h.prototype, "list", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Game/Player/Mng": "Mng"
} ],
SelectBulletPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7f4b4vZi0RDGaw+IzzIDTdz", "SelectBulletPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Game/OperationFlow"), d = e("../../Game/Player/DynamicMng"), h = e("../../Game/Player/Mng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.list = null;
this.okBtn = null;
this.selectCall = null;
}
onLoad() {
super.onLoad();
cc.game.on("refreshBulletList", this.refreshList, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickCell, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
onDestroy() {
cc.game.off("refreshBulletList", this.refreshList, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e);
});
}
select(e) {
let t = this.list.getDataArr();
for (let o = 0; o < t.length; o++) if (t[o].id == e) {
this.list.selectByIdx(o);
break;
}
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = yield h.Mng.Ins.bulletMng.loadAll(), t = [];
d.DynamicMng.Ins.isDisable(d.FunctionEnum.PaintAsset, !1) || t.push({
createNew: !0
});
t = (t = t.concat(e)).concat(r.Config.bulletConfs);
this.list.setDataArr(t);
});
}
onClickCell(e, t) {
t.createNew && c.OperationFlow.paintBullet(e => n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e);
}));
}
onOkBtn() {
this.closePanel();
let e = this.list.getCurData();
this.selectCall && this.selectCall(e);
}
};
i([ u(s.default) ], m.prototype, "list", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/Mng": "Mng"
} ],
SelectCreativeWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2a28bobsfBMTraT0HYyA5k1", "SelectCreativeWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/Toggle"), r = e("../../Frame/Panel"), l = e("../../Frame/Util"), {ccclass: c, property: d} = cc._decorator;
let h = class extends r.default {
constructor() {
super(...arguments);
this.mainToggle = null;
this.toggle = null;
this.tipLabel = null;
this.okBtn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.mainToggle.node.on(a.default.CLICK, this.onMainToggle, this);
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
l.Util.makeBro(this.toggle.node, e.length, (o, i) => {
let n = e[i], a = o.getComponent(s.default);
a.label.string = l.Util.clampStr(n.info.name, 10, "..");
a.worldId = n.id;
a.node.on(s.default.STATE_CHANGE, this.onToggleState, this);
t.isOpenAll ? a.isChecked = !0 : t.isClose ? a.isChecked = !1 : a.isChecked = t.openWorldIds.includes(n.id);
});
this.updateTip();
});
}
onMainToggle() {
let e = this.toggle.node.parent.getComponentsInChildren(s.default);
if (e.every(e => e.isChecked)) {
e.forEach(e => {
e.isChecked = !1;
});
this.mainToggle.icon.node.active = !1;
} else {
e.forEach(e => {
e.isChecked = !0;
});
this.mainToggle.icon.node.active = !0;
}
this.updateTip();
}
onToggleState() {
let e = this.toggle.node.parent.getComponentsInChildren(s.default).every(e => e.isChecked);
this.mainToggle.icon.node.active = !!e;
this.updateTip();
}
updateTip() {
let e = this.toggle.node.parent.getComponentsInChildren(s.default).every(e => !e.isChecked);
this.tipLabel.string = e ? "全不勾选，代表关闭创意工坊功能。" : "共享以上地图，及地图中出现的素材。";
}
onOkBtn() {
this.closePanel();
let e = this.toggle.node.parent.getComponentsInChildren(s.default), t = e.every(e => e.isChecked), o = e.every(e => !e.isChecked), i = [];
e.forEach(e => {
e.isChecked && i.push(e.worldId);
});
this.call && this.call({
isOpenAll: t,
isClose: o,
openWorldIds: i
});
}
};
i([ d(a.default) ], h.prototype, "mainToggle", void 0);
i([ d(s.default) ], h.prototype, "toggle", void 0);
i([ d(cc.Label) ], h.prototype, "tipLabel", void 0);
i([ d(a.default) ], h.prototype, "okBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util"
} ],
SelectGameCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5b36ffBTn5IKLPAmsgS/cBj", "SelectGameCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/GameIcon"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.playLabel = null;
this.thumbLabel = null;
this.collectLabel = null;
this.hurryLabel = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
this.nameLabel.string = s.Util.clampStr(e.name, 12, "..");
this.playLabel.string = e.playCnt + "";
this.thumbLabel.string = e.thumbCnt + "";
this.collectLabel.string = e.collectionCnt + "";
this.hurryLabel.string = e.hurryCnt + "";
this.gameIcon.loadUrl(e.iconTextureName);
}
};
i([ l(n.default) ], c.prototype, "gameIcon", void 0);
i([ l(cc.Label) ], c.prototype, "nameLabel", void 0);
i([ l(cc.Label) ], c.prototype, "playLabel", void 0);
i([ l(cc.Label) ], c.prototype, "thumbLabel", void 0);
i([ l(cc.Label) ], c.prototype, "collectLabel", void 0);
i([ l(cc.Label) ], c.prototype, "hurryLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/GameIcon": "GameIcon",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util"
} ],
SelectGamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b7d2cdrB/9Iwo3329X5kUfF", "SelectGamePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Game/Player/CollectionMng"), h = e("../../Game/Player/Mng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.toggleGroup = null;
this.list = null;
this.emptyLabel = null;
this.call = null;
this.checkStatus = !1;
}
onLoad() {
super.onLoad();
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClick, this);
}
setData(e, t) {
this.checkStatus = e;
this.toggleGroup.toggleItems[1].node.active = t;
}
onToggleChange(e) {
return n(this, void 0, void 0, function*() {
let t = [];
t = 0 == e ? yield h.Mng.Ins.gameMng.loadAll() : yield d.CollectionMng.Ins.loadGames();
this.list.setDataArr(t);
this.emptyLabel.node.active = 0 == t.length;
});
}
onClick(e, t) {
if (t && this.checkStatus) switch (t.status) {
case a.GameStatus.noPublish:
c.default.showToast("此游戏未发布");
return;

case a.GameStatus.inReview:
c.default.showToast("此游戏正在审核中");
return;

case a.GameStatus.fail:
c.default.showToast("此游戏审核未通过");
return;

case a.GameStatus.off:
c.default.showToast("此游戏已下架");
return;
}
if (t) {
this.closePanel();
this.call && this.call(t.id);
}
}
};
i([ u(r.default) ], m.prototype, "toggleGroup", void 0);
i([ u(s.default) ], m.prototype, "list", void 0);
i([ u(cc.Label) ], m.prototype, "emptyLabel", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Player/CollectionMng": "CollectionMng",
"../../Game/Player/Mng": "Mng"
} ],
SelectGameRankCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "414bb85n05IhqZaQTqUlFpg", "SelectGameRankCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/UIColor"), h = e("../../Game/Player/GameRankMng"), p = e("../../Game/Player/Mng"), u = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.normalNode = null;
this.nameLabel = null;
this.typeLabel = null;
this.deleteBtn = null;
this.createNode = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.node.on(r.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.normalNode.active = !1;
this.createNode.active = !1;
if (e) {
this.normalNode.active = !0;
let t = "";
switch (e.cycleType) {
case a.GameRankCycleType.day:
t = "Daily rank";
break;

case a.GameRankCycleType.week:
t = "Weekly rank";
break;

case a.GameRankCycleType.month:
t = "Monthly rank";
break;

case a.GameRankCycleType.forever:
t = "Forever";
}
this.nameLabel.string = `${e.name}·${t}`;
switch (e.rankType) {
case h.GameRankType.ShortTime:
this.typeLabel.string = "用时最短榜";
break;

case h.GameRankType.LongTime:
this.typeLabel.string = "活得最久榜";
break;

case h.GameRankType.PropRank:
{
let t = yield p.Mng.Ins.propMng.loadOne(e.propId);
this.typeLabel.string = `道具榜（${(null == t ? void 0 : t.name) || "道具丢失"}）`;
break;
}

case h.GameRankType.CustomRank:
{
let t = yield p.Mng.Ins.variableMng.loadOne(e.variableId), o = e.sortType == a.GameRankSortType.asc ? "升序" : "降序";
this.typeLabel.string = `变量榜（${(null == t ? void 0 : t.name) || "变量丢失"}-${o}）`;
break;
}
}
} else this.createNode.active = !0;
});
}
onDeleteBtn() {
l.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "是否删除该排行榜？";
e.setLeftBtn({
text: "删除",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
let e = l.default.ins.findScene(u.default).gameData;
yield p.Mng.Ins.gameRankMng.delete(this.data, e);
cc.game.emit("refreshGameRankList");
c.default.showToast("已删除");
})
});
e.setRightBtn({
text: "点错了",
color: d.UIColor.blue
});
});
}
onStateChange(e) {
this.node.color = e && this.data ? d.UIColor.blue : cc.Color.WHITE;
}
};
i([ f(cc.Node) ], g.prototype, "normalNode", void 0);
i([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
i([ f(cc.Label) ], g.prototype, "typeLabel", void 0);
i([ f(s.default) ], g.prototype, "deleteBtn", void 0);
i([ f(cc.Node) ], g.prototype, "createNode", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/GameRankMng": "GameRankMng",
"../../Game/Player/Mng": "Mng",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
SelectGameRankPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "614efCcRJJJW4XgF0cuTLDs", "SelectGameRankPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Game/Player/Mng"), d = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: h, property: p} = cc._decorator;
let u = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.okBtn = null;
this.selectCall = null;
}
onLoad() {
super.onLoad();
this.list.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
this.list.canSelect = e => !!e;
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
cc.game.on("refreshGameRankList", this.refreshList, this);
}
onDestroy() {
cc.game.off("refreshGameRankList", this.refreshList, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e);
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = l.default.ins.findScene(d.default);
if (e) {
let t = e.gameData.gameRankIds, o = (yield c.Mng.Ins.gameRankMng.loadMany(t.concat(c.Mng.Ins.gameRankMng.extraIds))).concat(null);
this.list.setDataArr(o);
}
});
}
select(e) {
let t = this.list.getDataArr().findIndex(t => t && t.id == e);
t < 0 && (t = 0);
this.list.selectByIdx(t);
}
onClickItem(e, t) {
null == t && l.default.ins.OpenPanelByName("CreateGameRankPanel", e => {
e.toCreateStyle();
e.createCall = e => n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e.id);
});
});
}
onOkBtn() {
this.closePanel();
let e = null, t = this.list.getCurData();
t && (e = t.id);
this.selectCall && this.selectCall(e);
}
};
i([ p(s.default) ], u.prototype, "list", void 0);
i([ p(a.default) ], u.prototype, "okBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
SelectGameShopCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9896fVfxT1DSa9+pCXQ7RWY", "SelectGameShopCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Frame/Util"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.normalNode = null;
this.createNode = null;
this.actorSprite = null;
this.shopSprite = null;
this.nameLabel = null;
this.propSprite = null;
this.optionBtn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.normalNode.active = !1;
this.createNode.active = !1;
if (e) {
this.normalNode.active = !0;
this.nameLabel.string = e.name;
let t = yield d.Mng.Ins.actorMng.loadOne(e.actorId);
d.Mng.Ins.spriteMng.setActorSprite(this.actorSprite, t.textureName, 50);
d.Mng.Ins.spriteMng.setShopSprite(this.shopSprite, e.textureName, 120);
c.Util.makeBro(this.propSprite.node, e.goodses.length, (t, o) => n(this, void 0, void 0, function*() {
let i = e.goodses[o], n = yield d.Mng.Ins.propMng.loadOne(i.propId), a = t.getComponent(cc.Sprite);
d.Mng.Ins.spriteMng.setPropSprite(a, n.textureName, 60);
}));
} else this.createNode.active = !0;
});
}
onOptionBtn() {
r.default.ins.OpenPanelByName("CreateGameShopPanel", e => {
e.toEditStyle(this.data);
e.saveCall = e => {
this.setData(e);
};
});
}
onStateChange(e) {
this.node.color = e && this.data ? l.UIColor.blue : cc.Color.WHITE;
}
};
i([ p(cc.Node) ], u.prototype, "normalNode", void 0);
i([ p(cc.Node) ], u.prototype, "createNode", void 0);
i([ p(cc.Sprite) ], u.prototype, "actorSprite", void 0);
i([ p(cc.Sprite) ], u.prototype, "shopSprite", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Sprite) ], u.prototype, "propSprite", void 0);
i([ p(a.default) ], u.prototype, "optionBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
SelectGameShopPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2f420ZHWY5N/LFy1PYrdA8R", "SelectGameShopPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Util"), d = e("../../Game/Player/Mng"), h = e("../../Scene/EditWorldScene/EditWorldScene"), {ccclass: p, property: u} = cc._decorator;
let m = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.okBtn = null;
this.call = null;
this.evt = null;
}
onLoad() {
super.onLoad();
this.list.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
this.list.canSelect = e => !!e;
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
cc.game.on("refreshGameShopList", this.refreshList, this);
}
onDestroy() {
cc.game.off("refreshGameShopList", this.refreshList, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
e = c.Util.deepCopy(e);
this.evt = e;
e.extra || (e.extra = {
gameShopId: ""
});
if ("string" == typeof e.extra) {
let t = e.extra;
e.extra = {
gameShopId: t
};
}
let t = e.extra.gameShopId;
yield this.refreshList();
this.select(t);
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = l.default.ins.findScene(h.default);
if (e) {
let t = e.gameData.gameShopIds.concat(d.Mng.Ins.gameShopMng.extraIds), o = (yield d.Mng.Ins.gameShopMng.loadMany(t)).concat(null);
this.list.setDataArr(o);
}
});
}
select(e) {
let t = this.list.getDataArr().findIndex(t => t && t.id == e);
this.list.selectByIdx(t);
}
onClickItem(e, t) {
null == t && l.default.ins.OpenPanelByName("CreateGameShopPanel", e => {
e.toCreateStyle();
e.createCall = e => n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e.id);
});
});
}
onOkBtn() {
this.closePanel();
let e = this.list.getCurData();
e && (this.evt.extra.gameShopId = e.id);
this.call && this.call(this.evt);
}
};
i([ u(s.default) ], m.prototype, "list", void 0);
i([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Scene/EditWorldScene/EditWorldScene": "EditWorldScene"
} ],
SelectGizmos: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c870fyy/IJKhYWetvuhX+Ql", "SelectGizmos");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../Frame/Util"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.btn = null;
this.data = null;
}
show(e) {
this.data = e;
this.node.active = !0;
a.Util.makeBro(this.btn.node, e.nodes.length, (t, o) => {
let i = e.nodes[o], s = a.Util.convertPosition(i, t.parent);
t.position = s;
t.width = i.width;
t.height = i.height;
t.off(n.default.CLICK, this.onBtnTap, this);
t.on(n.default.CLICK, this.onBtnTap, this);
});
}
hide() {
this.node.active = !1;
}
onBtnTap(e) {
let t = e.target.getSiblingIndex();
this.data.call(t);
this.hide();
}
};
i([ r(n.default) ], l.prototype, "btn", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/Util": "Util"
} ],
SelectGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ef0eeJvjM1BG6Kul/4n8P/M", "SelectGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Util"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.priceLabel = null;
this.cntLabel = null;
this.goods = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.nameLabel.string = s.Util.clampStr(e.name, 12, "..");
this.priceLabel.string = e.price + "";
this.cntLabel.string = e.saleCnt + "";
r.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 180, 1);
});
}
};
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(cc.Label) ], d.prototype, "priceLabel", void 0);
i([ c(cc.Label) ], d.prototype, "cntLabel", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng"
} ],
SelectGoodsItemCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5575ae1TKpNcJYrpNUAUuwZ", "SelectGoodsItemCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Game/Player/Mng"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.sprite = null;
this.selectNode = null;
this.data = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.data = e;
this.nameLabel.string = e.name;
a.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120);
this.selectNode.active = e.selected;
}
};
i([ r(cc.Label) ], l.prototype, "nameLabel", void 0);
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
i([ r(cc.Node) ], l.prototype, "selectNode", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
SelectGoodsItemPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8f243/nvihOUKAl+FJSmum8", "SelectGoodsItemPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Game/Player/Mng"), h = e("../../Game/Player/ShopMng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.okBtn = null;
this.cntLabel = null;
this.toggleGroup = null;
this.scrollList = null;
this.call = null;
this.param = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleGroup, this);
this.scrollList.node.on(s.default.CLICK_ITEM, this.onClickGoodsCell, this);
}
setData(e) {
this.param = e;
this.refreshList();
this.refreshCnt();
}
selectToggle(e) {
this.toggleGroup.selectIdx(e);
}
onToggleGroup(e, t, o) {
o && this.refreshList();
}
onOkBtn() {
this.closePanel();
this.call && this.call();
}
onClickGoodsCell(e, t) {
let o = null, i = this.param;
switch (t.type) {
case "tile":
o = i.tileConfIds;
break;

case "actor":
o = i.actorConfIds;
break;

case "device":
o = i.deviceConfIds;
break;

case "prop":
o = i.propConfIds;
break;

case "weapon":
o = i.weaponConfIds;
}
if (o) {
if (t.selected) {
t.selected = !1;
let e = o.indexOf(t.id);
o.splice(e, 1);
this.refreshCnt();
} else if (this.getCnt() < h.default.Ins.packageSizeMax) {
t.selected = !0;
o.push(t.id);
this.refreshCnt();
} else c.default.showToast(`最多选择${h.default.Ins.packageSizeMax}个`);
let i = this.scrollList.getExtraData(e);
i.item && i.item.emit(s.default.SET_DATA, i.data);
}
}
getCnt() {
let e = this.param;
return e.tileConfIds.concat(e.actorConfIds).concat(e.deviceConfIds).concat(e.propConfIds).concat(e.weaponConfIds).length;
}
refreshCnt() {
let e = this.getCnt();
this.cntLabel.string = `Selected（${e}/${h.default.Ins.packageSizeMax}）`;
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = [];
switch (this.toggleGroup.idx) {
case 0:
{
let t = yield d.Mng.Ins.tileMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.goodsUId || i.importOthersImg || i.belongGameId || e.push({
type: "tile",
id: i.id,
name: i.name,
textureName: i.textureName,
selected: this.param.tileConfIds.includes(i.id)
});
}
break;
}

case 1:
{
let t = yield d.Mng.Ins.actorMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.goodsUId || i.importOthersImg || i.belongGameId || e.push({
type: "actor",
id: i.id,
name: i.name,
textureName: i.textureName,
selected: this.param.actorConfIds.includes(i.id)
});
}
break;
}

case 2:
{
let t = yield d.Mng.Ins.deviceMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.goodsUId || i.importOthersImg || i.belongGameId || e.push({
type: "device",
id: i.id,
name: i.name,
textureName: i.textureName,
selected: this.param.deviceConfIds.includes(i.id)
});
}
break;
}

case 3:
{
let t = yield d.Mng.Ins.propMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.goodsUId || i.importOthersImg || i.belongGameId || e.push({
type: "prop",
id: i.id,
name: i.name,
textureName: i.textureName,
selected: this.param.propConfIds.includes(i.id)
});
}
break;
}

case 4:
{
let t = yield d.Mng.Ins.weaponMng.loadAll();
for (let o = 0; o < t.length; o++) {
let i = t[o];
i.goodsUId || i.importOthersImg || i.belongGameId || e.push({
type: "weapon",
id: i.id,
name: i.name,
textureName: i.textureName,
selected: this.param.weaponConfIds.includes(i.id)
});
}
break;
}
}
this.scrollList.setDataArr(e);
});
}
};
i([ u(a.default) ], m.prototype, "okBtn", void 0);
i([ u(cc.Label) ], m.prototype, "cntLabel", void 0);
i([ u(r.default) ], m.prototype, "toggleGroup", void 0);
i([ u(s.default) ], m.prototype, "scrollList", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/ShopMng": "ShopMng"
} ],
SelectGoodsPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dd63eh5hMRKaZ4twQVPDKoe", "SelectGoodsPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Panel"), l = e("../../Frame/Top"), c = e("../../Game/Player/ShopMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends r.default {
constructor() {
super(...arguments);
this.list = null;
this.emptyLabel = null;
this.call = null;
this.checkStatus = !1;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.list.node.on(s.default.CLICK_ITEM, this.onClick, this);
let t = yield c.default.Ins.loadMyGoodsInfos();
this.list.setDataArr(t);
this.emptyLabel.node.active = 0 == t.length;
});
}
setData(e) {
this.checkStatus = e;
}
onClick(e, t) {
if (t && this.checkStatus) switch (t.status) {
case a.GoodsStatus.noPublish:
l.default.showToast("此商品未发布");
return;

case a.GoodsStatus.inReview:
l.default.showToast("此商品正在审核中");
return;

case a.GoodsStatus.fail:
l.default.showToast("此商品审核未通过");
return;

case a.GoodsStatus.off:
l.default.showToast("此商品已下架");
return;
}
if (t) {
this.closePanel();
this.call && this.call(t.id);
}
}
};
i([ h(s.default) ], p.prototype, "list", void 0);
i([ h(cc.Label) ], p.prototype, "emptyLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Player/ShopMng": "ShopMng"
} ],
SelectHeroCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f26c0zU7yNAI7DobSvQPp5j", "SelectHeroCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/UIColor"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.labelName = null;
this.teamLabel = null;
this.data = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.labelName.string = e.name;
r.Mng.Ins.spriteMng.setActorSprite(this.sprite, e.textureName, 130);
});
}
onStateChange(e) {
this.node.color = e ? s.UIColor.blue : s.UIColor.white;
}
};
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
i([ c(cc.Label) ], d.prototype, "labelName", void 0);
i([ c(cc.Label) ], d.prototype, "teamLabel", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
SelectHeroPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ae69bYWxLtAQZa6NzJWm2HS", "SelectHeroPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends l.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.list = null;
this.btnOk = null;
this.selectCall = null;
}
onLoad() {
super.onLoad();
this.btnOk.node.on(a.default.CLICK, this.onClickOk, this);
}
closeAnim(e = null) {
e && e();
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield c.Mng.Ins.actorMng.loadAll(), o = r.Config.actorConfs.filter(e => !e.disuse), i = t.concat(o);
this.list.setDataArr(i);
let n = 0;
e && "" != e && (n = i.findIndex(t => t.id == e)) < 0 && (n = 0);
this.list.selectByIdx(n);
});
}
onClickOk() {
this.closePanel();
let e = this.list.getCurData();
e && this.selectCall && this.selectCall(e);
}
};
i([ h(cc.Label) ], p.prototype, "titleLabel", void 0);
i([ h(s.default) ], p.prototype, "list", void 0);
i([ h(a.default) ], p.prototype, "btnOk", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Game/Player/Mng": "Mng"
} ],
SelectImageCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fedc9SsX3JHc4WEqMrz1Glr", "SelectImageCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/UIColor"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.dot = null;
this.dotLabel = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
this.node.on(n.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
s.Mng.Ins.spriteMng.setSprite(this.sprite, e.url, 130);
if (e.goodsUId) {
this.dot.node.active = !0;
this.dotLabel.string = "商店素材";
} else if (e.importOthersImg) {
this.dot.node.active = !0;
this.dotLabel.string = "导入标记";
} else if (e.belongGameId) {
this.dot.node.active = !0;
this.dotLabel.string = "工坊素材";
} else this.dot.node.active = !1;
}
onStateChange(e) {
this.node.color = e ? a.UIColor.blue : a.UIColor.white;
}
};
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Sprite) ], c.prototype, "dot", void 0);
i([ l(cc.Label) ], c.prototype, "dotLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
SelectImagePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4898bWDm5xKEZiysxkn2LL1", "SelectImagePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/DropDownBox"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Game/GameEnv"), h = e("../../Game/Player/Mng"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.okBtn = null;
this.scrollList = null;
this.call = null;
this.dropDownBox = null;
this.emptyNode = null;
}
onLoad() {
const e = Object.create(null, {
onLoad: {
get: () => super.onLoad
}
});
return n(this, void 0, void 0, function*() {
e.onLoad.call(this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
this.dropDownBox.node.on(s.default.SELECT_CHANGE, this.onDropDownBoxSelect, this);
this.scrollList.node.on(r.default.SELECT_ITEM, (e, t) => {
console.log(d.gameEnv.fileCDN + t.url);
}, this);
this.init();
});
}
getConfDatas(e) {
let t = [];
e.forEach(e => {
e.isBuildIn || t.push({
url: e.textureName,
goodsUId: e.goodsUId,
importOthersImg: e.importOthersImg,
belongGameId: e.belongGameId
});
});
return t;
}
onDropDownBoxSelect(e, t) {
return n(this, void 0, void 0, function*() {
let e = [];
c.default.showLoading("加载中");
switch (t.type) {
case "all":
e = (e = (e = (e = (e = (e = yield h.Mng.Ins.tileMng.loadAll()).concat(yield h.Mng.Ins.actorMng.loadAll())).concat(yield h.Mng.Ins.deviceMng.loadAll())).concat(yield h.Mng.Ins.propMng.loadAll())).concat(yield h.Mng.Ins.weaponMng.loadAll())).concat(yield h.Mng.Ins.bulletMng.loadAll());
break;

case "tile":
e = yield h.Mng.Ins.tileMng.loadAll();
break;

case "actor":
e = yield h.Mng.Ins.actorMng.loadAll();
break;

case "device":
e = yield h.Mng.Ins.deviceMng.loadAll();
break;

case "prop":
e = yield h.Mng.Ins.propMng.loadAll();
break;

case "weapon":
e = yield h.Mng.Ins.weaponMng.loadAll();
break;

case "bullect":
e = yield h.Mng.Ins.bulletMng.loadAll();
}
let o = this.getConfDatas(e);
this.scrollList.setDataArr(o);
this.emptyNode.active = 0 == o.length;
c.default.hideLoading();
});
}
init() {
return n(this, void 0, void 0, function*() {
this.dropDownBox.setDataArr([ {
str: "全部素材",
type: "all"
}, {
str: "地块",
type: "tile"
}, {
str: "角色",
type: "actor"
}, {
str: "装置",
type: "device"
}, {
str: "道具",
type: "prop"
}, {
str: "武器",
type: "weapon"
}, {
str: "子弹",
type: "bullect"
} ]);
});
}
onOkBtn() {
this.closePanel();
let e = this.scrollList.getCurData();
if (e) {
let t = !!e.importOthersImg || !!e.goodsUId;
this.call && this.call(e.url, t, e.belongGameId);
}
}
};
i([ u(a.default) ], m.prototype, "okBtn", void 0);
i([ u(r.default) ], m.prototype, "scrollList", void 0);
i([ u(s.default) ], m.prototype, "dropDownBox", void 0);
i([ u(cc.Node) ], m.prototype, "emptyNode", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/GameEnv": "GameEnv",
"../../Game/Player/Mng": "Mng"
} ],
SelectPropCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a6855e25N9HaZIXNlEPL5xy", "SelectPropCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.propSprite = null;
this.normalNode = null;
this.createNew = null;
this.noProp = null;
this.optionBtn = null;
this.conf = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.createNew.active = !1;
this.noProp.active = !1;
this.normalNode.active = !1;
if (e.createNew) this.createNew.active = !0; else if (e.noProp) this.noProp.active = !0; else {
this.normalNode.active = !0;
c.Mng.Ins.spriteMng.setPropSprite(this.propSprite, e.textureName, 120);
}
});
}
onStateChange(e) {
this.node.color = e ? l.UIColor.blue : cc.Color.WHITE;
}
onOptionBtnTap() {
r.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ h(cc.Sprite) ], p.prototype, "propSprite", void 0);
i([ h(cc.Node) ], p.prototype, "normalNode", void 0);
i([ h(cc.Node) ], p.prototype, "createNew", void 0);
i([ h(cc.Node) ], p.prototype, "noProp", void 0);
i([ h(a.default) ], p.prototype, "optionBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
SelectPropPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11c27Iu91lDH7nvnVHkHc4a", "SelectPropPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Game/OperationFlow"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends l.default {
constructor() {
super(...arguments);
this.list = null;
this.okBtn = null;
this.selectCall = null;
}
onLoad() {
super.onLoad();
cc.game.on("refreshPropList", this.refreshList, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickCell, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
onDestroy() {
cc.game.off("refreshPropList", this.refreshList, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e);
});
}
select(e) {
let t = this.list.getDataArr();
for (let o = 0; o < t.length; o++) if (t[o].id == e) {
this.list.selectByIdx(o);
break;
}
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = yield d.Mng.Ins.propMng.loadAll(), t = [];
t.push({
createNew: !0
});
t = (t = t.concat(e)).concat(r.Config.propConfs);
this.list.setDataArr(t);
});
}
onClickCell(e, t) {
t.createNew && c.OperationFlow.paintProp(e => n(this, void 0, void 0, function*() {
yield this.refreshList();
this.select(e.id);
}));
}
onOkBtn() {
this.closePanel();
let e = this.list.getCurData();
this.selectCall && this.selectCall(e);
}
};
i([ p(s.default) ], u.prototype, "list", void 0);
i([ p(a.default) ], u.prototype, "okBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/Mng": "Mng"
} ],
SelectShareTypeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b2ccd7b3alFP61KeZHGYSKa", "SelectShareTypeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.icon = null;
this.labelName = null;
this.btnShare = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.labelName.string = e.name;
this.icon.spriteFrame = yield r.Util.loadBundleRes("Atlas/UI/" + e.icon, cc.SpriteFrame);
});
}
};
i([ c(cc.Sprite) ], d.prototype, "icon", void 0);
i([ c(cc.Label) ], d.prototype, "labelName", void 0);
i([ c(a.default) ], d.prototype, "btnShare", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util"
} ],
SelectSoundPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e12270RAPRJSq0qnUZ1SxLH", "SelectSoundPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Config"), c = e("../../Frame/Panel"), d = e("../../Frame/Sound"), h = e("../../Frame/Util"), {ccclass: p, property: u} = cc._decorator;
let m = i = class extends c.default {
constructor() {
super(...arguments);
this.list = null;
this.toggleGroup = null;
this.okBtn = null;
this.evt = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
onOpend() {
cc.game.emit(i.SelectSoundPanel_Opend, this);
}
setData(e) {
this.evt = h.Util.deepCopy(e);
this.evt.extra || (this.evt.extra = {
soundId: 31
});
let t = this.evt.extra.soundId, o = l.Config.soundConfs.find(e => e.id == t);
this.toggleGroup.selectIdx(o.type);
let i = this.list.getDataArr().findIndex(e => e.id == t);
this.list.selectByIdx(i);
}
onToggleChange(e) {
let t = e, o = l.Config.soundConfs.filter(e => e.type == t);
this.list.setDataArr(o);
}
onClickItem(e, t) {
d.Sound.play(t.url);
this.evt.extra.soundId = t.id;
cc.game.emit(i.SelectSoundPanel_Select);
}
onOkBtn() {
this.closePanel();
this.call && this.call(this.evt);
}
};
m.SelectSoundPanel_Opend = "SelectSoundPanel_Opend";
m.SelectSoundPanel_Select = "SelectSoundPanel_Select";
n([ u(s.default) ], m.prototype, "list", void 0);
n([ u(r.default) ], m.prototype, "toggleGroup", void 0);
n([ u(a.default) ], m.prototype, "okBtn", void 0);
m = i = n([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Frame/Sound": "Sound",
"../../Frame/Util": "Util"
} ],
SelectWeaponPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f6cb0183b5KYY+pAJrjyq0p", "SelectWeaponPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../CustomUI/ToggleGroup"), l = e("../../Frame/Config"), c = e("../../Frame/Panel"), d = e("../../Game/OperationFlow"), h = e("../../Game/Player/DynamicMng"), p = e("../../Game/Player/Mng"), u = e("../../GameData/GameTypeDefine"), {ccclass: m, property: f} = cc._decorator;
let g = class extends c.default {
constructor() {
super(...arguments);
this.listToggle = null;
this.list = null;
this.toggleGroup = null;
this.okBtn = null;
this.selectCall = null;
this._selectWeaponType = u.WeaponType.Gun;
}
onLoad() {
super.onLoad();
cc.game.on("refreshWeaponList", this.refreshList, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onClickType, this);
this.list.node.on(s.default.CLICK_ITEM, this.onClickCell, this);
this.okBtn.node.on(a.default.CLICK, this.onOkBtn, this);
}
onDestroy() {
cc.game.off("refreshWeaponList", this.refreshList, this);
}
onClickType(e, t, o) {
if (o) {
this._selectWeaponType = e;
this.refreshList();
}
}
setData(e) {
return n(this, void 0, void 0, function*() {
this._selGunId = e;
this.listToggle.setDataArr(l.Config.weaponTypeConfs);
let t = yield p.Mng.Ins.weaponMng.loadOne(e);
if (t) {
this._selectWeaponType = t.weaponType;
this.toggleGroup.selectIdx(this._selectWeaponType);
}
yield this.refreshList();
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = yield p.Mng.Ins.weaponMng.loadAll(), t = [];
h.DynamicMng.Ins.isDisable(h.FunctionEnum.PaintAsset, !1) || t.push({
createNew: !0
});
t.push({
noWeapon: !0,
id: "",
name: "无武器"
});
let o = [];
o = (o = o.concat(e)).concat(l.Config.weaponConfs);
for (let e of o) e && e.weaponType == this._selectWeaponType && t.push(e);
this.list.setDataArr(t);
let i = -1;
for (let e = 0; e < t.length; e++) if (t[e].id == this._selGunId) {
this.list.selectByIdx(e);
i = e;
break;
}
-1 == i && this.list.selectByIdx(-1);
});
}
onClickCell(e, t) {
t.createNew && d.OperationFlow.paintWeapon(this._selectWeaponType, e => {
this._selGunId = e;
this.refreshList();
});
}
onOkBtn() {
this.closePanel();
let e = this.list.getCurData();
this.selectCall && this.selectCall(e);
}
};
i([ f(s.default) ], g.prototype, "listToggle", void 0);
i([ f(s.default) ], g.prototype, "list", void 0);
i([ f(r.default) ], g.prototype, "toggleGroup", void 0);
i([ f(a.default) ], g.prototype, "okBtn", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
SelectWorldCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6f10dtUz81Ar6JfudVFV2o+", "SelectWorldCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/UIColor"), r = e("../../Game/Player/Mng"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield r.Mng.Ins.worldMng.loadOne(e);
this.nameLabel.string = t.info.name;
});
}
onStateChange(e) {
this.node.color = e ? s.UIColor.blue : cc.Color.WHITE;
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng"
} ],
SelectWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5c409Wk5jFNTK3LpepeRMjn", "SelectWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/Panel"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.list = null;
this.emptyNode = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.list.node.on(n.default.CLICK_ITEM, this.onClickItem, this);
}
setData(e, t) {
this.list.setDataArr(e);
this.emptyNode.active = 0 == e.length;
let o = e.indexOf(t);
o < 0 && (o = 0);
this.list.selectByIdx(o);
}
onClickItem(e, t) {
this.closePanel();
let o = this.list.getCurData();
this.call && this.call(o);
}
};
i([ r(n.default) ], l.prototype, "list", void 0);
i([ r(cc.Node) ], l.prototype, "emptyNode", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel"
} ],
SensitiveCheckCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4b276NpxXFJf7fJwr+P5MKD", "SensitiveCheckCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/UIColor"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
this.label = this.node.getComponent(cc.Label);
}
setData(e) {
this.label.string = e.str;
this.label.node.color = e.hasSens ? a.UIColor.red : a.UIColor.black;
console.log(e);
}
calcuHeight(e) {
this.label.string = e.str;
s.Util.updateLabel(this.label);
return this.label.node.height;
}
};
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util"
} ],
SensitiveCheckPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1f5daHZ33BMAaxERslbgAl4", "SensitiveCheckPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Panel"), r = e("../../Frame/Util"), l = e("./SensitiveCheckCell"), {ccclass: c, property: d} = cc._decorator;
let h = class extends s.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.sensLabel = null;
this.scrollList = null;
this.okBtn = null;
this.items = [];
this.sensitiveWords = [];
}
onLoad() {
super.onLoad();
this.okBtn.node.on(n.default.CLICK, this.closePanel, this);
this.scrollList.calculateSizeFunc = e => ({
w: 600,
h: this.scrollList.prefabs[0].getComponent(l.default).calcuHeight(e)
});
}
setData(e, t) {
this.items = e;
this.sensitiveWords = t;
this.sensLabel.string = "发现敏感词：" + t.join("，");
let o = [];
this.items.forEach(e => {
if (e.str) {
let i = e.str.toLowerCase().replace(/[\u3002|\uff1f|\uff01|\uff0c|\u3001|\uff1b|\uff1a|\u201c|\u201d|\u2018|\u2019|\uff08|\uff09|\u300a|\u300b|\u3008|\u3009|\u3010|\u3011|\u300e|\u300f|\u300c|\u300d|\ufe43|\ufe44|\u3014|\u3015|\u2026|\u2014|\uff5e|\ufe4f|\uffe5\ |\~|\`|\!|\@|\#|\$|\%|\^|\&amp;amp;amp;amp;amp;|\*|\(|\)|\-|\_|\+|\=|\||\\|\[|\]|\{|\}|\;|\:|\&amp;amp;amp;quot;|\'|\,|\&amp;amp;amp;amp;lt;|\.|\&amp;amp;amp;amp;gt;|\/|\?]/g, ""), n = !1;
for (let e = 0; e < t.length; e++) {
let o = t[e];
if (i.includes(o)) {
n = !0;
break;
}
}
o.push({
str: e.from + "：" + e.str,
hasSens: n
});
}
});
this.scrollList.setDataArr(o);
}
toAllTxtStyle() {
this.titleLabel.string = "所有文本";
this.sensLabel.node.active = !1;
this.scrollList.node.getComponent(cc.Widget).top = 120;
r.Util.updateAllWidget(this.scrollList.node);
}
};
i([ d(cc.Label) ], h.prototype, "titleLabel", void 0);
i([ d(cc.Label) ], h.prototype, "sensLabel", void 0);
i([ d(a.default) ], h.prototype, "scrollList", void 0);
i([ d(n.default) ], h.prototype, "okBtn", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/Util": "Util",
"./SensitiveCheckCell": "SensitiveCheckCell"
} ],
SettingPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "46f0ffzXBNH+r3z9ERiOx8J", "SettingPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Panel"), s = e("../../CustomUI/Toggle"), r = e("../../CustomUI/Button"), l = e("../../Frame/Vibrate"), c = e("../../Frame/Sound"), d = e("../../Frame/Music"), h = e("../../Frame/CrossPlatform"), p = e("../../CustomUI/HeadIcon"), u = e("../../Game/Hortor"), m = e("../../Frame/SceneManager"), f = e("../../Role"), g = e("../../Frame/Top"), y = e("../../../scripts/_autogen/cmd/cmd"), v = e("../../Frame/NetworkMgr"), C = e("../../../scripts/_autogen/data/data"), _ = e("../../Game/Player/DynamicMng"), {ccclass: S, property: I} = cc._decorator;
let G = class extends a.default {
constructor() {
super(...arguments);
this.soundSlider = null;
this.vibrateToggle = null;
this.btnExitAccount = null;
this.btnKeyAccount = null;
this.idCard = null;
this.btnLinkAccount = null;
this.headIcon = null;
this.labelId = null;
this.labelAccountType = null;
this.okBtn = null;
this.editBoxPassword = null;
this.setPasswordBtn = null;
this.passwordTipLabel = null;
this.passwordBox = null;
this.bottomLayout = null;
this.facebookBtn = null;
this.passwordIsOk = !1;
}
onLoad() {
super.onLoad();
this.soundSlider.progress = c.Sound.volume;
this.vibrateToggle.isChecked = l.Vibrate.enable;
this.closeCallback = () => {
c.Sound.volume = this.soundSlider.progress;
l.Vibrate.enable = this.vibrateToggle.isChecked;
h.crossPlatform.setStorageSync("setting", {
music: d.default.volume,
sound: c.Sound.volume,
vibrate: l.Vibrate.enable
});
};
this.btnLinkAccount.node.on(r.default.CLICK, this.onClickLinkAccount, this);
this.btnExitAccount.node.on(r.default.CLICK, this.onClickExitAccount, this);
this.btnKeyAccount.node.on(r.default.CLICK, this.onClickKeyAccount, this);
this.okBtn.node.on(r.default.CLICK, this.closePanel, this);
this.editBoxPassword.node.on("text-changed", this.onEditingPassword, this);
this.setPasswordBtn.node.on(r.default.CLICK, this.onClickSetPassword, this);
this.facebookBtn.node.on(r.default.CLICK, this.onClickSetFaceBook, this);
this.onRefresh();
}
onRefresh() {
this.btnLinkAccount.node.active = !1;
this.btnExitAccount.node.active = !1;
this.btnKeyAccount.node.active = !1;
this.okBtn.node.active = !1;
this.headIcon.loadUrl(f.default.Ins.userImg);
this.labelId.string = "ID: " + f.default.Ins.role.id;
let e = u.Hortor.loginPlatType;
console.log(">>loginPlatType>>", u.Hortor.loginPlatType);
if (u.Hortor.isApp()) {
console.log(">>linkAccountType>>", u.Hortor.linkAccountType);
this.btnExitAccount.node.active = !0;
e == u.PlatType.Visitor && u.Hortor.linkAccountType >= 0 && (e = u.Hortor.linkAccountType);
console.log(">>platType>>", e);
e != u.PlatType.Visitor || u.Hortor.isMobileLogin || (this.btnLinkAccount.node.active = !0);
} else if (u.Hortor.isMiniGame()) if (_.DynamicMng.Ins.isInspectVersion()) {
this.okBtn.node.active = !0;
this.idCard.active = !1;
} else this.btnKeyAccount.node.active = !0; else this.btnExitAccount.node.active = !0;
e == u.PlatType.Visitor ? this.labelAccountType.string = "游客账号" : e == u.PlatType.Apple ? this.labelAccountType.string = "苹果账号" : e == u.PlatType.WeChat ? this.labelAccountType.string = "微信账号" : e == u.PlatType.QQ ? this.labelAccountType.string = "QQ账号" : e == u.PlatType.TT ? this.labelAccountType.string = "抖音账号" : e == u.PlatType.Mobile && (this.labelAccountType.string = "手机账号");
let t = h.crossPlatform.getStorageSync("isSetPassword");
this.passwordBox.active = !t;
let o = h.crossPlatform.getStorageSync("isSetFaceBook");
this.facebookBtn.active = !o;
this.bottomLayout.updateLayout();
this.node.height = this.bottomLayout.node.height + 370;
}
onClickLinkAccount() {
m.default.ins.OpenPanelByName("LinkAccountPanel", e => {
e.onSucc = () => {
this.closePanel();
u.Hortor.logoutApp();
m.default.ins.Enter("LoginScene");
};
});
}
onClickKeyAccount() {
this.requestKeyAccount();
}
requestKeyAccount() {
return n(this, void 0, void 0, function*() {
let e = C.GDBindType.tikTok;
u.Hortor.loginPlatType == u.PlatType.WeChat ? e = C.GDBindType.wechat : u.Hortor.loginPlatType == u.PlatType.QQ ? e = C.GDBindType.qQ : u.Hortor.loginPlatType == u.PlatType.Apple && (e = C.GDBindType.apple);
let t = {
bindType: e
}, o = yield v.NetIns.SendCmdAsync({
cmd: y.CMDS.Game_GetBindRoleMsg,
params: t
}, y.Game_RGetBindRoleMsg);
console.log(">>Game_GetBindRoleMsg>>", o ? JSON.stringify(o) : o);
o && h.crossPlatform.setClipboardData({
data: o.code,
success: () => {
g.default.showToast("密钥已复制");
this.btnKeyAccount.label.string = o.code;
}
});
});
}
onClickExitAccount() {
this.closePanel();
if (u.Hortor.isApp()) {
h.crossPlatform.setStorageSync("lastLoginSelectPlat", "");
u.Hortor.logoutApp();
} else {
if (!h.crossPlatform.getStorageSync("isSetPassword")) {
g.default.showToast("Can't logout before setup password");
return;
}
h.crossPlatform.setStorageSync("lastLoginAccount", "");
h.crossPlatform.setStorageSync("lastLoginOTP", "");
h.crossPlatform.setStorageSync("isSetPassword", !1);
u.Hortor.logoutWeb();
}
m.default.ins.Enter("LoginScene");
}
onEditingPassword() {
if (this.editBoxPassword.string.length < 6 || this.editBoxPassword.string.length > 18) {
this.passwordIsOk = !1;
this.updateTipLabel("Password length must be 6-18", !0);
} else if (new RegExp(/^[a-zA-Z]\w{5,17}$/).test(this.editBoxPassword.string)) {
this.passwordIsOk = !0;
this.updateTipLabel("Available", !1);
} else {
this.passwordIsOk = !1;
this.updateTipLabel("Password must start with a letter and can only contain letters, numbers and '_'.", !0);
}
}
onClickSetPassword() {
return n(this, void 0, void 0, function*() {
if (!this.passwordIsOk) return;
let e = {
oldPassword: "",
password: this.editBoxPassword.string
};
if (yield v.NetIns.SendCmdAsync({
cmd: y.CMDS.Account_SetPassword,
params: e
}, y.Account_SetPasswordR)) {
g.default.showToast("Set password Success");
h.crossPlatform.setStorageSync("isSetPassword", !0);
cc.game.emit("refreshPasswordDot");
this.passwordBox.active = !1;
this.bottomLayout.updateLayout();
this.node.height = this.bottomLayout.node.height + 370;
}
});
}
onClickSetFaceBook() {
return n(this, void 0, void 0, function*() {
cc.sys.os === cc.sys.OS_ANDROID && jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "loginFacebook", "(Ljava/lang/String;Ljava/lang/String;)V", "", "");
});
}
updateTipLabel(e, t) {
this.passwordTipLabel.node.active = !0;
if (t) {
this.passwordTipLabel.string = e;
this.passwordTipLabel.node.color = cc.color(239, 101, 126);
} else {
this.passwordTipLabel.string = e;
this.passwordTipLabel.node.color = cc.color(110, 239, 153);
}
}
};
i([ I(cc.Slider) ], G.prototype, "soundSlider", void 0);
i([ I(s.default) ], G.prototype, "vibrateToggle", void 0);
i([ I(r.default) ], G.prototype, "btnExitAccount", void 0);
i([ I(r.default) ], G.prototype, "btnKeyAccount", void 0);
i([ I(cc.Node) ], G.prototype, "idCard", void 0);
i([ I(r.default) ], G.prototype, "btnLinkAccount", void 0);
i([ I(p.default) ], G.prototype, "headIcon", void 0);
i([ I(cc.Label) ], G.prototype, "labelId", void 0);
i([ I(cc.Label) ], G.prototype, "labelAccountType", void 0);
i([ I(r.default) ], G.prototype, "okBtn", void 0);
i([ I(cc.EditBox) ], G.prototype, "editBoxPassword", void 0);
i([ I(r.default) ], G.prototype, "setPasswordBtn", void 0);
i([ I(cc.Label) ], G.prototype, "passwordTipLabel", void 0);
i([ I(cc.Node) ], G.prototype, "passwordBox", void 0);
i([ I(cc.Layout) ], G.prototype, "bottomLayout", void 0);
i([ I(r.default) ], G.prototype, "facebookBtn", void 0);
G = i([ S ], G);
o.default = G;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/HeadIcon": "HeadIcon",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Music": "Music",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Sound": "Sound",
"../../Frame/Top": "Top",
"../../Frame/Vibrate": "Vibrate",
"../../Game/Hortor": "Hortor",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Role": "Role"
} ],
SharePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d4fabcE4/tF5J0uUXdKvG22", "SharePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/Panel"), s = e("../../CustomUI/ScrollList"), r = e("../../Game/Hortor"), l = e("../../Frame/image-share"), c = e("../../Frame/CrossPlatform"), d = e("../../CustomUI/Button"), h = e("../../Frame/Share"), p = e("../../Frame/CrossPlatform"), u = e("../../Frame/Top"), {ccclass: m, property: f} = cc._decorator;
let g = class extends a.default {
constructor() {
super(...arguments);
this.closeBg = null;
this.scrollList = null;
this.imgShareHelper = null;
this.useTricks = !1;
this.data = null;
}
onLoad() {
super.onLoad();
this.scrollList.node.on(s.default.CLICK_ITEM, this.onClickItem, this);
this.closeBg.on(d.default.CLICK, this.closePanel, this);
this.imgShareHelper.node.active = !1;
}
setData(e) {
this.data = e;
let t = this.data.success;
this.data.success = () => {
t && t();
this.closePanel();
};
let o = [];
e.talk;
if (r.Hortor.isApp()) o.push({
icon: "qq",
name: "QQ"
}); else if (c.tt) o.push({
icon: "tictok",
name: "抖音"
}); else if (c.wx) o.push({
icon: "wechat",
name: "微信"
}); else {
o.push({
icon: "talk",
name: "Copy Link"
});
o.push({
icon: "facebook",
name: "Facebook"
});
}
this.scrollList.setDataArr(o);
}
onClickItem(e, t) {
return n(this, void 0, void 0, function*() {
switch (t.name) {
case "QQ":
r.Hortor.isApp() && h.Share.appShare2QQ(this.data, this.imgShareHelper);
break;

case "微信":
r.Hortor.isApp() ? h.Share.appShare2WX(this.data, this.imgShareHelper) : h.Share.miniShare2WX(this.data);
break;

case "抖音":
h.Share.miniShare2TT(this.data);
break;

case "论坛":
h.Share.share2Talk(this.data);
break;

case "Copy Link":
let e = "https://h5.julianseditor.com";
e = e + "?" + this.data.query;
p.crossPlatform.setClipboardData({
data: e,
success: () => {
u.default.showToast("Link copied~");
}
});
break;

case "Facebook":
h.Share.share2Facebook(this.data);
}
});
}
};
i([ f(cc.Node) ], g.prototype, "closeBg", void 0);
i([ f(s.default) ], g.prototype, "scrollList", void 0);
i([ f(l.default) ], g.prototype, "imgShareHelper", void 0);
g = i([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/Panel": "Panel",
"../../Frame/Share": "Share",
"../../Frame/Top": "Top",
"../../Frame/image-share": "image-share",
"../../Game/Hortor": "Hortor"
} ],
Share: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8054bpW03FPQaNADCBLmaGf", "Share");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Share = o.ShareData = void 0;
const n = e("../Game/Hortor"), a = e("../Game/Player/GameIconMng"), s = e("./CrossPlatform"), r = e("./SceneManager");
o.ShareData = class {};
(function(e) {
e.share = function(e) {
n.Hortor.isApp() ? r.default.ins.OpenPanelByName("SharePanel", t => {
t.setData(e);
}) : s.tt ? s.tt.shareAppMessage(e) : s.wx ? n.Hortor.wxShare(e, e.useTricks) : r.default.ins.OpenPanelByName("SharePanel", t => {
t.setData(e);
});
};
e.appShare2QQ = function(e, t) {
return i(this, void 0, void 0, function*() {
let o = yield a.GameIconMng.Ins.getSF(e.imageName);
if (o) {
let i = yield t.generateShareImage(e.query, o, e.title, e.desc);
n.Hortor.appSdkInited && HAPP.getFilePath({
filePath: i
}).then(t => {
console.log(">>filePath>>" + i);
console.log(`getFilePath success filePath: ${t.filePath}`);
n.Hortor.shareImg(n.PlatType.QQ, t.filePath, e.success, e.fail);
}).catch(t => {
console.log(`getFilePath fail : ${JSON.stringify(t)}`);
e.fail && e.fail();
});
}
});
};
e.share2Facebook = function() {
return i(this, void 0, void 0, function*() {
cc.sys.os === cc.sys.OS_ANDROID && jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "share2Facebook", "(Ljava/lang/String;Ljava/lang/String;)V", "", "");
});
};
e.appShare2WX = function(e, t) {
return i(this, void 0, void 0, function*() {
let o = yield a.GameIconMng.Ins.getSF(e.imageName);
if (o) {
let i = yield t.generateShareImage(e.query, o, e.title, e.desc);
n.Hortor.shareImg(n.PlatType.WeChat, i, e.success, e.fail);
}
});
};
e.miniShare2TT = function(e) {
return i(this, void 0, void 0, function*() {
s.tt.shareAppMessage(e);
});
};
e.miniShare2WX = function e(t, o = 0) {
return i(this, void 0, void 0, function*() {
if (this._miniGameSdk) if (t.useTricks) {
let i = () => {
s.wx.showModal({
title: "提示",
content: "分享失败，请尝试不同的群",
showCancel: !0,
cancelText: "取消",
confirmText: "去分享",
success: i => {
i.confirm ? e(t, o + 1) : i.cancel && t.fail && t.fail();
}
});
}, a = () => {
t.success && t.success();
};
n.Hortor.miniGameSdk.shareMessage(t).then(() => {
0 == o ? i() : a();
}).catch(() => {
i();
});
} else n.Hortor.miniGameSdk.shareMessage(t).then(() => {
t.success && t.success();
}).catch(() => {
t.fail && t.fail();
});
});
};
e.share2Talk = function(e) {
return i(this, void 0, void 0, function*() {
let t = e.talk;
r.default.ins.Enter("EditTalkScene", o => {
o.toModifyStyleTitleSections(t.title, t.sections);
o.publishCall = e.success;
o.cancelCall = e.fail;
}, r.ShiftAnima.moveLeftShift);
});
};
})(o.Share || (o.Share = {}));
cc._RF.pop();
}, {
"../Game/Hortor": "Hortor",
"../Game/Player/GameIconMng": "GameIconMng",
"./CrossPlatform": "CrossPlatform",
"./SceneManager": "SceneManager"
} ],
ShiftWorldAnim: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "21638ZOSblIDZMuA6cCeNwj", "ShiftWorldAnim");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Config"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.onShiftBegin = null;
this.onShiftEnd = null;
this.anim = null;
this.animReady = !1;
this.worldReady = !1;
}
shiftBegin() {
this.onShiftBegin && this.onShiftBegin();
}
shiftEnd() {
this.animReady = !0;
this.checkShiftEnd();
}
worldIsReady() {
this.worldReady = !0;
this.checkShiftEnd();
}
checkShiftEnd() {
if (this.animReady && this.worldReady && this.onShiftEnd) {
this.onShiftEnd();
this.onShiftEnd = null;
this.node.active = !1;
}
}
play(e, t, o, i) {
this.onShiftBegin = o;
this.onShiftEnd = i;
this.worldReady = !1;
this.animReady = !1;
this.node.active = !0;
t = t || 2;
this.nameLabel.string = e.info.name;
let a = n.Config.shiftWorldAnims.find(e => e.id == t);
this.anim.play(a.animName);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(cc.Animation) ], r.prototype, "anim", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Config": "Config"
} ],
ShopMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "63ab6CT2NhHDq/yo+5Kw9nk", "ShopMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/CrossPlatform"), r = e("../../Frame/NetworkMgr"), l = e("../../TGA"), c = e("../GameEnv"), d = e("./DynamicMng"), h = e("./Mng"), p = e("./RcmdMng");
class u {
constructor() {
this.chosenRanks = new Map();
this.normalRanks = new Map();
this.cellDataCache = new Map();
this.infoCache = new Map();
this.myGoodsIds = [];
this.packageSizeMax = 12;
this.rcmdGoods = [];
}
getRankIds(e, t) {
let o = e + "-" + t;
return this.normalRanks.get(o) || [];
}
appendLoadRankIds(e, t) {
return i(this, void 0, void 0, function*() {
if (d.DynamicMng.Ins.isInspectVersion()) return d.DynamicMng.Ins.inspectGoodsIds;
let o = e + "-" + t, i = this.normalRanks.get(o) || [], s = i.length, c = s + 11;
if (s >= (c = Math.min(c, 999))) return i;
let h = {
goodsType: e,
goodsSort: t,
start: s,
end: c,
startMember: ""
}, p = null;
if (t == a.GoodsSortType.goodsUpStampDesc) {
let e = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetNewGoods,
params: h
}, n.Game_RGetNewGoods);
if (e) {
(p = new n.Game_RGetGoodsIds()).startMember = e.startMember;
for (let t = 0; t < e.goodsInfoList.length; t++) {
let o = e.goodsInfoList[t];
p.goodsIds.push(e.goodsInfoList[t].id);
this.cellDataCache.set(o.id, o);
}
}
} else p = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGoodsIds,
params: h
}, n.Game_RGetGoodsIds);
if (p) {
let e = p.goodsIds;
for (let t = 0; t < e.length; t++) {
let o = e[t];
i.includes(o) || i.push(o);
}
i.push(null);
this.normalRanks.set(o, i);
}
l.TGA.track("shopPage", {
sort: t,
type: e,
page: "排行榜"
});
return i;
});
}
getChosenIds(e, t) {
let o = e + "-" + t;
return this.chosenRanks.get(o) || [];
}
appendLoadChosenIds(e, t) {
return i(this, void 0, void 0, function*() {
if (d.DynamicMng.Ins.isInspectVersion()) return d.DynamicMng.Ins.inspectGoodsIds;
let o = e + "-" + t, i = this.chosenRanks.get(o) || [], a = i.length, s = a + 10;
if (a >= (s = Math.min(s, 999))) return i;
let c = {
goodsType: e,
goodsSort: t,
start: a,
end: s
}, h = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetChosenGoodsIds,
params: c
}, n.Game_RGetChosenGoodsIds);
if (h) {
let e = h.goodsIds;
for (let t = 0; t < e.length; t++) {
let o = e[t], n = yield this.canShow(o);
!i.includes(o) && n && i.push(o);
}
this.chosenRanks.set(o, i);
}
l.TGA.track("shopPage", {
sort: t,
type: e,
page: "精选"
});
return i;
});
}
appendLoadRcmdGoods(e) {
return i(this, void 0, void 0, function*() {
p.default.Ins.tempGoodsShowDatas.length > 0 && (yield p.default.Ins.checkUploadGoodsShow());
let t = {
count: e,
showType: "rcmd"
}, o = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRecommendGoodsIdList,
params: t
}, n.Game_RGetRecommendGoodsIdList);
if (o) {
let e = [];
for (let t = 0; t < o.recommendList.length; t++) {
let i = o.recommendList[t];
e.push(i.id);
}
let t = yield this.loadGoodsCellDatas(e), i = orange.TimeUtil.serverTime;
for (let e = 0; e < o.recommendList.length; e++) {
let n = o.recommendList[e], a = t.find(e => e.id == n.id);
a ? this.rcmdGoods.push({
goodsCellData: a,
bk: n.bk,
st: n.st
}) : p.default.Ins.goodsShow(n.id, "rcmd", i, n.bk, n.st);
}
}
return this.rcmdGoods;
});
}
loadGoodsCellDatas(e) {
return i(this, void 0, void 0, function*() {
let t = new Set();
for (let o = 0; o < e.length; o++) {
let i = e[o];
i && this.canShow(i) && (this.cellDataCache.has(i) || t.add(i));
}
if (t.size > 0) {
let e = {
ids: Array.from(t)
}, o = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetSimpleGoods,
params: e
}, n.Game_RGetSimpleGoods);
if (o) for (let e = 0; e < o.goodsInfoList.length; e++) {
let t = o.goodsInfoList[e];
this.cellDataCache.set(t.id, t);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = e[t], n = this.cellDataCache.get(i);
n && o.push(n);
}
return o;
});
}
canShow(e) {
return i(this, void 0, void 0, function*() {
let t = !0;
s.wx && !d.DynamicMng.Ins.isGmPlayer() && c.gameEnv.isWxReviewCity && ((yield d.DynamicMng.Ins.loadOne("IpGoodsIds")) || []).includes(e) && (t = !0);
return t;
});
}
loadGoodsInfos(e) {
return i(this, void 0, void 0, function*() {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
this.infoCache.get(i) || t.push(i);
}
if (t.length > 0) {
let e = {
ids: t
}, o = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetGoodsInfos,
params: e
}, n.Game_RGetGoodsInfos);
for (let e = 0; e < o.goodsInfoList.length; e++) {
let t = o.goodsInfoList[e];
this.infoCache.set(t.id, t);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = e[t], n = this.infoCache.get(i);
n && o.push(n);
}
return o;
});
}
loadMyGoodsInfos() {
return i(this, void 0, void 0, function*() {
let e = this.myGoodsIds, t = [];
for (let o = 0; o < e.length; o++) {
let i = e[o];
this.infoCache.get(i) || t.push(i);
}
if (t.length > 0) {
let e = {
ids: t
}, o = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetOwnGoodsInfos,
params: e
}, n.Game_RGetOwnGoodsInfos);
for (let e = 0; e < o.goodsInfoList.length; e++) {
let t = o.goodsInfoList[e];
this.infoCache.set(t.id, t);
}
}
let o = [];
for (let t = 0; t < e.length; t++) {
let i = e[t], n = this.infoCache.get(i);
if (n) o.push(n); else {
let e = new a.GDGoodsInfo();
e.id = i;
e.name = "已失效";
o.push(e);
}
}
return o;
});
}
offGoods(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e
};
if (yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_OffGoods,
params: t
}, n.Game_ROffGoods)) {
let t = this.myGoodsIds.indexOf(e);
t >= 0 && this.myGoodsIds.splice(t, 1);
}
});
}
uploadGoods(e) {
return i(this, void 0, void 0, function*() {
let t = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_UploadGoods,
params: e
}, n.Game_RUploadGoods);
if (t) if (e.goodsId) {
this.cellDataCache.delete(e.goodsId);
this.infoCache.delete(e.goodsId);
} else t.sensitiveWords && t.sensitiveWords.length > 0 || u.Ins.myGoodsIds.unshift(t.id);
return t;
});
}
buy(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
id: e,
isDiscount: 1 != t
}, i = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_BuyGoods,
params: o
}, n.Game_RBuyGoods), s = [];
if (i) {
if (i.tileConfs) for (let t = 0; t < i.tileConfs.length; t++) {
let o = i.tileConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.tileMng.customCache.set(o.id, o.conf);
h.Mng.Ins.tileMng.customIds.unshift(o.id);
s.push({
type: "tile",
id: o.id
});
}
if (i.actorConfs) for (let t = 0; t < i.actorConfs.length; t++) {
let o = i.actorConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.actorMng.customCache.set(o.id, o.conf);
h.Mng.Ins.actorMng.customIds.unshift(o.id);
s.push({
type: "actor",
id: o.id
});
}
if (i.deviceConfs) for (let t = 0; t < i.deviceConfs.length; t++) {
let o = i.deviceConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.deviceMng.customCache.set(o.id, o.conf);
h.Mng.Ins.deviceMng.customIds.unshift(o.id);
s.push({
type: "device",
id: o.id
});
}
if (i.propConfs) for (let t = 0; t < i.propConfs.length; t++) {
let o = i.propConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.propMng.customCache.set(o.id, o.conf);
h.Mng.Ins.propMng.customIds.unshift(o.id);
s.push({
type: "prop",
id: o.id
});
}
if (i.bulletConfs) for (let t = 0; t < i.bulletConfs.length; t++) {
let o = i.bulletConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.bulletMng.customCache.set(o.id, o.conf);
h.Mng.Ins.bulletMng.customIds.unshift(o.id);
}
if (i.weaponConfs) for (let t = 0; t < i.weaponConfs.length; t++) {
let o = i.weaponConfs[t];
o.conf.id = o.id;
o.conf.goodsUId = e;
h.Mng.Ins.weaponMng.customCache.set(o.id, o.conf);
h.Mng.Ins.weaponMng.customIds.unshift(o.id);
s.push({
type: "weapon",
id: o.id
});
if (o.conf && o.conf.gun && o.conf.gun.bulletId) {
let e = i.bulletMap.get(o.conf.gun.bulletId);
if (e) {
o.conf.gun.bulletId = e;
yield h.Mng.Ins.weaponMng.save(o.conf);
}
}
}
let t = this.cellDataCache.get(e);
t && t instanceof a.GDGoodsInfo && t.saleCnt++;
}
return s;
});
}
clear() {
this.cellDataCache.clear();
this.normalRanks.clear();
this.rcmdGoods = [];
}
gmLoadAllChosenGoodsIds() {
return i(this, void 0, void 0, function*() {
let e = a.GoodsType.all + "-" + a.GoodsSortType.comprehensive, t = u.Ins.chosenRanks.get(e) || [], o = {
goodsType: a.GoodsType.all,
goodsSort: a.GoodsSortType.comprehensive,
start: 0,
end: 1e4
}, i = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetChosenGoodsIds,
params: o
}, n.Game_RGetChosenGoodsIds);
if (i) for (let e = 0; e < i.goodsIds.length; e++) {
let o = i.goodsIds[e];
t.includes(o) || t.push(o);
}
return t;
});
}
}
o.default = u;
u.Ins = new u();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/CrossPlatform": "CrossPlatform",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../TGA": "TGA",
"../GameEnv": "GameEnv",
"./DynamicMng": "DynamicMng",
"./Mng": "Mng",
"./RcmdMng": "RcmdMng"
} ],
ShopPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7cfd49XyJRLto+Tqwyz8lk5", "ShopPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../../scripts/_autogen/cmd/cmd"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/CoinBar"), d = e("../../../CustomUI/DropDownBox"), h = e("../../../CustomUI/ScrollList"), p = e("../../../CustomUI/ToggleGroup"), u = e("../../../Frame/CrossPlatform"), m = e("../../../Frame/NetworkMgr"), f = e("../../../Frame/Top"), g = e("../../../Game/GameEnv"), y = e("../../../Game/Player/CreditMng"), v = e("../../../Game/Player/DynamicMng"), C = e("../../../Game/Player/ShopMng"), _ = e("../../../Role"), S = e("./GoodsCell"), {ccclass: I, property: G} = cc._decorator;
let T = class extends cc.Component {
constructor() {
super(...arguments);
this.toggleGroup = null;
this.typeDropDownBox = null;
this.sortDropDownBox = null;
this.goodsList = null;
this.myGoodsList = null;
this.emptyNode = null;
this.loadingNode = null;
this.searchBox = null;
this.closeSearchBtn = null;
}
onLoad() {
cc.game.on("RefreshShopList", this.refreshList, this);
cc.game.on("MyGoodsChange", this.refreshList, this);
this.closeSearchBtn.node.on(l.default.CLICK, this.onCloseSearch, this);
this.toggleGroup.node.on(p.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.typeDropDownBox.node.on(d.default.SELECT_CHANGE, this.onTypeChange, this);
this.sortDropDownBox.node.on(d.default.SELECT_CHANGE, this.onTypeChange, this);
this.typeDropDownBox.setDataArr([ {
str: a.I18nMgr.getI18nStringByZh("全部"),
type: r.GoodsType.all
}, {
str: a.I18nMgr.getI18nStringByZh("合集"),
type: r.GoodsType.package
}, {
str: a.I18nMgr.getI18nStringByZh("地块"),
type: r.GoodsType.tile
}, {
str: a.I18nMgr.getI18nStringByZh("角色"),
type: r.GoodsType.actor
}, {
str: a.I18nMgr.getI18nStringByZh("装置"),
type: r.GoodsType.device
}, {
str: a.I18nMgr.getI18nStringByZh("道具"),
type: r.GoodsType.prop
}, {
str: a.I18nMgr.getI18nStringByZh("武器"),
type: r.GoodsType.weapon
} ]);
this.sortDropDownBox.setDataArr([ {
str: a.I18nMgr.getI18nStringByZh("综合"),
sort: r.GoodsSortType.comprehensive
}, {
str: a.I18nMgr.getI18nStringByZh("销量"),
sort: r.GoodsSortType.goodsSaleDesc
}, {
str: a.I18nMgr.getI18nStringByZh("最新"),
sort: r.GoodsSortType.goodsUpStampDesc
}, {
str: a.I18nMgr.getI18nStringByZh("便宜优先"),
sort: r.GoodsSortType.goodsPriceAsc
}, {
str: a.I18nMgr.getI18nStringByZh("高价优先"),
sort: r.GoodsSortType.goodsPriceDesc
} ]);
this.loadingNode.width = this.loadingNode.height = 0;
this.goodsList.node.active = !0;
this.myGoodsList.node.active = !1;
this.myGoodsList.getPrefabName = e => {
if (e.id) return "MyGoodsCell";
if (e) {
if ("create" == e.type) return "CreateGoodsCell";
if ("lock" == e.type) return "LockGoodsCell";
}
};
this.refreshList();
this.closeSearchBtn.node.active = !1;
(v.DynamicMng.Ins.isDisable(v.FunctionEnum.GoodsPage, !1) || u.wx && g.gameEnv.isWxReviewCity) && (v.DynamicMng.Ins.isGmPlayer() || (this.toggleGroup.toggleItems[1].node.active = !1));
}
onEnable() {
c.default.Ins.show(50);
}
onDisable() {
c.default.Ins.hide();
}
onDestroy() {
cc.game.off("RefreshShopList", this.refreshList, this);
cc.game.off("MyGoodsChange", this.refreshList, this);
}
onToggleChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
this.hideSearch();
this.refreshList();
this.goodsList.scrollToTop(.3);
}
});
}
onTypeChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
this.hideSearch();
this.refreshList();
this.goodsList.scrollToTop(.3);
}
});
}
onSortChange(e, t, o) {
return n(this, void 0, void 0, function*() {
if (o) {
this.hideSearch();
this.refreshList();
this.goodsList.scrollToTop(.3);
}
});
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = this.toggleGroup.idx, t = this.typeDropDownBox.getCurData().type, o = this.sortDropDownBox.getCurData().sort;
if (0 == e) {
this.goodsList.node.active = !0;
this.myGoodsList.node.active = !1;
let e = C.default.Ins.getChosenIds(t, o);
e.length < 11 && (e = yield C.default.Ins.appendLoadChosenIds(t, o));
let i = yield C.default.Ins.loadGoodsCellDatas(e), n = this.node.getComponentsInChildren(S.default);
for (let e = 0; e < n.length; e++) n[e].from = "chosen";
this.goodsList.setDataArr(i);
this.emptyNode.active = 0 == i.length;
} else if (1 == e) {
this.goodsList.node.active = !0;
this.myGoodsList.node.active = !1;
let e = C.default.Ins.getRankIds(t, o);
e.length < 11 && (e = yield C.default.Ins.appendLoadRankIds(t, o));
let i = yield C.default.Ins.loadGoodsCellDatas(e), n = this.node.getComponentsInChildren(S.default);
for (let e = 0; e < n.length; e++) n[e].from = "rank";
this.goodsList.setDataArr(i);
this.emptyNode.active = 0 == i.length;
} else if (2 == e) {
this.myGoodsList.node.active = !0;
this.goodsList.node.active = !1;
let e = [];
e = yield C.default.Ins.loadGoodsInfos(C.default.Ins.myGoodsIds);
f.default.hideLoading();
if (e.length < _.default.Ins.role.myGoodsMaxCnt) e.push({
type: "create"
}); else {
let t = _.default.Ins.goodsSlotUnlockLvls[_.default.Ins.role.myGoodsMaxCnt];
e.push({
type: "lock",
str: a.I18nMgr.exceI18nStringByZh("等级${lvl}解锁新栏位", [ {
paramName: "lvl",
param: t
} ])
});
}
this.myGoodsList.setDataArr(e);
}
});
}
sort(e) {
let t = this.sortDropDownBox.getCurData().sort;
t == r.GoodsSortType.goodsSaleDesc && e.sort((e, t) => t.saleCnt - e.saleCnt);
t == r.GoodsSortType.goodsUpStampDesc && e.sort((e, t) => t.upStamp - e.upStamp);
t == r.GoodsSortType.goodsPriceAsc && e.sort((e, t) => e.price - t.price);
t == r.GoodsSortType.goodsPriceDesc && e.sort((e, t) => t.price - e.price);
}
onScrollEvt(e, t) {
return n(this, void 0, void 0, function*() {
let o = -e.getScrollOffset().y;
if (!this.closeSearchBtn.node.active) switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
if (o > 100) {
C.default.Ins.clear();
yield this.refreshList();
f.default.showToast("已刷新");
}
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
let e = this.toggleGroup.idx, i = this.typeDropDownBox.getCurData().type, n = this.sortDropDownBox.getCurData().sort;
0 == e ? yield C.default.Ins.appendLoadChosenIds(i, n) : 1 == e && (yield C.default.Ins.appendLoadRankIds(i, n));
this.refreshList();
break;

case cc.ScrollView.EventType.SCROLLING:
if (o > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(o, 100);
this.loadingNode.angle = o;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
onSearch(e) {
return n(this, void 0, void 0, function*() {
if (v.DynamicMng.Ins.isDisable(v.FunctionEnum.GoodsPage, !0)) return;
if (y.CreditMng.Ins.credit <= 1) {
f.default.showToast("近期违规，不可搜索商品");
return;
}
this.closeSearchBtn.node.active = !0;
let t = [], o = e.textLabel.string;
if (o) {
if (o && !v.DynamicMng.Ins.isViolationsName(o)) if (v.DynamicMng.Ins.isInspectVersion()) t = []; else {
let e = {
searchName: o,
start: 0,
end: 50
}, i = yield m.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_NewSearchGoods,
params: e
}, s.Game_RNewSearchGoods);
i && (t = i.goodsInfoList);
}
this.goodsList.setDataArr(t);
this.emptyNode.active = 0 == t.length;
this.goodsList.scrollToTop(.3);
} else this.onCloseSearch();
});
}
onCloseSearch() {
this.hideSearch();
this.refreshList();
this.goodsList.scrollToTop(.3);
}
hideSearch() {
this.searchBox.string = "";
this.closeSearchBtn.node.active = !1;
}
};
i([ G(p.default) ], T.prototype, "toggleGroup", void 0);
i([ G(d.default) ], T.prototype, "typeDropDownBox", void 0);
i([ G(d.default) ], T.prototype, "sortDropDownBox", void 0);
i([ G(h.default) ], T.prototype, "goodsList", void 0);
i([ G(h.default) ], T.prototype, "myGoodsList", void 0);
i([ G(cc.Node) ], T.prototype, "emptyNode", void 0);
i([ G(cc.Node) ], T.prototype, "loadingNode", void 0);
i([ G(cc.EditBox) ], T.prototype, "searchBox", void 0);
i([ G(l.default) ], T.prototype, "closeSearchBtn", void 0);
T = i([ I ], T);
o.default = T;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/CoinBar": "CoinBar",
"../../../CustomUI/DropDownBox": "DropDownBox",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/NetworkMgr": "NetworkMgr",
"../../../Frame/Top": "Top",
"../../../Game/GameEnv": "GameEnv",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/ShopMng": "ShopMng",
"../../../Role": "Role",
"./GoodsCell": "GoodsCell"
} ],
SimpleNodeList: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e198enU5o9DBr2fwe4YrcBM", "SimpleNodeList");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, property: s} = cc._decorator;
let r = i = class extends cc.Component {
constructor() {
super(...arguments);
this.scrollView = null;
this.useVirtual = !1;
this._viewMask = null;
this._isStart = !1;
this._isVirtual = !1;
this._startIdx = 0;
this._lastStartIdx = 0;
this._renderNum = 0;
this._lastRenderNum = 0;
this._maskRect = new cc.Rect();
this._itemSizeList = [];
this._offset = new cc.Vec2();
this._viewNode = null;
this._localTopY = 0;
this._numberItems = 0;
this._needEmitSelectIdx = -1;
this._itemList = [];
this._tmpV3_1 = new cc.Vec3();
this._tmpV3_2 = new cc.Vec3();
this._tmpV2 = new cc.Vec2();
this._tmpMat = new cc.Mat4();
}
onLoad() {
if (this.scrollView) {
this.scrollView.node.on("scrolling", this.onScrolling, this);
let e = null;
for (let t of this.scrollView.node.children) if (e = t.getComponent(cc.Mask)) break;
this._viewMask = e;
this.resetMaskSize();
}
}
resetMaskSize() {
if (!this.useVirtual) return;
let e = this._viewMask;
if (e) {
this._viewNode = e.node;
let t = e.node.width, o = e.node.height;
this._maskRect.x = 0 - e.node.anchorX * t;
this._maskRect.y = 0 - e.node.anchorY * o;
this._maskRect.width = t;
this._maskRect.height = o;
this._isVirtual = !0;
}
}
onDestroy() {
this.scrollView && this.scrollView.node.off("scrolling", this.onScrolling, this);
}
start() {
this._isStart = !0;
this.node.on(i.SET_SELECT_ITEM_NODE, e => {
let t = this.node.children;
for (let o of t) o.emit(i.SET_SELECT_ITEM_NODE, e);
}, this);
this._layout = this.getComponent(cc.Layout);
this._layout || (this._layout = this.addComponent(cc.Layout));
this._isVirtual && this.itemSize && (this._layout.enabled = !1);
this._localTopY = this.node.y;
this.refreshVirtual();
this.refreshItems(this._renderNum);
this._lastRenderNum = this._renderNum;
this._lastStartIdx = this._startIdx;
}
SetItemPrefab(e, t) {
e.parent = null;
this._prefab = e;
this._type = t;
this._childPool = new cc.NodePool();
this.resetMaskSize();
}
set numberItems(e) {
this._numberItems = e;
if (this._isStart) {
this.refreshVirtual();
this.refreshItems(this._renderNum);
this._lastRenderNum = this._renderNum;
this._lastStartIdx = this._startIdx;
}
}
selectItem(e) {
this._needEmitSelectIdx = e;
if ((e -= this._startIdx) < 0 || e >= this._itemList.length) {
this.node.emit(i.SELECT_ITEM, e, null);
this.node.emit(i.SELECT_ITEM_NODE, e, null);
} else {
this._needEmitSelectIdx = -1;
this.node.emit(i.SELECT_ITEM, e, this._itemList[e]);
this.node.emit(i.SELECT_ITEM_NODE, e, this._itemList[e].node);
}
}
onItemClick(e) {
let t = this.node.children;
for (let o = 0; o < t.length; ++o) {
let n = t[o];
if (e.target == n) {
this._needEmitSelectIdx = -1;
this.node.emit(i.SELECT_ITEM, o, n.getComponent(this._type));
this.node.emit(i.SELECT_ITEM_NODE, o, n);
break;
}
}
}
get itemList() {
return this._itemList;
}
refreshItems(e) {
let t = this.node, o = t.children;
this._itemList.length = 0;
for (let t = 0; t < e && t < o.length; ++t) {
let e = o[t], i = e.getComponent(this._type);
if (i) {
e.active = !0;
this._itemList.push(i);
}
}
let i = o.length - this._itemList.length;
if (i > 0) {
let e = o.length - i;
for (let t = o.length - 1; t >= e; --t) this._childPool.put(o[t]);
}
for (let o = this._itemList.length; o < e; ++o) {
let e = this._childPool.get();
e || (e = cc.instantiate(this._prefab)).on("click", this.onItemClick, this);
e.parent = t;
e.active = !0;
null == e.parent && (e.parent = t);
this._itemList.push(e.getComponent(this._type));
}
this.updateItemPosition();
if (this.itemRender) for (let e = 0; e < this._itemList.length; ++e) this.itemRender.call(this.callThis, this._startIdx + e, this._itemList[e]);
this._layout.enabled && this._layout.updateLayout();
}
updateVirtualItems() {
let e = this.node, t = this._startIdx + this._renderNum, o = this._lastStartIdx + this._lastRenderNum, i = this._startIdx - this._lastStartIdx;
if (i > 0) {
let e = i;
for (;e > 0 && this._itemList.length > 0; ) {
let t = this._itemList.shift();
this._childPool.put(t.node);
--e;
}
} else if (i < 0) {
let t = -i, o = 0;
for (;t > 0; ) {
let i = this._childPool.get();
i || (i = cc.instantiate(this._prefab)).on("click", this.onItemClick, this);
i.parent = e;
i.active = !0;
null == i.parent && (i.parent = e);
this._itemList.unshift(i.getComponent(this._type));
this.itemRender && this.itemRender.call(this.callThis, this._startIdx + o, this._itemList[0]);
--t;
++o;
}
}
let n = t - o;
if (n < 0) {
let e = -n;
for (;e > 0 && this._itemList.length > 0; ) {
let t = this._itemList.pop();
this._childPool.put(t.node);
--e;
}
} else if (n > 0) {
let t = n, o = this._itemList.length;
for (;t > 0; ) {
let i = this._childPool.get();
i || (i = cc.instantiate(this._prefab)).on("click", this.onItemClick, this);
i.parent = e;
i.active = !0;
null == i.parent && (i.parent = e);
this._itemList.push(i.getComponent(this._type));
this.itemRender && this.itemRender.call(this.callThis, this._startIdx + o, this._itemList[o]);
--t;
++o;
}
}
}
onScrolling() {
if (this._isVirtual && this.itemSize && 0 != this._numberItems) {
this.refreshVirtual();
if (this._lastRenderNum != this._renderNum || this._lastStartIdx != this._startIdx) {
this.updateVirtualItems();
this._needEmitSelectIdx >= 0 && this.selectItem(this._needEmitSelectIdx);
this._lastRenderNum = this._renderNum;
this._lastStartIdx = this._startIdx;
}
this.updateItemPosition();
}
}
refreshVirtual() {
if (!this._isVirtual || !this.itemSize || 0 == this._numberItems) {
this._startIdx = 0;
this._renderNum = this._numberItems;
return;
}
this.resetMaskSize();
this._viewNode.getWorldMatrix(this._tmpMat);
let e = this._tmpMat.getTranslation(this._tmpV3_1);
this.node.parent.getWorldMatrix(this._tmpMat);
let t = this._tmpMat.getTranslation(this._tmpV3_2).y - e.y;
this.node.getWorldMatrix(this._tmpMat);
let o = t + this.node.y, i = o;
this._startIdx = 0;
for (let e = 0; e < this._numberItems; ++e) {
this.itemSize(e, this._tmpV2);
let t = this._tmpV2.y;
this._layout && (t += this._layout.spacingY);
if (i - t < this._maskRect.yMax) break;
i -= t;
++this._startIdx;
}
this._renderNum = 0;
this._offset.y = i - t;
this._itemSizeList.length = 0;
for (let e = this._startIdx; e < this._numberItems; ++e) {
this.itemSize(e, this._tmpV2);
this._itemSizeList.push({
w: this._tmpV2.x,
h: this._tmpV2.y
});
let t = this._tmpV2.y;
this._layout && (t += this._layout.spacingY);
if (i + t < this._maskRect.yMin) break;
++this._renderNum;
i -= t;
}
if (i > this._maskRect.yMin && this._renderNum < this._lastRenderNum && this._lastRenderNum <= this._numberItems) {
this._startIdx = this._lastStartIdx;
this._renderNum = this._lastRenderNum;
this._startIdx + this._renderNum > this._numberItems && (this._renderNum = this._numberItems - this._startIdx);
i = o;
for (let e = 0; e < this._startIdx; ++e) {
this.itemSize(e, this._tmpV2);
let t = this._tmpV2.y;
this._layout && (t += this._layout.spacingY);
i -= t;
}
this._offset.y = i - t;
this._itemSizeList.length = 0;
for (let e = 0; e < this._renderNum; ++e) {
this.itemSize(this._startIdx + e, this._tmpV2);
this._itemSizeList.push({
w: this._tmpV2.x,
h: this._tmpV2.y
});
}
}
}
updateItemPosition() {
if (!this._isVirtual || !this.itemSize || 0 == this._numberItems) return;
let e = this._renderNum, t = this._offset.y - this.node.y - this._layout.paddingTop;
for (let o = 0; o < e; ++o) {
this._itemList[o].node.y = t;
t -= this._itemSizeList[o].h;
this._layout && (t -= this._layout.spacingY);
}
this.node.height = -t;
}
};
r.SELECT_ITEM = "SELECT_ITEM";
r.SELECT_ITEM_NODE = "SELECT_ITEM_NODE";
r.SET_SELECT_ITEM_NODE = "SET_SELECT_ITEM_NODE";
r.ADD_NEW_ITEM = "ADD_NEW_ITEM";
n([ s(cc.ScrollView) ], r.prototype, "scrollView", void 0);
r = i = n([ a ], r);
o.default = r;
cc._RF.pop();
}, {} ],
Slider: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "cf87bnSQsNHEalTw4hVHXh/", "Slider");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Frame/Util"), {ccclass: s, menu: r, property: l} = cc._decorator;
let c = i = class extends cc.Slider {
constructor() {
super(...arguments);
this.step = 10;
this.min = 1;
this.max = 10;
this._value = 0;
}
get value() {
return this._value;
}
set value(e) {
e = a.Util.clamp(e, this.min, this.max);
this.progress = (e - this.min) / (this.max - this.min);
this._value = e;
this._updateHandlePosition();
this._onMove(this);
this.node.emit(i.MOVE, e);
}
onLoad() {
let e = new cc.Component.EventHandler();
e.target = this.node;
e.handler = "_onMove";
e.component = "Slider";
this.slideEvents.push(e);
}
setRange(e, t) {
this.min = e;
this.max = t;
}
_onMove(e) {
let t = a.Util.lerp01(this.min, this.max, this.progress), o = this.value != t;
this._value = t;
o && this.node.emit(i.MOVE, t);
}
_updateProgress(e) {
if (!this.handle) return;
let t = this.node;
var o = t.convertToNodeSpaceAR(e.getLocation());
let i = this._offset, n = 0;
n = 0 === this.direction ? a.Util.clamp01((o.x - i.x + t.anchorX * t.width) / t.width) : a.Util.clamp01((o.y - i.y + t.anchorY * t.height) / t.height);
if (this.step >= 2) {
let e = this.step - 1;
n = Math.round(n * e) / e;
}
this.progress = n;
}
_updateHandlePosition() {
if (this.handle) {
var e;
if (0 === this.direction) {
let t = this.node.width - this.handle.node.width;
e = cc.v2(-t * this.node.anchorX + this.progress * t, 0);
} else {
let t = this.node.height - this.handle.node.height;
e = cc.v2(0, -t * this.node.anchorY + this.progress * t);
}
var t = this.node.convertToWorldSpaceAR(e);
t = this.handle.node.parent.convertToNodeSpaceAR(t);
this.handle.node.position = t;
}
}
};
n([ l ], c.prototype, "step", void 0);
n([ l ], c.prototype, "min", void 0);
n([ l ], c.prototype, "max", void 0);
c = i = n([ s, r("自定义UI/Slider") ], c);
o.default = c;
cc._RF.pop();
}, {
"../Frame/Util": "Util"
} ],
SoundCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e36c4n8bUpEcbjaIlA9JoF7", "SoundCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/UIColor"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
this.node.on(n.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
this.label.string = e.name;
}
onStateChange(e) {
this.node.color = e ? a.UIColor.blue : a.UIColor.white;
}
};
i([ r(cc.Label) ], l.prototype, "label", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor"
} ],
Sound: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0c642bvj89CvLRQ5jfyWXBH", "Sound");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Sound = void 0;
const n = e("./Util");
(function(e) {
let t = new Map();
e.volume = .5;
e.play = function(o, a = !1) {
return i(this, void 0, void 0, function*() {
if (!o) return;
if (e.volume <= 0) return;
let i = t.get(o);
if (i) cc.audioEngine.play(i, a, .5 * e.volume); else {
let i = yield n.Util.loadBundleRes("Sound/" + o, cc.AudioClip);
t.set(o, i);
cc.audioEngine.play(i, !1, .5 * e.volume);
}
});
};
})(o.Sound || (o.Sound = {}));
cc._RF.pop();
}, {
"./Util": "Util"
} ],
Spark: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "45ca8cP3kJDBJkXOpWUmtek", "Spark");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.onAnimEndCallback = null;
}
onAnimEnd() {
this.onAnimEndCallback && this.onAnimEndCallback();
}
};
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
SpawnMonsterCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ee9771XF2xPD6gNpJecTzOL", "SpawnMonsterCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../GameScript/index"), a = e("../../../CustomUI/Button"), s = e("../../../Frame/SceneManager"), r = e("../../../Game/Player/Mng"), l = e("../EditWorldScene"), c = e("./SpawnMonsterItem"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.actBtn = null;
this.deleteBtn = null;
this.spawnMonster = null;
}
onLoad() {
this.actBtn.node.on(a.default.CLICK, this.onActBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
}
setData(e) {
this.spawnMonster = e;
this.updateActLabel();
}
updateActLabel() {
let e = s.default.ins.findScene(l.default).worldData.id, t = r.Mng.Ins.worldMng.getActorData(e, this.spawnMonster.actorId), o = t ? r.Mng.Ins.actorMng.getOne(t.data.confId) : null, i = o ? o.name : "请选择模版";
this.actBtn.label.string = i;
}
onActBtn() {
let e = s.default.ins.findScene(l.default);
e.saveToTempWorldDataMap();
s.default.ins.OpenPanelByName("ActOptionSelectWorldActPanel", t => {
t.setData("请选择敌人阵营角色", e.worldData.id, this.spawnMonster.actorId, [ n.ActType.Enemy ]);
t.selectCallBack = ((e, t) => {
if (t && t != this.spawnMonster.actorId) {
this.spawnMonster.actorId = t;
this.updateActLabel();
}
}).bind(this);
});
}
onDeleteBtn() {
let e = this.node.getComponentInParent(c.default);
e && e.removeSpawn(this.spawnMonster);
}
};
i([ h(a.default) ], p.prototype, "actBtn", void 0);
i([ h(a.default) ], p.prototype, "deleteBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/Mng": "Mng",
"../../../GameScript/index": "index",
"../EditWorldScene": "EditWorldScene",
"./SpawnMonsterItem": "SpawnMonsterItem"
} ],
SpawnMonsterItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "63b83pGQEdI169zOIHJpqIh", "SpawnMonsterItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../Frame/TweenUtil"), s = e("../../../Frame/Util"), r = e("./SpawnMonsterCell"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.createBtn = null;
this.spawnActorCell = null;
this.spawnMonsters = null;
}
onLoad() {
this.createBtn.node.on(n.default.CLICK, this.onCreateNewBtn, this);
}
setData(e, t) {
this.spawnMonsters = t || [];
this.nameLabel.string = e;
this.refreshActorList();
}
refreshActorList() {
s.Util.makeBro(this.spawnActorCell.node, this.spawnMonsters.length, (e, t) => {
e.getComponent(r.default).setData(this.spawnMonsters[t]);
});
}
onCreateNewBtn() {
this.spawnMonsters.push({
actorId: null
});
this.refreshActorList();
s.Util.updateAllLayout(this.node.parent);
let e = this.spawnActorCell.node.parent.children[this.spawnMonsters.length - 1];
a.TweenUtil.applyScaleBounce2(e, 1, 1.05);
}
removeSpawn(e) {
for (let t = 0; t < this.spawnMonsters.length; t++) if (this.spawnMonsters[t] == e) {
this.spawnMonsters.splice(t, 1);
this.refreshActorList();
s.Util.updateAllLayout(this.node.parent);
return;
}
}
};
i([ c(cc.Label) ], d.prototype, "nameLabel", void 0);
i([ c(n.default) ], d.prototype, "createBtn", void 0);
i([ c(r.default) ], d.prototype, "spawnActorCell", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/TweenUtil": "TweenUtil",
"../../../Frame/Util": "Util",
"./SpawnMonsterCell": "SpawnMonsterCell"
} ],
Spring: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7e5c0FDmStC2qgFROBISkNl", "Spring");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../CollisionEmiter"), r = e("../Player/Mng"), l = e("../World/Actor"), c = e("../World/Device"), d = e("../World/Tile"), {ccclass: h, property: p} = cc._decorator;
new cc.Vec2();
let u = i = class extends c.default {
constructor() {
super(...arguments);
this.sprite = null;
this.anim = null;
this.bouncing = !1;
this.testRect = cc.rect();
this.touchingColliders = [];
}
onLoad() {
this.anim = this.node.getComponent(cc.Animation);
this.anim.on(cc.Animation.EventType.FINISHED, this.onAnimEnd, this);
this.node.on(s.default.onCollisionEnter, this.onCollisionEnter, this);
this.node.on(s.default.onCollisionStay, this.onCollisionStay, this);
this.node.on(s.default.onCollisionExit, this.onCollisionExit, this);
}
onCollisionEnter(e, t) {
let o = e.world.aabb, n = t.world.aabb, a = this.testRect;
n.intersection(a, o);
if (a.width > 0 && a.height >= 0 && o.y + o.height / 2 > n.yMax) {
this.playBound();
this.touchingColliders.push(e);
let t = e.getComponent(l.default);
if (t) {
let e = t.PositionX - t.node.x, o = t.PositionY - t.node.y;
o < 0 && (o = 0);
t.SetPosition(t.node.x + e, t.node.y + o + a.height - 6);
t.node.emit(i.ENTERSPRING, this.data.extra.jumpHight);
}
}
}
onCollisionStay(e, t) {
if (!this.bouncing) return;
let o = e.world.aabb, i = t.world.aabb, n = this.testRect;
i.intersection(n, o);
let a = e.getComponent(l.default);
if (a) {
let e = a.PositionX - a.node.x, t = a.PositionY - a.node.y;
t < 0 && (t = 0);
a.SetPosition(a.node.x + e, a.node.y + t + n.height - 6);
}
}
onCollisionExit(e, t) {
let o = this.touchingColliders.indexOf(e);
o >= 0 && this.touchingColliders.splice(o, 1);
let n = e.getComponent(l.default);
n && n.node.emit(i.EXISTSPRING);
}
playBound() {
if (!this.bouncing) {
this.bouncing = !0;
this.anim.play();
}
}
onAnimEnd() {
this.bouncing = !1;
}
rebound() {
for (let e = 0; e < this.touchingColliders.length; e++) this.touchingColliders[e].node.emit(i.REBOUND, .5 * this.data.extra.jumpHight);
}
setData(e, t) {
const o = Object.create(null, {
setData: {
get: () => super.setData
}
});
return a(this, void 0, void 0, function*() {
o.setData.call(this, e, t);
(e = this.data).extra || (e.extra = {
jumpHight: 3 * d.default.SIZE,
scale: 1
});
e.extra.scale = e.extra.scale || 1;
this.node.scale = e.extra.scale;
yield r.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 64);
let i = this.sprite.node.height;
this.sprite.node.anchorY = (i - 64) / 2 / i;
});
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
jumpHight: 3 * d.default.SIZE,
scale: 1
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("缩放", n.extra.scale, .2, 8, e => {
n.extra.scale = e;
if (o) {
o.node.scale = e;
o.world.placeGizmos.setScale(e);
}
});
e.addNumberEditBox("反弹高度(格)", n.extra.jumpHight / d.default.SIZE, 1, 99, e => {
n.extra.jumpHight = e * d.default.SIZE;
});
}
};
u.REBOUND = "REBOUND";
u.ENTERSPRING = "ENTERSPRING";
u.EXISTSPRING = "EXISTSPRING";
n([ p({
override: !0,
type: cc.Sprite
}) ], u.prototype, "sprite", void 0);
u = i = n([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../CollisionEmiter": "CollisionEmiter",
"../Player/Mng": "Mng",
"../World/Actor": "Actor",
"../World/Device": "Device",
"../World/Tile": "Tile"
} ],
SpriteMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ded03aRUstF3JHqnO3k4oD3", "SpriteMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Util");
class a {
constructor() {
this.propmiseCache = new Map();
this.cache = new Map();
}
loadSpriteFrame(e) {
return i(this, void 0, void 0, function*() {
let t = this.cache.get(e);
if (!t) {
if (n.Util.isCdnPng(e)) {
let o = this.propmiseCache.get(e);
if (!o) {
o = n.Util.downLoadPng(e);
this.propmiseCache.set(e, o);
}
(t = yield o).getTexture().setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
this.propmiseCache.delete(e);
} else t = yield n.Util.loadBundleRes("Atlas/" + e, cc.SpriteFrame);
this.cache.set(e, t);
}
t || (t = yield n.Util.loadBundleRes("Atlas/UI/error", cc.SpriteFrame));
return t;
});
}
setSprite(e, t, o, n = 1.28) {
return i(this, void 0, void 0, function*() {
null == t && (t = "UI/error");
e.type = cc.Sprite.Type.SIMPLE;
e.sizeMode = cc.Sprite.SizeMode.RAW;
e.trim = !1;
if (e) {
e.spriteFrame = null;
e.__textureName__ = t;
}
let i = yield this.loadSpriteFrame(t);
if (i && e && e.node) {
o *= n;
if (e && e.__textureName__ == t) {
e.spriteFrame = i;
e.node.width = e.node.height = Math.ceil(o);
}
}
});
}
setTileSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setActorSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setWeaponSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setBullletSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setDeviceSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setPropSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
setShopSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o, 1);
});
}
setRankSprite(e, t, o) {
return i(this, void 0, void 0, function*() {
yield this.setSprite(e, t, o);
});
}
}
o.default = a;
a.UPDATE_SPRITE = "UPDATE_SPRITE";
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
StartPoint: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4b9a62gDM9GE4PovY22KcWv", "StartPoint");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/SceneManager"), s = e("../../Frame/Util"), r = e("./WorldNodeBody"), {ccclass: l, property: c} = cc._decorator;
let d = i = class extends r.default {
constructor() {
super(...arguments);
this.sprite = null;
this.data = null;
}
initInspector(e) {
e.addHead("占位主角", "UI/startPoint");
e.addButton("说明", "什么是占位主角?", () => {
a.default.ins.OpenPanelByName("AboutPanel", e => {
e.setData("主角编辑方式优化", i.about);
});
});
}
onLoad() {
super.onLoad();
}
onDestroy() {}
setCutting(e) {
this.sprite && (this.sprite.enabled = !e);
}
setData(e) {
this.world.isGameScene && (e = s.Util.deepCopy(e));
this.data = e;
}
};
d.about = '\n    Version 0.4.5 optimizes the process of creating plot games.\n    \n    When making a plot-oriented game, it is possible to put only one main character in the initial map, and no main character is placed in other maps. This way, when switching maps, the main character\'s attributes and weapons can be carried over to the second map. When the plot needs to change the protagonist, you can use the "switch protagonist" command.\n\n    Other details.\n\n    1. Compatible with older versions, if there is already a protagonist in the map, the protagonist in the map will be used first. If there is no protagonist in the map, the protagonist of the previous map will enter the map.\n\n    2. When switching protagonists, the blood and weapons of the old protagonist and the new protagonist are independent and will not affect each other.\n\n    3. The attributes of the switched protagonist are determined by the template. To change the attributes, please click the setting button at the bottom right corner of the character.\n    ';
n([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"./WorldNodeBody": "WorldNodeBody"
} ],
SubmitWorldPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "518d2jgLDBDbouIM4UkxNkS", "SubmitWorldPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/Panel"), r = e("../../Frame/Top"), {ccclass: l, property: c} = cc._decorator;
let d = class extends s.default {
constructor() {
super(...arguments);
this.editBox = null;
this.sumbitBtn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.sumbitBtn.node.on(a.default.CLICK, this.onSubmitBtn, this);
}
onSubmitBtn() {
return n(this, void 0, void 0, function*() {
let e = this.editBox.textLabel.string.trim();
if ("" != e) {
this.call && this.call(e);
this.closePanel();
} else r.default.showToast("多写几个字～");
});
}
};
i([ c(cc.EditBox) ], d.prototype, "editBox", void 0);
i([ c(a.default) ], d.prototype, "sumbitBtn", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top"
} ],
SummaryCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "57610mDtnBJYaBXQsJrb0gS", "SummaryCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Util"), l = e("../../Game/Player/GameIconMng"), c = e("../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.coinLabel = null;
this.saleCntLabel = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
if (e.type == a.SaleGoodsType.shopGoods) {
this.nameLabel.string = e.name;
this.coinLabel.string = "新增收入：" + e.earnCoin;
this.saleCntLabel.string = "新增下载：" + e.saleCnt;
c.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120);
} else if (e.type == a.SaleGoodsType.gameGoods) {
this.nameLabel.string = e.name;
this.coinLabel.string = "新增收入：" + e.earnCoin;
this.saleCntLabel.string = "新增购买：" + e.saleCnt;
"icon1" == e.textureName ? l.GameIconMng.Ins.setSprite(this.sprite, e.textureName, 120) : c.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120);
} else if (e.type == a.SaleGoodsType.gameReborn) {
this.coinLabel.string = "新增收入：" + e.earnCoin;
this.saleCntLabel.string = "复活次数" + e.saleCnt;
let t = yield c.Mng.Ins.gameMng.loadOne(e.gameId);
if (t) {
this.nameLabel.string = t.name;
c.Mng.Ins.spriteMng.setSprite(this.sprite, t.iconTextureName, 120);
} else {
this.nameLabel.string = "";
c.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120);
}
} else if (e.type == a.SaleGoodsType.gameAdvert) {
this.coinLabel.string = "新增收入：" + e.earnCoin;
this.saleCntLabel.string = "广告次数" + e.saleCnt;
this.nameLabel.string = r.Util.clampStr(e.name, 9, "..");
if (e.textureName) c.Mng.Ins.spriteMng.setSprite(this.sprite, e.textureName, 120); else {
let t = yield c.Mng.Ins.gameMng.loadOne(e.gameId);
t && c.Mng.Ins.spriteMng.setSprite(this.sprite, t.iconTextureName, 120);
}
}
});
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "coinLabel", void 0);
i([ h(cc.Label) ], p.prototype, "saleCntLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/GameIconMng": "GameIconMng",
"../../Game/Player/Mng": "Mng"
} ],
SummaryPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "64d11/jlmtHMLIlCmMa2GBp", "SummaryPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/CoinBar"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/Panel"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends c.default {
constructor() {
super(...arguments);
this.list = null;
this.okBtn = null;
}
onLoad() {
super.onLoad();
this.okBtn.node.on(s.default.CLICK, this.onOkBtn, this);
this.list.getPrefabName = e => e instanceof a.SaleSummary ? "SummaryCell" : "SummaryTitleCell";
}
onEnable() {
r.default.Ins.show(50);
}
onDisable() {
r.default.Ins.hide();
}
setData(e, t, o, i) {
return n(this, void 0, void 0, function*() {
yield d.Mng.Ins.gameMng.loadAll();
let n = [];
if (e.length) {
n.push({
title: "售卖素材："
});
n = n.concat(e);
}
if (t.length) {
n.push({
title: "游戏内购："
});
n = n.concat(t);
}
if (o.length) {
n.push({
title: "玩家复活："
});
n = n.concat(o);
}
if (i.length) {
n.push({
title: "激励广告："
});
n = n.concat(i);
}
this.list.setDataArr(n);
});
}
onOkBtn() {
this.closePanel();
}
};
i([ p(l.default) ], u.prototype, "list", void 0);
i([ p(s.default) ], u.prototype, "okBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/CoinBar": "CoinBar",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Game/Player/Mng": "Mng"
} ],
SummaryTitleCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "89bb9DznVZFT4g4g4gR4vXm", "SummaryTitleCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.label.string = e.title;
}
};
i([ s(cc.Label) ], r.prototype, "label", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList"
} ],
SyncNode: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c578cambNRGNI7gSrx2ogKV", "SyncNode");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this.target = null;
this.always = !1;
}
onLoad() {
if (this.target) {
this.target.on(cc.Node.EventType.POSITION_CHANGED, () => {
this.node.position = this.target.position;
}, this);
this.target.on(cc.Node.EventType.SIZE_CHANGED, () => {
this.node.width = this.target.width;
this.node.height = this.target.height;
}, this);
this.target.on(cc.Node.EventType.ANCHOR_CHANGED, () => {
this.node.anchorX = this.target.anchorX;
this.node.anchorY = this.target.anchorY;
}, this);
}
}
update() {
this.always && this.sync();
}
sync() {
if (this.target) {
this.node.position = this.target.position;
this.node.width = this.target.width;
this.node.height = this.target.height;
this.node.anchorX = this.target.anchorX;
this.node.anchorY = this.target.anchorY;
}
}
};
i([ a(cc.Node) ], s.prototype, "target", void 0);
i([ a ], s.prototype, "always", void 0);
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
TGA: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "dbca37n6ipMH5GMve2hOgtI", "TGA");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TGA = void 0;
const i = e("./Frame/CrossPlatform"), n = e("./Game/GameEnv"), a = e("./Game/Hortor"), s = e("./Role");
(function(e) {
e.track = function(e, t = {}) {
t.ver = n.gameEnv.creatorVersion;
t.cyId = s.default.Ins.role.id;
t.stamp = orange.TimeUtil.serverTime;
t.loginType = a.Hortor.loginPlatType;
i.tt && (t.game_channel = "tt");
i.wx && (t.game_channel = "wx");
a.Hortor.tgaTrack(e, t);
};
e.userSet = function(e = {}) {
a.Hortor.userSet(e);
};
})(o.TGA || (o.TGA = {}));
cc._RF.pop();
}, {
"./Frame/CrossPlatform": "CrossPlatform",
"./Game/GameEnv": "GameEnv",
"./Game/Hortor": "Hortor",
"./Role": "Role"
} ],
TagCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b96f6iIXydMW4idDX5m6j3R", "TagCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Util"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
setTag(e, t) {
this.key = e;
this.str = t;
this.label.string = t;
n.Util.updateLabel(this.label);
this.node.width = this.label.node.width + 30;
n.Util.updateAllWidget(this.node);
}
};
i([ s(cc.Label) ], r.prototype, "label", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../Frame/Util": "Util"
} ],
TalkCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3bbbd0pQOVBRrzX26iapZI5", "TalkCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../../i18n/i18nMgr"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/HeadIcon"), d = e("../../../CustomUI/ScrollList"), h = e("../../../Frame/SceneManager"), p = e("../../../Frame/UIColor"), u = e("../../../Frame/Util"), m = e("../../../Game/OperationFlow"), f = e("../../../Game/Player/TalkMng"), g = e("../../../TGA"), y = e("./TalkSectionGame"), v = e("./TalkSectionGoods"), C = e("./TalkSectionImgs"), _ = e("./TalkSectionProject"), S = e("./TalkSectionText"), {ccclass: I, property: G} = cc._decorator;
let T = i = class extends cc.Component {
constructor() {
super(...arguments);
this.content = null;
this.titleLabel = null;
this.sectionPrefabs = [];
this.bestSubTalk = null;
this.top = null;
this.chosen = null;
this.official = null;
this.headIcon = null;
this.nameLabel = null;
this.timeLabel = null;
this.menuBtn = null;
this.commentCntlabel = null;
this.upBtn = null;
this.subTalkLabel = null;
this.stateLabel = null;
this.publishedStateNode = null;
this.sectionText = null;
this.sectionImgs = null;
this.sectionGame = null;
this.sectionGoods = null;
this.sectionProject = null;
this.data = null;
}
onLoad() {
this.node.on(d.default.SET_DATA, this.setData, this);
this.node.on(l.default.CLICK, this.onClick, this);
this.headIcon.node.on(l.default.CLICK, this.enterFriendScene, this);
this.menuBtn.node.on(l.default.CLICK, () => {
f.default.Ins.onMenuBtn(this.data, this.menuBtn);
}, this);
this.upBtn.node.on(l.default.CLICK, this.onUpBtn, this);
this.stateLabel.node.on(l.default.CLICK, this.onStateBtn, this);
for (let e = 0; e < this.sectionPrefabs.length; e++) {
let t = this.sectionPrefabs[e], o = cc.instantiate(t);
o.x = 0;
this.content.addChild(o);
}
this.sectionPrefabs = [];
this.sectionText = this.content.getComponentInChildren(S.default);
this.sectionImgs = this.content.getComponentInChildren(C.default);
this.sectionGame = this.content.getComponentInChildren(y.default);
this.sectionGoods = this.content.getComponentInChildren(v.default);
this.sectionProject = this.content.getComponentInChildren(_.default);
this.sectionProject.showWorlds = !1;
}
setData(e, t = !1) {
this.data = e;
if (!t) {
this.timeLabel.string = u.Util.parseDataString(e.upStamp);
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
this.nameLabel.string = u.Util.clampStr(e.userName, 10, "..");
this.top.active = e.isTop;
this.chosen.active = e.talkType == r.TalkType.chosen;
this.official.active = e.talkType == r.TalkType.official;
}
this.titleLabel.string = e.title;
u.Util.updateLabel(this.titleLabel);
let o = e.simpleContent;
this.sectionText.node.active = !!o.text;
this.sectionText.setData({
type: f.TalkSectionType.Text,
text: o.text
});
let i = o.specialSection || o.firstSection, n = null == i ? void 0 : i.type;
this.sectionImgs.node.active = n == f.TalkSectionType.Imgs;
this.sectionGame.node.active = n == f.TalkSectionType.Game;
this.sectionGoods.node.active = n == f.TalkSectionType.Goods;
this.sectionProject.node.active = n == f.TalkSectionType.Project;
switch (n) {
case f.TalkSectionType.Text:
this.sectionText.setData(i);
break;

case f.TalkSectionType.Imgs:
t ? this.sectionImgs.node.height = this.sectionImgs.calcuH(i) : this.sectionImgs.setData(i);
break;

case f.TalkSectionType.Game:
t || this.sectionGame.setData(i);
break;

case f.TalkSectionType.Goods:
t || this.sectionGoods.setData(i);
break;

case f.TalkSectionType.Project:
t && (this.sectionProject.showWorlds = !1);
this.sectionProject.setData(i);
}
if (e.comments && e.comments.length && e.comments[0].content) {
let t = e.comments[0].content;
this.subTalkLabel.string = t.msg;
this.bestSubTalk.active = !0;
u.Util.updateLabel(this.subTalkLabel);
} else this.bestSubTalk.active = !1;
if (!t) {
this.stateLabel.node.getComponent(l.default).interactable = !1;
this.stateLabel.string = "";
this.stateLabel.node.color = p.UIColor.black;
this.publishedStateNode.active = !1;
this.refreshUpDown();
switch (e.status) {
case r.ManReviewStatus.noPublish:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("未发布");
break;

case r.ManReviewStatus.inReview:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核中");
this.stateLabel.node.color = p.UIColor.black;
break;

case r.ManReviewStatus.success:
this.publishedStateNode.active = !0;
this.commentCntlabel.string = e.commentsCntSum + s.I18nMgr.getI18nStringByZh("评论");
break;

case r.ManReviewStatus.fail:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("审核未通过");
this.stateLabel.node.color = p.UIColor.red;
this.stateLabel.node.getComponent(l.default).interactable = !0;
break;

case r.ManReviewStatus.off:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("已下架");
break;

case r.ManReviewStatus.delete:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("已被删除");
break;

case r.ManReviewStatus.unknown:
this.stateLabel.string = s.I18nMgr.getI18nStringByZh("未知错误");
}
}
u.Util.updateAllLayout(this.node);
}
refreshUpDown() {
cc.warn(this.data);
let e = this.data;
this.upBtn.label.string = Math.max(e.upCnt, 0) + s.I18nMgr.getI18nStringByZh("点赞");
this.upBtn.icon.node.color = e.isUp ? p.UIColor.blue : p.UIColor.white;
}
calcuHeight(e) {
let t = i.calcuHeightCache.get(e.uId);
if (!t) {
this.setData(e, !0);
t = this.node.height;
i.calcuHeightCache.set(e.uId, t);
}
return t;
}
onClick() {
g.TGA.track("Talk", {
step: "clickTalkCell"
});
h.default.ins.Enter("TalkScene", e => {
e.setData(this.data.uId);
}, h.ShiftAnima.moveLeftShift);
}
enterFriendScene() {
this.data && h.default.ins.Enter("FriendScene", e => {
e.setData(this.data.playerId);
}, h.ShiftAnima.moveLeftShift);
}
onUpBtn() {
return a(this, void 0, void 0, function*() {
if (this.data.isUp) yield f.default.Ins.cancelUpTalk(this.data.uId); else if (this.data.isDown) yield f.default.Ins.cancelDownTalk(this.data.uId); else {
yield f.default.Ins.upTalk(this.data.uId);
g.TGA.track("Talk", {
step: "clickThumbBtn1"
});
}
this.setData(this.data);
});
}
onStateBtn() {
return a(this, void 0, void 0, function*() {
h.default.ins.OpenPanelByName("ReviewFailReasonPanel", e => {
let t = m.OperationFlow.makeOffReason(this.data.offReason);
e.setData(t);
});
});
}
};
T.calcuHeightCache = new Map();
n([ G(cc.Node) ], T.prototype, "content", void 0);
n([ G(cc.Label) ], T.prototype, "titleLabel", void 0);
n([ G([ cc.Prefab ]) ], T.prototype, "sectionPrefabs", void 0);
n([ G(cc.Node) ], T.prototype, "bestSubTalk", void 0);
n([ G(cc.Node) ], T.prototype, "top", void 0);
n([ G(cc.Node) ], T.prototype, "chosen", void 0);
n([ G(cc.Node) ], T.prototype, "official", void 0);
n([ G(c.default) ], T.prototype, "headIcon", void 0);
n([ G(cc.Label) ], T.prototype, "nameLabel", void 0);
n([ G(cc.Label) ], T.prototype, "timeLabel", void 0);
n([ G(l.default) ], T.prototype, "menuBtn", void 0);
n([ G(cc.Label) ], T.prototype, "commentCntlabel", void 0);
n([ G(l.default) ], T.prototype, "upBtn", void 0);
n([ G(cc.Label) ], T.prototype, "subTalkLabel", void 0);
n([ G(cc.Label) ], T.prototype, "stateLabel", void 0);
n([ G(cc.Node) ], T.prototype, "publishedStateNode", void 0);
T = i = n([ I ], T);
o.default = T;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../TGA": "TGA",
"./TalkSectionGame": "TalkSectionGame",
"./TalkSectionGoods": "TalkSectionGoods",
"./TalkSectionImgs": "TalkSectionImgs",
"./TalkSectionProject": "TalkSectionProject",
"./TalkSectionText": "TalkSectionText"
} ],
TalkCommentCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "9f028cyJc1OhKfzrnWQpuT/", "TalkCommentCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/Button"), r = e("../../../CustomUI/HeadIcon"), l = e("../../../CustomUI/ScrollList"), c = e("../../../Frame/CrossPlatform"), d = e("../../../Frame/SceneManager"), h = e("../../../Frame/Top"), p = e("../../../Frame/UIColor"), u = e("../../../Frame/Util"), m = e("../../../Frame/Vibrate"), f = e("../../../Game/OperationFlow"), g = e("../../../Game/Player/DynamicMng"), y = e("../../../Game/Player/LifeMng"), v = e("../../../Game/Player/Mng"), C = e("../../../Game/Player/TalkMng"), _ = e("../../../Game/World/Actor"), S = e("../../../GameData/GameTypeDefine"), I = e("../../../Role"), G = e("../../../TGA"), T = e("./TalkCommentMng"), {ccclass: b, property: M} = cc._decorator;
let P = class extends cc.Component {
constructor() {
super(...arguments);
this.isSub = !1;
this.headIcon = null;
this.nameLabel = null;
this.pointer = null;
this.targetNameLabel = null;
this.commentLabel = null;
this.timeLabel = null;
this.worldNode = null;
this.worldNameLabel = null;
this.playBtn = null;
this.editBtn = null;
this.likeBtn = null;
this.data = null;
this.touching = !1;
this.moved = !1;
this.popMenu = !1;
this.touchStartStamp = 0;
}
onLoad() {
this.node.on(l.default.SET_DATA, this.setData, this);
this.likeBtn.node.on(s.default.CLICK, this.onLikeBtn, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtn, this);
this.editBtn.node.on(s.default.CLICK, this.onEditBtn, this);
this.headIcon.node.on(s.default.CLICK, this.onHeadIcon, this);
this.nameLabel.node.on(s.default.CLICK, this.onHeadIcon, this);
this.targetNameLabel && this.targetNameLabel.node.on(s.default.CLICK, this.onTargetNameLabel, this);
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
}
setData(e) {
this.unscheduleAllCallbacks();
this.data = e;
let t = e.content, o = e.reportCnt < 5 ? t.msg : "给大佬递茶！";
this.commentLabel.string = o;
u.Util.updateLabel(this.commentLabel);
this.headIcon.loadUrl(e.userImg);
this.headIcon.setLevel(e.userLevel);
this.nameLabel.string = e.userName;
u.Util.updateLabel(this.nameLabel);
if (this.pointer && this.targetNameLabel) if (e.targetPlayerId) {
this.targetNameLabel.node.active = !0;
this.pointer.active = !0;
f.OperationFlow.setNameLabel(this.targetNameLabel, e.targetPlayerName, e.targetPlayerId);
u.Util.updateLabel(this.targetNameLabel);
u.Util.updateAllLayout(this.targetNameLabel.node.parent);
} else {
this.pointer.active = !1;
this.targetNameLabel.node.active = !1;
}
let i = -this.commentLabel.node.y + this.commentLabel.node.height + 10, n = t.worldData;
if (n) {
this.worldNode.active = !0;
this.worldNode.y = -i;
i += this.worldNode.height;
i += 10;
this.worldNameLabel.string = n.info.name;
} else this.worldNode.active = !1;
this.timeLabel.node.y = -i;
i += this.timeLabel.node.height;
this.node.height = i;
this.timeLabel.string = u.Util.parseDataString(e.stamp) + a.I18nMgr.getI18nStringByZh("    回复");
this.refreshLikeBtn();
}
refreshLikeBtn() {
this.likeBtn.label.string = this.data.thumbCnt + "";
let e = T.TalkCommentMng.Ins.isLike(this.data.talkId, this.data.id);
this.likeBtn.background.node.color = e ? p.UIColor.red : p.UIColor.gray;
}
onLikeBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.talkId, t = this.data.id;
if (T.TalkCommentMng.Ins.isLike(e, t)) {
yield T.TalkCommentMng.Ins.unlike(e, t);
this.data.thumbCnt--;
} else {
yield T.TalkCommentMng.Ins.like(e, t);
this.data.thumbCnt++;
G.TGA.track("commentThumb", {
gameId: this.data.talkId,
commentId: this.data.id
});
}
this.refreshLikeBtn();
});
}
onHeadIcon() {
this.data && d.default.ins.Enter("FriendScene", e => {
e.setData(this.data.playerId);
}, d.ShiftAnima.moveLeftShift);
}
onTargetNameLabel() {
this.data && d.default.ins.Enter("FriendScene", e => {
e.setData(this.data.targetPlayerId);
}, d.ShiftAnima.moveLeftShift);
}
onTouchStart(e) {
this.touching = !0;
this.moved = !1;
this.popMenu = !1;
this.touchStartStamp = orange.TimeUtil.serverTime;
this.scheduleOnce(() => {
if (!this.moved && this.touching) {
this.touching = !1;
this.popMenu = !0;
this.onHold();
}
}, .5);
}
onTouchMove(e) {
if (e.getLocation().sub(e.getStartLocation()).magSqr() > 100) {
this.moved = !0;
this.node.color = cc.color(255, 255, 255);
}
}
onTouchEnd(e) {
this.touching = !1;
this.moved || this.popMenu || this.onCommentBtn();
this.node.color = cc.color(255, 255, 255);
}
onHold() {
m.Vibrate.short();
d.default.ins.OpenPanelByName("MenuPanel", e => n(this, void 0, void 0, function*() {
let t = [ {
name: "复制",
call: () => {
c.crossPlatform.setClipboardData({
data: this.data.content.msg,
success: () => {
h.default.showToast("已复制到剪贴板");
}
});
}
}, {
name: "举报",
call: () => {
d.default.ins.Enter("ReportScene", e => {
e.initReportTalk(this.data.id);
}, d.ShiftAnima.moveLeftShift);
}
} ], o = yield C.default.Ins.loadTalkDetail(this.data.talkId);
(this.data.playerId == I.default.Ins.role.id || o.playerId == I.default.Ins.role.id || g.DynamicMng.Ins.isGmPlayer()) && t.push({
name: "删除",
call: () => n(this, void 0, void 0, function*() {
yield T.TalkCommentMng.Ins.deleteComment(this.data.id);
h.default.showToast("已删除");
cc.game.emit(C.default.Talk_Refresh);
})
});
e.setData(t);
}));
}
update() {
if (this.touching && !this.moved) {
let e = 255 - 20 * (orange.TimeUtil.serverTime - this.touchStartStamp) / 1e3 / .5;
this.node.color = cc.color(e, e, e);
}
}
onCommentBtn() {
this.node.dispatchEvent(u.Util.customEvent("showKeyBoard"));
u.Util.showKeyBoard("", e => n(this, void 0, void 0, function*() {
this.node.dispatchEvent(u.Util.customEvent("showKeyBoardEnd"));
if ("" == e) return;
let t = {
msg: e
};
if (yield T.TalkCommentMng.Ins.sendComment(this.data.talkId, this.data.id, t)) {
cc.game.emit(C.default.Talk_Refresh);
G.TGA.track("comment", {
gameId: this.data.talkId,
commentId: this.data.id,
cnt: e.length
});
}
}));
}
onPlayBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.content;
yield v.Mng.switchTalkProject(e.gameId);
let t = yield v.Mng.Ins.gameMng.loadOne(e.gameId), o = e.worldData, i = o.worldLayout, n = null;
for (let e = 0; e < i.actors.length; e++) {
let t = i.actors[e];
if (t && t.data.team == S.Team.Hero) {
n = t;
break;
}
}
n ? this.play(t, o, n) : d.default.ins.OpenPanelByName("SelectHeroPanel", e => {
e.titleLabel.string = "选择主角，开始测试";
e.setData(null);
e.selectCall = e => {
n = _.default.createActorData(e, S.Team.Hero, o.worldLayout);
this.play(t, o, n);
};
});
});
}
play(e, t, o) {
v.Mng.Ins.worldMng.tempCache.set(t.id, t);
d.default.ins.Enter("GameScene", i => {
i.mode = "Test";
y.LifeMng.Ins.setLife(e.id, y.LifeMng.Ins.max);
i.play(e, t.id, o);
});
}
onEditBtn() {
return n(this, void 0, void 0, function*() {
let e = (yield C.default.Ins.loadTalkDetail(this.data.talkId)).playerId == I.default.Ins.role.id, t = this.data.content;
yield v.Mng.switchTalkProject(t.gameId);
let o = yield v.Mng.Ins.gameMng.loadOne(t.gameId), i = t.worldData;
i.info.selectedActorGroup = o.name;
d.default.ins.Enter("EditWorldScene", t => {
t.setDataByTalkProject(e, o, i);
t.submitCall = (e, t) => n(this, void 0, void 0, function*() {
(i = u.Util.deepCopy(i)).worldLayout = t;
let n = {
msg: e,
gameId: o.id,
worldData: i
};
yield T.TalkCommentMng.Ins.sendComment(this.data.talkId, this.data.id, n);
cc.game.emit(C.default.Talk_Refresh);
});
t.applyCall = (e, t) => n(this, void 0, void 0, function*() {
(i = u.Util.deepCopy(i)).worldLayout = t;
i.layoutMin = u.Util.zip(t);
if ("test" == i.id) {
i.id = "";
yield v.Mng.Ins.worldMng.create(i, o);
} else yield v.Mng.Ins.worldMng.save(i, !0);
let n = {
msg: e
};
yield T.TalkCommentMng.Ins.sendComment(this.data.talkId, this.data.id, n);
cc.game.emit(C.default.Talk_Refresh);
});
});
});
}
onDownloadBtn() {
return n(this, void 0, void 0, function*() {
d.default.ins.OpenPanelByName("");
});
}
calcuHeight(e) {
let t = e.content, o = e.reportCnt < 5 ? t.msg : "给大佬递茶！";
this.calcuHeightCache || (this.calcuHeightCache = new Map());
let i = this.calcuHeightCache.get(o);
if (!i) {
i = 80;
this.commentLabel.string = o;
u.Util.updateLabel(this.commentLabel);
i = -this.commentLabel.node.y + this.commentLabel.node.height + 10;
if (t.worldData) {
i += this.worldNode.height;
i += 10;
}
i += this.timeLabel.node.height;
this.calcuHeightCache.set(o, i);
}
return i;
}
};
i([ M ], P.prototype, "isSub", void 0);
i([ M(r.default) ], P.prototype, "headIcon", void 0);
i([ M(cc.Label) ], P.prototype, "nameLabel", void 0);
i([ M(cc.Node) ], P.prototype, "pointer", void 0);
i([ M(cc.Label) ], P.prototype, "targetNameLabel", void 0);
i([ M(cc.Label) ], P.prototype, "commentLabel", void 0);
i([ M(cc.Label) ], P.prototype, "timeLabel", void 0);
i([ M(cc.Node) ], P.prototype, "worldNode", void 0);
i([ M(cc.Label) ], P.prototype, "worldNameLabel", void 0);
i([ M(s.default) ], P.prototype, "playBtn", void 0);
i([ M(s.default) ], P.prototype, "editBtn", void 0);
i([ M(s.default) ], P.prototype, "likeBtn", void 0);
P = i([ b ], P);
o.default = P;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Frame/Vibrate": "Vibrate",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/LifeMng": "LifeMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../Game/World/Actor": "Actor",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../../Role": "Role",
"../../../TGA": "TGA",
"./TalkCommentMng": "TalkCommentMng"
} ],
TalkCommentMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "bce6ao9zvpItp4WshY+CP6C", "TalkCommentMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TalkCommentMng = void 0;
const n = e("../../../../scripts/_autogen/cmd/cmd"), a = e("../../../Frame/CrossPlatform"), s = e("../../../Frame/NetworkMgr"), r = e("../../../Frame/Top"), l = e("../../../Game/Hortor"), c = e("../../../Game/OperationFlow"), d = e("../../../Game/Player/CreditMng"), h = e("../../../Game/Player/DynamicMng"), p = e("../../../Game/Player/TalkMng"), u = e("../../../TGA");
class m {
constructor() {
this.newCommentCnt = 0;
this.lastCommentStamp = 0;
this.talkData = null;
this.likeMap = new Map();
}
init(e) {
this.talkData = e;
}
sendComment(e, t, o) {
return i(this, void 0, void 0, function*() {
if (h.DynamicMng.Ins.isDisable(h.FunctionEnum.PublishTalkComment, !0)) return !1;
if (l.Hortor.isVisitor()) {
c.OperationFlow.openVisitorPanel();
return;
}
if (orange.TimeUtil.serverTime - this.lastCommentStamp < 1e4) {
r.default.showToast("你发消息太快了！");
return !1;
}
if (d.CreditMng.Ins.credit < 2) {
r.default.showToast("近期违规，不能发表评论");
return !1;
}
r.default.showLoading("发送中");
let i = null;
if (t) {
let a = {
talkId: e,
commentId: t,
content: o,
reviewStr: o.msg,
reviewImageMap: new Map()
};
i = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ReplyTalkComment,
params: a
}, n.Game_RReplyTalkComment);
} else {
let t = {
talkId: e,
content: o,
reviewStr: o.msg,
reviewImageMap: new Map()
};
i = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CommentTalk,
params: t
}, n.Game_RCommentTalk);
}
if (i) {
u.TGA.track("Talk", {
step: "comment"
});
let e = i.comment;
if (i.sensitiveWords && i.sensitiveWords.length > 0) {
r.default.hideLoading("发现敏感词：" + i.sensitiveWords.join(","));
return !1;
}
this.lastCommentStamp = orange.TimeUtil.serverTime;
if (t) for (let o = 0; o < this.talkData.comments.length; o++) {
let i = this.talkData.comments[o];
if (i.id == t) {
this.talkData.commentsCntSum++;
i.subCommentsCnt++;
i.openCnt++;
i.comments.unshift(e);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCntSum", this.talkData.commentsCntSum);
break;
}
for (let o = 0; o < i.comments.length; o++) if (i.comments[o].id == t) {
this.talkData.commentsCntSum++;
i.subCommentsCnt++;
i.openCnt++;
i.comments.splice(o + 1, 0, e);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCntSum", this.talkData.commentsCntSum);
break;
}
} else {
this.talkData.commentsCntSum++;
this.talkData.commentsCnt++;
this.talkData.comments.unshift(e);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCntSum", this.talkData.commentsCntSum);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCnt", this.talkData.commentsCnt);
}
r.default.hideLoading();
return !0;
}
r.default.hideLoading("发送失败");
return !1;
});
}
deleteComment(e) {
return i(this, void 0, void 0, function*() {
let t = {
commentId: e
};
if (yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelTalkComment,
params: t
}, n.Game_RDelTalkComment)) for (let t = 0; t < this.talkData.comments.length; t++) {
let o = this.talkData.comments[t];
if (o.id == e) {
this.talkData.commentsCntSum -= o.subCommentsCnt + 1;
this.talkData.commentsCnt--;
this.talkData.comments.splice(t, 1);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCntSum", this.talkData.commentsCntSum);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCnt", this.talkData.commentsCnt);
p.default.Ins.deleteCacheComment(e);
break;
}
for (let t = 0; t < o.comments.length; t++) if (o.comments[t].id == e) {
this.talkData.commentsCntSum--;
o.subCommentsCnt--;
o.openCnt--;
o.comments.splice(t, 1);
p.default.Ins.updateCacheProperty(this.talkData.uId, "commentsCntSum", this.talkData.commentsCntSum);
p.default.Ins.deleteCacheComment(e);
break;
}
}
});
}
loadComment(e) {
return i(this, void 0, void 0, function*() {
let t = this.talkData.comments.length, o = t + 6;
if (t >= this.talkData.commentsCnt) return;
let i = {
talkId: e,
start: t,
end: o
}, a = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadTalkComment,
params: i
}, n.Game_RLoadTalkComment);
if (a) for (let e = 0; e < a.comments.length; e++) {
let t = a.comments[e];
this.talkData.comments.find(e => e.id == t.id) || this.talkData.comments.push(t);
}
});
}
loadSubTalkComment(e) {
return i(this, void 0, void 0, function*() {
let t = this.talkData.comments.find(t => t.id == e);
if (t) {
let o = t.comments, i = o.length, a = i + 5;
if (i >= t.subCommentsCnt) return t.comments;
let r = {
commentId: e,
start: i,
end: a
}, l = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadTalkSubComment,
params: r
}, n.Game_RLoadTalkSubComment);
if (l) for (let e = 0; e < l.comments.length; e++) {
let t = l.comments[e];
o.find(e => e.id == t.id) || o.push(t);
}
return o;
}
return [];
});
}
loadFirstLevelCommentById(e) {
return i(this, void 0, void 0, function*() {
for (let t = 0; t < this.talkData.comments.length; t++) {
let o = this.talkData.comments[t];
if (o.id == e) return o;
let i = o.comments;
for (let t = 0; t < i.length; t++) if (i[t].id == e) return o;
}
let t = {
commentId: e
}, o = yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_LoadFirstLevelTalkComment,
params: t
}, n.Game_RLoadFirstLevelTalkComment);
if (o && o.comment) {
let t = this.talkData.comments.findIndex(t => t.id == e);
t >= 0 && this.talkData.comments.splice(t, 1);
this.talkData.comments.unshift(o.comment);
return o.comment;
}
return null;
});
}
isLike(e, t) {
return !!this.loadLikeData(e)[t];
}
loadLikeData(e) {
let t = this.likeMap.get(e);
if (!t) {
t = a.crossPlatform.getStorageSync("talkCommentLikeData" + e) || {};
this.likeMap.set(e, t);
}
return t;
}
saveLikeData(e, t) {
a.crossPlatform.setStorageSync("talkCommentLikeData" + e, t);
}
like(e, t) {
return i(this, void 0, void 0, function*() {
r.default.blockInput(!0, "likeComment");
let o = {
commentId: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ThumbTalkComment,
params: o
}, n.Game_RThumbTalkComment);
let i = this.loadLikeData(e);
i[t] = !0;
this.saveLikeData(e, i);
r.default.blockInput(!1, "likeComment");
});
}
unlike(e, t) {
return i(this, void 0, void 0, function*() {
r.default.blockInput(!0, "unlikeComment");
let o = {
commentId: t
};
yield s.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelThumbTalkComment,
params: o
}, n.Game_RCancelThumbTalkComment);
let i = this.loadLikeData(e);
delete i[t];
this.saveLikeData(e, i);
r.default.blockInput(!1, "unlikeComment");
});
}
}
o.TalkCommentMng = m;
m.Ins = new m();
cc._RF.pop();
}, {
"../../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/NetworkMgr": "NetworkMgr",
"../../../Frame/Top": "Top",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../TGA": "TGA"
} ],
TalkCommentMoreCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "02805i10JhMPrY3XUhg23eg", "TalkCommentMoreCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TalkCommentMoreCellData = void 0;
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/Button"), r = e("../../../CustomUI/ScrollList"), l = e("../../../Frame/Util"), c = e("../../../Game/Player/TalkMng"), d = e("./TalkCommentMng"), {ccclass: h, property: p} = cc._decorator;
o.TalkCommentMoreCellData = class {};
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.moreBtn = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.moreBtn.node.on(s.default.CLICK, this.onMoreBtn, this);
}
setData(e) {
this.data = e;
let t = e.comment;
if (t.openCnt < t.subCommentsCnt) {
this.moreBtn.label.string = a.I18nMgr.exceI18nStringByZh("展开${comment.subCommentsCnt - comment.openCnt}条回复", [ {
paramName: "comment.subCommentsCnt - comment.openCnt",
param: t.subCommentsCnt - t.openCnt
} ]);
this.moreBtn.icon.node.angle = 90;
} else {
this.moreBtn.label.string = "收起";
this.moreBtn.icon.node.angle = -90;
}
l.Util.updateLabel(this.moreBtn.label);
l.Util.updateAllLayout(this.moreBtn.node);
}
onMoreBtn() {
return n(this, void 0, void 0, function*() {
let e = this.data.comment;
if (this.moreBtn.label.string.includes(a.I18nMgr.getI18nStringByZh("展开"))) {
let t = yield d.TalkCommentMng.Ins.loadSubTalkComment(e.id);
e.openCnt = Math.min(t.length, e.openCnt + 5);
} else e.openCnt = 0;
cc.game.emit(c.default.Talk_Refresh);
});
}
};
i([ p(s.default) ], u.prototype, "moreBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Util": "Util",
"../../../Game/Player/TalkMng": "TalkMng",
"./TalkCommentMng": "TalkCommentMng"
} ],
TalkDraftCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d5c2cP87vJOaaMwm5+ycul0", "TalkDraftCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Frame/Util"), d = e("../../Game/Player/TalkDraftMng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.titleLabel = null;
this.deleteBtn = null;
this.editBtn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
this.editBtn.node.on(a.default.CLICK, this.onEditBtn, this);
}
setData(e) {
this.data = e;
this.titleLabel.string = c.Util.clampStr(e.title, 30, "..");
}
onDeleteBtn() {
r.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "提示";
e.label.string = "是否删除此草稿？";
e.setLeftBtn({
text: "删除",
color: l.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
d.default.Ins.deleteDraft(this.data.id);
this.node.dispatchEvent(c.Util.customEvent("TalkDraftCell.deleteDraft"));
})
});
e.setRightBtn({
text: "点错了",
color: l.UIColor.blue
});
});
}
onEditBtn() {
let e = this.data;
r.default.ins.popPanel();
r.default.ins.Enter("EditTalkScene", t => {
t.toModifyStyleByDraft(e);
}, r.ShiftAnima.moveLeftShift);
}
};
i([ p(cc.Label) ], u.prototype, "titleLabel", void 0);
i([ p(a.default) ], u.prototype, "deleteBtn", void 0);
i([ p(a.default) ], u.prototype, "editBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/TalkDraftMng": "TalkDraftMng"
} ],
TalkDraftMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "818bcc80ShLMr0MfNetm30t", "TalkDraftMng");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/CrossPlatform"), {ccclass: s, property: r} = cc._decorator;
let l = i = class {
constructor() {
this.localKey = "talkDraftList";
}
loadDraftList() {
return a.crossPlatform.getStorageSync(this.localKey) || [];
}
addDraft(e) {
let t = this.loadDraftList();
t.unshift(e);
a.crossPlatform.setStorageSync(this.localKey, t);
}
deleteDraft(e) {
let t = this.loadDraftList();
t = t.filter(t => t.id != e);
a.crossPlatform.setStorageSync(this.localKey, t);
}
deleteDraftByTalkId(e) {
let t = this.loadDraftList();
for (let o = 0; o < t.length; o++) t[o].talkId == e && t.splice(o--, 1);
a.crossPlatform.setStorageSync(this.localKey, t);
}
saveDraft(e) {
let t = this.loadDraftList(), o = t.findIndex(t => t.id == e.id);
o >= 0 ? t[o] = e : t.unshift(e);
a.crossPlatform.setStorageSync(this.localKey, t);
}
};
l.Ins = new i();
l = i = n([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../Frame/CrossPlatform": "CrossPlatform"
} ],
TalkDraftPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c6a56FpWz1OtpVo5f79Egpj", "TalkDraftPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Frame/Panel"), s = e("../../Game/Player/TalkDraftMng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends a.default {
constructor() {
super(...arguments);
this.scrollList = null;
this.emptyLabel = null;
}
onLoad() {
super.onLoad();
this.node.on("TalkDraftCell.deleteDraft", this.refresh, this);
this.refresh();
}
refresh() {
let e = s.default.Ins.loadDraftList();
this.scrollList.setDataArr(e);
this.emptyLabel.node.active = 0 == e.length;
}
};
i([ l(n.default) ], c.prototype, "scrollList", void 0);
i([ l(cc.Label) ], c.prototype, "emptyLabel", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Game/Player/TalkDraftMng": "TalkDraftMng"
} ],
TalkMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4aad5IDVj1C/pRq7K903ix6", "TalkMng");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TalkSectionType = void 0;
const s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../../scripts/_autogen/data/data"), l = e("../../Frame/NetworkMgr"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/UIColor"), p = e("../../Frame/Util"), u = e("../../Role"), m = e("../../Scene/HomeScene/TalkPage/TalkCell"), f = e("../../TGA"), g = e("../GameEnv"), y = e("../PathConfig"), v = e("./CollectionMng"), C = e("./CreditMng"), _ = e("./DynamicMng"), S = e("./Mng"), I = e("./PublishMng"), G = e("./TalkDraftMng"), {ccclass: T, property: b} = cc._decorator;
var M;
(function(e) {
e[e.Text = 0] = "Text";
e[e.Imgs = 1] = "Imgs";
e[e.Game = 2] = "Game";
e[e.Goods = 3] = "Goods";
e[e.Project = 4] = "Project";
})(M = o.TalkSectionType || (o.TalkSectionType = {}));
let P = i = class {
constructor() {
this.simpleMap = new Map();
this.detailMap = new Map();
this.userTalks = new Map();
this.collectTalks = new Map();
this.startMember = "";
console.log("new TalkMng");
}
clearCache() {
return a(this, void 0, void 0, function*() {
this.simpleMap.clear();
this.detailMap.clear();
this.userTalks.clear();
this.collectTalks.clear();
m.default.calcuHeightCache.clear();
this.startMember = "";
});
}
getTalkList(e, t) {
let o = this.getKey(e, t), i = this.simpleMap.get(o) || [];
this.simpleMap.set(o, i);
return i;
}
getKey(e, t) {
return `${e}-${t}`;
}
appendLoadTalkList(e, t, o) {
return a(this, void 0, void 0, function*() {
let i = this.getTalkList(e, t), n = i.length, a = {
talkType: e,
talkSortType: t,
start: n,
end: n + o,
startMember: this.startMember
}, c = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_LoadTalk,
params: a
}, s.Game_RLoadTalk);
this.startMember = c.startMember;
if (c && c.talkList) {
for (let e = 0; e < c.talkList.length; e++) {
let t = c.talkList[e];
t.status == r.ManReviewStatus.success && i.push(t);
}
f.TGA.track("Talk", {
step: "loadTalkData",
cnt: o,
talkType: e,
talkSortType: t
});
}
return i;
});
}
loadTalksByUserId(e = -1) {
return a(this, void 0, void 0, function*() {
-1 == e && (e = u.default.Ins.role.uId);
if (this.userTalks.has(e)) {
let t = this.userTalks.get(e);
if (0 != t.length) {
cc.warn("loadTalksByUserId:EXIST", e, this.userTalks);
return t;
}
} else this.userTalks.set(e, []);
let t = {
roleId: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_LoadOwnTalk,
params: t
}, s.Game_RLoadOwnTalk);
if (o && o.talkList) {
this.userTalks.set(e, o.talkList);
return o.talkList;
}
return [];
});
}
loadTalksByIds(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkIdList: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_LoadTalkByIdList,
params: t
}, s.Game_RLoadOwnTalk);
o.talkList.forEach(e => {
this.collectTalks.set(e.uId, e);
});
return o && o.talkList ? o.talkList : [];
});
}
loadTalkDetail(e) {
return a(this, void 0, void 0, function*() {
let t = this.detailMap.get(e);
if (!t) {
let o = {
talkId: e
}, i = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_LoadTalkDetail,
params: o
}, s.Game_RLoadTalkDetail);
if (i && i.talkData) {
t = i.talkData;
this.detailMap.set(e, t);
}
}
return t;
});
}
updateCacheProperty(e, t, o) {
let i = i => {
i.uId == e && (i[t] = o);
};
this.userTalks.forEach(e => {
e.forEach(i);
});
this.collectTalks.forEach(i);
this.detailMap.forEach(i);
this.simpleMap.forEach(e => {
e.forEach(i);
});
}
deleteCacheComment(e) {
let t = t => {
for (let o = 0; o < t.comments.length; o++) t.comments[o].id == e && t.comments.splice(o--, 1);
};
this.userTalks.forEach(e => {
e.forEach(t);
});
this.collectTalks.forEach(t);
this.detailMap.forEach(t);
this.simpleMap.forEach(e => {
e.forEach(t);
});
}
setTop(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SetTalkTop,
params: t
}, s.Game_RSetTalkTop);
});
}
removeTop(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DelTalkTop,
params: t
}, s.Game_RDelTalkTop);
});
}
setChosen(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SetTalkChosen,
params: t
}, s.Game_RSetTalkChosen);
});
}
removeChosen(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DelTalkChosen,
params: t
}, s.Game_RSetTalkChosen);
});
}
upTalk(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_UpTalk,
params: t
}, s.Game_RUpTalk);
this.updateCacheProperty(e, "upCnt", o.upCnt);
this.updateCacheProperty(e, "isUp", !0);
});
}
downTalk(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DownTalk,
params: t
}, s.Game_RDownTalk);
this.updateCacheProperty(e, "upCnt", o.upCnt);
this.updateCacheProperty(e, "isDown", !0);
});
}
cancelUpTalk(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_CancelUpTalk,
params: t
}, s.Game_RCancelUpTalk);
this.updateCacheProperty(e, "upCnt", o.upCnt);
this.updateCacheProperty(e, "isUp", !1);
});
}
cancelDownTalk(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
}, o = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_CancelDownTalk,
params: t
}, s.Game_RCancelDownTalk);
this.updateCacheProperty(e, "upCnt", o.upCnt);
this.updateCacheProperty(e, "isDown", !1);
});
}
publishTalk(e, t, o, n) {
return a(this, void 0, void 0, function*() {
d.default.showLoading("发布中(1/3)");
let a = o, r = [], c = [ {
from: "标题",
str: o
} ];
n = n.filter(e => !!e);
for (let e = 0; e < n.length; e++) {
let t = n[e];
switch (t.type) {
case M.Text:
a += "哈" + t.text;
c.push({
from: "文字",
str: t.text
});
break;

case M.Imgs:
for (let e = 0; e < t.imgDatas.length; e++) {
let o = t.imgDatas[e].url;
r.includes(o) || r.push(o);
}
break;

case M.Game:
case M.Goods:
break;

case M.Project:
{
let e = yield S.Mng.Ins.gameMng.loadOne(t.gameId);
if (e) {
a += "哈" + e.name + "哈" + e.advert;
let t = yield I.default.Ins.makeGamePackRaw(e.worldIds), o = new Set();
for (let e = 0; e < t.checkStrItems.length; e++) o.add(t.checkStrItems[e].str);
a += "哈" + Array.from(o).join("哈");
"icon1" != e.iconTextureName && r.push(e.iconTextureName);
for (let e = 0; e < t.assets.length; e++) {
let o = t.assets[e];
r.includes(o.textureName) || r.push(o.textureName);
}
}
break;
}
}
}
let h = new Map();
{
d.default.showLoading("发布中(2/3)");
let e = {
imageList: r
}, t = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetNeedReviewImageList,
params: e
}, s.Game_RGetNeedReviewImageList), o = 0;
for (;o < t.needImageList.length; ) {
let e = t.needImageList.slice(o, o + 64), i = yield p.Util.mergeImage(e);
console.log(g.gameEnv.fileCDN + i);
h.set(i, e);
o += 64;
}
}
let m = {
sections: n
}, f = n.filter(e => e.type == M.Text), y = [];
for (let e = 0; e < f.length; e++) y.push(f[e].text);
let v = n.find(e => e.type !== M.Text), C = {
title: o,
text: p.Util.clampStr(y.join("\n"), 60, "..【查看全文】"),
specialSection: v,
firstSection: v
};
d.default.showLoading("发布中(3/3)");
if (t) if (e) {
let e = {
talkId: t,
title: o,
content: m,
simpleContent: C
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_ModifyOfficialTalk,
params: e
}, s.Game_RModifyTalk);
} else {
let e = {
talkId: t,
title: o,
content: m,
simpleContent: C,
reviewStr: a,
reviewImageMap: h
}, i = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_ModifyTalk,
params: e
}, s.Game_RModifyTalk);
if (i.sensitiveWords && i.sensitiveWords.length) {
d.default.hideLoading();
return {
msg: "发布失败",
checkStrItems: c,
sensitiveWords: i.sensitiveWords
};
}
if (this.userTalks.has(u.default.Ins.role.uId)) {
let e = this.userTalks.get(u.default.Ins.role.uId), o = e.findIndex(e => e.uId == t);
o >= 0 && e.splice(o, 1);
e.unshift(i.talkData);
}
} else if (e) {
let e = {
title: o,
content: m,
simpleContent: C
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_CreateOfficialTalk,
params: e
}, s.Game_RCreateTalk);
} else {
let e = {
title: o,
content: m,
simpleContent: C,
reviewStr: a,
reviewImageMap: h
}, t = yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_CreateTalk,
params: e
}, s.Game_RCreateTalk);
if (t && t.sensitiveWords && t.sensitiveWords.length) {
d.default.hideLoading();
return {
msg: "发布失败",
checkStrItems: c,
sensitiveWords: t.sensitiveWords
};
}
this.userTalks.has(u.default.Ins.role.uId) && this.userTalks.get(u.default.Ins.role.uId).unshift(t.talkData);
}
this.clearCache();
cc.game.emit(i.Talk_Refresh);
d.default.hideLoading();
});
}
deleteTalk(e) {
return a(this, void 0, void 0, function*() {
let t = {
talkId: e
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DeleteTalk,
params: t
}, s.Game_RDeleteTalk);
if (this.userTalks.has(u.default.Ins.role.uId)) {
let t = this.userTalks.get(u.default.Ins.role.uId);
for (let o = 0; o < t.length; o++) t[o].uId == e && t.splice(o--, 1);
}
this.detailMap.delete(e);
this.simpleMap.forEach(t => {
for (let o = 0; o < t.length; o++) t[o].uId == e && t.splice(o--, 1);
});
G.default.Ins.deleteDraftByTalkId(e);
cc.game.emit(i.Talk_Del);
});
}
bindTalkCell(e) {
return a(this, void 0, void 0, function*() {
if (0 == e.prefabs.length) {
d.default.showLoading("加载中");
let t = yield p.Util.loadBundleRes("Scene/HomeScene/TalkCell"), o = cc.instantiate(t);
e.node.addChild(o);
o.x = -2e3;
let i = o.getComponent(m.default);
e.prefabs.push(o);
e.calculateSizeFunc = e => ({
w: 710,
h: i.calcuHeight(e)
});
d.default.hideLoading();
}
});
}
onReportBtn(e) {
C.CreditMng.Ins.credit <= 2 ? d.default.showToast("近期违规，不可举报") : e && c.default.ins.Enter("ReportScene", t => {
t.initReportTalk(e.uId);
}, c.ShiftAnima.moveLeftShift);
}
onMenuBtn(e, t) {
return a(this, void 0, void 0, function*() {
let o = [];
if (u.default.Ins.role.id == e.playerId) {
o.push({
str: "修改",
icon: {
url: "Atlas/Paint/pencil",
color: h.UIColor.white,
w: 40,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
let t = yield i.Ins.loadTalkDetail(e.uId);
c.default.ins.Enter("EditTalkScene", e => {
e.toModifyStyle(t);
}, c.ShiftAnima.moveLeftShift);
})
});
o.push({
str: "删除",
color: h.UIColor.pink,
icon: {
url: "Atlas/UI/closeBtn",
color: h.UIColor.green,
w: 40,
h: 40
},
call: () => {
c.default.ins.OpenPanelByName("MessageBox", t => {
t.titleLabel.string = "提醒";
t.label.string = "是否删除帖子？\n(与之关联的草稿也会被删除)";
t.setLeftBtn({
text: "删除",
color: h.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
yield i.Ins.deleteTalk(e.uId);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
t.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
});
}
});
} else {
o.push({
str: "举报",
icon: {
url: "Atlas/UI/reportBtn",
color: h.UIColor.white,
w: 50,
h: 40
},
call: () => {
this.onReportBtn(e);
}
});
let t = v.CollectionMng.Ins.isCollectTalk(e.uId);
o.push({
str: t ? "取消收藏" : "收藏",
icon: {
url: y.default.ICON_MENU_COLLECTION,
color: t ? h.UIColor.yellow : h.UIColor.gray,
w: 40,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
t ? v.CollectionMng.Ins.unCollectTalk(e.uId) : v.CollectionMng.Ins.collectTalk(e.uId);
})
});
}
if (_.DynamicMng.Ins.isGmPlayer()) {
o.push({
str: "删除",
color: h.UIColor.pink,
icon: {
url: "Atlas/UI/closeBtn",
color: h.UIColor.green,
w: 40,
h: 40
},
call: () => {
c.default.ins.OpenPanelByName("MessageBox", t => {
t.titleLabel.string = "提醒";
t.label.string = "是否删除帖子？";
t.setLeftBtn({
text: "删除",
color: h.UIColor.pink,
call: () => a(this, void 0, void 0, function*() {
let t = {
talkId: e.uId
};
yield l.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_OfficialDeleteTalk,
params: t
}, s.Game_ROfficialDeleteTalk);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
t.setRightBtn({
text: "点错了",
color: h.UIColor.blue
});
});
}
});
e.talkType == r.TalkType.trends && o.push({
str: "精华",
icon: {
url: "Atlas/UI/plusBtn",
color: h.UIColor.white,
w: 50,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
console.log("Julian setChosen", e.title);
yield i.Ins.setChosen(e.uId);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
e.talkType == r.TalkType.chosen && o.push({
str: "移除精华",
icon: {
url: "Atlas/UI/plusBtn",
color: h.UIColor.white,
w: 50,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
console.log("Julian removeChosen", e.title);
yield i.Ins.removeChosen(e.uId);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
e.isTop && o.push({
str: "移除置顶",
icon: {
url: "Atlas/UI/plusBtn",
color: h.UIColor.white,
w: 50,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
console.log("Julian removeTop", e.title);
yield i.Ins.removeTop(e.uId);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
e.isTop || o.push({
str: "置顶",
icon: {
url: "Atlas/UI/plusBtn",
color: h.UIColor.white,
w: 50,
h: 40
},
call: () => a(this, void 0, void 0, function*() {
console.log("Julian setTop", e.title);
yield i.Ins.setTop(e.uId);
yield i.Ins.clearCache();
cc.game.emit(i.Talk_Refresh);
})
});
}
d.default.showMenu(t.node, o);
});
}
updateStatus(e) {
if (this.userTalks.has(u.default.Ins.role.uId)) {
let t = this.userTalks.get(u.default.Ins.role.uId).find(t => t.uId == e.talkId);
if (t) {
t.status = e.status;
t.offReason = e.offReason;
}
cc.game.emit(i.Talk_StatusChange);
}
}
};
P.Talk_Del = "Talk_Del";
P.Talk_Refresh = "Talk_Refresh";
P.Talk_StatusChange = "Talk_StatusChange";
P.Ins = new i();
P.UnlockPublishLvl = 5;
P = i = n([ T ], P);
o.default = P;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Role": "Role",
"../../Scene/HomeScene/TalkPage/TalkCell": "TalkCell",
"../../TGA": "TGA",
"../GameEnv": "GameEnv",
"../PathConfig": "PathConfig",
"./CollectionMng": "CollectionMng",
"./CreditMng": "CreditMng",
"./DynamicMng": "DynamicMng",
"./Mng": "Mng",
"./PublishMng": "PublishMng",
"./TalkDraftMng": "TalkDraftMng"
} ],
TalkPage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0c04ct6stZMPq1nO6nEdzwQ", "TalkPage");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../../scripts/_autogen/cmd/cmd"), r = e("../../../../scripts/_autogen/data/data"), l = e("../../../CustomUI/Button"), c = e("../../../CustomUI/DropDownBox"), d = e("../../../CustomUI/ScrollList"), h = e("../../../CustomUI/ToggleGroup"), p = e("../../../Frame/CrossPlatform"), u = e("../../../Frame/NetworkMgr"), m = e("../../../Frame/SceneManager"), f = e("../../../Frame/Top"), g = e("../../../Frame/Util"), y = e("../../../Game/Hortor"), v = e("../../../Game/OperationFlow"), C = e("../../../Game/Player/CreditMng"), _ = e("../../../Game/Player/DynamicMng"), S = e("../../../Game/Player/Mng"), I = e("../../../Game/Player/TalkMng"), G = e("../../../Role"), T = e("../../../TGA"), {ccclass: b, property: M} = cc._decorator;
let P = class extends cc.Component {
constructor() {
super(...arguments);
this.talkList = null;
this.toggleGroup = null;
this.sortDropDown = null;
this.addBtn = null;
this.createNewBtn = null;
this.draftBtn = null;
this.loadingNode = null;
this.emptyLabel = null;
this.searchBox = null;
this.closeSearchBtn = null;
this.block = null;
this.searchName = "";
this.searchDatas = [];
this.refreshing = !1;
}
onLoad() {
return n(this, void 0, void 0, function*() {
cc.game.on(I.default.Talk_StatusChange, this.refresh, this);
cc.game.on(I.default.Talk_Refresh, this.refresh, this);
this.closeSearchBtn.node.on(l.default.CLICK, this.onCloseSearch, this);
this.addBtn.node.on(l.default.CLICK, this.onCreateNewBtn, this);
this.createNewBtn.node.on(l.default.CLICK, this.onCreateNewBtn, this);
this.draftBtn.node.on(l.default.CLICK, this.onDraftBtn, this);
this.toggleGroup.node.on(h.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.sortDropDown.node.on(c.default.SELECT_CHANGE, this.onSortChange, this);
this.block.on(l.default.CLICK, this.onClickBlock, this);
this.closeSearchBtn.node.active = !1;
this.loadingNode.width = this.loadingNode.height = 0;
this.sortDropDown.setDataArr([ {
str: a.I18nMgr.getI18nStringByZh("默认"),
sort: r.TalkSortType.newCommentTime
}, {
str: a.I18nMgr.getI18nStringByZh("最新"),
sort: r.TalkSortType.talkTime
}, {
str: a.I18nMgr.getI18nStringByZh("热门"),
sort: r.TalkSortType.thumbCnt
} ]);
T.TGA.track("Talk", {
step: "talkPageShow"
});
this.block.active = !1;
this.draftBtn.node.active = !1;
this.createNewBtn.node.active = !1;
this.addBtn.node.active = !1;
this.emptyLabel.node.active = !1;
});
}
onClickBlock() {
this.block.active = !1;
p.crossPlatform.hideKeyboard({});
}
onEnable() {
this.refresh();
}
onDestroy() {
cc.game.off(I.default.Talk_StatusChange, this.refresh, this);
cc.game.off(I.default.Talk_Refresh, this.refresh, this);
}
onCreateNewBtn() {
if (!_.DynamicMng.Ins.isDisable(_.FunctionEnum.PublishTalk, !0)) if (y.Hortor.isVisitor()) v.OperationFlow.openVisitorPanel(); else if (G.default.Ins.role.level < I.default.UnlockPublishLvl) f.default.showToast("等级5解锁"); else {
T.TGA.track("Talk", {
step: "clickCreateBtn"
});
m.default.ins.Enter("EditTalkScene", e => {
e.toCreateStyle();
}, m.ShiftAnima.moveLeftShift);
}
}
onDraftBtn() {
_.DynamicMng.Ins.isDisable(_.FunctionEnum.PublishTalk, !0) || (y.Hortor.isVisitor() ? v.OperationFlow.openVisitorPanel() : G.default.Ins.role.level < I.default.UnlockPublishLvl ? f.default.showToast("等级5解锁") : m.default.ins.OpenPanelByName("TalkDraftPanel"));
}
onToggleChange(e, t, o) {
if (o) {
this.talkList.node.getComponent(cc.Widget).bottom = e < 3 ? 0 : 140;
g.Util.updateAllWidget(this.node);
I.default.Ins.clearCache();
this.refresh();
this.hideSearch();
this.talkList.scrollTo(cc.Vec2.ONE, .3);
}
}
onSortChange(e, t, o) {
if (o) {
I.default.Ins.clearCache();
this.refresh();
this.hideSearch();
this.talkList.scrollTo(cc.Vec2.ONE, .3);
}
}
refresh() {
return n(this, void 0, void 0, function*() {
if (!this.node.activeInHierarchy) return;
if (this.refreshing) return;
yield I.default.Ins.bindTalkCell(this.talkList);
this.refreshing = !0;
let e = this.toggleGroup.idx;
this.sortDropDown.node.active = !1;
this.addBtn.node.active = !1;
this.createNewBtn.node.active = !1;
this.draftBtn.node.active = !1;
let t = [];
if (_.DynamicMng.Ins.isDisable(_.FunctionEnum.PublishTalk, !1)) {
t = [];
this.emptyLabel.string = "暂无帖子";
} else if (this.searchName) {
t = this.searchDatas;
this.emptyLabel.string = "暂无帖子";
} else {
let o = this.sortDropDown.getCurData().sort;
if (e < 3) {
this.sortDropDown.node.active = !0;
this.addBtn.node.active = 0 == e;
let i = r.TalkType.trends;
switch (e) {
case 0:
i = r.TalkType.trends;
break;

case 1:
i = r.TalkType.chosen;
break;

case 2:
i = r.TalkType.official;
}
(t = I.default.Ins.getTalkList(i, o)).length < 3 && (t = yield I.default.Ins.appendLoadTalkList(i, o, 10));
this.emptyLabel.string = "暂无帖子";
} else {
this.draftBtn.node.active = !0;
this.createNewBtn.node.active = !0;
this.addBtn.node.active = !1;
let e = yield I.default.Ins.loadTalksByUserId();
t = t.concat(e);
this.emptyLabel.string = "您还未发过贴子";
}
}
yield this.preloadGame(t);
this.talkList.setDataArr(t);
this.emptyLabel.node.active = 0 == t.length;
this.refreshing = !1;
});
}
preloadGame(e) {
return n(this, void 0, void 0, function*() {
let t = new Set();
for (let o = 0; o < e.length; o++) {
let i = e[o], n = i.simpleContent, a = n.specialSection || n.firstSection;
if (a && a.type == I.TalkSectionType.Project) {
a.talkId = i.uId;
t.add(a.gameId);
}
}
yield S.Mng.Ins.gameMng.loadMany(Array.from(t));
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
let o = this.toggleGroup.idx, i = this.sortDropDown.getCurData().sort, n = r.TalkType.trends, a = -e.getScrollOffset().y;
switch (o) {
case 0:
n = r.TalkType.trends;
break;

case 1:
n = r.TalkType.chosen;
break;

case 2:
n = r.TalkType.official;
}
r.TalkType.trends;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_TOP:
I.default.Ins.clearCache();
this.refresh();
break;

case cc.ScrollView.EventType.BOUNCE_BOTTOM:
if (this.searchName) {
let e = this.searchDatas.length, t = e + 5, o = {
searchName: this.searchName,
start: e,
end: t
}, i = yield u.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchTalk,
params: o
}, s.Game_RSearchTalk);
if (i) for (let e = 0; e < i.talkList.length; e++) {
let t = i.talkList[e];
t.status == r.ManReviewStatus.success && this.searchDatas.push(t);
}
this.refresh();
} else if (o < 3) {
let e = yield I.default.Ins.appendLoadTalkList(n, i, 10);
yield this.preloadGame(e);
this.talkList.setDataArr(e);
}
break;

case cc.ScrollView.EventType.SCROLLING:
if (a > 0) {
this.loadingNode.width = this.loadingNode.height = Math.min(a, 100);
this.loadingNode.angle = a;
} else this.loadingNode.width = this.loadingNode.height = 0;
}
});
}
onEditBegin() {
this.block.active = !0;
}
onEditEnd() {
this.block.active = !1;
}
onSearch(e) {
return n(this, void 0, void 0, function*() {
if (_.DynamicMng.Ins.isDisable(_.FunctionEnum.PublishTalk, !0)) return;
if (C.CreditMng.Ins.credit <= 1) {
f.default.showToast("近期违规，不可搜索商品");
return;
}
this.closeSearchBtn.node.active = !0;
let t = e.textLabel.string;
this.searchName = t;
this.searchDatas = [];
if (t) {
if (t && !_.DynamicMng.Ins.isViolationsName(t) && !_.DynamicMng.Ins.isInspectVersion()) {
let e = this.searchDatas.length, o = {
searchName: t,
start: e,
end: e + 5
}, i = yield u.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SearchTalk,
params: o
}, s.Game_RSearchTalk);
if (i) for (let e = 0; e < i.talkList.length; e++) {
let t = i.talkList[e];
t.status == r.ManReviewStatus.success && this.searchDatas.push(t);
}
}
yield this.refresh();
this.talkList.scrollTo(cc.Vec2.ONE, .3);
} else this.onCloseSearch();
});
}
onCloseSearch() {
this.hideSearch();
this.refresh();
}
hideSearch() {
this.searchDatas = [];
this.searchName = "";
this.searchBox.string = "";
this.closeSearchBtn.node.active = !1;
}
};
i([ M(d.default) ], P.prototype, "talkList", void 0);
i([ M(h.default) ], P.prototype, "toggleGroup", void 0);
i([ M(c.default) ], P.prototype, "sortDropDown", void 0);
i([ M(l.default) ], P.prototype, "addBtn", void 0);
i([ M(l.default) ], P.prototype, "createNewBtn", void 0);
i([ M(l.default) ], P.prototype, "draftBtn", void 0);
i([ M(cc.Node) ], P.prototype, "loadingNode", void 0);
i([ M(cc.Label) ], P.prototype, "emptyLabel", void 0);
i([ M(cc.EditBox) ], P.prototype, "searchBox", void 0);
i([ M(l.default) ], P.prototype, "closeSearchBtn", void 0);
i([ M(cc.Node) ], P.prototype, "block", void 0);
P = i([ b ], P);
o.default = P;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../../scripts/_autogen/data/data": "data",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/DropDownBox": "DropDownBox",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Frame/CrossPlatform": "CrossPlatform",
"../../../Frame/NetworkMgr": "NetworkMgr",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/Util": "Util",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../Role": "Role",
"../../../TGA": "TGA"
} ],
TalkScene: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1dc7bgKwFlOUZjOL6XwHwsJ", "TalkScene");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/data/data"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Scene"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Top"), h = e("../../Frame/Util"), p = e("../../Game/Player/DynamicMng"), u = e("../../Game/Player/Mng"), m = e("../../Game/Player/PlayerDetailMng"), f = e("../../Game/Player/TalkMng"), g = e("../HomeScene/TalkPage/TalkCommentCell"), y = e("../HomeScene/TalkPage/TalkCommentMng"), v = e("../HomeScene/TalkPage/TalkCommentMoreCell"), C = e("../HomeScene/TalkPage/TalkSectionGame"), _ = e("../HomeScene/TalkPage/TalkSectionGoods"), S = e("../HomeScene/TalkPage/TalkSectionHead"), I = e("../HomeScene/TalkPage/TalkSectionImgs"), G = e("../HomeScene/TalkPage/TalkSectionProject"), T = e("../HomeScene/TalkPage/TalkSectionText"), b = e("../HomeScene/TalkPage/TalkStateBar"), {ccclass: M, property: P} = cc._decorator;
let D = class extends l.default {
constructor() {
super(...arguments);
this.sectionPrefabs = [];
this.backBtn = null;
this.scrollList = null;
this.blockInputBtn = null;
this.menuBtn = null;
this.commmetBox = null;
this.commentBtn = null;
this.titleLabel = null;
this.data = null;
this.player = null;
this.loading = !1;
}
onLoad() {
cc.game.on(f.default.Talk_Del, this.onBackBtn, this);
cc.game.on(f.default.Talk_Refresh, () => {
this.setData(this.data.uId);
}, this);
this.node.on("showKeyBoard", () => {
this.blockInputBtn.node.active = !0;
}, this);
this.node.on("showKeyBoardEnd", () => {
this.blockInputBtn.node.active = !1;
}, this);
this.blockInputBtn.node.on(s.default.CLICK, this.onBlockInputBtn, this);
this.commentBtn.node.on(s.default.CLICK, this.onCommentBtn, this);
this.backBtn.node.on(s.default.CLICK, this.onBackBtn, this);
for (let e = 0; e < this.sectionPrefabs.length; e++) {
let t = this.sectionPrefabs[e], o = cc.instantiate(t);
o.x = -2e3;
this.scrollList.node.addChild(o);
this.scrollList.prefabs.push(o);
}
let e = this.scrollList.node.getComponentInChildren(S.default), t = this.scrollList.node.getComponentInChildren(T.default), o = this.scrollList.node.getComponentInChildren(I.default), i = this.scrollList.node.getComponentInChildren(C.default), n = this.scrollList.node.getComponentInChildren(_.default), r = this.scrollList.node.getComponentInChildren(G.default), l = this.scrollList.node.getComponentInChildren(b.default), c = h.Util.searchChild(this.scrollList.node, "TalkCommentCell").getComponent(g.default), d = h.Util.searchChild(this.scrollList.node, "SubTalkCommentCell").getComponent(g.default), p = this.scrollList.node.getComponentInChildren(v.default);
this.updateCommentUI();
this.blockInputBtn.node.active = !1;
this.titleLabel.node.active = !1;
this.scrollList.getPrefabName = e => {
if (e instanceof a.TalkComment) return e.isSub ? "SubTalkCommentCell" : "TalkCommentCell";
if (e instanceof v.TalkCommentMoreCellData) return "TalkCommentMoreCell";
switch (e.type) {
case "TalkStateBar":
return "TalkStateBar";

case "TalkSectionHead":
return "TalkSectionHead";

case f.TalkSectionType.Text:
return "TalkSectionText";

case f.TalkSectionType.Imgs:
return "TalkSectionImgs";

case f.TalkSectionType.Game:
return "TalkSectionGame";

case f.TalkSectionType.Goods:
return "TalkSectionGoods";

case f.TalkSectionType.Project:
return "TalkSectionProject";
}
};
this.scrollList.calculateSizeFunc = s => {
let h = 0;
if (s instanceof a.TalkComment) return s.isSub ? {
w: 710,
h: d.calcuHeight(s)
} : {
w: 710,
h: c.calcuHeight(s)
};
if (s instanceof v.TalkCommentMoreCellData) return {
w: 710,
h: p.node.height
};
switch (s.type) {
case "TalkStateBar":
h = l.node.height;
break;

case "TalkSectionHead":
h = e.node.height;
break;

case f.TalkSectionType.Text:
t.node.active = !0;
h = t.calcuH(s);
break;

case f.TalkSectionType.Imgs:
o.node.active = !0;
h = o.calcuH(s);
break;

case f.TalkSectionType.Game:
i.node.active = !0;
h = i.calcuH(s);
break;

case f.TalkSectionType.Goods:
n.node.active = !0;
h = n.calcuH(s);
break;

case f.TalkSectionType.Project:
r.node.active = !0;
h = r.calcuH(s);
}
return {
w: 750,
h: h
};
};
h.Util.updateAllWidget(this.node);
this.menuBtn.node.on(s.default.CLICK, () => {
f.default.Ins.onMenuBtn(this.data, this.menuBtn);
}, this);
}
onDestroy() {
cc.game.off(f.default.Talk_Del, this.onBackBtn, this);
cc.game.off(f.default.Talk_Refresh, this.refreshList, this);
}
setData(e, t = null) {
return n(this, void 0, void 0, function*() {
d.default.showLoading("加载中");
this.data = yield f.default.Ins.loadTalkDetail(e);
y.TalkCommentMng.Ins.init(this.data);
this.player = yield m.default.Ins.load(this.data.playerId);
d.default.hideLoading();
if (t) {
let e = yield y.TalkCommentMng.Ins.loadFirstLevelCommentById(t);
if (e && e.comments.length > 0) {
let o = e.comments.findIndex(e => e.id == t);
if (o >= 0) {
let t = e.comments[o];
e.comments.splice(o, 1);
e.comments.unshift(t);
e.openCnt = 1;
}
this.refreshList();
} else this.refreshList();
} else this.refreshList();
});
}
onBackBtn() {
u.Mng.switchMine();
c.default.ins.Back(null, c.ShiftAnima.moveRightShift);
}
onBlockInputBtn() {
h.Util.hideKeyBoard();
this.blockInputBtn.node.active = !1;
}
refreshList() {
return n(this, void 0, void 0, function*() {
let e = this.data, t = e.content, o = [], i = {
type: "TalkSectionHead",
player: this.player,
playerId: e.playerId,
userLevel: e.userLevel,
userImg: e.userImg,
userName: e.userName,
userIntro: e.userIntro,
talkData: e
};
o.push(i);
let n = {
type: f.TalkSectionType.Text,
text: e.title,
isTitle: !0
};
o.push(n);
if (t && t.sections) {
for (let o = 0; o < t.sections.length; o++) {
let i = t.sections[o];
i.talkId = e.uId;
if (i.type == f.TalkSectionType.Project) {
let e = yield u.Mng.Ins.gameMng.loadOne(i.gameId);
e && (yield u.Mng.Ins.worldMng.loadMany(e.worldIds));
}
}
o = o.concat(t.sections);
}
let a = {
type: "TalkStateBar",
talkData: this.data
};
o.push(a);
if (!p.DynamicMng.Ins.isDisable(p.FunctionEnum.TalkComment, !1)) for (let t = 0; t < e.comments.length; t++) {
let i = e.comments[t];
i.isSub = !1;
o.push(i);
for (let e = 0; e < i.openCnt; e++) {
let t = i.comments[e];
t.isSub = !0;
o.push(t);
}
if (i.subCommentsCnt > 0) {
let e = new v.TalkCommentMoreCellData();
e.comment = i;
o.push(e);
}
}
this.scrollList.setDataArr(o);
});
}
onCommentBtn() {
return n(this, void 0, void 0, function*() {
let e = this.commmetBox.textLabel.string;
"" != e ? yield this.sendComment(e) : d.default.showToast("不能发送空消息");
});
}
onCommentEditBoxBegin() {
return n(this, void 0, void 0, function*() {
this.node.emit("showKeyBoard");
});
}
onCommentEditBoxReturn() {
return n(this, void 0, void 0, function*() {
let e = this.commmetBox.textLabel.string;
yield this.sendComment(e);
});
}
updateCommentUI() {
if (this.commmetBox.textLabel.string) {
this.commentBtn.node.active = !0;
this.commmetBox.node.width = 530;
} else {
this.commentBtn.node.active = !1;
this.commmetBox.node.width = 730;
}
}
sendComment(e) {
return n(this, void 0, void 0, function*() {
this.node.emit("showKeyBoardEnd");
if ("" == e) return !1;
let t = {
msg: e
};
if (yield y.TalkCommentMng.Ins.sendComment(this.data.uId, "", t)) {
yield this.refreshList();
this.commmetBox.string = "";
this.updateCommentUI();
let e = this.scrollList.getDataArr().findIndex(e => e instanceof a.TalkComment);
e >= 0 && this.scrollList.centerToIdx(e, .3);
}
});
}
onScrollEvt(e, t, o) {
return n(this, void 0, void 0, function*() {
let o = e.getScrollOffset().y;
switch (t) {
case cc.ScrollView.EventType.BOUNCE_BOTTOM:
if (this.loading) return;
this.loading = !0;
yield y.TalkCommentMng.Ins.loadComment(this.data.uId);
this.loading = !1;
this.refreshList();
break;

case cc.ScrollView.EventType.SCROLLING:
if (o < 100) this.titleLabel.node.active = !1; else {
this.titleLabel.node.active = !0;
let e = 255 * (o - 100) / 50;
this.titleLabel.node.opacity = e;
this.titleLabel.string = h.Util.clampStr(this.data.title, 12, "..");
}
}
});
}
};
i([ P([ cc.Prefab ]) ], D.prototype, "sectionPrefabs", void 0);
i([ P(s.default) ], D.prototype, "backBtn", void 0);
i([ P(r.default) ], D.prototype, "scrollList", void 0);
i([ P(s.default) ], D.prototype, "blockInputBtn", void 0);
i([ P(s.default) ], D.prototype, "menuBtn", void 0);
i([ P(cc.EditBox) ], D.prototype, "commmetBox", void 0);
i([ P(s.default) ], D.prototype, "commentBtn", void 0);
i([ P(cc.Label) ], D.prototype, "titleLabel", void 0);
D = i([ M ], D);
o.default = D;
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Scene": "Scene",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/DynamicMng": "DynamicMng",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/PlayerDetailMng": "PlayerDetailMng",
"../../Game/Player/TalkMng": "TalkMng",
"../HomeScene/TalkPage/TalkCommentCell": "TalkCommentCell",
"../HomeScene/TalkPage/TalkCommentMng": "TalkCommentMng",
"../HomeScene/TalkPage/TalkCommentMoreCell": "TalkCommentMoreCell",
"../HomeScene/TalkPage/TalkSectionGame": "TalkSectionGame",
"../HomeScene/TalkPage/TalkSectionGoods": "TalkSectionGoods",
"../HomeScene/TalkPage/TalkSectionHead": "TalkSectionHead",
"../HomeScene/TalkPage/TalkSectionImgs": "TalkSectionImgs",
"../HomeScene/TalkPage/TalkSectionProject": "TalkSectionProject",
"../HomeScene/TalkPage/TalkSectionText": "TalkSectionText",
"../HomeScene/TalkPage/TalkStateBar": "TalkStateBar"
} ],
TalkSectionEditorBase: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11a09tSoGBNYpN3x7ctxsBK", "TalkSectionEditorBase");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.menuBtn = null;
}
reset() {}
setData(e) {}
getData() {
return null;
}
};
i([ s(n.default) ], r.prototype, "menuBtn", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button"
} ],
TalkSectionEditorGame: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "68e30Pg1oNC5p13rIcEpmbZ", "TalkSectionEditorGame");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/GameIcon"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/GameCellDataMng"), c = e("../../Game/Player/TalkMng"), d = e("./TalkSectionEditorBase"), {ccclass: h, property: p} = cc._decorator;
let u = class extends d.default {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.introLabel = null;
this.playLabel = null;
this.thumbLabel = null;
this.collectLabel = null;
this.hurryLabel = null;
this.gameId = "";
}
onLoad() {
this.refresh();
this.node.on(a.default.CLICK, this.onClick, this);
}
refresh() {
return n(this, void 0, void 0, function*() {
if (this.gameId) {
let e = (yield l.default.Ins.loadGames([ this.gameId ]))[0];
if (e) {
this.nameLabel.string = e.name;
this.introLabel.string = e.advert;
this.playLabel.string = e.playCnt + "";
this.thumbLabel.string = e.thumbCnt + "";
this.collectLabel.string = e.collectionCnt + "";
this.hurryLabel.string = e.hurryCnt + "";
this.gameIcon.loadUrl(e.iconTextureName);
} else this.nameLabel.string = "游戏链接失效";
} else {
this.nameLabel.string = "点我选择游戏";
this.introLabel.string = "";
this.playLabel.string = "--";
this.thumbLabel.string = "--";
this.collectLabel.string = "--";
this.hurryLabel.string = "--";
this.gameIcon.loadUrl("icon1");
}
});
}
onClick() {
r.default.ins.OpenPanelByName("SelectGamePanel", e => {
e.setData(!0, !0);
e.call = e => {
this.gameId = e;
this.refresh();
};
});
}
reset() {
this.gameId = "";
this.refresh();
}
setData(e) {
this.gameId = e.gameId;
this.refresh();
}
getData() {
return {
type: c.TalkSectionType.Game,
gameId: this.gameId
};
}
};
i([ p(s.default) ], u.prototype, "gameIcon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "introLabel", void 0);
i([ p(cc.Label) ], u.prototype, "playLabel", void 0);
i([ p(cc.Label) ], u.prototype, "thumbLabel", void 0);
i([ p(cc.Label) ], u.prototype, "collectLabel", void 0);
i([ p(cc.Label) ], u.prototype, "hurryLabel", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/GameCellDataMng": "GameCellDataMng",
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase"
} ],
TalkSectionEditorGoods: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b9f0eABKY9Ld6SmiCTDtj7B", "TalkSectionEditorGoods");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../Frame/SceneManager"), r = e("../../Game/Player/Mng"), l = e("../../Game/Player/ShopMng"), c = e("../../Game/Player/TalkMng"), d = e("./TalkSectionEditorBase"), {ccclass: h, property: p} = cc._decorator;
let u = class extends d.default {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.priceLabel = null;
this.cntLabel = null;
this.goodsId = "";
}
onLoad() {
this.node.on(a.default.CLICK, this.onClick, this);
this.refresh();
}
refresh() {
return n(this, void 0, void 0, function*() {
if (this.goodsId) {
let e = (yield l.default.Ins.loadGoodsCellDatas([ this.goodsId ]))[0];
if (e) {
this.nameLabel.string = e.name;
this.priceLabel.string = e.price + "";
this.cntLabel.string = e.saleCnt + "";
r.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 180, 1);
} else this.nameLabel.string = "商品链接失效";
} else {
this.nameLabel.string = "点我选择商品";
this.priceLabel.string = "--";
this.cntLabel.string = "--";
r.Mng.Ins.spriteMng.setSprite(this.sprite, "Tile/Jump/grass2", 180, 1);
}
});
}
onClick() {
s.default.ins.OpenPanelByName("SelectGoodsPanel", e => {
e.setData(!0);
e.call = e => {
this.goodsId = e;
this.refresh();
};
});
}
reset() {
this.goodsId = "";
this.refresh();
}
setData(e) {
this.goodsId = e.goodsId;
this.refresh();
}
getData() {
return {
type: c.TalkSectionType.Goods,
goodsId: this.goodsId
};
}
};
i([ p(cc.Sprite) ], u.prototype, "sprite", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "priceLabel", void 0);
i([ p(cc.Label) ], u.prototype, "cntLabel", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/ShopMng": "ShopMng",
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase"
} ],
TalkSectionEditorImgCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f40c32wSElGFZZTInZXkTbl", "TalkSectionEditorImgCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../Frame/SceneManager"), s = e("../../Game/Player/Mng"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.deleteBtn = null;
this.sprite = null;
this.addIcocn = null;
this.data = null;
this.parent = null;
}
onLoad() {
this.node.on(n.default.CLICK, this.onClickThis, this);
this.deleteBtn.node.on(n.default.CLICK, this.onDeleteBtn, this);
}
setData(e) {
this.data = e;
this.addIcocn.active = !1;
this.deleteBtn.node.active = !1;
if (e) {
this.deleteBtn.node.active = !0;
s.Mng.Ins.spriteMng.setSprite(this.sprite, e.url, 200, 1);
} else {
this.addIcocn.active = !0;
this.sprite.spriteFrame = null;
}
}
onClickThis() {
this.data ? a.default.ins.OpenPanelByName("SelectImagePanel", e => {
e.call = e => {
this.data.url = e;
this.setData(this.data);
};
}) : a.default.ins.OpenPanelByName("SelectImagePanel", e => {
e.call = e => {
this.parent.datas.push({
url: e
});
this.parent.refresh();
};
});
}
onDeleteBtn() {
let e = this.parent.datas.indexOf(this.data);
this.parent.datas.splice(e, 1);
this.parent.refresh();
}
};
i([ l(n.default) ], c.prototype, "deleteBtn", void 0);
i([ l(cc.Sprite) ], c.prototype, "sprite", void 0);
i([ l(cc.Node) ], c.prototype, "addIcocn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng"
} ],
TalkSectionEditorImgs: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7c7d221e9hG2bSoHslthGWA", "TalkSectionEditorImgs");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Util"), a = e("../../Game/OperationFlow"), s = e("../../Game/Player/TalkMng"), r = e("./TalkSectionEditorBase"), l = e("./TalkSectionEditorImgCell"), {ccclass: c, property: d} = cc._decorator;
let h = class extends r.default {
constructor() {
super(...arguments);
this.cell = null;
this.datas = [];
}
onLoad() {
this.refresh();
}
refresh() {
let e = this.datas.length + 1;
e = Math.min(e, 9);
let t = a.OperationFlow.getImgGridSize(e);
this.node.height = 200 * t.row + 10 * (t.row - 1);
n.Util.makeBro(this.cell.node, e, (e, o) => {
let i = e.getComponent(l.default);
i.parent = this;
let n = this.datas[o];
i.setData(n);
let a = Math.floor(o / t.col), s = o % t.col;
e.x = 200 * (s + .5) - this.node.width / 2 + 10 * s;
e.y = 200 * -(a + .5) + this.node.height / 2 - 10 * a;
});
}
reset() {
this.datas = [];
this.refresh();
}
setData(e) {
this.datas = e.imgDatas;
this.refresh();
}
getData() {
return {
type: s.TalkSectionType.Imgs,
imgDatas: this.datas
};
}
};
i([ d(l.default) ], h.prototype, "cell", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../Frame/Util": "Util",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase",
"./TalkSectionEditorImgCell": "TalkSectionEditorImgCell"
} ],
TalkSectionEditorProject: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3080eyqNXhE9JsYuW8xVMMm", "TalkSectionEditorProject");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../CustomUI/GameIcon"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Top"), d = e("../../Frame/Util"), h = e("../../Game/Player/Mng"), p = e("../../Game/Player/TalkMng"), u = e("./TalkSectionEditorBase"), {ccclass: m, property: f} = cc._decorator;
let g = i = class extends u.default {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.playBtn = null;
this.openBtn = null;
this.worldNode = null;
this.gameId = "";
this.gameData = null;
this.worldDatas = [];
this.open = !1;
}
onLoad() {
this.refresh();
this.node.on(s.default.CLICK, this.onClick, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtn, this);
this.openBtn.node.on(s.default.CLICK, this.onOpenBtn, this);
}
reset() {
this.open = !1;
this.gameId = "";
this.gameData = null;
this.worldDatas = [];
this.refresh();
}
setData(e) {
return a(this, void 0, void 0, function*() {
this.gameId = e.gameId;
this.refresh();
});
}
refresh() {
return a(this, void 0, void 0, function*() {
let e = this.gameId;
d.Util.makeBro(this.worldNode, 0);
d.Util.updateLayout(this.node);
this.playBtn.node.active = !1;
this.openBtn.node.active = !1;
let t = null;
e && (t = yield h.Mng.Ins.gameMng.loadOne(e));
this.gameData = t;
if (t) {
this.playBtn.node.active = !0;
this.nameLabel.string = t.name;
this.gameIcon.loadUrl(t.iconTextureName);
let e = yield h.Mng.Ins.worldMng.loadMany(t.worldIds);
this.worldDatas = e;
let o = e.length, n = o > i.overflowCnt;
this.openBtn.node.active = n;
this.open || (o = Math.min(o, i.overflowCnt));
d.Util.makeBro(this.worldNode, o, (o, i) => {
let n = e[i], r = d.Util.searchChild(o, "nameLabel").getComponent(cc.Label), c = d.Util.searchChild(o, "editBtn").getComponent(s.default);
r.string = n.info.name;
c.node.targetOff(this);
c.node.on(s.default.CLICK, () => a(this, void 0, void 0, function*() {
n = yield h.Mng.Ins.worldMng.loadOne(n.id, !0);
l.default.ins.Enter("EditWorldScene", e => {
e.setDataByTalkProject(!1, t, n);
});
}), this);
});
d.Util.updateAllLayout(this.node);
this.refreshOpenBtn();
} else {
this.gameIcon.loadUrl("icon1");
this.nameLabel.string = "点我选择游戏";
this.openBtn.node.active = !1;
}
});
}
getData() {
return {
type: p.TalkSectionType.Project,
gameId: this.gameId
};
}
onClick() {
l.default.ins.OpenPanelByName("SelectGamePanel", e => {
e.setData(!1, !1);
e.call = e => {
this.gameId = e;
this.refresh();
};
});
}
onPlayBtn() {
this.gameData.worldIds.length <= 0 ? c.default.showToast("游戏至少包含一个地图") : l.default.ins.Enter("GameScene", e => {
e.mode = "Prod";
e.play(this.gameData);
});
}
onOpenBtn() {
this.open = !this.open;
this.refresh();
}
refreshOpenBtn() {
this.openBtn.label.string = this.open ? "收起" : `展开剩余地图(${this.worldDatas.length - i.overflowCnt})`;
}
};
g.overflowCnt = 3;
n([ f(r.default) ], g.prototype, "gameIcon", void 0);
n([ f(cc.Label) ], g.prototype, "nameLabel", void 0);
n([ f(s.default) ], g.prototype, "playBtn", void 0);
n([ f(s.default) ], g.prototype, "openBtn", void 0);
n([ f(cc.Node) ], g.prototype, "worldNode", void 0);
g = i = n([ m ], g);
o.default = g;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/GameIcon": "GameIcon",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase"
} ],
TalkSectionEditorText: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c3228yvVXRPzJWNkZboRXak", "TalkSectionEditorText");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Game/Player/TalkMng"), a = e("./TalkSectionEditorBase"), {ccclass: s, property: r} = cc._decorator;
let l = class extends a.default {
constructor() {
super(...arguments);
this.editBox = null;
}
reset() {
this.editBox.string = "";
}
setData(e) {
this.editBox.string = e.text;
}
getData() {
return {
type: n.TalkSectionType.Text,
text: this.editBox.textLabel.string
};
}
};
i([ r(cc.EditBox) ], l.prototype, "editBox", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../Game/Player/TalkMng": "TalkMng",
"./TalkSectionEditorBase": "TalkSectionEditorBase"
} ],
TalkSectionGame: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "edc5fG5tytGaIwl+YhtrYwu", "TalkSectionGame");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/GameIcon"), r = e("../../../CustomUI/ScrollList"), l = e("../../../Frame/SceneManager"), c = e("../../../Game/Player/GameCellDataMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.introLabel = null;
this.playLabel = null;
this.thumbLabel = null;
this.collectLabel = null;
this.hurryLabel = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.node.on(a.default.CLICK, this.onClick, this);
}
setData(e) {
this.data = e;
this.refresh();
}
onClick() {
l.default.ins.Enter("GameCoverScene", e => {
e.setData(this.data.gameId);
});
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = null;
this.data.gameId && (e = (yield c.default.Ins.loadGames([ this.data.gameId ]))[0]);
if (e) {
this.nameLabel.string = e.name;
this.introLabel.string = e.advert;
this.playLabel.string = e.playCnt + "";
this.thumbLabel.string = e.thumbCnt + "";
this.collectLabel.string = e.collectionCnt + "";
this.hurryLabel.string = e.hurryCnt + "";
this.gameIcon.loadUrl(e.iconTextureName);
} else {
this.nameLabel.string = "游戏链接失效啦";
this.introLabel.string = "";
this.playLabel.string = "--";
this.thumbLabel.string = "--";
this.collectLabel.string = "--";
this.hurryLabel.string = "--";
this.gameIcon.loadUrl("icon1");
}
});
}
calcuH(e) {
return this.node.height;
}
};
i([ h(s.default) ], p.prototype, "gameIcon", void 0);
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "introLabel", void 0);
i([ h(cc.Label) ], p.prototype, "playLabel", void 0);
i([ h(cc.Label) ], p.prototype, "thumbLabel", void 0);
i([ h(cc.Label) ], p.prototype, "collectLabel", void 0);
i([ h(cc.Label) ], p.prototype, "hurryLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/GameIcon": "GameIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/GameCellDataMng": "GameCellDataMng"
} ],
TalkSectionGoods: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7416aiaZe1A+ZeDjfRfy8lb", "TalkSectionGoods");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/ScrollList"), r = e("../../../Frame/SceneManager"), l = e("../../../Game/Player/Mng"), c = e("../../../Game/Player/ShopMng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.nameLabel = null;
this.priceLabel = null;
this.cntLabel = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(a.default.CLICK, this.onClick, this);
}
setData(e) {
this.data = e;
this.refresh();
}
refresh() {
return n(this, void 0, void 0, function*() {
let e = null;
this.data.goodsId && (e = (yield c.default.Ins.loadGoodsCellDatas([ this.data.goodsId ]))[0]);
if (e) {
this.nameLabel.string = e.name;
this.priceLabel.string = e.price + "";
this.cntLabel.string = e.saleCnt + "";
l.Mng.Ins.spriteMng.setSprite(this.sprite, e.iconTextureName, 180, 1);
} else {
this.nameLabel.string = "商品链接失效啦";
this.priceLabel.string = "--";
this.cntLabel.string = "--";
this.sprite.spriteFrame = null;
}
});
}
onClick() {
return n(this, void 0, void 0, function*() {
let e = yield c.default.Ins.loadGoodsInfos([ this.data.goodsId ]);
e && e[0] && r.default.ins.OpenPanelByName("BuyGoodsPanel", t => {
t.setData(e[0]);
});
});
}
calcuH(e) {
return this.node.height;
}
};
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Label) ], p.prototype, "priceLabel", void 0);
i([ h(cc.Label) ], p.prototype, "cntLabel", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/ShopMng": "ShopMng"
} ],
TalkSectionHead: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d6a326cvfRDjawnnK2EiQ+d", "TalkSectionHead");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/HeadIcon"), r = e("../../../CustomUI/ScrollList"), l = e("../../../Frame/SceneManager"), c = e("../../../Game/Player/FollowMng"), d = e("../../../Role"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.headIcon = null;
this.nameLabel = null;
this.followLabel = null;
this.fansLabel = null;
this.followBtn = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.headIcon.node.on(a.default.CLICK, this.enterFriendScene, this);
this.followBtn.node.on(a.default.CLICK, this.onFollowBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.headIcon.loadUrl(e.userImg);
this.nameLabel.string = e.userName;
this.followLabel.string = e.player.followCount + "";
this.fansLabel.string = e.player.fansCount + "";
this.followBtn.label.string = e.player.isFollow ? "已关注" : "关注";
this.followBtn.node.active = e.player.playerId != d.default.Ins.role.id;
});
}
onFollowBtn() {
return n(this, void 0, void 0, function*() {
if (this.data) if (this.data.player.isFollow) {
if (1 == (yield c.FollowMng.Ins.unFollow(this.data.player.playerId))) {
this.data.player.isFollow = !1;
this.followBtn.label.string = "关注";
}
} else if (1 == (yield c.FollowMng.Ins.follow(this.data.player.playerId))) {
this.data.player.isFollow = !0;
this.followBtn.label.string = "已关注";
}
});
}
enterFriendScene() {
this.data && l.default.ins.Enter("FriendScene", e => {
e.setData(this.data.player.playerId);
}, l.ShiftAnima.moveLeftShift);
}
};
i([ p(s.default) ], u.prototype, "headIcon", void 0);
i([ p(cc.Label) ], u.prototype, "nameLabel", void 0);
i([ p(cc.Label) ], u.prototype, "followLabel", void 0);
i([ p(cc.Label) ], u.prototype, "fansLabel", void 0);
i([ p(a.default) ], u.prototype, "followBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Game/Player/FollowMng": "FollowMng",
"../../../Role": "Role"
} ],
TalkSectionImgs: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6a1d5/CIAZD5IwNv0y6ckUw", "TalkSectionImgs");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/ScrollList"), s = e("../../../Frame/SceneManager"), r = e("../../../Frame/Util"), l = e("../../../Game/OperationFlow"), c = e("../../../Game/Player/Mng"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.img = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
let t = l.OperationFlow.getImgGridSize(e.imgDatas.length);
this.node.height = 200 * t.row + 10 * (t.row - 1);
r.Util.makeBro(this.img.node, e.imgDatas.length, (o, i) => {
let a = o.getComponent(cc.Sprite), r = e.imgDatas[i].url;
c.Mng.Ins.spriteMng.setSprite(a, r, 200, 1);
let l = Math.floor(i / t.col), d = i % t.col;
o.x = 200 * (d + .5) - this.node.width / 2 + 10 * d;
o.y = 200 * -(l + .5) + this.node.height / 2 - 10 * l;
o.targetOff(this);
o.on(n.default.CLICK, () => {
s.default.ins.OpenPanelByName("ImagePreviewPanel", e => {
e.setData("", r);
});
}, this);
});
}
calcuH(e) {
let t = l.OperationFlow.getImgGridSize(e.imgDatas.length);
return 200 * t.row + 10 * (t.row - 1);
}
};
i([ h(cc.Sprite) ], p.prototype, "img", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Util": "Util",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/Mng": "Mng"
} ],
TalkSectionProject: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f91b3f7OGVEIK3/A0R1Q5cc", "TalkSectionProject");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../CustomUI/Button"), r = e("../../../CustomUI/GameIcon"), l = e("../../../CustomUI/ScrollList"), c = e("../../../Frame/SceneManager"), d = e("../../../Frame/Top"), h = e("../../../Frame/Util"), p = e("../../../Game/Player/Mng"), u = e("../../../Game/Player/TalkMng"), m = e("./TalkCommentMng"), {ccclass: f, property: g} = cc._decorator;
let y = i = class extends cc.Component {
constructor() {
super(...arguments);
this.gameIcon = null;
this.nameLabel = null;
this.playBtn = null;
this.newWorldBtn = null;
this.openBtn = null;
this.worldNode = null;
this.gameData = null;
this.worldDatas = [];
this.open = !1;
this.showWorlds = !0;
this.data = null;
}
onLoad() {
this.node.on(l.default.SET_DATA, this.setData, this);
this.playBtn.node.on(s.default.CLICK, this.onPlayBtn, this);
this.openBtn.node.on(s.default.CLICK, this.onOpenBtn, this);
this.newWorldBtn.node.on(s.default.CLICK, this.onNewWorldBtn, this);
}
setData(e) {
this.open = e.open;
this.data = e;
this.refresh();
}
refresh() {
let e = this.data.gameId;
h.Util.makeBro(this.worldNode, 0);
this.playBtn.node.active = !1;
this.openBtn.node.active = !1;
this.newWorldBtn.node.active = !1;
this.worldNode.parent.active = !1;
h.Util.updateAllLayout(this.node);
let t = null;
e && (t = p.Mng.Ins.gameMng.cache.get(e));
this.gameData = t;
if (t) {
this.nameLabel.string = t.name;
this.gameIcon.loadUrl(t.iconTextureName);
if (this.showWorlds) {
let e = p.Mng.Ins.worldMng.getMany(t.worldIds);
this.worldDatas = e;
let o = e.length;
this.openBtn.node.active = o > i.overflowCnt;
this.open || (o = Math.min(o, i.overflowCnt));
this.playBtn.node.active = !0;
this.newWorldBtn.node.active = !0;
this.worldNode.parent.active = !0;
h.Util.makeBro(this.worldNode, o, (o, i) => {
let n = e[i], r = h.Util.searchChild(o, "nameLabel").getComponent(cc.Label), l = h.Util.searchChild(o, "editBtn").getComponent(s.default);
r.string = n.info.name;
l.node.targetOff(this);
l.node.on(s.default.CLICK, () => a(this, void 0, void 0, function*() {
yield p.Mng.switchTalkProject(t.id);
n = yield p.Mng.Ins.worldMng.loadOne(n.id, !0);
this.enterEditWorld(t, n);
}), this);
});
this.refreshOpenBtn();
}
h.Util.updateAllLayout(this.node);
} else {
this.gameIcon.loadUrl("icon1");
this.nameLabel.string = "游戏已失效";
this.openBtn.node.active = !1;
}
}
onNewWorldBtn() {
let e = this.gameData;
c.default.ins.OpenPanelByName("CreateWorldTypePanel", t => {
t.onSeleteType = t => {
c.default.ins.OpenPanelByName("CreateWorldInfoPanel", o => {
o.setData(t, e);
o.onCreate = t => a(this, void 0, void 0, function*() {
t.id = "test";
yield p.Mng.switchTalkProject(e.id);
p.Mng.Ins.worldMng.extraIds.push(t.id);
p.Mng.Ins.worldMng.extraCache.set(t.id, t);
this.enterEditWorld(e, t);
});
});
};
});
}
enterEditWorld(e, t) {
return a(this, void 0, void 0, function*() {
c.default.ins.Enter("EditWorldScene", o => {
o.setDataByTalkProject(!1, e, t);
o.submitCall = (o, i) => a(this, void 0, void 0, function*() {
(t = h.Util.deepCopy(t)).worldLayout = i;
let n = {
msg: o,
gameId: e.id,
worldData: t
};
yield m.TalkCommentMng.Ins.sendComment(this.data.talkId, "", n);
cc.game.emit(u.default.Talk_Refresh);
});
});
});
}
onPlayBtn() {
this.gameData.worldIds.length <= 0 ? d.default.showToast("游戏至少包含一个地图") : c.default.ins.Enter("GameScene", e => {
e.mode = "Prod";
e.play(this.gameData);
});
}
onOpenBtn() {
this.open = !this.open;
this.data.open = this.open;
this.refresh();
cc.game.emit(u.default.Talk_Refresh);
}
refreshOpenBtn() {
this.openBtn.label.string = this.open ? "收起" : `展开剩余地图(${this.worldDatas.length - i.overflowCnt})`;
}
calcuH(e) {
this.setData(e);
return this.node.height;
}
};
y.overflowCnt = 3;
n([ g(r.default) ], y.prototype, "gameIcon", void 0);
n([ g(cc.Label) ], y.prototype, "nameLabel", void 0);
n([ g(s.default) ], y.prototype, "playBtn", void 0);
n([ g(s.default) ], y.prototype, "newWorldBtn", void 0);
n([ g(s.default) ], y.prototype, "openBtn", void 0);
n([ g(cc.Node) ], y.prototype, "worldNode", void 0);
y = i = n([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/GameIcon": "GameIcon",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/Util": "Util",
"../../../Game/Player/Mng": "Mng",
"../../../Game/Player/TalkMng": "TalkMng",
"./TalkCommentMng": "TalkCommentMng"
} ],
TalkSectionText: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8e825rsub5FBYOwC2NbdVx7", "TalkSectionText");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/ScrollList"), a = e("../../../Frame/Util"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
if (e.isTitle) {
this.label.enableBold = !0;
this.label.fontSize = 40;
this.label.lineHeight = 80;
} else {
this.label.enableBold = !1;
this.label.fontSize = 30;
this.label.lineHeight = 50;
}
this.label.string = e.text;
a.Util.updateLabel(this.label);
}
calcuH(e) {
this.setData(e);
return this.node.height;
}
};
i([ r(cc.Label) ], l.prototype, "label", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/Util": "Util"
} ],
TalkStateBar: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "15b75bAuZ9Ce5ppVhfhtiIH", "TalkStateBar");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../../i18n/i18nMgr"), s = e("../../../CustomUI/Button"), r = e("../../../CustomUI/ScrollList"), l = e("../../../Frame/UIColor"), c = e("../../../Game/Player/TalkMng"), d = e("../../../TGA"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.commentCntLabel = null;
this.upBtn = null;
this.data = null;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.upBtn.node.on(s.default.CLICK, this.onUpBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.commentCntLabel.string = e.talkData.commentsCntSum + a.I18nMgr.getI18nStringByZh("评论");
this.upBtn.label.string = e.talkData.upCnt + a.I18nMgr.getI18nStringByZh("点赞");
this.upBtn.icon.node.color = this.data.talkData.isUp ? l.UIColor.blue : l.UIColor.white;
});
}
onUpBtn() {
return n(this, void 0, void 0, function*() {
if (this.data.talkData.isUp) yield c.default.Ins.cancelUpTalk(this.data.talkData.uId); else if (this.data.talkData.isDown) yield c.default.Ins.cancelDownTalk(this.data.talkData.uId); else {
yield c.default.Ins.upTalk(this.data.talkData.uId);
d.TGA.track("Talk", {
step: "clickThumbBtn2"
});
}
this.setData(this.data);
});
}
};
i([ p(cc.Label) ], u.prototype, "commentCntLabel", void 0);
i([ p(s.default) ], u.prototype, "upBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../../i18n/i18nMgr": "i18nMgr",
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList",
"../../../Frame/UIColor": "UIColor",
"../../../Game/Player/TalkMng": "TalkMng",
"../../../TGA": "TGA"
} ],
TeamGizmo: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3aa94XZz+9ArLf1lrbzhEZT", "TeamGizmo");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../Frame/UIColor"), a = e("../../../GameData/GameTypeDefine"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
this.sprite = null;
}
setTeam(e) {
if (e == a.Team.Hero) {
this.label.string = "这是主角";
this.label.node.color = this.sprite.node.color = n.UIColor.green;
}
if (e == a.Team.Enemy) {
this.label.string = "这是敌人";
this.label.node.color = this.sprite.node.color = n.UIColor.red;
}
if (e == a.Team.NPC) {
this.label.string = "这是NPC";
this.label.node.color = this.sprite.node.color = n.UIColor.blue;
}
if (e == a.Team.Ally) {
this.label.string = "这是队友";
this.label.node.color = this.sprite.node.color = n.UIColor.yellow;
}
}
};
i([ r(cc.Label) ], l.prototype, "label", void 0);
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../Frame/UIColor": "UIColor",
"../../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
TemplateWorldTipPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "31e52GJdvBChK6rRq8WY1RI", "TemplateWorldTipPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/Toggle"), s = e("../../Frame/Panel"), {ccclass: r, property: l} = cc._decorator;
let c = class extends s.default {
constructor() {
super(...arguments);
this.toggle = null;
this.btn = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.btn.node.on(n.default.CLICK, this.onBtn, this);
}
onBtn() {
this.closePanel();
this.call && this.call(this.toggle.isChecked);
}
};
i([ l(a.default) ], c.prototype, "toggle", void 0);
i([ l(n.default) ], c.prototype, "btn", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/Toggle": "Toggle",
"../../Frame/Panel": "Panel"
} ],
TextBubble: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "df3bccwcMtLlo4TjLMS6kWf", "TextBubble");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Pool"), a = e("../../Frame/TweenUtil"), s = e("../../Frame/Util"), {ccclass: r, property: l} = cc._decorator;
let c = class extends cc.Component {
constructor() {
super(...arguments);
this.bg = null;
this.label = null;
}
show(e) {
this.label.string = e;
s.Util.updateLabel(this.label);
this.bg.height = this.label.node.height + 40;
s.Util.updateAllWidget(this.node);
a.TweenUtil.applyAppear({
node: this.bg,
fromScale: .5,
toScale: this.node.scale
});
}
hide(e = null) {
a.TweenUtil.applyDisappear({
node: this.bg,
callback: () => {
e && e();
this.node.emit(n.default.PUT);
}
});
}
};
i([ l(cc.Node) ], c.prototype, "bg", void 0);
i([ l(cc.Label) ], c.prototype, "label", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../Frame/Pool": "Pool",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util"
} ],
ThumbMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1f8cfjbfPZKGruUsr6YtXIl", "ThumbMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.ThumbMng = void 0;
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Top");
class r {
thumbGame(e) {
return i(this, void 0, void 0, function*() {
s.default.blockInput(!0, "thumbGame");
let t = {
ids: [ e ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_ThumbGames,
params: t
}, n.Game_RThumbGames);
s.default.blockInput(!1, "thumbGame");
});
}
unThumbGame(e) {
return i(this, void 0, void 0, function*() {
s.default.blockInput(!0, "unThumbGame");
let t = {
ids: [ e ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_CancelThumbGames,
params: t
}, n.Game_RCancelThumbGames);
s.default.blockInput(!1, "unThumbGame");
});
}
}
o.ThumbMng = r;
r.Ins = new r();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Top": "Top"
} ],
TileCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eb2bc6e6xROTa+t5kVfDWkK", "TileCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Game/Player/Mng"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.select = null;
this.optionBtn = null;
this.createNew = null;
this.conf = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onSelectStateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.optionBtn.node.active = !e.createNew;
if (e.createNew) this.createNew.active = !0; else {
this.createNew.active = !1;
l.Mng.Ins.spriteMng.setTileSprite(this.sprite, e.textureName, this.node.width);
}
});
}
onSelectStateChange(e) {
this.select.active = e;
}
onOptionBtnTap() {
r.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ d(cc.Sprite) ], h.prototype, "sprite", void 0);
i([ d(cc.Node) ], h.prototype, "select", void 0);
i([ d(a.default) ], h.prototype, "optionBtn", void 0);
i([ d(cc.Node) ], h.prototype, "createNew", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng"
} ],
TileMapLayerSelectCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fded8tfIQZOT4HPqeNXHpzD", "TileMapLayerSelectCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Button"), a = e("../../../CustomUI/ScrollList"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.btnVisable = null;
this.iconVisable = null;
this.iconInVisable = null;
this.label = null;
this._data = null;
}
onLoad() {
this.btnVisable.node.on(n.default.CLICK, this.onClickVisable, this);
this.node.on(a.default.SET_DATA, this.setData, this);
}
setData(e) {
this._data = e;
this.label.string = e.str;
this.onRefreshVisable();
}
onRefreshVisable() {
let e = this._data.delIsVisable(this._data.layerIdx);
this.iconVisable.node.active = e;
this.iconInVisable.node.active = !e;
}
onClickVisable() {
let e = this._data.delIsVisable(this._data.layerIdx);
e = !e;
this._data.delSetVisable(this._data.layerIdx, e);
this.onRefreshVisable();
}
};
i([ r(n.default) ], l.prototype, "btnVisable", void 0);
i([ r(cc.Sprite) ], l.prototype, "iconVisable", void 0);
i([ r(cc.Sprite) ], l.prototype, "iconInVisable", void 0);
i([ r(cc.Label) ], l.prototype, "label", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/ScrollList": "ScrollList"
} ],
TileMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "803eecRVaFHaIXUtwBwQY7z", "TileMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../../scripts/_autogen/data/data"), s = e("../../Frame/Config"), r = e("../../Frame/NetworkMgr"), l = e("../../GameData/GameTypeDefine"), c = e("./BaseConfMng");
o.default = class extends c.BaseConfMng {
constructor() {
super();
this.errorTile = {
tileType: l.TileType.All,
id: "error",
type: l.CommonDataType.Tile,
name: "error",
textureName: "UI/error",
block: !1,
shape: l.TileShape.Normal,
tilePhyType: l.TilePhysicType.Pass
};
this.confType = l.CommonDataType.Tile;
this.creativeConfType = a.CreativeConfType.tile;
this.appendBuildIn(s.Config.tileConfs);
}
upgradeConf(e) {
e && (e.type = l.CommonDataType.Tile);
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleTileConf,
params: t
}, n.Game_RGetRoleTileConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleTileConf,
params: t
}, n.Game_RSaveRoleTileConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleTileConf,
params: t
}, n.Game_RSaveRoleTileConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield r.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleTileConf,
params: t
}, n.Game_RDelRoleTileConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./BaseConfMng": "BaseConfMng"
} ],
TileOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a3bd7BowuVDtKOVmVsJ+3AQ", "TileOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TileOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Game/Player/Mng"), s = e("../../Game/World/Tile"), r = e("./CommonOptionHelper");
o.TileOptionHelper = class extends r.CommonOptionHelper {
constructor() {
super(...arguments);
this.tileConf = null;
this.imageFileType = n.ImageFileType.tile;
this.optionName = "地块";
this.refreshMsgName = "refreshTileList";
this.changeDataMsgName = null;
}
setConf(e) {
super.setConf(e);
this.tileConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
yield a.Mng.Ins.tileMng.save(this.tileConf);
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield a.Mng.Ins.tileMng.delete(this.tileConf);
});
}
displayWorldType() {
return !1;
}
initInspector(e) {
e.reset();
s.default.displayInspector(e, this.tileConf, () => {
this.initInspector(e);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
TilePage: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "45491sjS/pPnrfMt+v/yHvw", "TilePage");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../../CustomUI/ScrollList"), r = e("../../../CustomUI/ToggleGroup"), l = e("../../../Game/OperationFlow"), c = e("../../../Game/Player/DynamicMng"), d = e("../../../Game/Player/Mng"), h = e("../../../Game/World/TouchWorldCtrl"), p = e("../../../GameData/GameTypeDefine"), u = e("../EditWorldScene"), m = e("./EditPageBase"), {ccclass: f, property: g} = cc._decorator;
var y;
(function(e) {
e[e.Move = 0] = "Move";
e[e.Pencil = 1] = "Pencil";
e[e.Eraser = 2] = "Eraser";
})(y || (y = {}));
let v = i = class extends m.EditPageBase {
constructor() {
super(...arguments);
this.editWorldScene = null;
this.toggleGroup = null;
this.tileList = null;
this.preEraserTool = y.Move;
}
onLoad() {
this.node.on(h.default.BRUSH_TILE, this.onBrushTile, this);
this.toggleGroup.node.on(r.default.TOGGLE_CHANGE, this.onToggleChange, this);
this.tileList.node.on(s.default.CLICK_ITEM, this.onClickTileCell, this);
this.tileList.node.on(s.default.SELECT_ITEM, this.onSelectTile, this);
this.tileList.canSelect = e => !e.createNew;
}
onEnable() {
return a(this, void 0, void 0, function*() {
cc.game.on("refreshTileList", this.refreshList, this);
this.toggleGroup.selectIdx(y.Move);
yield this.refreshList();
this.editWorldScene.gameData.parnetGame || cc.game.emit(i.TilePage_Enable, this);
});
}
onDisable() {
cc.game.off("refreshTileList", this.refreshList, this);
this.editWorldScene.cameraDragCtrl.enabled = !0;
this.toggleGroup.selectIdx(y.Move);
}
refreshList() {
return a(this, void 0, void 0, function*() {
this.editWorldScene.elementBox.emptyLabel.node.active = !1;
let e = this.editWorldScene.elementBox.filter.getCurData();
if (!e) return;
let t = yield d.Mng.Ins.assetGroupMng.findGroup(e.str);
t || (t = d.Mng.Ins.assetGroupMng.all);
let o = [];
for (let e of t.refDataList) e.confType == p.CommonDataType.Tile && o.push(e.confId);
let i = yield d.Mng.Ins.tileMng.loadMany(o);
i = i.filter(e => e && e.id);
let n = [];
c.DynamicMng.Ins.isDisable(c.FunctionEnum.PaintAsset, !1) || n.push({
createNew: !0
});
n = n.concat(i);
this.tileList.setDataArr(n);
this.tileList.selectByIdx(1);
this.editWorldScene.elementBox.emptyLabel.node.active = 1 == n.length;
});
}
isPencilOrEraser() {
let e = this.toggleGroup.idx;
return e == y.Pencil || e == y.Eraser;
}
onSelectTile(e) {
this.toggleGroup.idx == y.Eraser && this.toggleGroup.selectIdx(this.preEraserTool);
}
onToggleChange(e, t) {
this.editWorldScene.cameraDragCtrl.enabled = e == y.Move;
e == y.Eraser && (this.preEraserTool = t);
}
onBrushTile(e) {
let t = this.tileList.getCurData(), o = this.editWorldScene.world.tiledMap;
if (!(e.iCol < 0 || e.iRow < 0 || e.iCol >= o.nCol || e.iRow >= o.nRow)) switch (this.toggleGroup.idx) {
case y.Pencil:
this.instanceTile(e.iCol, e.iRow, t);
cc.game.emit(i.TilePage_PUT_TILE, t);
break;

case y.Eraser:
o.removeTile(e.iCol, e.iRow);
cc.game.emit(i.TilePage_DEL_TILE);
}
}
instanceTile(e, t, o) {
if (!o) return;
let i = this.editWorldScene.world, n = i.tiledMap;
n.setLayerVisable(n.selectedLayerIdx, !0);
if (!n.canPlaceTile(o, !0)) return;
let a = n.getTile(e, t);
a || (a = n.addTile(e, t));
let s = null, r = {
id: s = a.data ? a.data.id : "tile" + i.worldLayout.incId++,
layerIdx: n.selectedLayerIdx,
confId: o.id,
isTemplete: !0,
tilePhyType: o.tilePhyType,
dataBlock: o.dataBlock,
dataDestroy: o.dataDestroy,
dataPass: o.dataPass
};
a.setData(r);
}
onClickTileCell(e, t) {
let o = this.editWorldScene.world;
if (t && t.createNew) {
let e = p.TileType.All;
o.worldData.info.type == p.WorldType.Jump && (e = p.TileType.Jump);
o.worldData.info.type == p.WorldType.Rpg && (e = p.TileType.RPG);
l.OperationFlow.paintTile(e, e => {
this.refreshList();
cc.game.emit(i.TilePage_CREATE_TILE, e);
});
}
}
};
v.TilePage_Enable = "TilePage_Enable";
v.TilePage_PUT_TILE = "TilePage_PUT_TILE";
v.TilePage_DEL_TILE = "TilePage_DEL_TILE";
v.TilePage_CREATE_TILE = "TilePage_CREATE_TILE";
n([ g(u.default) ], v.prototype, "editWorldScene", void 0);
n([ g(r.default) ], v.prototype, "toggleGroup", void 0);
n([ g(s.default) ], v.prototype, "tileList", void 0);
v = i = n([ f ], v);
o.default = v;
cc._RF.pop();
}, {
"../../../CustomUI/ScrollList": "ScrollList",
"../../../CustomUI/ToggleGroup": "ToggleGroup",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Game/Player/Mng": "Mng",
"../../../Game/World/TouchWorldCtrl": "TouchWorldCtrl",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../EditWorldScene": "EditWorldScene",
"./EditPageBase": "EditPageBase"
} ],
TilePhysics: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ae45d3nZ0NEDqxHJXrNqdoH", "TilePhysics");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TilePhysics = void 0;
const i = e("../../Frame/FightSystem"), n = e("../../Frame/Util"), a = e("./Tile"), s = cc.v2(), r = (cc.v2(), 
cc.v3());
o.TilePhysics = class {
constructor() {
this._acenter = new cc.Vec2();
this._arect = new cc.Rect();
this._testRect = new cc.Rect();
this._out = new cc.Rect();
this._geomAabb = new cc.geomUtils.Aabb();
this._geomObb = new cc.geomUtils.Obb();
this._aworldMatrix = new cc.Mat4();
}
Init(e) {
this._tiledMap = e;
this._canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);
}
GetBodyById(e) {
return this._worldBodys.find(t => t.id == e);
}
Step(e) {
if (!this._tiledMap) return;
this._worldBodys = e;
let t = e.length;
for (let o = 0; o < t; ++o) {
let t = e[o];
if (t.ignoreTile || null == t.collider || !t.collider.enabled || !t.collider.node.active) continue;
let l = t.getPhyPos();
t.node.getWorldMatrix(this._aworldMatrix);
let c, d, h, p, u = this._aworldMatrix.getScale(r), m = Math.ceil(t.node.width * u.x), f = Math.ceil(t.node.height * u.y), g = Math.ceil(t.boundingBoxExtInTiledPhysics.width * u.x), y = Math.ceil(t.boundingBoxExtInTiledPhysics.height * u.y), v = Math.ceil(t.boundingBoxExtInTiledPhysics.x * u.x), C = Math.ceil(t.boundingBoxExtInTiledPhysics.y * u.y), _ = this._arect, S = l.x - t.node.x, I = l.y - t.node.y;
if (t.onBlockedByTile || !t.useObb) {
c = t.node.x - m * t.node.anchorX + v;
d = t.node.y - f * t.node.anchorY + C;
h = l.x - m * t.node.anchorX + v;
p = l.y - f * t.node.anchorY + C;
_.x = c;
_.y = d;
_.width = m + g;
_.height = f + y;
} else {
let e = t.node.getBoundingBoxToWorld();
h = c = e.x - this._canvas.node.position.x;
p = d = e.y - this._canvas.node.position.y;
_.x = c;
_.y = d;
_.width = e.width;
_.height = e.height;
}
_.x = Math.round(_.x);
_.y = Math.round(_.y);
this._acenter.x = _.xMin + .5 * _.width;
this._acenter.y = _.yMin + .5 * _.height;
let G = this._testRect;
G.x = h < c ? h : c;
G.y = p < d ? p : d;
G.width = _.width + Math.abs(h - c);
G.height = _.height + Math.abs(p - d);
let T = G.x, b = G.y, M = Math.floor(G.x / a.default.SIZE), P = Math.floor(G.y / a.default.SIZE), D = Math.floor((G.x + G.width) / a.default.SIZE), w = Math.floor((G.y + G.height) / a.default.SIZE), B = !1, R = this._out;
for (let e = P; e <= w; ++e) for (let o = M; o <= D; ++o) {
let a = this._tiledMap.getTiles(o, e);
for (let e of a) {
if (!e || !e.node.active) continue;
let o = e.tileRect;
if (e.block) {
if (n.Util.rectRect(o, G)) {
e.intersection(R, G);
if (R.width <= 0 && R.height <= 0) continue;
if (!t.onBlockedByTile && t.useObb && e.canDestroy) {
s.x = t.node.x;
s.y = t.node.y;
t.node.parent.convertToWorldSpaceAR(s, s);
s.subSelf(this._canvas.node.position);
let e = cc.geomUtils.Aabb.set(this._geomAabb, .5 * (o.xMin + o.xMax), .5 * (o.yMin + o.yMax), 0, .5 * o.width, .5 * o.height, 0), i = cc.geomUtils.Obb.set(this._geomObb, s.x, s.y, 0, .5 * m, .5 * f, 0, t.node.right.x, t.node.right.y, t.node.right.z, t.node.up.x, t.node.up.y, t.node.up.z, t.node.forward.x, t.node.forward.y, t.node.forward.z);
if (cc.geomUtils.intersect.aabb_obb(e, i) <= 0) continue;
}
i.FightSystem.doCollisionTile(t.node, e.node);
t.doCollisionTile && t.doCollisionTile(e.node);
if (!t.onBlockedByTile) continue;
let n = G.x, a = G.y, r = cc.Vec2.subtract(s, _.center, o.center), l = Math.abs(r.x) - Math.abs(r.y), c = (o.width - o.height) / 2;
if (l >= c) if (r.x < 0) {
if (_.xMin < o.xMax && (o.yMin <= _.yMin && _.yMin < o.yMax || o.yMin < _.yMax && _.yMax <= o.yMax || o.yMin >= _.yMin && _.yMax >= o.yMax)) {
let t = !1;
if (Math.abs(S) > 1 && Math.abs(S) > Math.abs(I)) {
let o = this.checkSlope({
x: 1,
y: 0
}, e, _, R);
t = 0 != o;
a += o;
}
t || (R.width >= o.width ? n = o.xMin - G.width : n -= R.width);
}
} else if (r.x > 0 && o.xMin < _.xMax && (o.yMin <= _.yMin && _.yMin < o.yMax || o.yMin < _.yMax && _.yMax <= o.yMax || o.yMin >= _.yMin && _.yMax >= o.yMax)) {
let t = !1;
if (Math.abs(S) > 1 && Math.abs(S) > Math.abs(I)) {
let o = this.checkSlope({
x: -1,
y: 0
}, e, _, R);
t = 0 != o;
a += o;
}
t || (R.width >= o.width ? n = o.xMax : n += R.width);
}
if (l <= c) if (r.y < 0) {
if (_.yMin < o.yMax && (o.xMin <= _.xMin && _.xMin < o.xMax || o.xMin < _.xMax && _.xMax <= o.xMax || o.xMin >= _.xMin && _.xMax >= o.xMax)) {
let i = !1;
if (!t.useGravity && Math.abs(I) > 1 && Math.abs(I) > Math.abs(S)) {
let t = this.checkSlope({
x: 0,
y: 1
}, e, _, R);
i = 0 != t;
n += t;
}
i || (R.height >= o.height ? a = o.yMin - G.height : a -= R.height);
}
} else if (r.y > 0 && o.yMin < _.yMax && (o.xMin <= _.xMin && _.xMin < o.xMax || o.xMin < _.xMax && _.xMax <= o.xMax || o.xMin >= _.xMin && _.xMax >= o.xMax)) {
let i = !1;
if (!t.useGravity && Math.abs(I) > 1 && Math.abs(I) > Math.abs(S)) {
let t = this.checkSlope({
x: 0,
y: -1
}, e, _, R);
i = 0 != t;
n += t;
}
i || (R.height >= o.height ? a = o.yMax : a += R.height);
}
G.x = n;
G.y = a;
B = !0;
}
} else {
e.canDamage && t.onDamageByTile && n.Util.rectRect(o, G) && e.giveDamage(t);
if (e.canFall && t.onFallFromTile) {
let i = this._acenter.x - 2, n = this._acenter.x + 2, a = this._acenter.y - 2, s = this._acenter.y + 2;
i > o.xMin && n < o.xMax && a > o.yMin && s < o.yMax && e.giveFallDamage(t);
}
}
}
}
if (B && t.onBlockedByTile) {
let e = G.x - T, o = G.y - b;
0 == e && 0 == o || t.onBlockedByTile({
moveBackX: e,
moveBackY: o
});
}
}
}
checkSlope(e, t, o, i) {
if (!t) return 0;
let n = t.getSlope();
if (0 == n || !(i.height > 0 && i.width < 10 && i.width / i.height >= 1)) return 0;
let a = t.tileRect, s = t.iCol, r = t.iRow, l = 0;
if (0 != e.x) if (e.x * n > 0) {
console.log("moveUp");
if (o.yMax >= a.yMin) {
let e = this._tiledMap.getTiles(s, r + 1), t = !1;
for (let o of e) o.block && (t = !0);
t || (l += i.height);
} else {
let e = this._tiledMap.getTiles(s, r - 1), t = !1;
for (let o of e) o.block && (t = !0);
t || (l -= i.height);
}
} else {
console.log("moveDown");
if (o.yMin > a.yMax) {
let e = this._tiledMap.getTiles(s, r + 1), t = !1;
for (let o of e) if (o.block) {
t = !0;
break;
}
t || (l += i.height);
} else {
let e = this._tiledMap.getTiles(s, r - 1), t = !1;
for (let o of e) if (o.block) {
t = !0;
break;
}
t || (l -= i.height);
}
} else if (0 != e.y) if (e.y * n > 0) {
console.log("moveRight");
if (o.xMax >= a.xMin) {
let e = this._tiledMap.getTiles(s + 1, r), t = !1;
for (let o of e) o.block && (t = !0);
t || (l += i.width);
} else {
let e = this._tiledMap.getTiles(s - 1, r), t = !1;
for (let o of e) o.block && (t = !0);
t || (l -= i.width);
}
} else {
console.log("moveLeft");
if (o.xMin > a.xMax) {
let e = this._tiledMap.getTiles(s + 1, r), t = !1;
for (let o of e) o.block && (t = !0);
t || (l += i.width);
} else {
let e = this._tiledMap.getTiles(s - 1, r), t = !1;
for (let o of e) o.block && (t = !0);
t || (l -= i.width);
}
}
console.log("ts>>", l);
return l;
}
};
cc._RF.pop();
}, {
"../../Frame/FightSystem": "FightSystem",
"../../Frame/Util": "Util",
"./Tile": "Tile"
} ],
TileShapeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "90d11x0pXFGqoDSTAam4+gl", "TileShapeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/ScrollList"), s = e("../../Frame/UIColor"), r = e("../../Frame/Util"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.onStateChange, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
let t = yield r.Util.loadBundleRes("Atlas/TileShapeTemplete/shape" + e, cc.SpriteFrame);
this.sprite.spriteFrame = t;
});
}
onStateChange(e) {
this.node.color = e ? s.UIColor.blue : s.UIColor.white;
}
};
i([ c(cc.Sprite) ], d.prototype, "sprite", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util"
} ],
TiledMap: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "e1e45Npa0BM+481E8DgdSBJ", "TiledMap");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../Frame/Pool"), a = e("../../Frame/Top"), s = e("../../GameData/GameTypeDefine"), r = e("./Tile"), {ccclass: l, property: c} = cc._decorator;
let d = class extends cc.Component {
constructor() {
super(...arguments);
this.nCol = 0;
this.nRow = 0;
this.leftWall = null;
this.rightWall = null;
this.topWall = null;
this.bottomWall = null;
this.tilePool = null;
this.tileLayers = [];
this._selectedLayerIdx = 0;
this._tileLayerVisableMask = -1;
this._tileLayerGrids = [];
this._tmpP1 = new cc.Vec2();
this._tmpP2 = new cc.Vec2();
}
get selectedLayerIdx() {
return this._selectedLayerIdx;
}
set selectedLayerIdx(e) {
this._selectedLayerIdx = e;
}
canPlaceTile(e, t) {
if (!e) return !1;
null == e.tilePhyType && (e.tilePhyType = s.TilePhysicType.Block);
if (e.tilePhyType != s.TilePhysicType.Block && e.tilePhyType != s.TilePhysicType.Destroy && e.tilePhyType != s.TilePhysicType.Pass && this.tileLayers.length > 1 && this._selectedLayerIdx == this.tileLayers.length - 1) {
t && a.default.showToast(`顶层不能摆放${r.default.getTilePhyTypeName(e.tilePhyType)}地块`);
return !1;
}
return !0;
}
setLayerVisable(e, t) {
t ? this._tileLayerVisableMask |= 1 << e : this._tileLayerVisableMask &= ~(1 << e);
this.tileLayers[e].active = t;
}
isLayerVisable(e) {
return (this._tileLayerVisableMask & 1 << e) > 0;
}
setLayerOpacity(e, t) {
this.tileLayers[e].opacity = t;
}
checkOutScreen(e) {
for (let t = 0; t < this.nRow; ++t) for (let o = 0; o < this.nCol; ++o) for (let i of this._tileLayerGrids) {
let n = i[t][o];
if (n) {
let t = n.node.getBoundingBox(), o = e.intersects(t);
n.sprite.enabled = o;
}
}
}
get tileGrid() {
return this._tileLayerGrids[this._selectedLayerIdx];
}
setSize(e, t) {
this.nCol = e;
this.nRow = t;
this.node.width = e * r.default.SIZE;
this.node.height = t * r.default.SIZE;
this._tileLayerGrids = [];
for (let o of this.tileLayers) {
let o = [];
this._tileLayerGrids.push(o);
for (let i = 0; i < t; i++) {
let t = [];
for (let o = 0; o < e; o++) t.push(null);
o.push(t);
}
}
let o = (e, t, o, i, n) => {
e.node.width = i;
e.node.height = n;
e.node.position = cc.v2(t, o);
e.size = cc.size(i, n);
};
o(this.leftWall, -r.default.SIZE / 2, this.node.height / 2, r.default.SIZE, this.node.height + 2e3);
o(this.rightWall, this.node.width + r.default.SIZE / 2, this.node.height / 2, r.default.SIZE, this.node.height + 2e3);
o(this.bottomWall, this.node.width / 2, -r.default.SIZE / 2 - 500, this.node.width + 2e3, r.default.SIZE);
o(this.topWall, this.node.width / 2, this.node.height + r.default.SIZE / 2, this.node.width + 2e3, r.default.SIZE);
}
addTile(e, t) {
return this.addTileInLayer(this._selectedLayerIdx, e, t);
}
addTileInLayer(e, t, o) {
let i = this.tilePool.get();
i.off(r.default.TILE_GRIDPOS_CHANGE, this.onTileGridPosChange, this);
this.tileLayers[e].addChild(i);
i.x = r.default.SIZE * (t + i.anchorX);
i.y = r.default.SIZE * (o + i.anchorY);
let n = i.getComponent(r.default);
this._tileLayerGrids[e][o][t] = n;
i.on(r.default.TILE_GRIDPOS_CHANGE, this.onTileGridPosChange, this);
return n;
}
removeTile(e, t) {
let o = this.getTile(e, t);
if (o) {
o.node.emit(n.default.PUT);
this.tileGrid[t][e] = null;
}
}
removeTileByLayer(e, t, o) {
let i = this._tileLayerGrids[e], a = this.getLayerTile(e, t, o);
if (a) {
a.node.emit(n.default.PUT);
i[o][t] = null;
}
}
getTileByDataId(e) {
for (let t of this._tileLayerGrids) for (let o = 0; o < t.length; o++) {
let i = t[o];
for (let t = 0; t < i.length; t++) if (i[t] && i[t].data.id == e) return i[t];
}
return null;
}
getTile(e, t) {
return t >= 0 && t < this.tileGrid.length ? this.tileGrid[t][e] : null;
}
getLayerTile(e, t, o) {
let i = this._tileLayerGrids[e];
return o >= 0 && o < i.length ? i[o][t] : null;
}
canPass(e, t) {
let o = this.getTiles(e, t);
for (let e of o) if (!e.canPass) return !1;
return !0;
}
getTiles(e, t) {
let o = [];
for (let i = this._tileLayerGrids.length - 1; i >= 0; --i) {
let n = this._tileLayerGrids[i];
t >= 0 && t < n.length && n[t][e] && o.push(n[t][e]);
}
return o;
}
getTilesByPos(e, t) {
let o = Math.floor(e / r.default.SIZE), i = Math.floor(t / r.default.SIZE), n = [];
for (let e = this._tileLayerGrids.length - 1; e >= 0; --e) {
let t = this._tileLayerGrids[e];
i >= 0 && i < t.length && t[i][o] && n.push(t[i][o]);
}
return n;
}
getAllTiles() {
let e = [];
for (let t of this._tileLayerGrids) for (let o = 0; o < t.length; o++) {
let i = t[o];
for (let t = 0; t < i.length; t++) i[t] && e.push(i[t]);
}
return e;
}
getGridPos(e, t) {
return {
iCol: Math.floor(e / r.default.SIZE),
iRow: Math.floor(t / r.default.SIZE)
};
}
onTileGridPosChange(e) {
let t = e.data.layerIdx || 0, o = this._tileLayerGrids[t];
if (o) {
for (let t = 0; t < o.length; t++) {
let i = o[t];
for (let t = 0; t < i.length; t++) i[t] == e && (i[t] = null);
}
let t = e.iRow, i = e.iCol;
if (t >= 0 && t < this.nRow && i >= 0 && i < this.nCol) {
o[t][i] && console.error("onTileGridPosChange error");
o[t][i] = e;
}
}
}
reset() {
let e = this._selectedLayerIdx;
for (let e = 0; e < this._tileLayerGrids.length; ++e) {
this._selectedLayerIdx = e;
let t = this.tileGrid;
for (let e = 0; e < t.length; e++) {
let o = t[e];
for (let t = 0; t < o.length; t++) this.removeTile(t, e);
}
}
this._selectedLayerIdx = e;
}
getValidJumpOverTilePoint(e, t, o) {
this._tmpP1.set(e);
this._tmpP2.set(t);
e = this._tmpP1;
t = this._tmpP2;
let i = {
p1: this._tmpP1,
p2: this._tmpP2
}, n = this.getGridPos(i.p1.x, i.p1.y), a = this.getTiles(n.iCol, n.iRow);
if (!a || 0 == a.length) {
let e = i.p2.x - i.p1.x, t = i.p2.y - i.p1.y, o = Math.sqrt(e * e + t * t);
if (o > 0) {
e /= o;
t /= o;
i.p1.x += 5 * e;
i.p1.y += 5 * t;
n = this.getGridPos(i.p1.x, i.p1.y);
a = this.getTiles(n.iCol, n.iRow);
}
if (!a || 0 == a.length) return !1;
}
for (;a && a.length > 0; ) {
let e = a.shift();
if (e.canJumpOver(i)) {
e.getJumpOverTilePoint(i, o);
let t = this.getGridPos(o.x, o.y);
if (t.iCol < 0 || t.iCol > this.nCol || t.iRow < 0 || t.iRow > this.nRow) return !1;
let n = this.getTiles(t.iCol, t.iRow), s = null, l = !1;
if (!(n && n.length > 0)) return !0;
for (let e of n) if (e && e.block) {
s = e;
let t = i.p2.x - i.p1.x, n = i.p2.y - i.p1.y, a = Math.sqrt(t * t + n * n);
if (a > 0) {
l = !0;
t /= a;
n /= a;
i.p1.set(o);
i.p2.x = i.p1.x + t * r.default.SIZE;
i.p2.y = i.p1.y + n * r.default.SIZE;
break;
}
}
if (!s) return !0;
if (!l) return !1;
a.length = 0;
a.push(s);
}
}
return !1;
}
};
i([ c(cc.BoxCollider) ], d.prototype, "leftWall", void 0);
i([ c(cc.BoxCollider) ], d.prototype, "rightWall", void 0);
i([ c(cc.BoxCollider) ], d.prototype, "topWall", void 0);
i([ c(cc.BoxCollider) ], d.prototype, "bottomWall", void 0);
i([ c(n.default) ], d.prototype, "tilePool", void 0);
i([ c([ cc.Node ]) ], d.prototype, "tileLayers", void 0);
d = i([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Frame/Pool": "Pool",
"../../Frame/Top": "Top",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./Tile": "Tile"
} ],
Tile: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6697bnSk0BKw4l7qBtbYDr5", "Tile");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../Frame/FightSystem"), r = e("../../Frame/Hper"), l = e("../../Frame/SceneManager"), c = e("../../Frame/TweenUtil"), d = e("../../Frame/Util"), h = e("../../Game/World/WorldChild"), p = e("../../GameData/GameTypeDefine"), u = e("../PhyObj"), m = e("../Player/GameSaveMng"), f = e("../Player/Mng"), g = e("../Player/SpriteMng"), y = e("../Player/TriggerMng"), v = e("./AICtrl/Com/AiComSimplerMover"), C = e("./HeroContactTileCtrl"), {ccclass: _, property: S} = cc._decorator;
let I = i = class extends h.default {
constructor() {
super(...arguments);
this.sprite = null;
this.hper = null;
this.box = null;
this.data = null;
this.tileRect = cc.rect();
this._damageInterval = 250;
this._p1 = cc.v2();
this._p2 = cc.v2();
this._p3 = cc.v2();
this._p4 = cc.v2();
}
get iCol() {
return Math.floor(this.node.x / i.SIZE);
}
get iRow() {
return Math.floor(this.node.y / i.SIZE);
}
get canDestroy() {
return this.data.isTemplete ? this._conf.tilePhyType == p.TilePhysicType.Destroy : this.data.tilePhyType == p.TilePhysicType.Destroy;
}
get block() {
return this.data.isTemplete ? this._conf.tilePhyType == p.TilePhysicType.Block || this._conf.tilePhyType == p.TilePhysicType.Destroy || this._conf.tilePhyType == p.TilePhysicType.JumpOver : this.data.tilePhyType == p.TilePhysicType.Block || this.data.tilePhyType == p.TilePhysicType.Destroy || this.data.tilePhyType == p.TilePhysicType.JumpOver;
}
get canDamage() {
return this.data.isTemplete ? this._conf.tilePhyType == p.TilePhysicType.Damage : this.data.tilePhyType == p.TilePhysicType.Damage;
}
get canFall() {
return this.data.isTemplete ? this._conf.tilePhyType == p.TilePhysicType.Fall : this.data.tilePhyType == p.TilePhysicType.Fall;
}
get canPass() {
return this.data.isTemplete ? !!this._conf && (this._conf.tilePhyType == p.TilePhysicType.Pass || this._conf.tilePhyType == p.TilePhysicType.Damage) : this.data.tilePhyType == p.TilePhysicType.Pass || this.data.tilePhyType == p.TilePhysicType.Damage;
}
giveDamage(e) {
let t = cc.director.getTotalTime(), o = 0;
i._damagedHistorysMap.has(e.id) && (o = i._damagedHistorysMap.get(e.id));
if (t >= o) {
i._damagedHistorysMap.set(e.id, t + this._damageInterval);
if (this._conf.dataDamgae) {
let t = .01 * this._conf.dataDamgae.perDmg * (this._damageInterval / 1e3);
t > 0 && e.onDamageByTile(t);
}
}
}
giveFallDamage(e) {
e.onFallFromTile && e.onFallFromTile(this.node, .01 * this._conf.dataFall.hpPercent);
}
isEdgeCanJumpOver(e) {
return !(!this.canJumpOver || !this._conf.dataJumpOver) && (this._conf.dataJumpOver.jumpPassMask & 1 << e) > 0;
}
setEdgeJumpOver(e, t) {
if (this.canJumpOver) {
this._conf.dataJumpOver = this._conf.dataJumpOver || {
jumpPassMask: 0
};
t ? this._conf.dataJumpOver.jumpPassMask |= 1 << e : this._conf.dataJumpOver.jumpPassMask &= ~(1 << e);
}
}
getJumpOverTilePoint(e, t) {
t.x = e.p2.x;
t.y = e.p2.y;
if (this.tileRect.contains(t)) {
let o = 5, i = this.tileRect.xMin - o, n = this.tileRect.xMax + o, a = this.tileRect.yMin - o, s = this.tileRect.yMax + o, r = e.p2.x - e.p1.x, l = e.p2.y - e.p1.y;
if (0 != r && 0 != l) {
let o = 0, c = 0, d = 0, h = 0;
if (r > 0) if (e.p1.x <= i) {
o = n - i;
d = i;
} else {
o = n - e.p1.x;
d = e.p1.x;
} else if (r < 0) if (e.p1.x >= n) {
o = i - n;
d = n;
} else {
o = i - e.p1.x;
d = e.p1.x;
}
if (l > 0) if (e.p1.y <= a) {
c = s - a;
h = a;
} else {
c = s - e.p1.y;
h = e.p1.y;
} else if (l < 0) if (e.p1.y >= s) {
c = a - s;
h = s;
} else {
c = a - e.p1.y;
h = e.p1.y;
}
let p = r / l, u = o / c;
Math.abs(p) <= Math.abs(u) ? c = o / p : o = c * p;
t.x = d + o;
t.y = h + c;
} else 0 == r ? t.y = l > 0 ? s : a : t.x = r > 0 ? n : i;
}
}
canJumpOver(e) {
if (!this.canJumpOver || !this._conf.dataJumpOver || 0 == this._conf.dataJumpOver.jumpPassMask) return !1;
let t = e.p2.x - e.p1.x, o = e.p2.y - e.p1.y, i = !1, n = !1, a = !1, s = !1;
if (0 != t && e.p1.y >= this.tileRect.yMin && e.p1.y <= this.tileRect.yMax || e.p2.y >= this.tileRect.yMin && e.p2.y <= this.tileRect.yMax) {
if (this.isEdgeCanJumpOver(0) && e.p1.x < e.p2.x && e.p1.x <= this.tileRect.xMin + 10) {
i = !0;
if (0 == o) return !0;
}
if (this.isEdgeCanJumpOver(2) && e.p2.x < e.p1.x && e.p1.x >= this.tileRect.xMax - 10) {
n = !0;
if (0 == o) return !0;
}
}
if (0 != o && e.p1.x >= this.tileRect.xMin && e.p1.x <= this.tileRect.xMax || e.p2.x >= this.tileRect.xMin && e.p2.x <= this.tileRect.xMax) {
if (this.isEdgeCanJumpOver(1) && e.p1.y > e.p2.y && e.p1.y >= this.tileRect.yMax - 10) {
a = !0;
if (0 == t || t > 0 && i || t < 0 && n) return !0;
}
if (this.isEdgeCanJumpOver(3) && e.p1.y < e.p2.y && e.p1.y <= this.tileRect.yMin + 10) {
s = !0;
if (0 == t || t > 0 && i || t < 0 && n) return !0;
}
}
if ((i || n) && !a && !s) {
e.p2.y = e.p1.y;
if (Math.abs(o / t) > 1) {
i = !1;
n = !1;
}
}
if ((a || s) && !i && !n) {
e.p2.x = e.p1.x;
if (Math.abs(t / o) > 1) {
a = !1;
s = !1;
}
}
return i || n || a || s;
}
onLoad() {
super.onLoad();
cc.game.on(g.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
this.box = this.getComponent(cc.BoxCollider);
this.hper = this.getComponent(r.default);
this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onTilePositionChange, this);
this.node.on(s.FightSystem.Event.Beaten, this.onBeaten, this);
this.node.on(C.default.HERO_ENTER_TILE, this.onHeroEnterTile, this);
this.node.on(C.default.HERO_LEAFE_TILE, this.onHeroLeaveTile, this);
}
onTilePositionChange() {
this.node.emit(i.TILE_GRIDPOS_CHANGE, this);
}
onDestroy() {
cc.game.off(g.default.UPDATE_SPRITE, this.onPixelsUpdate, this);
}
setProperty(e, t, o, n, a) {
let s = typeof this.data[e];
if ("boolean" == s) {
let o = "true" == t || "1" == t;
this.data[e] = o;
if ("isShow" == e) this.node.active = o; else if ("block" == e) this.updatePhyTypeInRunTime(); else if ("canDestroy" == e) {
this.hper.lockHp = !o;
this.updatePhyTypeInRunTime();
}
} else if ("number" == s) {
let s = parseFloat(t);
Number.isNaN(s) && (s = 0);
a && (s *= i.SIZE);
o && (s *= -1);
(n || o) && (s += this.data[e]);
this.data[e] = s;
if ("hp" == e) {
this.hper.hp = s;
s <= 0 && this.destroyThisTile();
}
} else "string" == s || console.error(`>>not support tile property[${e}] type[${s}]`);
}
updatePhyTypeInRunTime() {
if (this.world.isGameScene) if (this.data.block) if (this.data.canDestroy) {
this.data.tilePhyType = p.TilePhysicType.Destroy;
this.data.dataDestroy = this.data.dataDestroy || {
hp: this.data.hp
};
} else {
this.data.tilePhyType = p.TilePhysicType.Block;
this.data.dataBlock = this.data.block || {};
} else {
this.data.tilePhyType = p.TilePhysicType.Pass;
this.data.dataPass = this.data.dataPass || {};
}
}
copyConfToData(e, t) {
if (t.isTemplete) {
t.isTemplete = !1;
t.tilePhyType = e.tilePhyType;
t.dataBlock = e.dataBlock;
t.dataDestroy = e.dataDestroy;
t.dataPass = e.dataPass;
}
t.dataBlock = e.dataBlock || {};
t.dataDestroy = e.dataDestroy || {
hp: 1
};
t.dataPass = e.dataPass || {};
}
updateDataToNew() {
if (this._conf && null == this._conf.tilePhyType) if (this._conf.block) if (this._conf.canDestroy) {
this._conf.tilePhyType = p.TilePhysicType.Destroy;
this._conf.dataDestroy = this._conf.dataDestroy || {
hp: this.data.hp
};
} else {
this._conf.tilePhyType = p.TilePhysicType.Block;
this._conf.dataBlock = this._conf.block || {};
} else {
this._conf.tilePhyType = p.TilePhysicType.Pass;
this._conf.dataPass = this._conf.dataPass || {};
}
if (!this.data.isTemplete && null == this.data.tilePhyType) if (this.data.block) if (this.data.canDestroy) {
this.data.tilePhyType = p.TilePhysicType.Destroy;
this.data.dataDestroy = this.data.dataDestroy || {
hp: this.data.hp
};
} else {
this.data.tilePhyType = p.TilePhysicType.Block;
this.data.dataBlock = this.data.block || {};
} else {
this.data.tilePhyType = p.TilePhysicType.Pass;
this.data.dataPass = this.data.dataPass || {};
}
}
setData(e) {
return a(this, void 0, void 0, function*() {
let t = this.world;
t.isGameScene && (e = d.Util.deepCopy(e));
this.data = e;
this._conf = yield f.Mng.Ins.tileMng.loadOne(this.data.confId);
this._conf || (this._conf = f.Mng.Ins.tileMng.errorTile);
f.Mng.Ins.spriteMng.setTileSprite(this.sprite, this._conf.textureName, 64);
this.updateDataToNew();
t.isGameScene && this.copyConfToData(this._conf, this.data);
this.data.isShow = this.data.isShow || !0;
this.node.active = this.data.isShow;
this.box.enabled = !1;
this.hper.hp = 1;
this.data.isTemplete ? this._conf.dataDestroy && (this.hper.hp = this._conf.dataDestroy.hp || 1) : this.data.dataDestroy && (this.hper.hp = this.data.dataDestroy.hp);
this.hper.HpMax = this.hper.hp;
this.hper.lockHp = !this.canDestroy;
let o = this.tileRect, n = p.TileShape.Normal;
null == this._conf.shape && (this._conf.shape = p.TileShape.Normal);
switch (n = this._conf.shape) {
case p.TileShape.Slope_45:
case p.TileShape.Slope_45_Flip:
case p.TileShape.Slope_135:
case p.TileShape.Slope_135_Flip:
case p.TileShape.Normal:
o.x = this.node.x - .5 * i.SIZE;
o.y = this.node.y - .5 * i.SIZE;
o.width = i.SIZE;
o.height = i.SIZE;
break;

case p.TileShape.Half_Top:
o.x = this.node.x - .5 * i.SIZE;
o.y = this.node.y;
o.width = i.SIZE;
o.height = .5 * i.SIZE;
break;

case p.TileShape.Half_Btm:
o.x = this.node.x - .5 * i.SIZE;
o.y = this.node.y - .5 * i.SIZE;
o.width = i.SIZE;
o.height = .5 * i.SIZE;
}
});
}
getSlope() {
let e = 0;
if (this._conf) switch (this._conf.shape) {
case p.TileShape.Normal:
case p.TileShape.Half_Top:
case p.TileShape.Half_Btm:
break;

case p.TileShape.Slope_45:
e = 1;
break;

case p.TileShape.Slope_45_Flip:
e = -1;
break;

case p.TileShape.Slope_135:
e = 1;
break;

case p.TileShape.Slope_135_Flip:
e = -1;
}
return e;
}
canMovexThrough(e) {
if (!this.data.block) return !0;
let t = this.getSlope();
return e > 0 && t > 0 && t <= 1 || e < 0 && t < 0 && t <= -1;
}
getDirxNextTileGridPos(e) {
let t = this.getSlope();
return {
iCol: this.iCol + e,
iRow: this.iRow + Math.floor(0 == t ? 0 : e / t)
};
}
intersection(e, t) {
let o = p.TileShape.Normal;
this._conf && (o = this._conf.shape);
switch (o) {
case p.TileShape.Normal:
case p.TileShape.Half_Top:
case p.TileShape.Half_Btm:
this.tileRect.intersection(e, t);
break;

case p.TileShape.Slope_45:
this.tileRect.intersection(e, t);
if (e.width > 0 || e.height > 0) {
this._p1.x = e.x;
this._p1.y = e.y;
this._p2.x = e.x + e.width;
this._p2.y = e.y;
this._p3.x = e.x;
this._p3.y = e.y + e.height;
this._p4.x = e.x + e.width;
this._p4.y = e.y + e.height;
let t = this._p1.x - this.tileRect.x + this.tileRect.y, o = this._p2.x - this.tileRect.x + this.tileRect.y;
if (this._p3.y > t && this._p1.y < t) e.height = t - e.yMin; else if (this._p4.y >= o && this._p2.y <= o) {
e.height = .707 * (o - e.yMin);
e.width = e.height;
} else if (this._p1.y >= t && this._p2.y >= o) {
e.width = 0;
e.height = 0;
}
}
break;

case p.TileShape.Slope_45_Flip:
this.tileRect.intersection(e, t);
if (e.width > 0 || e.height > 0) {
this._p1.x = e.x;
this._p1.y = e.y;
this._p2.x = e.x + e.width;
this._p2.y = e.y;
this._p3.x = e.x;
this._p3.y = e.y + e.height;
this._p4.x = e.x + e.width;
this._p4.y = e.y + e.height;
let t = this.tileRect.width - (this._p1.x - this.tileRect.x) + this.tileRect.y, o = this.tileRect.width - (this._p2.x - this.tileRect.x) + this.tileRect.y;
if (this._p3.y >= t && this._p1.y <= t) {
e.height = .707 * (t - e.yMin);
e.width = e.height;
} else if (this._p4.y > o && this._p2.y < o) e.height = o - e.yMin; else if (this._p1.y >= t && this._p2.y >= o) {
e.width = 0;
e.height = 0;
}
}
break;

case p.TileShape.Slope_135:
this.tileRect.intersection(e, t);
if (e.width > 0 || e.height > 0) {
this._p1.x = e.x;
this._p1.y = e.y;
this._p2.x = e.x + e.width;
this._p2.y = e.y;
this._p3.x = e.x;
this._p3.y = e.y + e.height;
this._p4.x = e.x + e.width;
this._p4.y = e.y + e.height;
let t = this._p1.x - this.tileRect.x + this.tileRect.y, o = this._p2.x - this.tileRect.x + this.tileRect.y;
if (this._p3.y >= t && this._p1.y <= t) {
e.height = .707 * (e.yMax - t);
e.width = e.height;
} else if (this._p3.y > o && this._p1.y < o) e.height = e.yMax - o; else if (this._p3.y <= t && this._p4.y <= o) {
e.width = 0;
e.height = 0;
}
}
break;

case p.TileShape.Slope_135_Flip:
this.tileRect.intersection(e, t);
if (e.width > 0 || e.height > 0) {
this._p1.x = e.x;
this._p1.y = e.y;
this._p2.x = e.x + e.width;
this._p2.y = e.y;
this._p3.x = e.x;
this._p3.y = e.y + e.height;
this._p4.x = e.x + e.width;
this._p4.y = e.y + e.height;
let t = this.tileRect.width - (this._p1.x - this.tileRect.x) + this.tileRect.y, o = this.tileRect.width - (this._p2.x - this.tileRect.x) + this.tileRect.y;
if (this._p3.y > t && this._p1.y < t) e.height = e.yMax - t; else if (this._p4.y >= o && this._p2.y <= o) {
e.height = .707 * (e.yMax - o);
e.width = e.height;
} else if (this._p3.y <= t && this._p4.y <= o) {
e.width = 0;
e.height = 0;
}
}
}
return e;
}
onBeaten(e) {
e.dmg > 0 && y.default.Ins.emitTrigger(this.data.onBeaten, this.node);
e.causeDeath ? this.destroyThisTile() : c.TweenUtil.applyShakeShort(this.sprite.node);
}
destroyThisTile() {
return a(this, void 0, void 0, function*() {
let e = this.world;
this.data.onlyOnce && m.default.Ins.setTileFlag(e.worldData.id, this.data.id);
if (e.worldLayout.type == p.WorldType.Rpg) {
let t = v.GameActorDeadSubstitute.Create(), o = t.node.getComponent(cc.Sprite);
o || (o = t.addComponent(cc.Sprite));
o && (o.spriteFrame = this.sprite.spriteFrame);
e.content.addChild(t.node);
t.node.position = this.node.position;
t.node.width = this.sprite.node.width;
t.node.height = this.sprite.node.height;
let n = .4, a = i.SIZE, s = 2 * (-a + Math.random() * a * 2) / n, r = 4 * (.5 * a + Math.random() * a * .5) / n;
t.addImpulse(s, r, n);
} else {
let t = new cc.Node();
t.addComponent(cc.Sprite).spriteFrame = this.sprite.spriteFrame;
e.content.addChild(t);
t.position = this.node.position;
t.width = this.sprite.node.width;
t.height = this.sprite.node.height;
let o = t.addComponent(u.default);
e.worldLayout.type == p.WorldType.Jump && o.fly(d.Util.randomInt(-100, 100), d.Util.randomInt(200, 300), d.Util.randomInt(-300, 300));
o.fadeOut();
}
y.default.Ins.emitTrigger(this.data.onDestroy, this.node);
e.tiledMap.removeTileByLayer(this.data.layerIdx, this.iCol, this.iRow);
});
}
onHeroEnterTile() {
y.default.Ins.emitTrigger(this.data.onHeroEnter, this.node);
}
onHeroLeaveTile() {
y.default.Ins.emitTrigger(this.data.onHeroLeave, this.node);
}
onPixelsUpdate(e, t) {
return a(this, void 0, void 0, function*() {
this._conf && this._conf.id == e && f.Mng.Ins.spriteMng.setTileSprite(this.sprite, t, 64);
});
}
static getTilePhyTypeName(e) {
return i._tilePhysicTypeMap.get(e).str;
}
initInspector(e) {
this.data.onDestroy = this.data.onDestroy || [];
this.data.onBeaten = this.data.onBeaten || [];
this.data.onHeroEnter = this.data.onHeroEnter || [];
this.data.onHeroLeave = this.data.onHeroLeave || [];
this._conf = f.Mng.Ins.tileMng.getOne(this.data.confId);
this._conf ? e.addHead(this._conf.name, this._conf.textureName) : e.addHead("错误地块", void 0);
if (1 == this.data.isTemplete) if (this._conf) {
let t = this.data.isTemplete ? this._conf.tilePhyType : this.data.tilePhyType;
e.addButton("类型", i._tilePhysicTypeMap.get(t).str, () => {
l.default.ins.OpenPanelByName("CommonOptionPanel", t => {
t.setData(this._conf, t => {
this._conf = t;
e.reset();
this.initInspector(e);
});
});
});
t == p.TilePhysicType.Destroy && i.displayInspectorTileDestroyEvent(e, this.data);
e.addTrigger("当主角接触此地块时：", this.data.onHeroEnter, !0);
} else e.addLabel("模版已被删除"); else {
let t = Array.from(i._tilePhysicTypeMap.values()).filter(e => e.type == p.TilePhysicType.Block || e.type == p.TilePhysicType.Destroy || e.type == p.TilePhysicType.Pass), o = t.findIndex(e => e.type == this.data.tilePhyType);
-1 == o && (o = 0);
e.addDropDownBox("地块类型", t, o, (t, o, i) => a(this, void 0, void 0, function*() {
let t = this.data.tilePhyType != o.type;
this.data.tilePhyType = o.type;
if (i && t) {
e.reset();
this.initInspector(e);
}
}));
this.data.tilePhyType == p.TilePhysicType.Block ? i.displayInspectorTileBlock(e, this.data) : this.data.tilePhyType == p.TilePhysicType.Destroy ? i.displayInspectorTileDestroy(e, this.data) : this.data.tilePhyType == p.TilePhysicType.Pass && i.displayInspectorTilePass(e, this.data);
e.addTrigger("当主角接触此地块时：", this.data.onHeroEnter, !0);
}
}
static displayInspector(e, t, o) {
{
let o = [ {
str: "所有",
type: p.TileType.All
}, {
str: "平台跳跃",
type: p.TileType.Jump
}, {
str: "俯视冒险",
type: p.TileType.RPG
} ], i = o.findIndex(e => t.tileType == e.type);
i < 0 && (i = 0);
e.addDropDownBox("所属地图", o, i, (e, o) => a(this, void 0, void 0, function*() {
t.tileType = o.type;
}));
}
let n = Array.from(i._tilePhysicTypeMap.values()), s = n.findIndex(e => e.type == t.tilePhyType);
-1 == s && (s = 0);
e.addDropDownBox("地块类型", n, s, (e, i, n) => a(this, void 0, void 0, function*() {
let e = t.tilePhyType != i.type;
t.tilePhyType = i.type;
n && e && o && o();
}));
t.tilePhyType == p.TilePhysicType.Block ? i.displayInspectorTileBlock(e, t) : t.tilePhyType == p.TilePhysicType.Destroy ? i.displayInspectorTileDestroy(e, t) : t.tilePhyType == p.TilePhysicType.Fall ? i.displayInspectorTileFall(e, t) : t.tilePhyType == p.TilePhysicType.JumpOver ? i.displayInspectorTileJumpOver(e, t) : t.tilePhyType == p.TilePhysicType.Damage ? i.displayInspectorTileDamage(e, t) : t.tilePhyType == p.TilePhysicType.Pass && i.displayInspectorTilePass(e, t);
let r = [ p.TileShape.Normal, p.TileShape.Half_Btm, p.TileShape.Half_Top, p.TileShape.Slope_45, p.TileShape.Slope_45_Flip, p.TileShape.Slope_135, p.TileShape.Slope_135_Flip ], l = r.findIndex(e => e == t.shape);
l <= 0 && (l = 0);
e.addImgBtnHList("物理形状", r, l, (e, o) => a(this, void 0, void 0, function*() {
t.shape = o;
}));
}
static displayInspectorTileBlock(e, t) {
t.dataBlock = t.dataBlock || {};
}
static displayInspectorTileDestroyEvent(e, t) {
t.onlyOnce = t.onlyOnce || !1;
e.addToggle("摧毁后不再出现？", t.onlyOnce, e => {
t.onlyOnce = e;
});
e.addTrigger("当此地块摧毁时：", t.onDestroy, !0);
e.addTrigger("当此地块受击时：", t.onBeaten, !0);
}
static displayInspectorTileDestroy(e, t) {
t.dataDestroy = t.dataDestroy || {
hp: 1
};
e.addNumberEditBox("血量", t.dataDestroy.hp, 0, 999999, e => {
t.dataDestroy.hp = e = e;
});
}
static displayInspectorTileFall(e, t) {
t.dataFall = t.dataFall || {
hpPercent: 1
};
let o = e.addNumberEditBox2("掉落损失生命", "%", t.dataFall.hpPercent, e => {
let i = Number.parseFloat(e) || 0;
t.dataFall.hpPercent = i = d.Util.clamp(i, 0, 100);
o.label_num.string = i + "";
});
}
static displayInspectorTileJumpOver(e, t) {
t.dataJumpOver = t.dataJumpOver || {
jumpPassMask: 0
};
let o = e => (t.dataJumpOver.jumpPassMask & 1 << e) > 0, i = (e, o) => {
o ? t.dataJumpOver.jumpPassMask |= 1 << e : t.dataJumpOver.jumpPassMask &= ~(1 << e);
}, n = o(0), a = o(1), s = o(2), r = o(3);
e.addToggle("左->右", n, e => {
i(0, e);
});
e.addToggle("右->左", s, e => {
i(2, e);
});
e.addToggle("上->下", a, e => {
i(1, e);
});
e.addToggle("下->上", r, e => {
i(3, e);
});
}
static displayInspectorTileDamage(e, t) {
t.dataDamgae = t.dataDamgae || {
perDmg: 1
};
let o = e.addNumberEditBox2("损失生命/秒", "%", t.dataDamgae.perDmg, e => {
let i = Number.parseFloat(e) || 0;
t.dataDamgae.perDmg = i = d.Util.clamp(i, 0, 100);
o.label_num.string = i + "";
});
}
static displayInspectorTilePass(e, t) {
t.dataPass = t.dataPass || {};
}
};
I.TILE_GRIDPOS_CHANGE = "TILE_GRIDPOS_CHANGE";
I.SIZE = 64;
I._damagedHistorysMap = new Map();
I._tilePhysicTypeMap = new Map([ [ p.TilePhysicType.Pass, {
str: "可通行",
type: p.TilePhysicType.Pass
} ], [ p.TilePhysicType.Damage, {
str: "持续伤害",
type: p.TilePhysicType.Damage
} ], [ p.TilePhysicType.Block, {
str: "坚不可摧",
type: p.TilePhysicType.Block
} ], [ p.TilePhysicType.Destroy, {
str: "可摧毁",
type: p.TilePhysicType.Destroy
} ], [ p.TilePhysicType.Fall, {
str: "深渊(RPG)",
type: p.TilePhysicType.Fall
} ], [ p.TilePhysicType.JumpOver, {
str: "单向通行(RPG)",
type: p.TilePhysicType.JumpOver
} ] ]);
n([ S(cc.Sprite) ], I.prototype, "sprite", void 0);
n([ S(cc.BoxCollider) ], I.prototype, "box", void 0);
I = i = n([ _ ], I);
o.default = I;
cc._RF.pop();
}, {
"../../Frame/FightSystem": "FightSystem",
"../../Frame/Hper": "Hper",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../Game/World/WorldChild": "WorldChild",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../PhyObj": "PhyObj",
"../Player/GameSaveMng": "GameSaveMng",
"../Player/Mng": "Mng",
"../Player/SpriteMng": "SpriteMng",
"../Player/TriggerMng": "TriggerMng",
"./AICtrl/Com/AiComSimplerMover": "AiComSimplerMover",
"./HeroContactTileCtrl": "HeroContactTileCtrl"
} ],
ToggleGroup: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1a882oeS+5D/6lXO5awGr53", "ToggleGroup");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, menu: s, property: r} = cc._decorator;
let l = i = class extends cc.ToggleContainer {
constructor() {
super(...arguments);
this.lastIdx = 0;
this.idx = 0;
}
onLoad() {
let e = new cc.Component.EventHandler();
e.target = this.node;
e.handler = "_stateChange";
e.component = "ToggleGroup";
this.checkEvents = [ e ];
this.node.emit(i.TOGGLE_CHANGE, this.idx, this.lastIdx, !1);
}
_stateChange(e) {
this.idx = this.toggleItems.indexOf(e);
this.node.emit(i.TOGGLE_CHANGE, this.idx, this.lastIdx, !0);
this.lastIdx = this.idx;
}
selectIdx(e) {
let t = this.getComponentsInChildren(cc.Toggle);
0 <= e && e < t.length && (t[e].isChecked = !0);
}
};
l = i = n([ a, s("自定义UI/ToggleGroup") ], l);
o.default = l;
cc._RF.pop();
}, {} ],
ToggleItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f8361aTP5VPNoUvRmaMHH46", "ToggleItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../CustomUI/Toggle"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.toggle = null;
this.onChange = null;
}
onLoad() {
this.toggle.node.on(n.default.STATE_CHANGE, this.onSelectChange, this);
}
setData(e, t, o) {
this.onChange = o;
this.nameLabel.string = e;
this.toggle.isChecked = t;
}
onSelectChange(e) {
this.onChange && this.onChange(e);
}
};
i([ s(cc.Label) ], r.prototype, "nameLabel", void 0);
i([ s(n.default) ], r.prototype, "toggle", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../../CustomUI/Toggle": "Toggle"
} ],
Toggle: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "16723pvTfdI2rmWMNa+nojV", "Toggle");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: a, menu: s, property: r} = cc._decorator;
cc.Toggle && (cc.Toggle._triggerEventInScript_isChecked = !0);
let l = i = class extends cc.Toggle {
constructor() {
super(...arguments);
this.label = null;
this.background = null;
this.dot = null;
this.dotLabel = null;
}
onLoad() {
let e = new cc.Component.EventHandler();
e.target = this.node;
e.handler = "_stateChange";
e.component = "Toggle";
this.checkEvents = [ e ];
this.node.emit(i.STATE_CHANGE, this.isChecked, !1);
}
_stateChange(e) {
this.node.emit(i.STATE_CHANGE, this.isChecked, !0);
}
};
n([ r(cc.Label) ], l.prototype, "label", void 0);
n([ r(cc.Sprite) ], l.prototype, "background", void 0);
n([ r(cc.Node) ], l.prototype, "dot", void 0);
n([ r(cc.Label) ], l.prototype, "dotLabel", void 0);
l = i = n([ a, s("自定义UI/Toggle") ], l);
o.default = l;
cc._RF.pop();
}, {} ],
Top: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "37afd1FXuZBV4Npd77+qWcZ", "Top");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("./Util"), r = e("./DataBind"), l = e("../CustomUI/Button"), c = e("./UIColor"), d = e("../../i18n/i18nMgr"), {ccclass: h, property: p} = cc._decorator;
let u = i = class extends r.DB.DataBindComponent {
constructor() {
super(...arguments);
this.block = null;
this.toastPrefab = null;
this.loading = null;
this.menu = null;
}
onLoad() {
i.ins = this;
i.node = this.node;
this.toastPrefab.active = !1;
this.loading.active = !1;
this.menu.active = !1;
this.block = this.getComponent(cc.BlockInputEvents);
i.blockInput(!1);
}
static blockInput(e = !0, t = "normal") {
if (!i.ins) return;
let o = this.blockKeys.indexOf(t);
e && o < 0 ? this.blockKeys.push(t) : !e && o >= 0 && this.blockKeys.splice(o, 1);
i.ins.block.enabled = 0 != this.blockKeys.length;
}
static isBlocking() {
return i.ins.block.enabled;
}
static tempBlockInput(e) {
this.blockInput(!0);
i.ins.scheduleOnce(() => {
this.blockInput(!1);
}, e);
}
static showToast(e) {
let t = cc.instantiate(this.ins.toastPrefab);
t.active = !0;
t.getComponentInChildren(cc.Label).string = d.I18nMgr.getI18nStringByZh(e);
i.ins.node.addChild(t);
t.opacity = 0;
t.y = -20;
cc.tween(t).to(.1, {
opacity: 255,
y: 0
}).delay(1.5).to(.1, {
opacity: 0,
y: 20
}).call(() => {
i.ins.node.removeChild(t);
}).start();
}
static showLoading(e) {
if (!i.ins) return;
i.blockInput(!0, "loading");
let t = i.ins.loading;
t.active = !0;
t.getComponentInChildren(cc.Label).string = e;
}
static hideLoading(e = null) {
i.ins.loading.active = !1;
i.blockInput(!1, "loading");
e && i.showToast(e);
}
static showMenu(e, t) {
if (t.length < 0) return;
let o = i.ins.menu;
o.active = !0;
o.position = s.Util.convertPosition(e, o.parent, cc.v2(-e.width / 2, -e.height / 2));
let n = o.children[0];
i.blockInput(!0, "showMenu");
i.node.on(cc.Node.EventType.TOUCH_END, i.hideMenu, this);
s.Util.makeBro(n, t.length, (e, o) => a(this, void 0, void 0, function*() {
let n = t[o], a = e.getComponent(l.default);
a.label.string = d.I18nMgr.getI18nStringByZh(n.str);
a.background.node.color = n.color || c.UIColor.blue;
a.icon.spriteFrame = null;
a.icon.spriteFrame = yield s.Util.loadBundleRes(n.icon.url, cc.SpriteFrame);
a.icon.node.color = n.icon.color;
a.icon.node.width = n.icon.w;
a.icon.node.height = n.icon.h;
a.node.on(l.default.CLICK, () => {
i.hideMenu();
n.call();
}, this);
}));
}
static hideMenu() {
i.node.off(cc.Node.EventType.TOUCH_END, i.hideMenu, this);
i.blockInput(!1, "showMenu");
let e = i.ins.menu;
e.active = !1;
e.children.forEach(e => {
e.targetOff(this);
});
}
static showFloatLabel(e, t, o) {
let i = t.convertToWorldSpaceAR(o.offset || cc.Vec2.ZERO);
i = t.convertToNodeSpaceAR(i);
let n = new cc.Node(), a = n.addComponent(cc.Label);
t.addChild(n);
n.position = i;
a.string = e;
a.fontSize = o.fontSize || 25;
a.node.color = o.color || cc.Color.BLACK;
if (o.stroke) {
let e = n.addComponent(cc.LabelOutline);
e.color = o.strokeColor || cc.Color.BLACK;
e.width = o.stroke;
}
cc.tween(n).to(.1, {
y: n.y + 5
}).delay(o.duration || 1.5).to(.1, {
y: n.y + 20,
opacity: 0
}).call(() => {
n.removeFromParent();
}).start();
return a;
}
static bezierSprite(e) {
return a(this, void 0, void 0, function*() {
e.cnt = e.cnt || 1;
e.time = e.time || 1;
e.fromScale = e.fromScale || 1;
e.toScale = e.toScale || 1;
e.deltaT = e.deltaT || .05;
e.color = e.color || cc.Color.WHITE;
let t = new cc.Node(), o = null;
if (e.url) o = yield s.Util.loadBundleRes(e.url, cc.SpriteFrame); else {
if (!e.spriteFrame) throw Error("bezierSprite参数中，url和spriteFrame不能同时为空");
o = e.spriteFrame;
}
for (let n = 0; n < e.cnt; n++) setTimeout(() => {
let a = null;
if (t) {
a = t;
t = null;
} else a = new cc.Node();
a.scale = e.fromScale;
i.ins.node.addChild(a);
a.addComponent(cc.Sprite).spriteFrame = o;
let r = e.from.add(cc.v2(s.Util.randomInt(-200, 200), s.Util.randomInt(-200, 200)));
a.position = e.from;
a.color = e.color;
e.onBegin && e.onBegin(n == e.cnt - 1);
a.runAction(cc.spawn(cc.sequence(cc.bezierTo(e.time, [ e.from, r, e.to ]), cc.callFunc(() => {
a.removeFromParent();
e.onEnd && e.onEnd(n == e.cnt - 1);
})), cc.scaleTo(e.time, e.toScale)));
}, n * e.deltaT * 1e3);
return t;
});
}
static bezierNode(e) {
e.time = e.time || 1;
e.targetScale = e.targetScale || e.node.scale;
e.parentNode = e.parentNode || i.node;
let t = e.node;
if (t.parent) {
let o = s.Util.convertPosition(t, e.parentNode);
t.removeFromParent();
e.parentNode.addChild(t);
t.position = o;
} else e.parentNode.addChild(t);
let o = t.position, n = null;
if (e.dCtrlPos) n = o.add(e.dCtrlPos); else {
let e = 200;
n = o.add(cc.v2(s.Util.randomInt(-e, e), s.Util.randomInt(-e, e)));
}
e.onBegin && e.onBegin();
let a = s.Util.convertPosition(e.targetNode, i.node);
t.runAction(cc.sequence(cc.spawn(cc.bezierTo(e.time, [ o, n, a ]), cc.scaleTo(e.time, e.targetScale)), cc.callFunc(() => {
t.removeFromParent();
e.onEnd && e.onEnd();
})));
return t;
}
};
u.ins = null;
u.node = null;
u.blockKeys = [];
n([ p(cc.Node) ], u.prototype, "toastPrefab", void 0);
n([ p(cc.Node) ], u.prototype, "loading", void 0);
n([ p(cc.Node) ], u.prototype, "menu", void 0);
u = i = n([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"../CustomUI/Button": "Button",
"./DataBind": "DataBind",
"./UIColor": "UIColor",
"./Util": "Util"
} ],
TouchWorldCtrl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "454848lsxNFKIYsG5aWuiOQ", "TouchWorldCtrl");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("./Tile"), {ccclass: s} = cc._decorator;
let r = i = class extends cc.Component {
constructor() {
super(...arguments);
this.worldCamera = null;
this.world = null;
this.lastTouchPosInfo = null;
}
onLoad() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove4, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd5, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd5, this);
}
setWorld(e) {
this.world = e;
this.worldCamera = e.camera;
}
onTouchStart(e) {
let t = this.touchToGrid(e);
this.node.emit(i.BRUSH_TILE, t);
this.lastTouchPosInfo = t;
}
onTouchMove4(e) {
let t = this.touchToGrid(e);
this.lastTouchPosInfo && t && (this.lastTouchPosInfo.iCol === t.iCol && this.lastTouchPosInfo.iRow === t.iRow || this.node.emit(i.BRUSH_TILE, t));
this.lastTouchPosInfo = t;
}
onTouchEnd5(e) {
let t = this.touchToGrid(e);
e.getLocation().sub(e.getStartLocation()).magSqr() < 100 && cc.game.emit(i.CLICK_WORLD, t);
this.lastTouchPosInfo = null;
}
touchToGrid(e) {
if (!this.worldCamera) return;
let t = e.getLocation();
this.worldCamera.getScreenToWorldPoint(t, t);
this.world.node.convertToNodeSpaceAR(t, t);
let o = Math.floor(t.x / a.default.SIZE), i = Math.floor(t.y / a.default.SIZE);
return {
x: t.x,
y: t.y,
iCol: o,
iRow: i
};
}
};
r.CLICK_WORLD = "CLICK_WORLD";
r.BRUSH_TILE = "BRUSH_TILE";
r = i = n([ s ], r);
o.default = r;
cc._RF.pop();
}, {
"./Tile": "Tile"
} ],
TouchWorldShowGizmos: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d817fParBFJuY1qqdm8fnay", "TouchWorldShowGizmos");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Game/Device/Decorator"), s = e("../../Game/World/Gizmos/PlaceGizmos"), r = e("../../Game/World/TouchWorldCtrl"), l = e("../../GameData/GameTypeDefine"), c = e("./EditWorldScene"), d = e("./Page/ActorPage"), h = e("./Page/TilePage"), {ccclass: p, property: u} = cc._decorator;
let m = i = class extends cc.Component {
constructor() {
super(...arguments);
this.editWorldScene = null;
this.lastList = [];
this.clickIdx = 0;
}
onLoad() {
i.Ins = this;
cc.game.on(r.default.CLICK_WORLD, this.onClickWorld, this);
}
onDestroy() {
i.Ins = null;
cc.game.off(r.default.CLICK_WORLD, this.onClickWorld, this);
}
onClickWorld(e) {
let t = this.editWorldScene.world;
if (!t) return;
if (t.placeGizmos.node.active) {
t.placeGizmos.hide();
cc.game.emit(s.default.PlaceGizmos_Confirm);
}
let o = this.editWorldScene.elementBox.getComponentInChildren(h.default);
if (o && o.isPencilOrEraser()) return;
let i = cc.v2(e.x, e.y), n = [], r = t.tiledMap.tileLayers.length - 1;
if (t.tiledMap.isLayerVisable(r) && e.iCol >= 0 && e.iCol < t.tiledMap.nCol && e.iRow >= 0 && e.iRow < t.tiledMap.nRow) {
let o = t.tiledMap.getLayerTile(r, e.iCol, e.iRow);
o && n.push({
type: "tile",
target: o
});
}
--r;
for (let e = t.actors.length - 1; e >= 0; e--) {
let o = t.actors[e];
o.getBoundingBox().contains(i) && n.push({
type: "actor",
target: o
});
}
for (let e = t.props.length - 1; e >= 0; e--) {
let o = t.props[e];
o.getBoundingBox().contains(i) && n.push({
type: "prop",
target: o
});
}
for (let e = t.devices.length - 1; e >= 0; e--) {
let o = t.devices[e];
if (o instanceof a.default) {
let e = o.getLayer();
if (e != l.DecoratorLayerType.Map && e != l.DecoratorLayerType.MapFore && e != l.DecoratorLayerType.Foreground01) continue;
}
o.getBoundingBox().contains(i) && n.push({
type: "device",
target: o
});
}
t.startPoint.node.active && t.startPoint.getBoundingBox().contains(i) && n.push({
type: "startPoint",
target: t.startPoint
});
for (;r >= 0; ) {
if (t.tiledMap.isLayerVisable(r) && e.iCol >= 0 && e.iCol < t.tiledMap.nCol && e.iRow >= 0 && e.iRow < t.tiledMap.nRow) {
let o = t.tiledMap.getLayerTile(r, e.iCol, e.iRow);
o && n.push({
type: "tile",
target: o
});
}
--r;
}
for (let e = t.devices.length - 1; e >= 0; e--) {
let o = t.devices[e];
if (o instanceof a.default) {
let e = o.getLayer();
if (e != l.DecoratorLayerType.Background01 && e != l.DecoratorLayerType.Background02 && e != l.DecoratorLayerType.MapBack) continue;
}
o.getBoundingBox().contains(i) && n.push({
type: "device",
target: o
});
}
let c = n.length == this.lastList.length;
if (c) for (let e = 0; e < n.length; e++) if (n[e].target != this.lastList[e].target) {
c = !1;
break;
}
if (!c) {
this.lastList = n;
this.clickIdx = -1;
}
if (0 == n.length) {
this.editWorldScene.elementBox.show();
this.editWorldScene.inspector.hide();
return;
}
this.clickIdx = (this.clickIdx + 1) % n.length;
let d = n[this.clickIdx];
switch (d.type) {
case "tile":
this.clickTile(d.target);
break;

case "actor":
this.clickActor(d.target);
break;

case "device":
this.clickDevice(d.target);
break;

case "prop":
this.clickProp(d.target);
break;

case "startPoint":
this.clickStartPoint(d.target);
}
}
clickStartPoint(e) {
this.editWorldScene.inspector.tempData = null;
this.editWorldScene.inspector.selectType = "";
let t = this.editWorldScene, o = t.world;
t.elementBox.hide();
t.inspector.reset();
e.initInspector(t.inspector);
t.inspector.tempData = e;
t.inspector.selectType = "startPoint";
t.inspector.show();
o.placeGizmos.show({
scale: 1,
target: null,
body: e,
canPlaceType: s.CanPlaceType.All,
noCancel: !0,
onConfirm: () => {},
onCancel: () => {},
onComplete: () => {
t.elementBox.show();
t.inspector.hide();
},
onRotate: () => {}
});
}
clickActor(e) {
this.editWorldScene.inspector.tempData = null;
this.editWorldScene.inspector.selectType = "";
let t = this.editWorldScene, o = t.world;
t.elementBox.hide();
t.inspector.reset();
e.initInspector(t.inspector);
t.inspector.tempData = e;
t.inspector.selectType = "actor";
t.inspector.show();
o.placeGizmos.show({
scale: e.data.scale,
target: null,
body: e,
canPlaceType: s.CanPlaceType.DecorateTile | s.CanPlaceType.EmptySpace,
showFlipX: !0,
onConfirm: () => {},
onCancel: () => {
o.removeActor(e);
cc.game.emit(d.default.ActorPage_DEL_ACTOR, e.data);
},
onComplete: () => {
t.elementBox.show();
t.inspector.hide();
},
onFlipX: () => {
e.setScaleX(-e.getScaleX());
}
});
cc.game.emit(i.TouchWorldShowGizmos_CLICK_ACTOR, e);
}
clickDevice(e) {
this.editWorldScene.inspector.tempData = null;
this.editWorldScene.inspector.selectType = "";
let t = this.editWorldScene, o = t.world;
t.elementBox.hide();
t.inspector.reset();
e.initInspector(t.inspector);
t.inspector.tempData = e;
t.inspector.selectType = "device";
t.inspector.show();
o.placeGizmos.show({
scale: e.data.extra ? e.data.extra.scale : 1,
target: null,
body: e,
canPlaceType: s.CanPlaceType.All,
rotateArr: e.rotateAngles,
rotateIdx: e.data.rotateIdx,
onConfirm: () => {},
onCancel: () => {
o.removeDevice(e);
},
onComplete: () => {
t.elementBox.show();
t.inspector.hide();
},
onRotate: t => {
e.data.rotateIdx = t;
}
});
cc.game.emit(i.TouchWorldShowGizmos_CLICK_DEVICE, e);
}
clickProp(e) {
this.editWorldScene.inspector.tempData = null;
let t = this.editWorldScene, o = t.world;
t.elementBox.hide();
t.inspector.reset();
e.initInspector(t.inspector);
t.inspector.tempData = e;
t.inspector.selectType = "prop";
t.inspector.show();
o.placeGizmos.show({
target: null,
body: e,
canPlaceType: s.CanPlaceType.DecorateTile | s.CanPlaceType.EmptySpace,
onConfirm: () => {},
onCancel: () => {
o.removeProp(e);
},
onComplete: () => {
t.elementBox.show();
t.inspector.hide();
}
});
}
clickTile(e) {
this.editWorldScene.inspector.tempData = null;
this.editWorldScene.inspector.selectType = "";
let t = this.editWorldScene, o = t.world;
t.selectTileMapLayer(e.data.layerIdx || 0);
t.elementBox.hide();
t.inspector.reset();
e.initInspector(t.inspector);
t.inspector.tempData = e;
t.inspector.selectType = "tile";
t.inspector.show();
o.placeGizmos.show({
target: e.node,
body: null,
canPlaceType: s.CanPlaceType.EmptySpace,
layerIdx: e.data.layerIdx || 0,
onConfirm: () => {},
onCancel: () => {
o.tiledMap.removeTile(e.iCol, e.iRow);
},
onComplete: () => {
t.elementBox.show();
t.inspector.hide();
}
});
}
};
m.TouchWorldShowGizmos_CLICK_ACTOR = "TouchWorldShowGizmos_CLICK_ACTOR";
m.TouchWorldShowGizmos_CLICK_DEVICE = "TouchWorldShowGizmos_CLICK_DEVICE";
m.Ins = null;
n([ u(c.default) ], m.prototype, "editWorldScene", void 0);
m = i = n([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../Game/Device/Decorator": "Decorator",
"../../Game/World/Gizmos/PlaceGizmos": "PlaceGizmos",
"../../Game/World/TouchWorldCtrl": "TouchWorldCtrl",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./EditWorldScene": "EditWorldScene",
"./Page/ActorPage": "ActorPage",
"./Page/TilePage": "TilePage"
} ],
TrapPlatform: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "3e7923mzwRLIbzcbNmNICTa", "TrapPlatform");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../Frame/TweenUtil"), s = e("../../Frame/Util"), r = e("../../GameData/GameTypeDefine"), l = e("../PhyObj"), c = e("../Player/Mng"), d = e("./Platform"), {ccclass: h, property: p} = cc._decorator;
var u;
(function(e) {
e[e.Wait = 0] = "Wait";
e[e.Active = 1] = "Active";
e[e.Spawning = 2] = "Spawning";
})(u || (u = {}));
let m = i = class extends d.Platform {
constructor() {
super(...arguments);
this.platform = null;
this.content = null;
this._state = u.Wait;
this._stateTimer = 0;
this._contentPhyObj = null;
}
get width() {
return this._boxCollider.size.width;
}
get height() {
return this._boxCollider.size.height;
}
onLoad() {
super.onLoad();
s.Util.makeBro(this.platform, 0);
this._contentPhyObj = this.content.getComponent(l.default);
if (!this._contentPhyObj) {
this._contentPhyObj = this.content.addComponent(l.default);
this._contentPhyObj.needDestroy = !1;
}
this._contentDisposeTween = cc.tween().to(.1, {
opacity: 0
}).to(.1, {
opacity: 255
});
}
setCutting(e) {
if (this.content) {
let t = this.data.extra.cnt * this.data.extra.cnty;
t > this.content.childrenCount && (t = this.content.childrenCount);
for (let o = 0; o < t; ++o) this.content.children[o].active = !e;
}
}
initCollider() {
this._boxCollider = this.content.getComponent(cc.BoxCollider);
}
onActorOnPlatform(e) {
let t = this.world;
t && !t.playing || this._state == u.Wait && this.gotoState(u.Active);
}
onActorExistPlatform(e) {}
update(e) {
this.world.playing && this.updateState(e);
}
setData(e, t) {
super.setData(e, t);
(e = this.data).extra || (e.extra = {
jitterTime: 1,
respawnTime: 5,
cnt: 3,
cnty: 1
});
e.extra.cnty = e.extra.cnty || 1;
this.refresh(e, t);
}
refresh(e, t) {
let o = e.extra.cnt, i = e.extra.cnty;
s.Util.makeBro(this.platform, o * i, (e, i) => {
let n = i % o, a = Math.floor(i / o), s = cc.v2(64 * n, 64 * a);
e.position = s;
let r = e.getComponent(cc.Sprite);
c.Mng.Ins.spriteMng.setDeviceSprite(r, t.textureName, 64);
});
let n = this._boxCollider.size;
n.width = 64 * e.extra.cnt;
n.height = 64 * e.extra.cnty;
this._boxCollider.size = n;
let a = this._boxCollider.offset;
a.x = .5 * n.width - 32;
a.y = .5 * n.height - 32;
this._boxCollider.offset = a;
}
gotoState(e) {
switch (e) {
case u.Wait:
this.content.position = cc.Vec2.ZERO;
this.content.angle = 0;
this.content.active = !0;
this.content.opacity = 255;
this.content.scale = 1;
this._boxCollider.enabled = !0;
cc.Tween.stopAllByTarget(this.content);
break;

case u.Active:
this._stateTimer = 1e3 * this.data.extra.jitterTime + cc.director.getTotalTime();
cc.tween(this.content).repeat(Math.floor(this.data.extra.jitterTime / .2), this._contentDisposeTween).call(() => {
this._boxCollider.enabled = !1;
let e = this.world;
e.worldLayout.type == r.WorldType.Jump ? this._contentPhyObj.fly(s.Util.randomInt(-100, 100), s.Util.randomInt(200, 300), s.Util.randomInt(-300, 300)) : e.worldLayout.type == r.WorldType.Rpg && cc.tween(this.content).to(.7, {
scale: 0
}, {
easing: a.Easing.quadIn
}).to(1, {}).start();
this._contentPhyObj.fadeOut();
}).start();
break;

case u.Spawning:
this._stateTimer = 1e3 * this.data.extra.respawnTime + cc.director.getTotalTime();
}
this._state = e;
}
updateState(e) {
let t = cc.director.getTotalTime() >= this._stateTimer;
switch (this._state) {
case u.Wait:
break;

case u.Active:
t && this.gotoState(u.Spawning);
break;

case u.Spawning:
t && this.gotoState(u.Wait);
}
}
initInspector(e) {
i.initInspector(e, this.conf, this, this.data);
}
static initInspector(e, t, o = null, i = null) {
let n = i || t;
n.extra = n.extra || {
jitterTime: 1,
respawnTime: 5,
cnt: 3,
cnty: 1
};
o && e.addHead(t.name, t.textureName);
e.addNumberEditBox("抖动时间(秒)", n.extra.jitterTime, -999999, 999999, e => {
n.extra.jitterTime = e;
});
e.addNumberEditBox("重生时间(秒)", n.extra.respawnTime, -999999, 999999, e => {
n.extra.respawnTime = e;
});
e.addNumberEditBox("横向个数", n.extra.cnt, 1, 64, e => {
n.extra.cnt = e;
o && o.refresh(i, t);
});
e.addNumberEditBox("纵向个数", n.extra.cnty, 1, 64, e => {
n.extra.cnty = e;
o && o.refresh(i, t);
});
}
};
n([ p(cc.Node) ], m.prototype, "platform", void 0);
n([ p(cc.Node) ], m.prototype, "content", void 0);
m = i = n([ h ], m);
o.default = m;
cc._RF.pop();
}, {
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../PhyObj": "PhyObj",
"../Player/Mng": "Mng",
"./Platform": "Platform"
} ],
TriggerActPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f4b4fSgGIFCdosKynopPz0f", "TriggerActPanel");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ToggleGroup"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Frame/UIColor"), d = e("../../Frame/Util"), h = e("../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
let m = i = class extends l.default {
constructor() {
super(...arguments);
this.btn = null;
this.toggleGroup = null;
this.isWorldData = !1;
this.call = null;
this.curAct = null;
this.actConfig = [ [ h.TriggerAct.Dialog, h.TriggerAct.ShiftWorld, h.TriggerAct.DropProp, h.TriggerAct.StartTimeCountDown, h.TriggerAct.StopTimeCountDown, h.TriggerAct.ChangeAct, h.TriggerAct.BagItem, h.TriggerAct.Random, h.TriggerAct.GameScript ], [ h.TriggerAct.ShiftHero, h.TriggerAct.ShiftWeapon, h.TriggerAct.RecoverHP, h.TriggerAct.ChangeHero ], [ h.TriggerAct.GameWin, h.TriggerAct.GameOver, h.TriggerAct.GameShop, h.TriggerAct.GameRank, h.TriggerAct.UploadRankScore ], [ h.TriggerAct.Save, h.TriggerAct.Load, h.TriggerAct.ClearSave ], [ h.TriggerAct.Sound, h.TriggerAct.CameraShake ], [ h.TriggerAct.ShareGame, h.TriggerAct.AD ] ];
}
onLoad() {
super.onLoad();
this.toggleGroup.node.on(s.default.TOGGLE_CHANGE, this.onToggleChange, this);
}
onOpend() {
cc.game.emit(i.TriggerActPanel_Opend, this);
}
setData(e, t) {
this.curAct = e;
this.isWorldData = t;
let o = 0;
for (let t = 0; t < this.actConfig.length; t++) if (this.actConfig[t].includes(e)) {
o = t;
break;
}
this.toggleGroup.selectIdx(o);
this.updateActList();
}
onToggleChange() {
this.updateActList();
cc.game.emit(i.TriggerActPanel_ToggleChange, this.toggleGroup.idx);
}
updateActList() {
let e = this.toggleGroup.idx, t = this.actConfig[e];
d.Util.makeBro(this.btn.node, t.length, (e, o) => {
let i = t[o];
e.act = i;
let n = e.getComponent(a.default);
n.label.string = r.Config.getTriggerActName(i);
n.background.node.color = i == this.curAct ? c.UIColor.green : c.UIColor.blue;
n.node.on(a.default.CLICK, this.onBtn, this);
});
d.Util.updateAllLayout(this.btn.node.parent);
}
onBtn(e) {
this.closePanel();
let t = e.target.act;
this.call && this.call(t);
}
};
m.TriggerActPanel_Opend = "TriggerActPanel_Opend";
m.TriggerActPanel_ToggleChange = "TriggerActPanel_ToggleChange";
n([ u(a.default) ], m.prototype, "btn", void 0);
n([ u(s.default) ], m.prototype, "toggleGroup", void 0);
m = i = n([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ToggleGroup": "ToggleGroup",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
TriggerEvtCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "4504fpBH8xGcaeF9VSwYf8I", "TriggerEvtCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../GameScript/index"), a = e("../../../CustomUI/Button"), s = e("../../../Frame/SceneManager"), r = e("./TriggerItem"), l = e("../EditWorldScene"), c = e("../../../Frame/UIColor"), d = e("../../../Frame/Config"), h = e("../../../GameData/GameTypeDefine"), {ccclass: p, property: u} = cc._decorator;
let m = class extends cc.Component {
constructor() {
super(...arguments);
this.actBtn = null;
this.optionBtn = null;
this.deleteBtn = null;
this.evt = null;
this.isWorldData = !1;
}
onLoad() {
this.actBtn.node.on(a.default.CLICK, this.onActBtn, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtn, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
}
setData(e, t) {
this.evt = e;
this.isWorldData = t;
this.updateActLabel();
}
updateActLabel() {
let e = d.Config.getTriggerActDisplay(this.evt);
this.actBtn.label.string = e;
}
onActBtn() {
s.default.ins.OpenPanelByName("TriggerActPanel", e => {
e.setData(this.evt.act, this.isWorldData);
e.call = e => {
if (this.evt.act != e) if (this.evt.act == h.TriggerAct.GameScript) s.default.ins.OpenPanelByName("MessageBox", t => {
t.label.string = "切换事件将删除脚本\n确定要切换吗？";
t.setLeftBtn({
text: "切换",
color: c.UIColor.pink,
call: () => {
let t = s.default.ins.findScene(l.default);
if (t.world.worldLayout && t.world.worldLayout.gsData) {
let e = t.world.worldLayout.gsData, o = e.scriptArray.findIndex(e => e.id == this.evt.extra);
o >= 0 && e.scriptArray.splice(o, 1);
}
n.GSMng.instance.RemoveScript(t.worldData.id, this.evt.extra);
this.evt.act = e;
this.evt.extra = null;
this.updateActLabel();
this.onOptionBtn();
}
});
t.setRightBtn({
text: "点错了",
color: c.UIColor.blue
});
}); else {
this.evt.act = e;
this.evt.extra = null;
this.updateActLabel();
this.onOptionBtn();
} else this.onOptionBtn();
};
});
}
onOptionBtn() {
let e = this.evt.act;
e == h.TriggerAct.ShiftWorld && s.default.ins.OpenPanelByName("ActOptionShiftWorldPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.Dialog && s.default.ins.OpenPanelByName("ActOptionDialogPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.Sound && s.default.ins.OpenPanelByName("SelectSoundPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.GameWin && s.default.ins.OpenPanelByName("ActOptionGameWinPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.GameOver && s.default.ins.OpenPanelByName("ActOptionGameOverPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.ShiftWeapon && s.default.ins.OpenPanelByName("SelectWeaponPanel", e => {
this.evt.extra || (this.evt.extra = {
gunId: "1"
});
e.setData(this.evt.extra.gunId);
e.selectCall = e => {
this.evt.extra.gunId = e.id;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.DropProp && s.default.ins.OpenPanelByName("ActOptionDropPropPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.RecoverHP && s.default.ins.OpenPanelByName("ActOptionRecoverHpPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.CameraShake && s.default.ins.OpenPanelByName("ActOptionCameraShakePanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.GameShop && s.default.ins.OpenPanelByName("SelectGameShopPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.GameScript && s.default.ins.OpenPanelByName("EditGameScriptPanel", e => {
let t = s.default.ins.findScene(l.default).saveToTempWorldDataMap();
e.setData(t.id, this.evt);
e.saveCall = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.ChangeAct && s.default.ins.OpenPanelByName("ActOptionChangeActPanel", e => {
let t = s.default.ins.findScene(l.default).saveToTempWorldDataMap();
e.setData(t.id, this.evt);
e.saveCall = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
if (e == h.TriggerAct.ChangeHero) {
this.evt.extra = this.evt.extra || {
confId: null
};
let e = this.evt.extra;
s.default.ins.OpenPanelByName("GSDataNodeChangeHeroPanel", t => {
t.setData(e, e => {
this.evt.extra = e;
this.updateActLabel();
});
});
}
e == h.TriggerAct.ShiftHero && s.default.ins.OpenPanelByName("SelectHeroPanel", e => {
this.evt.extra = this.evt.extra || {
confId: null
};
e.setData(this.evt.extra.confId);
e.selectCall = (e => {
e && (this.evt.extra.confId = e.id);
}).bind(this);
});
e == h.TriggerAct.StartTimeCountDown && s.default.ins.OpenPanelByName("GSDataNodeTimeCountDownStartPanel", e => {
this.evt.extra = this.evt.extra || {
timer: 10,
evts: []
};
let t = this.evt.extra;
e.setData(t, e => {
this.evt.extra = e;
});
});
e == h.TriggerAct.StopTimeCountDown && (this.evt.extra = this.evt.extra || {});
e == h.TriggerAct.ShareGame && s.default.ins.OpenPanelByName("ActOptionGameSharePanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.AD && s.default.ins.OpenPanelByName("ActOptionGameAdPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.Random && s.default.ins.OpenPanelByName("ActOptionRandomPanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
if (e == h.TriggerAct.BagItem) {
this.evt.extra = this.evt.extra || {
confId: null
};
let e = this.evt.extra;
s.default.ins.OpenPanelByName("GSDataNodeBagItemPanel", t => {
t.setData(e, e => {
this.evt.extra = e;
this.updateActLabel();
});
});
}
e == h.TriggerAct.GameRank && s.default.ins.OpenPanelByName("SelectGameRankPanel", e => {
this.evt.extra || (this.evt.extra = {
gameRankId: ""
});
e.setData(this.evt.extra.gameRankId);
e.selectCall = e => {
this.evt.extra.gameRankId = e;
this.setData(this.evt, this.isWorldData);
};
});
e == h.TriggerAct.UploadRankScore && s.default.ins.OpenPanelByName("ActOptionUploadRankScorePanel", e => {
e.setData(this.evt);
e.call = e => {
this.evt.extra = e.extra;
this.setData(this.evt, this.isWorldData);
};
});
}
onDeleteBtn() {
let e = this.node.getComponentInParent(r.default);
if (e) {
let t = this.evt;
e.removeEvt(t);
if (t.act == h.TriggerAct.GameScript) {
let e = s.default.ins.findScene(l.default);
if (e.world.worldLayout && e.world.worldLayout.gsData) {
let o = e.world.worldLayout.gsData, i = o.scriptArray.findIndex(e => e.id == t.extra);
i >= 0 && o.scriptArray.splice(i, 1);
}
n.GSMng.instance.RemoveScript(e.worldData.id, t.extra);
}
}
}
};
i([ u(a.default) ], m.prototype, "actBtn", void 0);
i([ u(a.default) ], m.prototype, "optionBtn", void 0);
i([ u(a.default) ], m.prototype, "deleteBtn", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/Config": "Config",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/UIColor": "UIColor",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../../GameScript/index": "index",
"../EditWorldScene": "EditWorldScene",
"./TriggerItem": "TriggerItem"
} ],
TriggerItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6483ateMOJNfLe0VawmEnC7", "TriggerItem");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../Frame/TweenUtil"), r = e("../../../Frame/Util"), l = e("../../../GameData/GameTypeDefine"), c = e("./TriggerEvtCell"), {ccclass: d, property: h} = cc._decorator;
let p = i = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.createEvtBtn = null;
this.triggerEvtCell = null;
this.evts = null;
this.isWorldData = !1;
}
onLoad() {
this.createEvtBtn.node.on(a.default.CLICK, this.onCreateNewBtn, this);
}
setData(e, t, o) {
this.evts = t || [];
this.isWorldData = o;
this.nameLabel.string = e;
this.refreshEvtList();
}
refreshEvtList() {
r.Util.makeBro(this.triggerEvtCell.node, this.evts.length, (e, t) => {
e.getComponent(c.default).setData(this.evts[t], this.isWorldData);
});
}
onCreateNewBtn() {
let e = {
act: l.TriggerAct.None
};
this.evts.push(e);
this.refreshEvtList();
r.Util.updateAllLayout(this.node.parent);
let t = this.triggerEvtCell.node.parent.children[this.evts.length - 1];
s.TweenUtil.applyScaleBounce2(t, 1, 1.05);
let o = this.triggerEvtCell.node.parent, n = o.children[o.childrenCount - 1].getComponent(c.default);
cc.game.emit(i.TriggerItem_Create, n);
}
removeEvt(e) {
for (let t = 0; t < this.evts.length; t++) if (this.evts[t] == e) {
this.evts.splice(t, 1);
this.refreshEvtList();
r.Util.updateAllLayout(this.node.parent);
return;
}
}
};
p.TriggerItem_Create = "TriggerItem_Create";
n([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
n([ h(a.default) ], p.prototype, "createEvtBtn", void 0);
n([ h(c.default) ], p.prototype, "triggerEvtCell", void 0);
p = i = n([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../Frame/TweenUtil": "TweenUtil",
"../../../Frame/Util": "Util",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"./TriggerEvtCell": "TriggerEvtCell"
} ],
TriggerMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "41506IjXUFEDbi7ycs+jWa/", "TriggerMng");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../GameScript/index"), r = e("../../Frame/Config"), l = e("../../Frame/SceneManager"), c = e("../../Frame/Sound"), d = e("../../Frame/TweenUtil"), h = e("../../Frame/Util"), p = e("../../Scene/GameScene/GameScene"), u = e("../World/Interactable"), m = e("./Mng"), f = e("../World/Tile"), g = e("../../Panel/GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper"), y = e("../../GameData/GameTypeDefine"), {ccclass: v, property: C} = cc._decorator;
let _ = i = class extends cc.Component {
static init() {
let e = r.Config.getTriggerAct(y.TriggerAct.ChangeHero);
e && (e.getDisplayStr = t => {
if (!t.extra) return e.name;
let o = t.extra, i = g.GSDataNodeActPropertyHelper.instance.GetPropertyInfo(s.ActType.Hero, o.propertyName);
return h.Util.clampStr(`${e.name}：${i ? i.str : "None"}`, 13, "..");
});
}
onLoad() {
i.Ins = this;
}
onDestroy() {
i.Ins = null;
}
emitTrigger(e, t = null) {
return a(this, void 0, void 0, function*() {
if (!e) return;
let o = l.default.ins.findScene(p.default);
for (let n = 0; n < e.length; n++) {
let a = e[n];
switch (a.act) {
case y.TriggerAct.GameScript:
if (o) {
if (!a.extra) return;
s.GSMng.instance.ExcuteScript(t, o.curWorldId, a.extra);
}
break;

case y.TriggerAct.ShiftWorld:
o.triggerShiftWorld(a);
break;

case y.TriggerAct.Dialog:
if (!a.extra) continue;
if (a.extra.onlyOnce) {
a.extra.triggered || cc.game.emit(p.default.SHOW_DIALOG_BOX, a.extra, t);
a.extra.triggered = !0;
if (t) {
let e = t.getComponent(u.default);
e && (e.canInteract = !1);
}
} else cc.game.emit(p.default.SHOW_DIALOG_BOX, a.extra, t);
break;

case y.TriggerAct.GameShop:
cc.game.emit(p.default.GAME_SHOP, a.extra, t);
break;

case y.TriggerAct.GameRank:
cc.game.emit(p.default.GAME_RANK, a.extra, t);
break;

case y.TriggerAct.UploadRankScore:
cc.game.emit(p.default.UPLOAD_GAME_RANK_SCORE, a.extra, t);
break;

case y.TriggerAct.GameOver:
cc.game.emit(p.default.GAME_OVER, a.extra);
break;

case y.TriggerAct.GameWin:
cc.game.emit(p.default.GAME_WIN, a.extra);
break;

case y.TriggerAct.Sound:
if (a.extra && a.extra.soundId) {
let e = a.extra.soundId, t = r.Config.soundConfs.find(t => t.id == e);
t && c.Sound.play(t.url);
}
break;

case y.TriggerAct.ShiftWeapon:
if (a.extra && a.extra.gunId) {
let e = a.extra.gunId, t = o.world.hero;
o && t && t.setupGun(e);
}
break;

case y.TriggerAct.DropProp:
{
if (!t || !a.extra) continue;
let e = a.extra.propConfId, i = a.extra.cnt;
i = h.Util.clamp(i, 0, 99);
let n = a.extra.useGravity;
if (e && i && (yield m.Mng.Ins.propMng.loadOne(e))) for (;i-- > 0; ) {
let i = o.world.addProp(t.position), a = {
id: "",
confId: e,
useGravity: n
};
yield i.setData(a);
let s = .4, r = f.default.SIZE, l = -r + Math.random() * r * 2, c = -r + Math.random() * r * 2, d = 2 * l / s, h = 2 * c / s;
a.useGravity && (h = 4 * (c = .5 * r + Math.random() * r * .5) / s);
i.addImpulse(d, h, s);
}
break;
}

case y.TriggerAct.RecoverHP:
{
if (!a.extra) continue;
let e = o.world.hero;
if (e) {
let t = a.extra.cnt || 0;
e.hper.hp = h.Util.clamp(e.hper.hp + t, 0, e.hper.HpMax);
e.data.hp = e.hper.hp;
e.hper.hp <= 0 && e.doDead();
}
break;
}

case y.TriggerAct.CameraShake:
{
let e = {
speed: 200,
range: 6,
times: 3
};
a.extra && (e = a.extra);
let t = o.world;
d.TweenUtil.applyShake(t.camera.node, e);
break;
}

case y.TriggerAct.ChangeAct:
s.GSCmdMng.instance.getCmd(0, s.GSCmdType.ChangeActorProperty).setParam(a.extra);
break;

case y.TriggerAct.ChangeHero:
s.GSCmdMng.instance.getCmd(0, s.GSCmdType.ChangeHeroProperty).setParam(a.extra);
break;

case y.TriggerAct.ShiftHero:
yield o.shiftHero(a.extra.confId);
break;

case y.TriggerAct.StartTimeCountDown:
{
let e = a.extra.timerType || a.extra.type;
yield o.onStartGameTimer(a.extra.timer, e, () => {
i.Ins.emitTrigger(a.extra.evts, t);
});
break;
}

case y.TriggerAct.StopTimeCountDown:
yield o.onStopGameTimer();
break;

case y.TriggerAct.Save:
o.save(a.extra, t);
break;

case y.TriggerAct.Load:
o.load(a.extra, t);
break;

case y.TriggerAct.ClearSave:
o.clearSave(a.extra, t);
break;

case y.TriggerAct.ShareGame:
cc.game.emit(p.default.SHARE_GAME, a.extra, t);
break;

case y.TriggerAct.AD:
cc.game.emit(p.default.SHOW_AD, a.extra, t);
break;

case y.TriggerAct.BagItem:
s.GSCmdMng.instance.getCmd(0, s.GSCmdType.ChangeBagItem).setParam(a.extra);
break;

case y.TriggerAct.Random:
{
if (!a.extra) return;
let e = a.extra.probabilitys, o = Math.random(), i = 0;
for (let n = 0; n < e.length; n++) if ((i += e[n].value) > o) {
this.emitTrigger(e[n].evts, t);
break;
}
break;
}
}
}
});
}
};
_.TRIGGER_ACT = "TRIGGER_ACT";
_.Ins = null;
_ = i = n([ v ], _);
o.default = _;
cc._RF.pop();
}, {
"../../Frame/Config": "Config",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Sound": "Sound",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/Util": "Util",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../GameScript/index": "index",
"../../Panel/GSDataNodeChangeActPanel/GSDataNodeActPropertyHelper": "GSDataNodeActPropertyHelper",
"../../Scene/GameScene/GameScene": "GameScene",
"../World/Interactable": "Interactable",
"../World/Tile": "Tile",
"./Mng": "Mng"
} ],
TweenUtil: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "aed05OswbJBrb0hsb5Cifc5", "TweenUtil");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.TweenUtil = o.Easing = void 0;
const i = e("../../i18n/i18nMgr"), n = e("./Util");
(function(e) {
e.linear = "linear";
e.quadIn = "quadIn";
e.quadOut = "quadOut";
e.quadInOut = "quadInOut";
e.quadOutIn = "quadOutIn";
e.cubicIn = "cubicIn";
e.cubicOut = "cubicOut";
e.cubicInOut = "cubicInOut";
e.cubicOutIn = "cubicOutIn";
e.quartIn = "quartIn";
e.quartOut = "quartOut";
e.quartInOut = "quartInOut";
e.quartOutIn = "quartOutIn";
e.quintIn = "quintIn";
e.quintOut = "quintOut";
e.quintInOut = "quintInOut";
e.quintOutIn = "quintOutIn";
e.sineIn = "sineIn";
e.sineOut = "sineOut";
e.sineInOut = "sineInOut";
e.sineOutIn = "sineOutIn";
e.expoIn = "expoIn";
e.expoOut = "expoOut";
e.expoInOut = "expoInOut";
e.expoOutIn = "expoOutIn";
e.circIn = "circIn";
e.circOut = "circOut";
e.circInOut = "circInOut";
e.circOutIn = "circOutIn";
e.elasticIn = "elasticIn";
e.elasticOut = "elasticOut";
e.elasticInOut = "elasticInOut";
e.elasticOutIn = "elasticOutIn";
e.backIn = "backIn";
e.backOut = "backOut";
e.backInOut = "backInOut";
e.backOutIn = "backOutIn";
e.bounceIn = "bounceIn";
e.bounceOut = "bounceOut";
e.bounceInOut = "bounceInOut";
e.bounceOutIn = "bounceOutIn";
e.fade = "fade";
})(o.Easing || (o.Easing = {}));
(function(e) {
e.applyBreath = function(e, t = .8, o = 1.1) {
if (e) return e.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(t, o, o), cc.scaleTo(t, 1, 1))));
};
e.applyBubble = function(e) {
if (e) return e.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.05, .95), cc.scaleTo(1, .95, 1.05), cc.scaleTo(.5, 1, 1))));
};
e.applyScaleBounce = function(e, t, o, i = null, n = null) {
if (e) {
e.scale = t;
cc.tween(e).to(.16, {
scale: o
}, {
easing: "backIn"
}).call(() => {
i && i();
}).to(.24, {
scale: t
}, {
easing: "backOut"
}).call(() => {
n && n();
}).start();
}
};
e.applyScaleBounce2 = function(e, t, o, i = null, n = null) {
if (e) {
e.scale = t;
cc.tween(e).to(.3, {
scale: o
}, {
easing: "quadOut"
}).call(() => {
i && i();
}).to(.3, {
scale: t
}, {
easing: "quadIn"
}).call(() => {
n && n();
}).start();
}
};
e.applyAppear = function(e) {
void 0 === e.fromScale && (e.fromScale = 0);
void 0 === e.toScale && (e.toScale = 1);
void 0 === e.delay && (e.delay = 0);
void 0 === e.time && (e.time = .3);
e.node.scale = e.fromScale;
cc.tween(e.node).delay(e.delay).to(e.time, {
scale: e.toScale
}, {
easing: cc.easing.backOut
}).call(() => {
e.callback && e.callback();
}).start();
};
e.applyDisappear = function(e) {
void 0 === e.time && (e.time = .3);
cc.tween(e.node).to(e.time, {
scale: 0
}, {
easing: "backIn"
}).call(() => {
e.callback && e.callback();
}).start();
};
function t(e, t, o = null) {
if (e.shake) {
e.shake.stop();
e.position = e.shakeOriPos;
}
let i = t.speed, a = t.range, s = t.times, r = cc.tween(e), l = e.position, c = e.position;
l.z = 0;
c.z = 0;
for (let e = 0; e < s; e++) {
let e = cc.v2(n.Util.randomInt(-a, a) + c.x, n.Util.randomInt(-a, a) + c.y), t = c.sub(e).mag();
r.to(t / i, {
position: e
});
c = e;
}
let d = c.sub(l).mag();
r.to(d / i, {
position: l
});
r.call(() => {
delete e.shake;
delete e.shakeOriPos;
o && o();
});
r.start();
e.shake = r;
e.shakeOriPos = l;
}
e.applyShake = t;
e.applyShakeShort = function(e, o = 3) {
t(e, {
speed: 200,
range: 6,
times: o
});
};
e.applyFloat = function(e) {
e.runAction(cc.repeatForever(cc.spawn(cc.sequence(cc.moveBy(.125, 0, 1.2), cc.moveBy(.25, 0, -2.4), cc.moveBy(.125, 0, 1.2)), cc.sequence(cc.rotateBy(.125, 1.5), cc.rotateBy(.25, -3), cc.rotateBy(.125, 1.5)))));
};
e.fadeIn = function(e, t = .3, o = null) {
e.opacity = 0;
return cc.tween(e).to(t, {
opacity: 255
}).call(o).start();
};
e.fadeOut = function(e, t = .3, o = null) {
return cc.tween(e).to(t, {
opacity: 0
}).call(o).start();
};
e.applayTextAnim = function(e, t, o = .1, n = null) {
t = i.I18nMgr.getI18nStringByZh(t);
e.string = "";
for (let i = 0; i <= t.length; i++) e.scheduleOnce(() => {
e.string = t.substr(0, i);
i == t.length && n && n();
}, i * o);
};
e.applayDeleteTextAnim = function(e, t, o = null) {
e.string = t;
for (let i = t.length; i >= 0; i--) e.scheduleOnce(() => {
e.string = t.substr(0, i);
0 == i && o && o();
}, .1 * (t.length - i));
};
})(o.TweenUtil || (o.TweenUtil = {}));
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"./Util": "Util"
} ],
UIColor: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7a201vrmHtGHKg5PEb82qQ7", "UIColor");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.UIColor = void 0;
(function(e) {
e.yellow = cc.color(251, 242, 54);
e.lightBlue = cc.color(199, 222, 244);
e.blue = cc.color(101, 203, 239);
e.darkBlue = cc.color(61, 128, 207);
e.green = cc.color(101, 239, 153);
e.white = cc.color(255, 255, 255);
e.red = cc.color(239, 101, 126);
e.purple = cc.color(203, 101, 239);
e.orange = cc.color(239, 198, 101);
e.darkOrange = cc.color(237, 129, 63);
e.lightOrange = cc.color(241, 218, 164);
e.pink = cc.color(241, 138, 165);
e.lightGray = cc.color(239, 239, 239);
e.gray = cc.color(152, 152, 152);
e.black = cc.color(0, 0, 0);
e.getRankColor = function(t) {
switch (t) {
case 1:
return e.yellow;

case 2:
return e.lightBlue;

case 3:
return e.lightOrange;

default:
return e.white;
}
};
})(o.UIColor || (o.UIColor = {}));
cc._RF.pop();
}, {} ],
UnionSet: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "eea3abmrmRHPaVGFuHkc+d6", "UnionSet");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.UnionSet = void 0;
o.UnionSet = class {
constructor() {
this._arr = [];
this._fa = [];
}
clear() {
this._arr = [];
this._fa = [];
}
idx(e) {
return this._arr.findIndex(t => t == e);
}
find(e) {
let t = this.idx(e);
if (t < 0) return e;
let o = this._find(t);
return this._arr[o];
}
isUnion(e, t) {
return e === t || this.find(e) === this.find(t);
}
_find(e) {
return this._fa[e] == e ? e : this._find(this._fa[e]);
}
union(e, t) {
let o = this.idx(e), i = this.idx(t);
if (o < 0) {
o = this._arr.length;
this._arr.push(e);
this._fa.push(this._fa.length);
}
if (i < 0) {
i = this._arr.length;
this._arr.push(t);
this._fa.push(this._fa.length);
}
let n = this._find(o), a = this._find(i);
if (n !== a) {
if (n < a) {
let e = n;
n = a;
a = e;
}
this._fa[n] = a;
}
}
};
cc._RF.pop();
}, {} ],
UnlockPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "28f2emnxjNPBqtN3UuL9Pnb", "UnlockPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../BaseGainPanel/BaseGainPanel"), s = e("../../Frame/TweenUtil"), {ccclass: r, menu: l, property: c} = cc._decorator;
let d = class extends a.default {
constructor() {
super(...arguments);
this.label = null;
this.lock = null;
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this.titleLabel.string = e;
this.label.string = "";
this.scheduleOnce(() => {
this.lock.node.runAction(cc.sequence(cc.repeat(cc.sequence([ cc.moveTo(.05, 5, -2.5), cc.moveTo(.05, -5, -2.5), cc.moveTo(.05, 0, 5), cc.moveTo(.05, 5, 2.5), cc.moveTo(.05, 0, -5), cc.moveTo(.05, -2.5, 2.5) ]), 3), cc.delayTime(.5), cc.callFunc(() => {
this.lock.play();
this.lock.on(cc.Animation.EventType.FINISHED, () => {
this.label.string = t;
s.TweenUtil.applyAppear({
node: this.label.node
});
});
})));
}, .4);
});
}
};
i([ c(cc.Label) ], d.prototype, "label", void 0);
i([ c(cc.Animation) ], d.prototype, "lock", void 0);
d = i([ r, l("面板/RewardPanel") ], d);
o.default = d;
cc._RF.pop();
}, {
"../../Frame/TweenUtil": "TweenUtil",
"../BaseGainPanel/BaseGainPanel": "BaseGainPanel"
} ],
UploadGoodsCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "709ee4aFt9AnqZwRUjwFJXJ", "UploadGoodsCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/Util"), l = e("../../Game/Player/Mng"), c = e("../../GameData/GameTypeDefine"), {ccclass: d, property: h} = cc._decorator;
let p = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.sprite = null;
this.subSprite = null;
this.deleteBtn = null;
this.data = null;
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.deleteBtn.node.on(a.default.CLICK, this.onDeleteBtn, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.data = e;
this.subSprite.node.active = !1;
this.deleteBtn.node.active = !0;
switch (e.type) {
case "add":
{
this.deleteBtn.node.active = !1;
let e = yield r.Util.loadBundleRes("Atlas/UI/plusBtn", cc.SpriteFrame);
this.sprite.spriteFrame = e;
this.sprite.node.scale = 1;
this.sprite.node.width = this.sprite.node.height = 100;
this.nameLabel.string = "点击添加素材";
break;
}

case "tile":
{
let t = yield l.Mng.Ins.tileMng.loadOne(e.id);
if (t) {
l.Mng.Ins.spriteMng.setTileSprite(this.sprite, t.textureName, 150);
this.nameLabel.string = t.name;
}
break;
}

case "actor":
{
let t = yield l.Mng.Ins.actorMng.loadOne(e.id);
if (t) {
l.Mng.Ins.spriteMng.setActorSprite(this.sprite, t.textureName, 150);
this.nameLabel.string = t.name;
}
break;
}

case "device":
{
let t = yield l.Mng.Ins.deviceMng.loadOne(e.id);
if (t) {
l.Mng.Ins.spriteMng.setDeviceSprite(this.sprite, t.textureName, 150);
this.nameLabel.string = t.name;
}
break;
}

case "prop":
{
let t = yield l.Mng.Ins.propMng.loadOne(e.id);
if (t) {
l.Mng.Ins.spriteMng.setPropSprite(this.sprite, t.textureName, 150);
this.nameLabel.string = t.name;
}
break;
}

case "weapon":
{
let t = yield l.Mng.Ins.weaponMng.loadOne(e.id);
if (t) {
l.Mng.Ins.spriteMng.setWeaponSprite(this.sprite, t.textureName, 150);
let e = null;
t.weaponType == c.WeaponType.Gun && t.gun && (e = t.gun.bulletId);
t.weaponType == c.WeaponType.Cast && t.cast && (e = t.cast.bulletId);
let o = yield l.Mng.Ins.bulletMng.loadOne(e);
if (o) {
this.subSprite.node.active = !0;
l.Mng.Ins.spriteMng.setBullletSprite(this.subSprite, o.textureName, 80);
}
this.nameLabel.string = t.name;
}
break;
}
}
});
}
onDeleteBtn() {
this.data && this.node.dispatchEvent(r.Util.customEvent("UploadGoodsCell.onDeleteBtn", !0, this.data));
}
};
i([ h(cc.Label) ], p.prototype, "nameLabel", void 0);
i([ h(cc.Sprite) ], p.prototype, "sprite", void 0);
i([ h(cc.Sprite) ], p.prototype, "subSprite", void 0);
i([ h(a.default) ], p.prototype, "deleteBtn", void 0);
p = i([ d ], p);
o.default = p;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
UploadGoodsPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a11a7G2GHxIJY48yfm/MHXV", "UploadGoodsPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../../scripts/_autogen/data/data"), r = e("../../CustomUI/Button"), l = e("../../CustomUI/ScrollList"), c = e("../../CustomUI/Slider"), d = e("../../Frame/Panel"), h = e("../../Frame/SceneManager"), p = e("../../Frame/Top"), u = e("../../Frame/UIColor"), m = e("../../Game/OperationFlow"), f = e("../../Game/Player/Mng"), g = e("../../Game/Player/ShopMng"), y = e("../../GameData/GameTypeDefine"), v = e("../../TGA"), {ccclass: C, property: _} = cc._decorator;
let S = class extends d.default {
constructor() {
super(...arguments);
this.titleLabel = null;
this.goodsList = null;
this.nameEditBox = null;
this.advertEditBox = null;
this.priceSlider = null;
this.priceLabel = null;
this.uploadBtn = null;
this.questionBtn = null;
this.params = null;
this.uploadType = null;
this.uploadCall = null;
}
onLoad() {
super.onLoad();
this.uploadBtn.node.on(r.default.CLICK, this.onUploadBtn, this);
this.goodsList.node.on(l.default.CLICK_ITEM, this.onClickCell, this);
this.priceSlider.node.on(c.default.MOVE, this.onSliderMove, this);
this.questionBtn.node.on(r.default.CLICK, this.openSummaryDividePanel, this);
this.node.on("UploadGoodsCell.onDeleteBtn", this.onUploadGoodsCellDeleteBtn, this);
}
setData(e, t) {
this.params = e;
this.uploadType = t;
this.nameEditBox.string = e.name;
this.advertEditBox.string = e.advert;
this.priceSlider.value = e.price;
this.refreshList();
this.updatePriceRange();
this.priceSlider.value = this.params.price;
}
onUploadBtn() {
return n(this, void 0, void 0, function*() {
let e = this.params;
e.name = this.nameEditBox.textLabel.string;
e.advert = this.advertEditBox.textLabel.string;
e.price = this.priceSlider.value;
if (0 == this.params.name.length) {
p.default.showToast("请填写名字");
return;
}
let t = e.tileConfIds.concat(e.actorConfIds).concat(e.deviceConfIds).concat(e.propConfIds).concat(e.weaponConfIds);
if (t.length <= 0) {
p.default.showToast("至少添加一个作品");
return;
}
let o = yield this.checkImportOther(e);
if (o) {
p.default.showToast(o);
return;
}
e.iconTextureName = yield this.getTextureName(e);
e.goodsType = yield this.getType(e);
let i = [];
for (let t = 0; t < e.weaponConfIds.length; t++) {
let o = e.weaponConfIds[t], n = yield f.Mng.Ins.weaponMng.loadOne(o), a = null;
n && n.weaponType == y.WeaponType.Gun && n.gun && (a = n.gun.bulletId);
n.weaponType == y.WeaponType.Cast && n.cast && (a = n.cast.bulletId);
let s = yield f.Mng.Ins.bulletMng.loadOne(a);
!s || s.isBuildIn || i.includes(a) || i.push(a);
}
e.bulletConfIds = i;
e.reviewStr = "";
e.sensitiveMsg = yield this.collectString(e);
e.reviewImageMap = yield m.OperationFlow.getReviewImageMap(e);
p.default.showLoading("上传中");
let n = yield g.default.Ins.uploadGoods(e);
if (n) if (n.sensitiveWords && n.sensitiveWords.length > 0) {
p.default.hideLoading();
h.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "发布失败";
e.label.string = "检测到敏感词：" + n.sensitiveWords.join(",");
e.leftBtn.node.active = !1;
e.setRightBtn({
text: "确定",
color: u.UIColor.blue
});
});
} else {
p.default.hideLoading("上传成功");
this.closePanel();
this.uploadCall && this.uploadCall();
v.TGA.track("uploadGoods", {
goodsId: n.id,
price: e.price,
goodsType: e.goodsType,
uploadType: this.uploadType,
packageSize: t.length
});
} else p.default.hideLoading("上传失败");
});
}
checkImportOther(e) {
return n(this, void 0, void 0, function*() {
for (let t = 0; t < e.tileConfIds.length; t++) {
let o = yield f.Mng.Ins.tileMng.loadOne(e.tileConfIds[t]);
if (o && o.importOthersImg) return `地块：${o.name}，涉及他人素材不能上传`;
}
for (let t = 0; t < e.actorConfIds.length; t++) {
let o = yield f.Mng.Ins.actorMng.loadOne(e.actorConfIds[t]);
if (o && o.importOthersImg) return `角色：${o.name}，涉及他人素材不能上传`;
}
for (let t = 0; t < e.deviceConfIds.length; t++) {
let o = yield f.Mng.Ins.deviceMng.loadOne(e.deviceConfIds[t]);
if (o && o.importOthersImg) return `装置：${o.name}，涉及他人素材不能上传`;
}
for (let t = 0; t < e.propConfIds.length; t++) {
let o = yield f.Mng.Ins.propMng.loadOne(e.propConfIds[t]);
if (o && o.importOthersImg) return `道具：${o.name}，涉及他人素材不能上传`;
}
for (let t = 0; t < e.weaponConfIds.length; t++) {
let o = yield f.Mng.Ins.weaponMng.loadOne(e.weaponConfIds[t]);
if (o && o.importOthersImg) return `武器：${o.name}，涉及他人素材不能上传`;
}
return null;
});
}
onSliderMove(e) {
this.priceLabel.string = e.toFixed();
}
getTextureName(e) {
return n(this, void 0, void 0, function*() {
for (let t = 0; t < e.tileConfIds.length; t++) {
let o = e.tileConfIds[t], i = yield f.Mng.Ins.tileMng.loadOne(o);
if (i) return i.textureName;
}
for (let t = 0; t < e.actorConfIds.length; t++) {
let o = e.actorConfIds[t], i = yield f.Mng.Ins.actorMng.loadOne(o);
if (i) return i.textureName;
}
for (let t = 0; t < e.deviceConfIds.length; t++) {
let o = e.deviceConfIds[t], i = yield f.Mng.Ins.deviceMng.loadOne(o);
if (i) return i.textureName;
}
for (let t = 0; t < e.propConfIds.length; t++) {
let o = e.propConfIds[t], i = yield f.Mng.Ins.propMng.loadOne(o);
if (i) return i.textureName;
}
for (let t = 0; t < e.weaponConfIds.length; t++) {
let o = e.weaponConfIds[t], i = yield f.Mng.Ins.weaponMng.loadOne(o);
if (i) return i.textureName;
}
});
}
collectString(e) {
return n(this, void 0, void 0, function*() {
let t = e.name + "哈" + e.advert;
for (let o = 0; o < e.tileConfIds.length; o++) {
let i = e.tileConfIds[o], n = yield f.Mng.Ins.tileMng.loadOne(i);
n && (t += "哈" + n.name);
}
for (let o = 0; o < e.actorConfIds.length; o++) {
let i = e.actorConfIds[o], n = yield f.Mng.Ins.actorMng.loadOne(i);
n && (t += "哈" + n.name);
}
for (let o = 0; o < e.deviceConfIds.length; o++) {
let i = e.deviceConfIds[o], n = yield f.Mng.Ins.deviceMng.loadOne(i);
n && (t += "哈" + n.name);
}
for (let o = 0; o < e.propConfIds.length; o++) {
let i = e.propConfIds[o], n = yield f.Mng.Ins.propMng.loadOne(i);
if (n) {
t += "哈" + n.name;
t += "哈" + n.intro;
}
}
for (let o = 0; o < e.weaponConfIds.length; o++) {
let i = e.weaponConfIds[o], n = yield f.Mng.Ins.weaponMng.loadOne(i);
n && (t += "哈" + n.name);
}
return t;
});
}
getType(e) {
return n(this, void 0, void 0, function*() {
let t = [];
e.tileConfIds.length > 0 && t.push(s.GoodsType.tile);
e.actorConfIds.length > 0 && t.push(s.GoodsType.actor);
e.deviceConfIds.length > 0 && t.push(s.GoodsType.device);
e.propConfIds.length > 0 && t.push(s.GoodsType.prop);
e.weaponConfIds.length > 0 && t.push(s.GoodsType.weapon);
return 1 == t.length ? t[0] : t.length > 1 ? s.GoodsType.package : s.GoodsType.all;
});
}
onClickCell(e, t) {
h.default.ins.OpenPanelByName("SelectGoodsItemPanel", e => {
switch (t.type) {
case "tile":
e.selectToggle(0);
break;

case "actor":
e.selectToggle(1);
break;

case "device":
e.selectToggle(2);
break;

case "prop":
e.selectToggle(3);
break;

case "weapon":
e.selectToggle(4);
}
e.setData(this.params);
e.call = () => {
this.refreshList();
this.centerPrice();
};
});
}
centerPrice() {
this.updatePriceRange();
let e = (this.priceSlider.max + this.priceSlider.min) / 2;
this.priceSlider.value = e;
}
onUploadGoodsCellDeleteBtn(e) {
return n(this, void 0, void 0, function*() {
let t = e.detail;
switch (t.type) {
case "tile":
{
let e = this.params.tileConfIds.indexOf(t.id);
e >= 0 && this.params.tileConfIds.splice(e, 1);
break;
}

case "actor":
{
let e = this.params.actorConfIds.indexOf(t.id);
e >= 0 && this.params.actorConfIds.splice(e, 1);
break;
}

case "device":
{
let e = this.params.deviceConfIds.indexOf(t.id);
e >= 0 && this.params.deviceConfIds.splice(e, 1);
break;
}

case "prop":
{
let e = this.params.propConfIds.indexOf(t.id);
e >= 0 && this.params.propConfIds.splice(e, 1);
break;
}

case "weapon":
{
let e = this.params.weaponConfIds.indexOf(t.id);
e >= 0 && this.params.weaponConfIds.splice(e, 1);
break;
}
}
this.refreshList();
this.centerPrice();
});
}
refreshList() {
let e = [];
for (let t = 0; t < this.params.tileConfIds.length; t++) e.push({
type: "tile",
id: this.params.tileConfIds[t]
});
for (let t = 0; t < this.params.actorConfIds.length; t++) e.push({
type: "actor",
id: this.params.actorConfIds[t]
});
for (let t = 0; t < this.params.deviceConfIds.length; t++) e.push({
type: "device",
id: this.params.deviceConfIds[t]
});
for (let t = 0; t < this.params.propConfIds.length; t++) e.push({
type: "prop",
id: this.params.propConfIds[t]
});
for (let t = 0; t < this.params.weaponConfIds.length; t++) e.push({
type: "weapon",
id: this.params.weaponConfIds[t]
});
let t = e.length;
if (e.length < g.default.Ins.packageSizeMax) e.push({
type: "add",
id: ""
}); else if (e.length > g.default.Ins.packageSizeMax) {
e = e.slice(0, g.default.Ins.packageSizeMax);
p.default.showToast(`最多${g.default.Ins.packageSizeMax}个`);
}
this.goodsList.setDataArr(e);
this.titleLabel.string = a.I18nMgr.exceI18nStringByZh("上传素材（${cnt}/${ShopMng.Ins.packageSizeMax}）", [ {
paramName: "cnt",
param: t
}, {
paramName: "ShopMng.Ins.packageSizeMax",
param: g.default.Ins.packageSizeMax
} ]);
}
updatePriceRange() {
let e = this.goodsList.getDataArr() || [];
e.filter(e => "add" != e.type);
let t = e.length - 1, o = 50 * (t = Math.max(t, 1)), i = 200 * t;
this.priceSlider.setRange(o, i);
this.priceSlider.step = i - o + 1;
}
openSummaryDividePanel() {
h.default.ins.OpenPanelByName("MessageBox", e => {
e.titleLabel.string = "定价说明";
e.label.string = "    当别人购买您的素材时，您作为创作者可以获得其中的60%，平台回收40%";
e.rightBtn.node.active = !1;
e.setLeftBtn({
text: "确定",
color: u.UIColor.green
});
});
}
};
i([ _(cc.Label) ], S.prototype, "titleLabel", void 0);
i([ _(l.default) ], S.prototype, "goodsList", void 0);
i([ _(cc.EditBox) ], S.prototype, "nameEditBox", void 0);
i([ _(cc.EditBox) ], S.prototype, "advertEditBox", void 0);
i([ _(c.default) ], S.prototype, "priceSlider", void 0);
i([ _(cc.Label) ], S.prototype, "priceLabel", void 0);
i([ _(r.default) ], S.prototype, "uploadBtn", void 0);
i([ _(r.default) ], S.prototype, "questionBtn", void 0);
S = i([ C ], S);
o.default = S;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../../scripts/_autogen/data/data": "data",
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../CustomUI/Slider": "Slider",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/UIColor": "UIColor",
"../../Game/OperationFlow": "OperationFlow",
"../../Game/Player/Mng": "Mng",
"../../Game/Player/ShopMng": "ShopMng",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../../TGA": "TGA"
} ],
UserComp: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d1420Sgsq5MureZUP7CjqSS", "UserComp");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../CustomUI/Button"), s = e("../../../CustomUI/HeadIcon"), r = e("../../../Frame/SceneManager"), l = e("../../../Frame/Top"), c = e("../../../Frame/UIColor"), d = e("../../../Frame/Util"), h = e("../../../Game/Hortor"), p = e("../../../Game/OperationFlow"), u = e("../../../Game/Player/CollectionMng"), m = e("../../../Game/Player/CreditMng"), f = e("../../../Game/Player/DynamicMng"), g = e("../../../Role"), {ccclass: y, property: v} = cc._decorator;
let C = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.introLabel = null;
this.levelBtn = null;
this.editNameBtn = null;
this.headIcon = null;
this.followBtn = null;
this.fansBtn = null;
this.cridtPoint = null;
this.collectionBtn = null;
}
onLoad() {
cc.game.on(g.default.UserInfoChange, this.refreshUserInfo, this);
cc.game.on(g.default.UserImgChange, this.refreshUserImg, this);
cc.game.on("CreditChange", this.updateCreditPoint, this);
this.followBtn && this.followBtn.node.on(a.default.CLICK, this.onFollowBtn, this);
this.fansBtn && this.fansBtn.node.on(a.default.CLICK, this.onFansBtn, this);
this.collectionBtn && this.collectionBtn.node.on(a.default.CLICK, this.onCollectionBtn, this);
this.editNameBtn && this.editNameBtn.node.on(a.default.CLICK, this.openEditUserInfoPanel, this);
this.nameLabel && this.nameLabel.node.on(cc.Node.EventType.TOUCH_END, this.openEditUserInfoPanel, this);
this.introLabel && this.introLabel.node.on(cc.Node.EventType.TOUCH_END, this.openEditUserInfoPanel, this);
this.headIcon && this.headIcon.node.on(a.default.CLICK, this.openEditUserInfoPanel, this);
if (this.levelBtn) {
this.levelBtn.node.on(a.default.CLICK, this.onLevelBtnTap, this);
this.levelBtn.label.string = g.default.Ins.role.level + "";
}
this.cridtPoint.parent.on(a.default.CLICK, this.onClickCreditPoint, this);
}
onDestroy() {
cc.game.off(g.default.UserInfoChange, this.refreshUserInfo, this);
cc.game.off(g.default.UserImgChange, this.refreshUserImg, this);
cc.game.off("CreditChange", this.updateCreditPoint, this);
}
updateCreditPoint(e) {
d.Util.makeBro(this.cridtPoint, 3, (t, o) => {
t.color = o < e ? c.UIColor.green : c.UIColor.gray;
});
}
onEnable() {
this.refreshUserInfo();
this.refreshUserImg();
this.refresFollowAndFans();
this.updateCreditPoint(m.CreditMng.Ins.credit);
}
refreshUserInfo() {
this.nameLabel.string = d.Util.clampStr(g.default.Ins.userName, 10, "..");
this.introLabel.string = g.default.Ins.userIntro;
}
refreshUserImg() {
this.headIcon.loadUrl(g.default.Ins.userImg);
}
refresFollowAndFans() {
return n(this, void 0, void 0, function*() {
if (this.followBtn && this.fansBtn) {
this.followBtn.label.string = "" + g.default.Ins.role.follows.length;
this.fansBtn.label.string = "" + g.default.Ins.role.fansCount;
const e = u.CollectionMng.Ins.getNumCollection();
this.collectionBtn.label.string = "" + e;
d.Util.updateAllLayout(this.followBtn.node.parent);
}
});
}
onFollowBtn() {
r.default.ins.Enter("FollowScene", e => {
e.init("follow", g.default.Ins.role.uId);
}, r.ShiftAnima.moveLeftShift);
}
onFansBtn() {
r.default.ins.Enter("FollowScene", e => {
e.init("fans", g.default.Ins.role.uId);
}, r.ShiftAnima.moveLeftShift);
}
onCollectionBtn() {
r.default.ins.Enter("CollectionScene", e => {
e.init();
}, r.ShiftAnima.moveLeftShift);
}
openEditUserInfoPanel() {
f.DynamicMng.Ins.isDisable(f.FunctionEnum.PublishUserInfo, !0) || (h.Hortor.isVisitor() ? p.OperationFlow.openVisitorPanel() : m.CreditMng.Ins.credit <= 2 ? l.default.showToast("近期违规，不能创造或编辑") : r.default.ins.OpenPanelByName("EditUserInfoPanel"));
}
onClickCreditPoint() {
r.default.ins.Enter("CreditScene", () => {}, r.ShiftAnima.moveLeftShift);
}
onLevelBtnTap() {
r.default.ins.OpenPanelByName("LevelHelpPanel", () => {});
}
};
i([ v(cc.Label) ], C.prototype, "nameLabel", void 0);
i([ v(cc.Label) ], C.prototype, "introLabel", void 0);
i([ v(a.default) ], C.prototype, "levelBtn", void 0);
i([ v(a.default) ], C.prototype, "editNameBtn", void 0);
i([ v(s.default) ], C.prototype, "headIcon", void 0);
i([ v(a.default) ], C.prototype, "followBtn", void 0);
i([ v(a.default) ], C.prototype, "fansBtn", void 0);
i([ v(cc.Node) ], C.prototype, "cridtPoint", void 0);
i([ v(a.default) ], C.prototype, "collectionBtn", void 0);
C = i([ y ], C);
o.default = C;
cc._RF.pop();
}, {
"../../../CustomUI/Button": "Button",
"../../../CustomUI/HeadIcon": "HeadIcon",
"../../../Frame/SceneManager": "SceneManager",
"../../../Frame/Top": "Top",
"../../../Frame/UIColor": "UIColor",
"../../../Frame/Util": "Util",
"../../../Game/Hortor": "Hortor",
"../../../Game/OperationFlow": "OperationFlow",
"../../../Game/Player/CollectionMng": "CollectionMng",
"../../../Game/Player/CreditMng": "CreditMng",
"../../../Game/Player/DynamicMng": "DynamicMng",
"../../../Role": "Role"
} ],
Util: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1d65cLVE2dG3qfYKkcNV/gt", "Util");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Util = void 0;
const n = e("../../i18n/i18nMgr"), a = e("../../scripts/_autogen/cmd/cmd"), s = e("../../scripts/_autogen/data/data"), r = e("../Game/GameEnv"), l = e("../Game/Hortor"), c = e("./CrossPlatform"), d = e("./NetworkMgr"), h = e("./Top");
(function(e) {
let t = new Map();
e.loadBundleRes = function(e, n) {
return i(this, void 0, void 0, function*() {
let i = t.get(e);
if (i) return i;
let a = yield o("localBundle");
if (a.getInfoWithPath(e)) i = yield p(a, e, n); else {
let t = yield o("remoteBundle");
i = yield p(t, e, n);
}
t.set(e, i);
return i;
});
};
function o(e) {
return new Promise((t, o) => {
cc.assetManager.loadBundle(e, (e, i) => {
if (e) {
console.error(e);
o();
} else t(i);
});
});
}
function p(e, t, o) {
return new Promise(i => {
e.load(t, o, (e, t) => {
e && console.log(e);
i(t);
});
});
}
e.rawUrl = function(e) {
var t = cc.url.raw(e);
cc.loader.md5Pipe && (t = cc.loader.md5Pipe.transformURL(t));
return t;
};
e.enableAllCollider = function(e) {
let t = e.getComponents(cc.Collider);
for (let e = 0; e < t.length; e++) t[e].enabled = !0;
};
e.disableAllCollider = function(e) {
let t = e.getComponents(cc.Collider);
for (let e = 0; e < t.length; e++) t[e].enabled = !1;
};
e.getTimeStamp = function() {
return new Date().getTime();
};
e.customEvent = function(e, t = !0, o = null) {
let i = new cc.Event.EventCustom("", !1);
i.type = e;
i.bubbles = t;
i.detail = o;
return i;
};
function u(e) {
if (0 == e.x && 0 == e.y) return 0;
let t = e.angle(cc.Vec2.RIGHT);
e.y < 0 && (t = 2 * Math.PI - t);
return t;
}
e.radian = u;
e.angle = function(e) {
return 180 * u(e) / Math.PI;
};
function m(e) {
return cc.v2(Math.cos(e), Math.sin(e));
}
e.radToVec2 = m;
e.angleToVec2 = function(e) {
return m(f(e));
};
function f(e) {
return Math.PI * e / 180;
}
e.angleToRad = f;
e.setAnchor = function(e, t, o) {
let i = (t - e.anchorX) * e.width, n = (o - e.anchorY) * e.height;
e.x += i;
e.y += n;
for (let t = 0; t < e.childrenCount; t++) {
let o = e.children[t];
o.x -= i;
o.y -= n;
}
e.anchorX = t;
e.anchorY = o;
};
function g(e) {
return Math.floor(Math.random() * e);
}
e.randomIdx = g;
e.randomInt = function(e, t) {
return Math.round(Math.random() * (t - e)) + e;
};
e.randomFloat = function(e, t) {
return Math.random() * (t - e) + e;
};
function y(e, t, o = !1) {
let i = e.toFixed(t);
if (o) {
let e = i.indexOf(".");
if (-1 == e) i = i + "." + "0".repeat(t); else if (i.length - e < t) {
let o = t - (i.length - e);
i += "0".repeat(o);
}
}
return i;
}
e.fixedNum = y;
e.bigNumStr = function(e) {
return e > 1e4 ? y(e / 1e4, 1) + n.I18nMgr.getI18nStringByZh("万") : e;
};
e.parseLeftTime = function(e) {
let t = "", o = Math.floor(e / 60 / 60), i = Math.floor(e / 60 % 60), n = Math.floor(e % 60);
return t = o > 24 ? `${o / 24}天${o %= 24}小时${i}分` : o > 0 ? `${o}小时${i}分${n}秒` : i > 0 ? `${i}分${n}秒` : `${n}秒`;
};
e.parseTimeHHMMSS = function(e) {
let t = Math.floor(e / 1e3 / 60 / 60), o = Math.floor(e / 1e3 / 60 % 60), i = Math.floor(e / 1e3 % 60), n = "";
n += ("0" + t).substr(-2) + ":";
return (n += ("0" + o).substr(-2) + ":") + ("0" + i).substr(-2);
};
e.parseDateHHMM = function(e) {
let t = new Date(e), o = t.getHours(), i = t.getMinutes(), n = "";
return (n += ("0" + o).substr(-2) + ":") + ("0" + i).substr(-2);
};
e.parseDateMMDD = function(e) {
let t = new Date(e), o = t.getMonth() + 1, i = t.getDate(), a = "";
return (a += ("0" + o).substr(-2) + n.I18nMgr.getI18nStringByZh("月")) + (("0" + i).substr(-2) + n.I18nMgr.getI18nStringByZh("日"));
};
e.parseDateMMSS = function(e) {
let t = new Date(e), o = t.getMinutes(), i = t.getSeconds(), a = "";
return (a += ("0" + o).substr(-2) + n.I18nMgr.getI18nStringByZh("分")) + (("0" + i).substr(-2) + n.I18nMgr.getI18nStringByZh("秒"));
};
e.parseDateYMDHM = function(e) {
let t = new Date(e), o = t.getFullYear(), i = t.getMonth() + 1, n = t.getDate(), a = t.getHours(), s = t.getMinutes(), r = "";
r += o;
r += "-" + ("0" + i).substr(-2);
r += "-" + ("0" + n).substr(-2);
r += " ";
return (r += ("0" + a).substr(-2) + ":") + ("0" + s).substr(-2);
};
e.parseDateMDHM = function(e) {
let t = new Date(e), o = t.getMonth() + 1, i = t.getDate(), n = t.getHours(), a = t.getMinutes(), s = "";
s += ("0" + o).substr(-2);
s += "-" + ("0" + i).substr(-2);
s += " ";
return (s += ("0" + n).substr(-2) + ":") + ("0" + a).substr(-2);
};
e.parseDataString = function(t) {
t = t || 0;
if (e.isToday(t)) {
let e = orange.TimeUtil.serverTime - t, o = Math.floor(e / 1e3 / 60 / 60), i = Math.floor(e / 1e3 / 60 % 60), a = Math.floor(e / 1e3 % 60);
return o > 0 ? o + n.I18nMgr.getI18nStringByZh("小时前") : i > 0 ? i + n.I18nMgr.getI18nStringByZh("分钟前") : a > 5 ? a + n.I18nMgr.getI18nStringByZh("秒前") : n.I18nMgr.getI18nStringByZh("刚刚");
}
return e.isYestoday(t) ? n.I18nMgr.getI18nStringByZh("昨天") + e.parseDateHM(t) : e.parseDateMDHM(t);
};
e.parseDateHM = function(e) {
let t = new Date(e), o = t.getHours(), i = t.getMinutes(), n = "";
return (n += ("0" + o).substr(-2) + ":") + ("0" + i).substr(-2);
};
e.toChineseNum = function(e) {
return "零一双三四五六七八九十"[e];
};
e.toMagnitudeNum = function(e) {
let t = 0;
for (;e >= 1e3; ) {
e /= 1e3;
t++;
}
return 0 == t ? e.toString() : e.toFixed(1) + [ "", "k", "m", "g", "t", "p", "e", "z", "y" ][t];
};
e.clampStr = function(e, t, o = "...") {
t *= 2;
for (var i = function(e) {
for (var t = [], o = 0, i = 0, n = 0; n < e.length; ) {
var a = n;
if (65039 != (o = e.charCodeAt(n++))) if (i) {
var s = 65536 + (i - 55296 << 10) + (o - 56320);
t.push({
v: s,
pos: a
});
i = 0;
} else 55296 <= o && o <= 56319 ? i = o : t.push({
v: o,
pos: a
});
}
return t;
}(e), n = 0, a = 0, s = 0; s < i.length; ++s) {
var r = 1;
i[s].v >= 128 && (r = 2);
if (n + r > t) break;
a = s;
n += r;
}
if (i.length - 1 == a) return e;
var l = o ? 1 : 0;
return a - l >= 0 && a - l < i.length ? e.substring(0, i[a - l].pos + 1) + o : e;
};
function v(e, t, o) {
return (t - e) * o + e;
}
e.lerp = v;
function C(e, t, o) {
return v(e, t, o = S(o));
}
e.lerp01 = C;
function _(e, t, o) {
return Math.min(Math.max(e, t), o);
}
e.clamp = _;
function S(e) {
return Math.min(Math.max(e, 0), 1);
}
e.clamp01 = S;
e.sign = function(e) {
return e > 0 ? 1 : e < 0 ? -1 : 0;
};
e.move = function(e, t, o) {
return Math.abs(t - e) > o ? e < t ? e + o : e - o : t;
};
e.shuffle = function(e) {
for (let t = e.length - 1; t > 0; t--) {
let o = g(t), i = e[t];
e[t] = e[o];
e[o] = i;
}
};
e.lerpVec2 = function(e, t, o) {
let i = v(e.x, t.x, o), n = v(e.y, t.y, o);
return cc.v2(i, n);
};
e.lerpVec201 = function(e, t, o) {
let i = C(e.x, t.x, o), n = C(e.y, t.y, o);
return cc.v2(i, n);
};
e.moveVec2 = function(e, t, o) {
let i = t.sub(e);
if (i.magSqr() > o * o) {
i.normalize(i);
i.mulSelf(o);
return i.addSelf(e);
}
return t;
};
function I(e, t, o = cc.Vec2.ZERO) {
if (!e || !t) return cc.Vec2.ZERO;
let i = cc.v2();
e.convertToWorldSpaceAR(o, i);
i.x = i.x || 0;
i.y = i.y || 0;
t.convertToNodeSpaceAR(i, i);
return i;
}
e.convertPosition = I;
e.moveToNewParent = function(e, t) {
let o = I(e, t);
e.removeFromParent(!1);
t.addChild(e);
e.position = o;
};
e.searchChild = function e(t, o) {
for (let i = 0; i < t.childrenCount; i++) {
let n = t.children[i];
if (n.name == o) return n;
{
let t = e(n, o);
if (t) return t;
}
}
};
e.emitAllChild = function(e, t) {
if (!e) return;
let o = e => {
e.emit(t);
for (let t = 0; t < e.childrenCount; t++) o(e.children[t]);
};
o(e);
};
e.moveNode = function(e, t) {
let o = cc.v2();
e.convertToWorldSpaceAR(cc.Vec2.ZERO, o);
t.convertToNodeSpaceAR(o, o);
e.parent && e.removeFromParent(!1);
t.addChild(e);
e.position = o;
};
function G(e) {
let t = e.getBoundingBoxToWorld(), o = cc.view._devicePixelRatio, i = cc.view.getScaleX() / o, n = cc.v2(t.x, t.y);
cc.view._convertPointWithScale(n);
return {
left: t.x * i,
top: c.systemInfo.screenHeight - (t.y + t.height) * i,
width: t.width * i,
height: t.height * i
};
}
e.convertToWindowSpace = G;
e.convertToCocosSpace = function(e) {
let t = cc.view._devicePixelRatio, o = cc.view.getScaleX() / t, i = e.width / o, n = e.height / o;
return {
x: e.left / o,
y: ((c.systemInfo.screenHeight || 667) - e.top) / o - e.height,
width: i,
height: n
};
};
e.setColorMat = function(e) {
let t = t => {
let o = e.getComponentsInChildren(cc.Sprite).concat(e.getComponents(cc.Sprite));
for (let e = 0; e < o.length; e++) o[e].setMaterial(0, t);
}, o = e._material_;
o ? t(o) : cc.loader.loadRes("materials/gray-sprite", cc.Material, function(o, i) {
var n = cc.Material.getInstantiatedMaterial(i, e);
t(n);
});
};
e.compareSDKVersion = function(e) {
return !c.systemInfo || T(c.systemInfo.SDKVersion, e) >= 0;
};
function T(e, t) {
let o = e.split("."), i = t.split(".");
for (let e = 0; e < o.length; e++) {
let t = parseFloat(o[e]), n = parseFloat(i[e]);
if (t < n) return -1;
if (t > n) return 1;
}
return 0;
}
e.compareVersion = T;
e.nextVersion = function(e) {
let t = (e = b(e)).split("."), o = [];
for (let e = 0; e < t.length; e++) {
let i = parseFloat(t[e]) || 0;
i = Math.max(i, 0);
o.push(i);
}
o[2]++;
for (let e = t.length - 1; e >= 0; e--) if (o[e] > 9 && e - 1 >= 0) {
o[e - 1]++;
o[e] = 0;
}
return o.join(".");
};
function b(e) {
if (!e) return "0.0.1";
let t = e.split("."), o = [];
for (let e = 0; e < t.length; e++) {
let i = parseFloat(t[e]) || 0;
i = _(i, 0, 99);
o.push(i);
}
for (;o.length < 3; ) o.push(0);
return o.join(".");
}
e.parseVersion = b;
e.compareAppName = function(e) {
return e == c.systemInfo.appName;
};
e.newSprite = function(e) {
let t = new cc.Node().addComponent(cc.Sprite);
cc.loader.loadRes(e, cc.SpriteFrame, (e, o) => {
t.spriteFrame = o;
});
return t;
};
e.addOpenContentIn = function(e, t) {
let o = new cc.Node();
e.addChild(o);
o.width = e.width;
o.height = e.height;
c.crossPlatform.getOpenDataContext().postMessage(t);
return null;
};
e.screenShotToTexture = function(e) {
let t = new cc.Node();
t.parent = e;
let o = t.addComponent(cc.Camera);
o.cullingMask = 4294967295;
let i = new cc.RenderTexture(), n = cc.game._renderContext;
i.initWithSize(e.width, e.height, n.STENCIL_INDEX8);
o.targetTexture = i;
o.alignWithScreen = !1;
o.orthoSize = e.height / 2;
o.render();
t.removeFromParent();
return i;
};
e.screenShotToTempFilePath = function(e) {
return new Promise(t => {
if (c.crossPlatform.isDebug) {
setTimeout(() => {
t("");
}, 100);
return;
}
let o = cc.game.canvas, i = o.width / o.clientWidth, n = G(e);
n.left *= i;
n.top *= i;
n.width *= i;
n.height *= i;
console.log("style", n);
o.toTempFilePath({
x: n.left,
y: n.top,
width: n.width,
height: n.height,
success: e => {
console.log("res", e);
t(e.tempFilePath);
},
fail: () => {
t("");
}
});
});
};
e.chromeTxt = function(e, t) {
var o = document.createElement("a");
o.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(t));
o.setAttribute("download", e);
o.style.display = "none";
document.body.appendChild(o);
o.click();
document.body.removeChild(o);
};
e.toQueryStr = function(e) {
if (!e) return "";
let t = "";
for (let o in e) {
let i = e[o];
t += "object" == typeof i ? `${o}=${JSON.stringify(i)}&` : `${o}=${i}&`;
}
t.endsWith("&") && (t = t.slice(0, t.length - 1));
return t;
};
let M, P = null, D = null;
e.initCcKeyBoard = function(e) {
(D = e) && D.node.on("editing-did-ended", e => {
M && M({
value: e.string
});
M = null;
});
};
e.showKeyBoard = function(e, t) {
c.crossPlatform.showKeyboard({
defaultValue: e,
maxLength: 20,
multiple: !1,
confirmHold: !0,
confirmType: "done",
complete: e => {
console.log(e);
}
});
P && c.crossPlatform.offKeyboardConfirm(P);
P = e => {
console.log("onConfirm", e);
t(e.value);
c.crossPlatform.offKeyboardConfirm(P);
P = null;
c.crossPlatform.hideKeyboard({});
};
if (l.Hortor.isMiniGame()) c.crossPlatform.onKeyboardConfirm(P); else if (D) {
D.string = e;
let t = D._impl;
if (t && t.beginEditing) {
t.beginEditing();
M = P;
} else P("");
}
};
e.hideKeyBoard = function() {
if (P) {
c.crossPlatform.offKeyboardConfirm(P);
P = null;
}
c.crossPlatform.hideKeyboard({});
};
e.enCodeHtml = function(e) {
return (e = (e = (e = (e = (e = (e = e.replace(/%/g, "%25")).replace(/\+/g, "%2B")).replace(/\//g, "%2F")).replace(/\?/g, "%3F")).replace(/\#/g, "%23")).replace(/\&/g, "%26")).replace(/\=/g, "%3d");
};
e.isAndroid = function() {
return !c.systemInfo || c.systemInfo.system.startsWith("Android");
};
e.isIOS = function() {
return !c.systemInfo || c.systemInfo.system.startsWith("iOS");
};
e.isWindows = function() {
return !c.systemInfo || c.systemInfo.system.startsWith("Windows");
};
e.isMacOS = function() {
return !c.systemInfo || c.systemInfo.system.startsWith("macOS");
};
e.useTimeline = !1;
e.canShareTimeLine = function() {
return e.isAndroid() && e.compareSDKVersion("2.12.0") && e.useTimeline;
};
e.isToday = function(e) {
let t = new Date(e), o = orange.TimeUtil.serverTime, i = new Date(o);
return t.setHours(0, 0, 0, 0) == i.setHours(0, 0, 0, 0);
};
e.isYestoday = function(e) {
let t = new Date(e), o = new Date(orange.TimeUtil.serverTime);
return t.setHours(0, 0, 0, 0) == o.setHours(0, 0, 0, 0) - 864e5;
};
e.saveImageToPhotosAlbum = function() {};
e.updateLabel = function(e) {
e && e._forceUpdateRenderData(!0);
};
e.updateWidget = function(e) {
var t;
null === (t = e.getComponent(cc.Widget)) || void 0 === t || t.updateAlignment();
};
e.updateAllWidget = function(e) {
let t = [], o = (e, i) => {
null == t[i] && (t[i] = []);
let n = t[i], a = e.getComponent(cc.Widget);
a && n.push(a);
for (let t = 0; t < e.childrenCount; t++) o(e.children[t], i + 1);
};
o(e, 0);
let i = [];
for (let e = 0; e < t.length; e++) {
let o = t[e];
for (let e = 0; e < o.length; e++) i.push(o[e]);
}
for (let e = 0; e < i.length; e++) i[e].updateAlignment();
};
e.updateLayout = function(e) {
var t;
null === (t = e.getComponent(cc.Layout)) || void 0 === t || t.updateLayout();
};
e.updateAllLayout = function(e) {
let t = [], o = (e, i) => {
null == t[i] && (t[i] = []);
let n = t[i], a = e.getComponent(cc.Layout);
a && n.push(a);
for (let t = 0; t < e.childrenCount; t++) o(e.children[t], i + 1);
};
o(e, 0);
let i = [];
for (let e = 0; e < t.length; e++) {
let o = t[e];
for (let e = 0; e < o.length; e++) i.push(o[e]);
}
for (let e = i.length - 1; e >= 0; e--) i[e].updateLayout();
};
e.flowLayout = function(e, t, o) {
let i = e.children[0];
if (!i) return;
let n = i.height, a = 0, s = -n / 2;
for (let r = 0; r < e.children.length; r++) if ((i = e.children[r]).active) {
if (a + i.width > e.width) {
s -= o + n;
a = 0;
}
i.x = a + i.width / 2;
i.y = s;
a += i.width + t;
}
s -= n / 2;
e.height = -s;
for (let t = 0; t < e.children.length; t++) {
(i = e.children[t]).x -= e.width / 2;
i.y += e.height / 2;
}
};
e.compressPixels = function(e) {
const t = lz4.compress(e);
console.log("pako原大小：" + e.length + ",压缩后大小：" + t.length + ",压缩比：" + t.length / e.length);
return t;
};
e.decompressionPixels = function(e) {
try {
return lz4.decompress(e);
} catch (e) {
console.log(e);
return null;
}
};
e.makeBro = function(e, t, o = null) {
let i = e.parent;
for (;i.childrenCount < t; ) {
let t = cc.instantiate(e);
i.addChild(t);
}
for (let e = 0; e < i.childrenCount; e++) {
let n = i.children[e];
if (e < t) {
n.active = !0;
o && o(n, e);
} else n.active = !1;
}
};
e.rectRect = function(e, t) {
var o = e.x, i = e.y, n = e.x + e.width, a = e.y + e.height, s = t.x, r = t.y, l = t.x + t.width, c = t.y + t.height;
let d = .001;
return o < l - d && n - d > s && i < c - d && a - d > r;
};
e.deepCopy = function e(t, o = null) {
if (null == t || NaN === t || "object" != typeof t) return t;
null == o && (o = t.constructor === Array ? [] : t.constructor === Uint8Array ? new Uint8Array() : {});
let i = Object.getOwnPropertyNames(t);
for (let n = 0; n < i.length; n++) {
let a = i[n];
o[a] = e(t[a]);
}
return o;
};
e.deepCompare = function e(t, o) {
if (null == t || null == o) return !(t !== o);
if ("number" == typeof t && isNaN(t)) return !("number" != typeof o || !isNaN(o));
if ("number" == typeof o && isNaN(o)) return !("number" != typeof t || !isNaN(t));
if ("object" == typeof t && "object" == typeof o) {
let i = Object.getOwnPropertyNames(t), n = Object.getOwnPropertyNames(o);
if (i.length != n.length) return !1;
if (t.constructor == o.constructor) {
let n = !0;
for (let a = 0; a < i.length; a++) {
let s = i[a];
if (!e(t[s], o[s])) {
n = !1;
break;
}
}
return n;
}
return !1;
}
return !(t !== o);
};
e.getEnumKeys = function(e) {
let t = [];
for (var o in e) {
var i = o;
isNaN(i) && t.push(i);
}
return t;
};
e.getEnumValues = function(e) {
let t = [];
for (var o in e) {
var i = o;
isNaN(i) && t.push(e[i]);
}
return t;
};
e.getNoteRight = function(e) {
let t = e.right, o = e;
do {
o.scaleX < 0 && (t.x = -t.x);
o = o.parent;
} while (o.parent);
return cc.v2(t.x, t.y);
};
e.strBytesLen = function(e) {
for (var t = 0, o = 0, i = e.length; o < i; o++) {
var n = e.charCodeAt(o);
t += n >= 1 && n <= 126 || 65376 <= n && n <= 65439 ? 1 : 2;
}
return t;
};
e.zip = function(e) {
return lz4.compress(bon.encode(e));
};
e.unzip = function(e) {
return bon.decode(lz4.decompress(e));
};
e.makeSpriteFrameByPixel = function(t, o, i) {
let n = e.decompressionPixels(t), a = new cc.RenderTexture();
a.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
a.initWithData(n, cc.Texture2D.PixelFormat.RGBA8888, o, i);
return new cc.SpriteFrame(a);
};
e.isPixels = function(e) {
return (e = e || "icon").indexOf("pixel/") >= 0;
};
e.dotLabelString = function(e) {
return e > 99 ? "99+" : "" + e;
};
e.isAlphaPixels = function(e) {
if (!e) return !0;
let t = Math.floor(e.length / 4);
for (let o = 0; o < t; o++) if (0 != e[4 * o + 3]) return !1;
return !0;
};
e.isCdnPng = function(e) {
return (e = e || "icon").indexOf("pixel/") >= 0;
};
e.getPixelTirmBounds = function(e, t, o) {
let i = (e, t) => 4 * (256 * (256 - t - 1) + e);
return {
ymin: (() => {
for (let n = 0; n < o; n++) for (let o = 0; o < t; o++) {
let t = i(o, n);
if (0 != e[t + 3]) return n;
}
})(),
ymax: (() => {
for (let n = o - 1; n >= 0; n--) for (let o = 0; o < t; o++) {
let t = i(o, n);
if (0 != e[t + 3]) return n;
}
})(),
xmin: (() => {
for (let n = 0; n < t; n++) for (let t = 0; t < o; t++) {
let o = i(n, t);
if (0 != e[o + 3]) return n;
}
})(),
xmax: (() => {
for (let n = t - 1; n >= 0; n--) for (let t = 0; t < o; t++) {
let o = i(n, t);
if (0 != e[o + 3]) return n;
}
})()
};
};
e.bounds2OffsetAndSize = function(e) {
let t = e.xmax - e.xmin, o = e.ymax - e.ymin;
t *= .32;
o *= .32;
let i = (e.xmin + e.xmax) / 2 - 128, n = (e.ymin + e.ymax) / 2 - 128;
return {
offset: {
x: i *= .32,
y: n *= .32
},
size: {
w: t,
h: o
}
};
};
e.uploadBin = function(e) {
return i(this, void 0, void 0, function*() {
return e;
});
};
e.downLoadBin = function(e) {
return i(this, void 0, void 0, function*() {
return new Promise(t => {
cc.loader.load({
url: r.gameEnv.fileCDN + e,
type: "bin"
}, (e, o) => {
t(e ? null : new Uint8Array(o));
});
});
});
};
e.uploadPng = function(e, t, o) {
return i(this, void 0, void 0, function*() {
if (!e) return;
let i = pnglite.encode({
width: 256,
height: 256,
data: e
}), n = {
imageFileType: t,
content: i,
imgThumbs: [],
checkImgSec: !0,
useWechat: !1,
sensitiveName: o
}, s = yield d.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_UploadImage,
params: n
}, a.Game_RUploadImage);
return {
err: s ? s.reason : "error",
url: s ? s.url : ""
};
});
};
e.releaseLoadedPng = function(e) {
cc.loader.release(r.gameEnv.fileCDN + e);
};
e.downLoadPng = function(e) {
return i(this, void 0, void 0, function*() {
return new Promise(t => {
cc.loader.load({
url: r.gameEnv.fileCDN + e,
type: "png"
}, (e, o) => {
if (e) t(null); else {
let e = new cc.SpriteFrame(o);
t(e);
}
});
});
});
};
e.downloadPngPixel = function(t) {
return i(this, void 0, void 0, function*() {
let o = yield e.downLoadBin(t);
if (!o) {
console.warn(">>downloadPngPixel error, urlPath=", t);
return null;
}
return png.decode(o).data;
});
};
e.downloadTxt = function(e, t) {
var o = document.createElement("a");
o.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(t));
o.setAttribute("download", e);
o.style.display = "none";
document.body.appendChild(o);
o.click();
document.body.removeChild(o);
};
e.getDefaultNameNum = function(e, t) {
if (0 == t.length || !e || "" == e) return 1;
let o = [];
for (let i of t) {
let t = i.indexOf(e);
if (t < 0) continue;
let n = parseFloat(i.substr(t + 2));
Number.isNaN(n) || o.push(n);
}
o.sort((e, t) => e - t);
let i = o.length, n = 0;
for (let e = 0; e < i && !(o[e] - n > 1); ++e) n = o[e];
return n + 1;
};
e.mergeImage = function(t) {
return i(this, void 0, void 0, function*() {
let o = t.length, i = 0;
for (;o > i * i; ) i++;
let l = 128 * i, c = new Uint8Array(l * l * 4);
for (let o = 0; o < i; o++) for (let a = 0; a < i; a++) {
let s = o * i + a, r = t[s];
if (!r) continue;
h.default.showLoading(n.I18nMgr.exceI18nStringByZh("打包图集(${idx + 1}/${urls.length})", [ {
paramName: "idx + 1",
param: s + 1
}, {
paramName: "urls.length",
param: t.length
} ]));
let d = yield e.downloadPngPixel(r);
if (d) for (let e = 0; e < 256; e += 2) for (let t = 0; t < 256; t += 2) {
let i = 4 * ((128 * o + e / 2) * l + 128 * a + t / 2), n = 4 * (256 * e + t);
c[i] = d[n];
c[i + 1] = d[n + 1];
c[i + 2] = d[n + 2];
c[i + 3] = d[n + 3];
}
}
let p = pnglite.encode({
width: l,
height: l,
data: c
}), u = {
imageFileType: s.ImageFileType.actor,
content: p,
imgThumbs: [],
checkImgSec: !1,
useWechat: !1,
sensitiveName: ""
};
h.default.showLoading("上传图集");
let m = yield d.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_UploadImage,
params: u
}, a.Game_RUploadImage);
console.log(r.gameEnv.fileCDN + m.url);
return m.url;
});
};
e.once = function(e, t = 0) {
return i(this, void 0, void 0, function*() {
return new Promise(o => {
cc.game.once(e, e => {
t ? setTimeout(() => {
o(e);
}, 1e3 * t) : o(e);
}, this);
});
});
};
e.delay = function(e = 0) {
return i(this, void 0, void 0, function*() {
return new Promise(t => {
setTimeout(t, 1e3 * e);
});
});
};
})(o.Util || (o.Util = {}));
cc._RF.pop();
}, {
"../../i18n/i18nMgr": "i18nMgr",
"../../scripts/_autogen/cmd/cmd": "cmd",
"../../scripts/_autogen/data/data": "data",
"../Game/GameEnv": "GameEnv",
"../Game/Hortor": "Hortor",
"./CrossPlatform": "CrossPlatform",
"./NetworkMgr": "NetworkMgr",
"./Top": "Top"
} ],
VariableCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "5eb476FDFZBta9+KDaqCWWf", "VariableCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/Button"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/SceneManager"), r = e("../../Frame/UIColor"), l = e("../../GameScript/index"), {ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.typeLabel = null;
this.nameLabel = null;
this.valueLabel = null;
this.valueSwitch = null;
this.btnEdit = null;
}
onLoad() {
this.node.on(a.default.SET_DATA, this.setData, this);
this.node.on(a.default.ITEM_STATE_CHANGE, this.stateChange, this);
this.btnEdit.node.on(n.default.CLICK, this.onClickEdit, this);
}
setData(e) {
this._vid = e;
let t = l.GSVariableMng.instance.getVariable(e);
this.valueLabel.node.active = !1;
this.valueSwitch.node.active = !1;
this.nameLabel.string = t.name;
if (t.valueType == l.GSValueType.BOOL) {
this.typeLabel.string = "开关";
this.valueSwitch.node.active = !0;
this.valueSwitch.string = "1" == t.defaultValue ? "开" : "关";
} else if (t.valueType == l.GSValueType.FLOAT) {
this.typeLabel.string = "数字";
this.valueLabel.node.active = !0;
this.valueLabel.string = t.defaultValue;
}
}
stateChange(e) {
this.node.color = e ? r.UIColor.blue : r.UIColor.white;
}
onClickEdit() {
s.default.ins.OpenPanelByName("EditVariablePanel", e => {
e.setData(this._vid);
});
}
};
i([ d(cc.Label) ], h.prototype, "typeLabel", void 0);
i([ d(cc.Label) ], h.prototype, "nameLabel", void 0);
i([ d(cc.Label) ], h.prototype, "valueLabel", void 0);
i([ d(cc.Label) ], h.prototype, "valueSwitch", void 0);
i([ d(n.default) ], h.prototype, "btnEdit", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../GameScript/index": "index"
} ],
VariableMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "b731dVhuMdKiqs/h8F7C5X3", "VariableMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../GameScript/index"), a = e("../../Frame/NetworkMgr"), s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../../scripts/_autogen/data/data");
o.default = class {
constructor() {
this.extraIds = [];
this.extraCache = new Map();
this.gameData = null;
}
resetExtra() {
this.extraIds = [];
this.extraCache = new Map();
}
initWithGamePackage(e) {}
switchGame(e) {
return i(this, void 0, void 0, function*() {
this.gameData = e;
let t = Array.from(this.extraCache.values()), o = [].concat(t, e.variableDatas);
n.GSVariableMng.instance.load(o);
});
}
create(e) {
return i(this, void 0, void 0, function*() {
let t = {
gameId: this.gameData.id,
id: null,
data: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveVariable,
params: t
}, s.Game_RSaveVariable);
if (!o) return null;
e.id = o.id;
this.gameData.variableDatas.push(e);
return e;
});
}
delete(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e ]
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DelVariable,
params: t
}, s.Game_RDelVariable))) return null;
let o = this.gameData.variableDatas.indexOf(t => t.id == e);
o >= 0 && this.gameData.variableDatas.splice(o, 1);
});
}
save(e, t) {
return i(this, void 0, void 0, function*() {
if (t.belongGameId) {
let e = {
gameId: t.belongGameId,
confType: r.CreativeConfType.variable,
confId: t.id,
data: t
};
yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveRoleCreativeConf,
params: e
}, s.Game_RSaveRoleCreativeConf);
this.extraCache.set(t.id, t);
} else {
let o = {
gameId: this.gameData.id,
id: e,
data: t
};
yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveVariable,
params: o
}, s.Game_RSaveVariable);
}
});
}
saveAll() {
return i(this, void 0, void 0, function*() {
let e = n.GSVariableMng.instance.getSaveData(), t = [];
for (let o of e) {
let e = new r.VariableData();
e.gameId = this.gameData.id;
e.id = o.id;
e.data = o;
t.push(e);
}
let o = {
variableDatas: t
};
yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveAllVariable,
params: o
}, s.Game_RSaveAllVariable);
});
}
loadOne(e) {
return i(this, void 0, void 0, function*() {
return this.gameData.variableDatas.find(t => t.id == e);
});
}
loadAll() {
return i(this, void 0, void 0, function*() {
return this.gameData.variableDatas;
});
}
getData(e) {
return this.gameData.variableDatas.find(t => t.id == e);
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameScript/index": "index"
} ],
VariablesPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "83dfbgpt0pEsosN6Ul/RpIw", "VariablesPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../GameScript/index"), s = e("../../CustomUI/Button"), r = e("../../CustomUI/DropDownBox"), l = e("../../CustomUI/ScrollList"), c = e("../../Frame/Panel"), d = e("../../Frame/SceneManager"), h = e("../../Game/Player/Mng"), p = e("../../Scene/EditGameScene/EditGameScene"), {ccclass: u, property: m} = cc._decorator;
let f = class extends c.default {
constructor() {
super(...arguments);
this.addBtn = null;
this.deleteBtn = null;
this.moveUpBtn = null;
this.moveDownBtn = null;
this.okBtn = null;
this.filter = null;
this.list = null;
this.emptyNode = null;
this.callSelect = null;
this._gameData = null;
this._selectedId = -1;
this._isSelectMode = !1;
this._selectVid = -1;
this._selectVariableType = -1;
this._variableArray = [];
this._variableTotalArray = [];
}
onLoad() {
super.onLoad();
cc.game.on("editVaribleComplete", this.onRefreshVariableArray, this);
this.okBtn.node.on(s.default.CLICK, this.onOkBtn, this);
this.addBtn.node.on(s.default.CLICK, this.onAddBtn, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtn, this);
this.moveUpBtn.node.on(s.default.CLICK, this.onMoveUpBtn, this);
this.moveDownBtn.node.on(s.default.CLICK, this.onMoveDownBtn, this);
this.filter.node.on(r.default.SELECT_CHANGE, this.onFilterTypeChange, this);
this.filter.setDataArr([ {
str: "全部",
type: -1
}, {
str: "数字",
type: a.GSValueType.FLOAT
}, {
str: "开关",
type: a.GSValueType.BOOL
} ]);
this.filter.selectByIdx(0);
this.list.node.on(l.default.SELECT_ITEM, (e, t) => {
this.deleteBtn.node.active = !1;
let o = a.GSVariableMng.instance.getVariable(t), i = h.Mng.Ins.variableMng.getData(o.idstr);
this.deleteBtn.node.active = i && !i.belongGameId;
}, this);
}
onDestroy() {
cc.game.off("editVaribleComplete", this.onRefreshVariableArray, this);
}
setData(e, t, o) {
this._gameData = e;
this._selectedId = t;
if (!this._gameData) {
let e = d.default.ins.findScene(p.default);
this._gameData = e && e.gameData;
}
this._isSelectMode = o;
this._selectVariableType = -1;
this.onRefreshVariableArray();
}
onOkBtn() {
this.processOk();
}
processOk() {
return n(this, void 0, void 0, function*() {
yield h.Mng.Ins.variableMng.saveAll();
if (this._isSelectMode && this._variableArray && this.list.curSelectIdx < this._variableArray.length) {
this._selectVid = this._variableArray[this.list.curSelectIdx];
this.callSelect && this.callSelect(this._selectVid);
}
this.closePanel();
});
}
onFilterTypeChange(e, t, o) {
this._selectVariableType = t.type;
this.onRefreshVariableArray();
}
onRefreshVariableArray() {
this.deleteBtn.node.active = !1;
this._variableTotalArray = a.GSVariableMng.instance.getVariableIdList();
this._variableArray.length = 0;
for (let e of this._variableTotalArray) {
let t = a.GSVariableMng.instance.getVariable(e);
-1 != this._selectVariableType && t.valueType != this._selectVariableType || this._variableArray.push(e);
}
this.list.setDataArr(this._variableArray);
if (this._variableArray.length > 0) {
let e = 0;
for (let t = 0; t < this._variableArray.length; ++t) if (this._variableArray[t] == this._selectedId) {
e = t;
break;
}
this.list.selectByIdx(e);
}
this.emptyNode.active = 0 == this._variableArray.length;
}
onAddBtn() {
d.default.ins.OpenPanelByName("CreateVariablePanel", e => {
e.call = e => n(this, void 0, void 0, function*() {
let t = this.list.curSelectIdx;
if (e = yield h.Mng.Ins.variableMng.create(e)) {
e.idx = t + 1;
let o = a.GSVariableMng.instance.insertVariable(e);
this._variableArray.splice(t + 1, 0, o);
this.list.setDataArr(this._variableArray);
this.list.selectByIdx(t + 1);
this.emptyNode.active = 0 == this._variableArray.length;
}
});
});
}
onDeleteBtn() {
return n(this, void 0, void 0, function*() {
let e = this.list.curSelectIdx, t = this._variableArray[e];
if (this._variableTotalArray.find(e => e == t) >= 0) {
let o = a.GSVariableMng.instance.getVariable(t), i = h.Mng.Ins.variableMng.getData(o.idstr);
if (i && i.belongGameId) return;
yield h.Mng.Ins.variableMng.delete(o.idstr);
a.GSVariableMng.instance.removeVariable(t);
this._variableArray.splice(e, 1);
this.list.setDataArr(this._variableArray);
this.emptyNode.active = 0 == this._variableArray.length;
}
});
}
onMoveUpBtn() {
let e = this.list.curSelectIdx;
if (e > 0) {
let t = this._variableArray[e], o = this._variableArray[e - 1], i = this._variableTotalArray, n = i.findIndex(t => t == this._variableArray[e]), s = i.findIndex(t => t == this._variableArray[e - 1]);
if (n >= 0 && s >= 0) {
a.GSVariableMng.instance.swapVariablePosition(e, e - 1);
this._variableArray[e] = o;
this._variableArray[e - 1] = t;
this.list.setDataArr(this._variableArray);
this.list.selectByIdx(e - 1);
}
}
}
onMoveDownBtn() {
let e = this.list.curSelectIdx;
if (e < this._variableArray.length - 1) {
let t = this._variableArray[e], o = this._variableArray[e + 1], i = this._variableTotalArray, n = i.findIndex(t => t == this._variableArray[e]), s = i.findIndex(t => t == this._variableArray[e + 1]);
if (n >= 0 && s >= 0) {
a.GSVariableMng.instance.swapVariablePosition(e, e + 1);
this._variableArray[e] = o;
this._variableArray[e + 1] = t;
this.list.setDataArr(this._variableArray);
this.list.selectByIdx(e + 1);
}
}
}
};
i([ m(s.default) ], f.prototype, "addBtn", void 0);
i([ m(s.default) ], f.prototype, "deleteBtn", void 0);
i([ m(s.default) ], f.prototype, "moveUpBtn", void 0);
i([ m(s.default) ], f.prototype, "moveDownBtn", void 0);
i([ m(s.default) ], f.prototype, "okBtn", void 0);
i([ m(r.default) ], f.prototype, "filter", void 0);
i([ m(l.default) ], f.prototype, "list", void 0);
i([ m(cc.Node) ], f.prototype, "emptyNode", void 0);
f = i([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/DropDownBox": "DropDownBox",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Game/Player/Mng": "Mng",
"../../GameScript/index": "index",
"../../Scene/EditGameScene/EditGameScene": "EditGameScene"
} ],
Vibrate: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "a36bbsaVLxMkIHW7sIGHJFq", "Vibrate");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Vibrate = void 0;
const i = e("./CrossPlatform");
(function(e) {
e.enable = !0;
e.short = function() {
e.enable && i.crossPlatform.vibrateShort();
};
e.long = function() {
e.enable && i.crossPlatform.vibrateLong();
};
})(o.Vibrate || (o.Vibrate = {}));
cc._RF.pop();
}, {
"./CrossPlatform": "CrossPlatform"
} ],
WeaponCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11a6bvclBxN8YugLsDchUE3", "WeaponCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ScrollList"), r = e("../../Frame/SceneManager"), l = e("../../Frame/UIColor"), c = e("../../Game/Player/Mng"), d = e("../../GameData/GameTypeDefine"), {ccclass: h, property: p} = cc._decorator;
let u = class extends cc.Component {
constructor() {
super(...arguments);
this.weaponSprite = null;
this.bulletSprite = null;
this.normalNode = null;
this.createNew = null;
this.noWeapon = null;
this.optionBtn = null;
this.conf = null;
this.bulletConf = null;
this.from = "MinePage";
}
onLoad() {
this.node.on(s.default.SET_DATA, this.setData, this);
this.node.on(s.default.ITEM_STATE_CHANGE, this.onStateChange, this);
this.optionBtn.node.on(a.default.CLICK, this.onOptionBtnTap, this);
}
setData(e) {
return n(this, void 0, void 0, function*() {
this.conf = e;
this.createNew.active = e.createNew;
this.weaponSprite.node.active = !e.createNew;
this.bulletSprite.node.active = !e.createNew;
this.optionBtn.node.active = !0;
this.noWeapon.active = e.noWeapon;
if (e.noWeapon) {
this.optionBtn.node.active = !1;
this.bulletSprite.node.active = !1;
this.weaponSprite.node.active = !1;
} else if (!e.createNew) {
c.Mng.Ins.spriteMng.setWeaponSprite(this.weaponSprite, e.textureName, 120);
let t = null;
e.weaponType == d.WeaponType.Gun && e.gun.bulletId ? t = e.gun.bulletId : e.weaponType == d.WeaponType.Cast && e.cast.bulletId && (t = e.cast.bulletId);
if (t) {
this.bulletConf = yield c.Mng.Ins.bulletMng.loadOne(t);
if (this.bulletConf) {
this.bulletSprite.node.active = !0;
c.Mng.Ins.spriteMng.setBullletSprite(this.bulletSprite, this.bulletConf.textureName, 80);
} else {
this.bulletSprite.spriteFrame = null;
this.bulletSprite.node.active = !1;
}
} else {
this.bulletConf = null;
this.bulletSprite.spriteFrame = null;
this.bulletSprite.node.active = !1;
}
}
});
}
onStateChange(e) {
"MinePage" == this.from || "SelectWeaponPanel" == this.from && (this.node.color = e ? l.UIColor.blue : cc.Color.WHITE);
}
onOptionBtnTap() {
this.conf && r.default.ins.OpenPanelByName("CommonOptionPanel", e => {
e.setData(this.conf);
});
}
};
i([ p(cc.Sprite) ], u.prototype, "weaponSprite", void 0);
i([ p(cc.Sprite) ], u.prototype, "bulletSprite", void 0);
i([ p(cc.Node) ], u.prototype, "normalNode", void 0);
i([ p(cc.Node) ], u.prototype, "createNew", void 0);
i([ p(cc.Node) ], u.prototype, "noWeapon", void 0);
i([ p(a.default) ], u.prototype, "optionBtn", void 0);
i([ p ], u.prototype, "from", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/UIColor": "UIColor",
"../../Game/Player/Mng": "Mng",
"../../GameData/GameTypeDefine": "GameTypeDefine"
} ],
WeaponCtl: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "deb2bAwxZ9I/YHBshcOq1Rl", "WeaponCtl");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.WeaponCtl = void 0;
o.WeaponCtl = class {
constructor(e) {
this.timer = 0;
this._weapon = e;
}
get weapon() {
return this._weapon;
}
};
cc._RF.pop();
}, {} ],
WeaponMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "36a15S5BbROvbg5Ps4nJDKx", "WeaponMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Frame/Config"), r = e("../../GameData/GameTypeDefine"), l = e("../World/Tile"), c = e("../../../scripts/_autogen/data/data"), d = e("./BaseConfMng");
o.default = class extends d.BaseConfMng {
constructor() {
super();
this.confType = r.CommonDataType.Weapon;
this.creativeConfType = c.CreativeConfType.weapon;
this.appendBuildIn(s.Config.weaponConfs);
}
upgradeConf(e) {
if (e) {
e.type = r.CommonDataType.Weapon;
e.weaponType != r.WeaponType.Gun || e.gun || (e.gun = {
scatter: e.scatter,
fireShake: e.fireShake,
muzzles: e.muzzles,
bulletId: e.bulletId,
bulletSpeed: 5 * l.default.SIZE,
bulletRange: 5 * l.default.SIZE
});
if (e.gun && e.weaponType == r.WeaponType.Gun) {
(void 0 === e.gun.bulletSpeed || isNaN(e.gun.bulletSpeed)) && (e.gun.bulletSpeed = 5 * l.default.SIZE);
(void 0 === e.gun.bulletRange || isNaN(e.gun.bulletRange)) && (e.gun.bulletRange = 5 * l.default.SIZE);
void 0 === e.gun.fireShake && (e.gun.fireShake = !1);
void 0 === e.gun.muzzles && (e.gun.muzzles = [ cc.Vec2.ZERO ]);
void 0 === e.gun.scatter && (e.gun.scatter = 0);
}
}
}
requestLoadConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: e
}, o = yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_GetRoleWeaponConf,
params: t
}, n.Game_RGetRoleWeaponConf);
if (o) {
let e = [];
for (let t = 0; t < o.datas.length; t++) {
let i = o.datas[t], n = i.conf;
n.id = i.id;
n.goodsUId = i.goodsUId;
e.push(i.conf);
}
return e;
}
});
}
requestCreateConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: null,
data: e
};
return (yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleWeaponConf,
params: t
}, n.Game_RSaveRoleWeaponConf)).id;
});
}
requestSaveConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
id: e.id,
data: e
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_SaveRoleWeaponConf,
params: t
}, n.Game_RSaveRoleWeaponConf);
});
}
requestDeleteConf(e) {
return i(this, void 0, void 0, function*() {
let t = {
ids: [ e.id ]
};
yield a.NetIns.SendCmdAsync({
cmd: n.CMDS.Game_DelRoleWeaponConf,
params: t
}, n.Game_RDelRoleWeaponConf);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../../scripts/_autogen/data/data": "data",
"../../Frame/Config": "Config",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../World/Tile": "Tile",
"./BaseConfMng": "BaseConfMng"
} ],
WeaponOptionHelper: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "ebc5efK4FZDf6FLhyHhOQpr", "WeaponOptionHelper");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.WeaponOptionHelper = void 0;
const n = e("../../../scripts/_autogen/data/data"), a = e("../../Frame/SceneManager"), s = e("../../Frame/Top"), r = e("../../Game/Player/Mng"), l = e("../../Game/World/Tile"), c = e("../../GameData/GameTypeDefine"), d = e("./CommonOptionHelper");
o.WeaponOptionHelper = class extends d.CommonOptionHelper {
constructor() {
super(...arguments);
this.weaponConf = null;
this.imageFileType = n.ImageFileType.weapon;
this.optionName = "武器";
this.refreshMsgName = "refreshWeaponList";
this.changeDataMsgName = "weaponDataChange";
}
setConf(e) {
super.setConf(e);
this.weaponConf = e;
}
saveAsncFunc() {
return i(this, void 0, void 0, function*() {
s.default.showLoading("正在上传(1/2)");
yield r.Mng.Ins.weaponMng.save(this.weaponConf);
s.default.hideLoading("上传成功");
});
}
deleteAsncFunc() {
return i(this, void 0, void 0, function*() {
yield r.Mng.Ins.weaponMng.delete(this.weaponConf);
});
}
paintCall(e) {
e.toPaintWeapon(this.weaponConf.weaponType);
}
displayWorldType() {
return !1;
}
initInspector(e) {
e.reset();
this.weaponConf && (this.weaponConf.weaponType == c.WeaponType.Gun ? this.drawGunInspector(e) : this.weaponConf.weaponType == c.WeaponType.Melee ? this.drawMeleeInspector(e) : this.weaponConf.weaponType == c.WeaponType.Cast && this.drawCastInspector(e));
}
drawGunInspector(e) {
return i(this, void 0, void 0, function*() {
let t = yield r.Mng.Ins.bulletMng.loadOne(this.weaponConf.gun.bulletId);
this.weaponConf.gun.fireShake = !0;
if (this.weaponConf.gun.fireShake && !this.weaponConf.gun.onFire) {
let e = {
speed: 200,
range: 6,
times: 3
};
this.weaponConf.gun.onFire = [];
this.weaponConf.gun.onFire.push({
act: c.TriggerAct.CameraShake,
extra: e
});
}
let o = e.addButton("子弹", t ? t.name : this.weaponConf.gun.bulletId, () => {
a.default.ins.OpenPanelByName("SelectBulletPanel", e => {
e.setData(this.weaponConf.gun.bulletId);
e.selectCall = e => {
this.weaponConf.gun.bulletId = e.id;
o.button.label.string = e.name;
};
});
});
e.addNumberEditBox("子弹速度(格/秒)", this.weaponConf.gun.bulletSpeed / l.default.SIZE, 0, 64, e => {
this.weaponConf.gun.bulletSpeed = e * l.default.SIZE;
});
e.addNumberEditBox("射速(发/秒)", this.weaponConf.ROF, 0, 50, e => {
this.weaponConf.ROF = e;
});
e.addNumberEditBox("射程(格)", this.weaponConf.gun.bulletRange / l.default.SIZE, 0, 16, e => {
this.weaponConf.gun.bulletRange = e * l.default.SIZE;
});
e.addNumberEditBox("散射(度)", this.weaponConf.gun.scatter, 0, 360, e => {
this.weaponConf.gun.scatter = e;
});
this.weaponConf.gun.onFire = this.weaponConf.gun.onFire || [];
e.addTrigger("发射时", this.weaponConf.gun.onFire, !1);
});
}
drawMeleeInspector(e) {
let t = [ {
str: "突刺",
type: c.MeleeActType.Jab
}, {
str: "挥舞",
type: c.MeleeActType.Swing
} ], o = t.findIndex(e => e.type == this.weaponConf.melee.actType);
-1 == o && (o = 0);
e.addDropDownBox("动作", t, o, (e, t) => i(this, void 0, void 0, function*() {
this.weaponConf.melee.actType = t.type;
}));
e.addNumberEditBox("伤害值", this.weaponConf.melee.damage, 0, 999990, e => {
this.weaponConf.melee.damage = e;
});
e.addNumberEditBox("缩放", this.weaponConf.melee.scale, 0, 10, e => {
this.weaponConf.melee.scale = e;
});
e.addNumberEditBox("攻速(次/秒)", this.weaponConf.ROF, 0, 50, e => {
this.weaponConf.ROF = e;
});
this.weaponConf.melee.onAttack = this.weaponConf.melee.onAttack || [];
e.addTrigger("攻击时", this.weaponConf.melee.onAttack, !1);
}
drawCastInspector(e) {
return i(this, void 0, void 0, function*() {
let t = yield r.Mng.Ins.bulletMng.loadOne(this.weaponConf.cast.bulletId);
if (t) {
null == this.weaponConf.cast.flyDistance && (this.weaponConf.cast.flyDistance = t.range);
null == this.weaponConf.cast.outSpeed && (this.weaponConf.cast.outSpeed = t.speed);
}
this.weaponConf.cast.fireShake = !0;
if (this.weaponConf.cast.fireShake && !this.weaponConf.cast.onFire) {
let e = {
speed: 200,
range: 6,
times: 3
};
this.weaponConf.cast.onFire = [];
this.weaponConf.cast.onFire.push({
act: c.TriggerAct.CameraShake,
extra: e
});
}
let o = e.addButton("子弹", t ? t.name : this.weaponConf.cast.bulletId, () => {
a.default.ins.OpenPanelByName("SelectBulletPanel", e => {
e.setData(this.weaponConf.cast.bulletId);
e.selectCall = e => {
this.weaponConf.cast.bulletId = e.id;
o.button.label.string = e.name;
};
});
});
e.addNumberEditBox("子弹速度(格/秒)", this.weaponConf.cast.outSpeed / l.default.SIZE, 0, 64, e => {
this.weaponConf.cast.outSpeed = e * l.default.SIZE;
});
e.addNumberEditBox("射速(发/秒)", this.weaponConf.ROF, 0, 2, e => {
this.weaponConf.ROF = e;
});
e.addNumberEditBox("射程(格)", this.weaponConf.cast.flyDistance / l.default.SIZE, 0, 32, e => {
this.weaponConf.cast.flyDistance = e * l.default.SIZE;
});
e.addNumberEditBox("空气阻力系数", this.weaponConf.cast.airResistanceCof, 0, 10, e => {
this.weaponConf.cast.airResistanceCof = e;
});
e.addNumberEditBox("默认角度", this.weaponConf.cast.defaultAngle, 0, 360, e => {
this.weaponConf.cast.defaultAngle = e;
});
e.addToggle("操作反转", this.weaponConf.cast.dragInverse, e => {
this.weaponConf.cast.dragInverse = e;
});
this.weaponConf.cast.onFire = this.weaponConf.cast.onFire || [];
e.addTrigger("发射时", this.weaponConf.cast.onFire, !1);
});
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/data/data": "data",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng",
"../../Game/World/Tile": "Tile",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./CommonOptionHelper": "CommonOptionHelper"
} ],
WeaponTypeCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1a220Vc47VIa64KHR4hwPbl", "WeaponTypeCell");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), a = e("../../Game/Player/Mng"), {ccclass: s, property: r} = cc._decorator;
let l = class extends cc.Component {
constructor() {
super(...arguments);
this.sprite = null;
this.label = null;
this.call = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.label.string = e.name;
a.Mng.Ins.spriteMng.setWeaponSprite(this.sprite, e.textureName, 100);
}
};
i([ r(cc.Sprite) ], l.prototype, "sprite", void 0);
i([ r(cc.Label) ], l.prototype, "label", void 0);
l = i([ s ], l);
o.default = l;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList",
"../../Game/Player/Mng": "Mng"
} ],
WeaponTypePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "36eedSBCNpFiIyjkPSUVHWR", "WeaponTypePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../TypeScript/Frame/Panel"), a = e("../../CustomUI/ScrollList"), s = e("../../Frame/Config"), {ccclass: r, property: l} = cc._decorator;
let c = class extends n.default {
constructor() {
super(...arguments);
this.list = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.list.node.on(a.default.CLICK_ITEM, this.onClickCell, this);
this.list.setDataArr(s.Config.weaponTypeConfs);
}
closeAnim(e) {
e();
}
onClickCell(e, t) {
this.closePanel();
this.call && this.call(t);
}
};
i([ l(a.default) ], c.prototype, "list", void 0);
c = i([ r ], c);
o.default = c;
cc._RF.pop();
}, {
"../../../TypeScript/Frame/Panel": "Panel",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config"
} ],
WeaponTypeToggleItem: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "54e50ryodFHx4gL5N3uS2Sy", "WeaponTypeToggleItem");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../CustomUI/ScrollList"), {ccclass: a, property: s} = cc._decorator;
let r = class extends cc.Component {
constructor() {
super(...arguments);
this.label = null;
}
onLoad() {
this.node.on(n.default.SET_DATA, this.setData, this);
}
setData(e) {
this.label.string = e.name;
}
};
i([ s(cc.Label) ], r.prototype, "label", void 0);
r = i([ a ], r);
o.default = r;
cc._RF.pop();
}, {
"../../CustomUI/ScrollList": "ScrollList"
} ],
Weapon: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "99501MMS61FLL0HwK6EU1so", "Weapon");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Weapon = void 0;
const a = e("../../../CustomUI/CustomSpriteLine"), s = e("../../../Frame/Damager"), r = e("../../../GameData/GameTypeDefine"), l = e("../../Player/Mng"), c = e("../WorldChild"), d = e("./CastCtl"), h = e("./GunCtl"), p = e("./MeleeCtl"), {ccclass: u, property: m} = cc._decorator;
let f = class extends c.default {
constructor() {
super(...arguments);
this.skin = null;
this.spark = null;
this.box = null;
this.boxDamager = null;
this.spLine = null;
this.team = 0;
this.conf = null;
this.firing = !1;
this._ctl = null;
this._ctlMap = new Map();
}
get context() {
return this._context;
}
onLoad() {
super.onLoad();
this.spark.node.active = !1;
this.boxDamager && (this.boxDamager.node.active = !1);
cc.game.on("weaponDataChange", this.onWeaponDataChange, this);
}
setCutting(e) {
this.skin.enabled = !e;
this.spark.enabled = !e;
}
setData(e, t) {
return n(this, void 0, void 0, function*() {
this._context = t;
if (e) {
this.conf = e;
l.Mng.Ins.spriteMng.setWeaponSprite(this.skin, e.textureName, 48);
} else {
this.conf = null;
this.skin.spriteFrame = null;
}
if (this.conf) {
this.conf.ROF = this.conf.ROF || .001;
this.conf.weaponType != r.WeaponType.Gun || this._ctlMap.has(r.WeaponType.Gun) || this._ctlMap.set(this.conf.weaponType, new h.GunCtl(this));
this.conf.weaponType != r.WeaponType.Melee || this._ctlMap.has(r.WeaponType.Melee) || this._ctlMap.set(this.conf.weaponType, new p.MeleeCtl(this));
this.conf.weaponType != r.WeaponType.Cast || this._ctlMap.has(r.WeaponType.Cast) || this._ctlMap.set(this.conf.weaponType, new d.CastCtl(this));
}
this.reset();
});
}
reset() {
this.spLine && (this.spLine.node.active = !1);
this.node.scale = 1;
if (this.boxDamager) {
this.boxDamager.node.active = !1;
this.boxDamager.team = this.team;
this.team == r.Team.Hero ? this.boxDamager.team = r.Team.HeroBullet : this.team == r.Team.Enemy ? this.boxDamager.team = r.Team.EnemyBullet : this.team == r.Team.Ally && (this.boxDamager.team = r.Team.AllyBullet);
this.boxDamager.node.x = .5;
this.boxDamager.node.y = .5;
}
this._ctl = null;
if (this.conf) {
this._ctl = this._ctlMap.get(this.conf.weaponType);
this.boxDamager.init();
this.boxDamager.useObb = !1;
if (this.boxDamager && this.conf.weaponType == r.WeaponType.Melee) {
this.boxDamager.dmg = this.conf.melee.damage;
this.boxDamager.useObb = !0;
}
this._ctl.init();
}
this.setDir(0, 0);
}
onWeaponDataChange(e) {
if (this.conf && this.conf.id == e.id) {
this.conf = e;
this.reset();
}
}
update(e) {
this.conf && this._ctl && this._ctl.run(e);
this.conf && this.boxDamager && this.boxDamager.node.active && (this.boxDamager.remainTimes = 1e3);
}
setDir(e, t) {
this._ctl && this._ctl.setDir(e, t);
}
readyFire() {
this._ctl && this._ctl.readyFire();
}
updateFirePower(e) {
this._ctl && this._ctl.updateFirePower(e);
}
updateFireDir(e, t) {
this._ctl && this._ctl.setFireDir(e, t);
}
fire(e) {
this._ctl && this._ctl.fire(e);
}
};
i([ m(cc.Sprite) ], f.prototype, "skin", void 0);
i([ m(cc.Sprite) ], f.prototype, "spark", void 0);
i([ m(cc.BoxCollider) ], f.prototype, "box", void 0);
i([ m(s.default) ], f.prototype, "boxDamager", void 0);
i([ m(a.default) ], f.prototype, "spLine", void 0);
f = i([ u ], f);
o.Weapon = f;
cc._RF.pop();
}, {
"../../../CustomUI/CustomSpriteLine": "CustomSpriteLine",
"../../../Frame/Damager": "Damager",
"../../../GameData/GameTypeDefine": "GameTypeDefine",
"../../Player/Mng": "Mng",
"../WorldChild": "WorldChild",
"./CastCtl": "CastCtl",
"./GunCtl": "GunCtl",
"./MeleeCtl": "MeleeCtl"
} ],
WorldCameraFollowerInterface: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f840dBpSqZMf6Q2RU9wMDdy", "WorldCameraFollowerInterface");
Object.defineProperty(o, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
WorldCellMenu: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1f529NFHEtAM4uc5E0RpUx4", "WorldCellMenu");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../i18n/i18nMgr"), s = e("../../CustomUI/Button"), r = e("../../Frame/SceneManager"), l = e("../../Frame/Top"), c = e("../../Frame/TweenUtil"), d = e("../../Frame/UIColor"), h = e("../../Frame/Util"), p = e("../../Game/Player/Mng"), u = e("./EditGameScene"), m = e("./WorldCell"), {ccclass: f, property: g} = cc._decorator;
let y = class extends cc.Component {
constructor() {
super(...arguments);
this.firstBtn = null;
this.optionBtn = null;
this.deleteBtn = null;
this.copyBtn = null;
this.worldId = null;
this.gameData = null;
this.worldCell = null;
this.oriParent = null;
}
onLoad() {
this.firstBtn.node.on(s.default.CLICK, this.onFirstBtnTap, this);
this.optionBtn.node.on(s.default.CLICK, this.onOptionBtnTap, this);
this.deleteBtn.node.on(s.default.CLICK, this.onDeleteBtnTap, this);
this.copyBtn.node.on(s.default.CLICK, this.onCopyBtnTap, this);
}
show(e) {
this.worldId = e.worldId;
this.worldCell = e;
if (e.worldData.belongGameId) {
this.deleteBtn.node.active = !1;
this.optionBtn.node.active = !1;
this.firstBtn.node.active = !1;
} else {
this.deleteBtn.node.active = !0;
this.optionBtn.node.active = !0;
this.firstBtn.node.active = this.worldId !== this.gameData.firstWorldId;
}
this.node.active = !0;
let t = h.Util.convertPosition(e.node, this.node.parent);
this.node.x = t.x + e.node.width / 2;
this.node.y = t.y - e.node.height / 2;
}
onTopNodeTouch() {
this.hide();
}
hide() {
this.node.active = !1;
}
onFirstBtnTap() {
r.default.ins.findScene(u.default).setFirstWorld(this.worldId);
this.hide();
}
onOptionBtnTap() {
return n(this, void 0, void 0, function*() {
let e = yield p.Mng.Ins.worldMng.loadOne(this.worldId, !0);
r.default.ins.OpenPanelByName("WorldRenamePanel", t => {
t.setData(e);
});
this.hide();
});
}
onDeleteBtnTap() {
r.default.ins.OpenPanelByName("MessageBox", e => {
e.label.string = "真的要删除这个地图吗？";
e.setLeftBtn({
text: "删除",
color: d.UIColor.pink,
call: () => n(this, void 0, void 0, function*() {
yield p.Mng.Ins.worldMng.delete(this.worldId, this.gameData);
this.worldCell.node.active = !1;
this.hide();
this.gameData.firstWorldId == this.worldId && this.gameData.worldIds.length > 0 && r.default.ins.findScene(u.default).setFirstWorld(this.gameData.worldIds[0]);
})
});
e.setRightBtn({
text: "关闭",
color: d.UIColor.blue
});
});
this.hide();
}
onCopyBtnTap() {
return n(this, void 0, void 0, function*() {
l.default.showLoading("正在复制地图");
this.worldCell.refreshWorldData();
let e = yield p.Mng.Ins.worldMng.loadOne(this.worldId, !0), t = {
id: null,
info: {
name: e.info.name + a.I18nMgr.getI18nStringByZh("-副本"),
type: e.info.type,
size: {
col: e.info.size.col,
row: e.info.size.row
}
},
layoutMin: h.Util.zip(e.worldLayout)
};
if (!(yield p.Mng.Ins.worldMng.create(t, this.gameData))) {
l.default.hideLoading("复制失败");
return;
}
let o = cc.instantiate(this.worldCell.node);
this.worldCell.node.parent.addChild(o);
o.active = !0;
let i = o.getComponent(m.default);
yield i.setData(t.id, this.gameData);
l.default.hideLoading("复制成功");
c.TweenUtil.applyAppear({
node: o
});
this.gameData.worldIds.find(e => e == this.gameData.firstWorldId) || r.default.ins.findScene(u.default).setFirstWorld(t.id);
let s = yield p.Mng.Ins.worldMng.loadOne(t.id, !0);
r.default.ins.Enter("EditWorldScene", e => n(this, void 0, void 0, function*() {
e.setData(this.gameData, s);
}));
});
}
};
i([ g(s.default) ], y.prototype, "firstBtn", void 0);
i([ g(s.default) ], y.prototype, "optionBtn", void 0);
i([ g(s.default) ], y.prototype, "deleteBtn", void 0);
i([ g(s.default) ], y.prototype, "copyBtn", void 0);
y = i([ f ], y);
o.default = y;
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr",
"../../CustomUI/Button": "Button",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Top": "Top",
"../../Frame/TweenUtil": "TweenUtil",
"../../Frame/UIColor": "UIColor",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"./EditGameScene": "EditGameScene",
"./WorldCell": "WorldCell"
} ],
WorldCell: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c0211DiQIhC7LnxZwOmstbf", "WorldCell");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("../../CustomUI/Button"), r = e("../../CustomUI/ScrollList"), l = e("../../Frame/Config"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Util"), h = e("../../Game/Player/Mng"), p = e("./EditGameScene"), {ccclass: u, property: m} = cc._decorator;
let f = i = class extends cc.Component {
constructor() {
super(...arguments);
this.nameLabel = null;
this.sizeLabel = null;
this.typeLabel = null;
this.firstFlag = null;
this.template = null;
this.menuBtn = null;
this.gameData = null;
this.worldData = null;
this.worldId = null;
this.pos = cc.Vec2.ZERO;
}
onLoad() {
this.node.on(r.default.SET_DATA, this.setData, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove9, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd9, this);
this.menuBtn.node.on(s.default.CLICK, this.onMenuBtnClick, this);
cc.game.on("WorldDataChange", this.onWorldDataChange, this);
}
onDestroy() {
cc.game.off("WorldDataChange", this.onWorldDataChange, this);
}
onWorldDataChange(e) {
e && this.worldData && e.id == this.worldData.id && this.setName(e.info.name);
}
setData(e, t) {
return a(this, void 0, void 0, function*() {
this.worldId = e;
this.gameData = t;
this.node.color = cc.Color.WHITE;
this.node.x = -1e4;
this.node.y = -1e4;
let o = yield h.Mng.Ins.worldMng.loadOne(e);
if (!o) return;
this.worldData = o;
this.setName(o.info.name);
this.sizeLabel.string = `${o.info.size.col}x${o.info.size.row}`;
this.typeLabel.string = l.Config.getWorldTypeActName(o.info.type);
this.firstFlag.active = e == t.firstWorldId;
this.template.active = !!o.belongGameId;
t.projectLayout = t.projectLayout || {
worldCellPos: {}
};
let i = t.projectLayout.worldCellPos[e];
if (!i) {
i = {
x: d.Util.randomInt(400, 600),
y: d.Util.randomInt(400, 600)
};
t.projectLayout.worldCellPos[e] = i;
}
this.setPos(i.x, i.y);
});
}
setName(e) {
this.nameLabel.string = d.Util.clampStr(e, 12, "..");
}
onTouchMove9(e) {
if (1 == e.getTouches().length) {
let t = e.getDelta();
this.movePos(t.x, t.y);
let o = this.gameData.projectLayout.worldCellPos[this.worldId] || {
x: 0,
y: 0
};
o.x = this.pos.x;
o.y = this.pos.y;
this.gameData.projectLayout.worldCellPos[this.worldId] = o;
}
c.default.ins.findScene(p.default).menu.hide();
}
onTouchEnd9(e) {
let t = e.getStartLocation(), o = e.getLocation();
t.sub(o).magSqr() < 100 && this.onClick();
}
onClick() {
return a(this, void 0, void 0, function*() {
let e = yield h.Mng.Ins.worldMng.loadOne(this.worldData.id, !0);
if (e && !i.clickLock) {
i.clickLock = !0;
c.default.ins.Enter("EditWorldScene", t => a(this, void 0, void 0, function*() {
t.setData(this.gameData, e);
i.clickLock = !1;
}));
}
});
}
onMenuBtnClick() {
let e = c.default.ins.findScene(p.default);
e.menu.node.active ? e.menu.hide() : e.menu.show(this);
}
movePos(e, t) {
this.setPos(this.pos.x + e, this.pos.y + t);
}
setPos(e, t) {
this.pos.x = e;
this.pos.y = t;
this.node.x = 32 * Math.floor(this.pos.x / 32);
this.node.y = 32 * Math.floor(this.pos.y / 32);
}
refreshWorldData() {
this.setData(this.worldData.id, this.gameData);
}
};
f.clickLock = !1;
n([ m(cc.Label) ], f.prototype, "nameLabel", void 0);
n([ m(cc.Label) ], f.prototype, "sizeLabel", void 0);
n([ m(cc.Label) ], f.prototype, "typeLabel", void 0);
n([ m(cc.Node) ], f.prototype, "firstFlag", void 0);
n([ m(cc.Node) ], f.prototype, "template", void 0);
n([ m(s.default) ], f.prototype, "menuBtn", void 0);
f = i = n([ u ], f);
o.default = f;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ScrollList": "ScrollList",
"../../Frame/Config": "Config",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Game/Player/Mng": "Mng",
"./EditGameScene": "EditGameScene"
} ],
WorldChild: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "16f1d/JQ7dLZbdIJ59bQ903", "WorldChild");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const {ccclass: n, property: a} = cc._decorator;
let s = class extends cc.Component {
constructor() {
super(...arguments);
this._world = null;
}
get world() {
if (!this._world) {
let e = this.node;
do {
!e || e.isValid;
this._world = e.getComponent("World");
e = e.parent;
} while (!this._world && e);
}
return this._world;
}
onLoad() {}
};
s = i([ n ], s);
o.default = s;
cc._RF.pop();
}, {} ],
WorldJumpCameraFollower: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "024e98N/JNBF5gPzOVAgpVf", "WorldJumpCameraFollower");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.WorldJumpCameraFollower = void 0;
const i = e("../../../Frame/Util");
o.WorldJumpCameraFollower = class {
constructor() {
this._target = null;
this._boundBox = null;
this._moveNode = null;
this._camera = null;
this._lerpy = .01;
this._targetLerpy = 1;
this._yoffset = 0;
this._lastChangeY = 0;
this._state = 0;
}
setCamera(e, t, o) {
this._camera = e;
this._moveNode = t;
this._boundBox = o;
}
setTarget(e) {
this._target = e;
}
centerOnTarget() {
let e = i.Util.convertPosition(this._target, this._moveNode.parent);
this._moveNode.position = e;
this._state = -1;
}
doFollow() {
if (!this._target || !this._camera) return;
let e = i.Util.convertPosition(this._target, this._moveNode.parent);
this._moveNode.x = i.Util.lerp(this._moveNode.x, e.x, .2);
this._moveNode.x = i.Util.clamp(this._moveNode.x, 0, this._boundBox.width);
let t = this._state, o = 300 / this._camera.zoomRatio;
if (this._moveNode.y + 300 < e.y) {
this._targetLerpy = .2;
this._yoffset = 20 - o;
t = 1;
} else if (this._moveNode.y - o > e.y) {
this._targetLerpy = .2;
this._yoffset = o - 20;
t = 2;
} else {
this._targetLerpy = .01;
this._yoffset = 0;
t = 0;
}
if (t != this._state) {
this._state = t;
let o = e.y + this._yoffset - this._moveNode.y;
this._lerpy = 0 != o ? this._lastChangeY / o : this._targetLerpy;
}
this._lerpy = i.Util.lerp(this._lerpy, this._targetLerpy, .1);
let n = i.Util.lerp(this._moveNode.y, e.y + this._yoffset, this._lerpy);
this._lastChangeY = n - this._moveNode.y;
this._moveNode.y = n;
this._moveNode.y = i.Util.clamp(this._moveNode.y, 0, this._boundBox.height);
}
};
cc._RF.pop();
}, {
"../../../Frame/Util": "Util"
} ],
WorldMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "495efkMTCFPGrLSyt1TsSeb", "WorldMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./../../GameScript/index"), a = e("../../Frame/NetworkMgr"), s = e("../../../scripts/_autogen/cmd/cmd"), r = e("../../Frame/Util");
o.default = class {
constructor() {
this.cache = new Map();
this.tempCache = new Map();
this.extraIds = [];
this.extraCache = new Map();
this._effectPoolMap = new Map();
}
initWithGamePackage(e) {
if (e && e.worldDatas) for (let t = 0; t < e.worldDatas.length; t++) {
let o = e.worldDatas[t];
this.cache.set(o.id, o);
o.worldLayout.gsData && (o.worldLayout.gsData.worldId = o.id);
n.GSMng.instance.load(o.worldLayout.gsData);
}
}
create(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
id: null,
gameId: t.id,
info: e.info,
layoutMin: e.layoutMin
}, i = yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveWorldData,
params: o
}, s.Game_RSaveWorldData);
if (!i) return null;
e.id = i.id;
t.worldIds.push(e.id);
this.cache.set(e.id, e);
e.layoutMin = void 0;
return e;
});
}
delete(e, t) {
return i(this, void 0, void 0, function*() {
if (t) {
t.projectLayout && delete t.projectLayout.worldCellPos[e];
let o = t.worldIds.indexOf(e);
o >= 0 && t.worldIds.splice(o, 1);
}
this.cache.delete(e);
let o = {
ids: [ e ]
};
yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_DelWorldData,
params: o
}, s.Game_RDelWorldData);
});
}
save(e, t = !1) {
return i(this, void 0, void 0, function*() {
let o = {
id: e.id,
info: e.info,
layoutMin: t ? e.layoutMin : null,
gameId: null
};
if (!(yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_SaveWorldData,
params: o
}, s.Game_RSaveWorldData))) return null;
this.cache.set(e.id, e);
cc.game.emit("WorldDataChange", e);
return e;
});
}
loadOne(e, t = !1) {
return i(this, void 0, void 0, function*() {
yield this.loadMany([ e ], t);
return this.getOne(e);
});
}
getOne(e) {
let t = this.tempCache.get(e);
t || (t = this.extraCache.get(e));
t || (t = this.cache.get(e));
return t;
}
loadMany(e, t = !1) {
return i(this, void 0, void 0, function*() {
let o = [];
for (let i = 0; i < e.length; i++) {
let n = e[i], a = this.getOne(n);
t ? a && (a.layoutMin || a.worldLayout) || o.push(n) : a || o.push(n);
}
o.length > 0 && (yield this.requestConf(o, t));
let i = [];
for (let t = 0; t < e.length; t++) {
let o = e[t], n = this.getOne(o);
n && i.push(n);
}
return i;
});
}
getMany(e) {
let t = [];
for (let o = 0; o < e.length; o++) {
let i = this.cache.get(e[o]);
i && t.push(i);
}
return t;
}
requestConf(e, t) {
return i(this, void 0, void 0, function*() {
let o = {
ids: e,
needData: t
}, i = yield a.NetIns.SendCmdAsync({
cmd: s.CMDS.Game_GetWorldData,
params: o
}, s.Game_RGetWorldData);
if (i) for (let o = 0; o < e.length; o++) {
let a = i.datas[o];
if (a) {
let i = {
id: a.id,
info: a.info,
layoutMin: a.layoutMin
};
if (t) {
if (i.layoutMin) {
i.worldLayout = r.Util.unzip(i.layoutMin);
for (let e = 0; e < i.worldLayout.tiles.length; e++) {
let t = i.worldLayout.tiles[e].data;
delete t.name;
delete t.author;
delete t.textureName;
}
i.layoutMin = void 0;
}
i.worldLayout.gsData && (i.worldLayout.gsData.worldId = i.id);
n.GSMng.instance.load(i.worldLayout.gsData);
i.worldLayout.cameraRatio = i.worldLayout.cameraRatio || 1;
}
this.cache.set(e[o], i);
}
}
});
}
getTileData(e, t) {
let o = this.getOne(e);
if (!o.worldLayout || !o.worldLayout.tiles) return null;
let i = o.worldLayout.tiles;
for (let e of i) if (e.data.id == t) return e;
return null;
}
getActorData(e, t) {
let o = this.getOne(e);
if (!o.worldLayout || !o.worldLayout.actors) return null;
let i = o.worldLayout.actors;
for (let e of i) if (e.data.id == t) return e;
return null;
}
getDeviceData(e, t) {
let o = this.getOne(e);
if (!o.worldLayout || !o.worldLayout.devices) return null;
let i = o.worldLayout.devices;
for (let e of i) if (e.data.id == t) return e;
return null;
}
getEffect(e) {
return i(this, void 0, void 0, function*() {
this._effectPoolMap.has(e) || this._effectPoolMap.set(e, {
prefab: null,
pool: []
});
let t = this._effectPoolMap.get(e);
t.prefab || (t.prefab = yield r.Util.loadBundleRes("Prefab/Effect/" + e));
return t.pool.length > 0 ? t.pool.shift() : cc.instantiate(t.prefab);
});
}
backEffect(e, t) {
this._effectPoolMap.has(e) || this._effectPoolMap.set(e, {
prefab: null,
pool: []
});
let o = this._effectPoolMap.get(e);
o.pool.indexOf(t) < 0 && o.pool.push(t);
}
resetExtra() {
this.extraCache.clear();
this.extraIds = [];
}
};
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Util": "Util",
"./../../GameScript/index": "index"
} ],
WorldNodeBody: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fc26dVSNiVD84i49faYW7xp", "WorldNodeBody");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.WorldBodyColliderType = void 0;
const a = e("../../GameData/GameTypeDefine"), s = e("./Tile"), r = e("./WorldChild"), {ccclass: l, property: c} = cc._decorator;
(function(e) {
e[e.Platform = 0] = "Platform";
e[e.Ladder = 1] = "Ladder";
})(o.WorldBodyColliderType || (o.WorldBodyColliderType = {}));
let d = i = class extends r.default {
constructor() {
super(...arguments);
this._position = new cc.Vec2();
this._h = 0;
this._lastPosition = new cc.Vec2();
this._tmp_v = new cc.Vec2();
this._boundingBox = new cc.Rect();
this._boundingBoxExtInTiledPhysics = new cc.Rect();
this.isDebugCutting = !1;
this.useObb = !1;
this.collider = null;
this.ignoreTile = !1;
this._enteredCollidersMap = new Map();
}
static ResetId() {
this._s_id = 0;
}
static _GetNewId() {
return ++this._s_id;
}
onDestroy() {
super.onDestroy && super.onDestroy();
this.onBlockedByTile = null;
this.doCollisionTile = null;
cc.Tween.stopAllByTarget(this.node);
}
get dataId() {}
set targetPosition(e) {
this.SetPosition(e.x, e.y);
}
get targetPosition() {
return this._position;
}
SetPosition(e, t) {
this._position.x = e;
this._position.y = t;
}
get PositionX() {
return this._position.x;
}
get PositionY() {
return this._position.y;
}
get Scale() {
return this.node.scale;
}
get Angle() {
return this.node.angle;
}
set Scale(e) {
this.node.scale = e;
}
set Angle(e) {
this.node.angle = e;
}
get Move2PositionX() {
return this._position.x;
}
get Move2PositionY() {
return this._position.y;
}
set Move2PositionX(e) {
if (this.setScaleX) {
let t = e - this._position.x;
t > 0 && this.setScaleX(1);
t < 0 && this.setScaleX(-1);
}
this._position.x = e;
}
set Move2PositionY(e) {
this._position.y = e;
}
get h() {
return this._h;
}
updateH(e) {
this._h = e;
}
get lastPosition() {
return this._lastPosition;
}
PositionMoveDelta(e, t) {
this._position.x += e;
this._position.y += t;
}
LimitMoveDelta(e) {
let t = this._position.x - this.node.position.x, o = this._position.y - this.node.position.y, i = Math.sqrt(t * t + o * o);
if (i > 0 && i > e) {
t = Math.ceil(t / i * e);
o = Math.ceil(o / i * e);
}
this._position.x = t + this.node.position.x;
this._position.y = o + this.node.position.y;
}
ApplyPosition() {
this._lastPosition.set(this.node.position);
let e = this.inverseWorldTransH(this._h);
this._lastPosition.x += e[0];
this._lastPosition.y += e[1];
let t = this._position.x, o = this._position.y;
e = this.worldTransH(this._h);
this._tmp_v.x = t + e[0];
this._tmp_v.y = o + e[1];
this.node.position = this._tmp_v;
let i = this.world, n = Math.floor(this.PositionX / s.default.SIZE), a = Math.floor(this.PositionY / s.default.SIZE);
i.tiledMap.canPass(n, a) && this.registTile(n, a);
}
worldTransH(e) {
let t = 0;
this.world.worldLayout.type == a.WorldType.Rpg && e > 0 && (t += .5 * e);
return [ 0, t ];
}
inverseWorldTransH(e) {
let t = 0;
this.world.worldLayout.type == a.WorldType.Rpg && e > 0 && (t += .5 * e);
return [ 0, t ];
}
getPhyPos() {
let e = this.inverseWorldTransH(this._h);
return {
x: this.PositionX + e[0],
y: this.PositionY + e[1]
};
}
get gravity() {
return 0;
}
get useGravity() {
return this.world.useGravity;
}
get width() {
return this.node.width * Math.abs(this.node.scaleX);
}
get height() {
return this.node.height * Math.abs(this.node.scaleY);
}
getBoundingBox() {
let e = this.width, t = this.height, o = this.node.x - this.node.width * Math.abs(this.node.scaleX) * this.node.anchorX, i = this.node.y - this.node.height * Math.abs(this.node.scaleY) * this.node.anchorY;
this._boundingBox.x = o;
this._boundingBox.y = i;
this._boundingBox.width = e;
this._boundingBox.height = t;
return this._boundingBox;
}
getRuntimeBoundingBox() {
let e = this.getBoundingBox();
e.width += Math.abs(this.node.scaleX) * this.boundingBoxExtInTiledPhysics.width;
e.height += Math.abs(this.node.scaleY) * this.boundingBoxExtInTiledPhysics.height;
e.x += Math.abs(this.node.scaleX) * this.boundingBoxExtInTiledPhysics.x;
e.y += Math.abs(this.node.scaleY) * this.boundingBoxExtInTiledPhysics.y;
return e;
}
get boundingBoxExtInTiledPhysics() {
return this._boundingBoxExtInTiledPhysics;
}
get historyValidTileCol() {
return this._tileCol;
}
get historyValidTileRow() {
return this._tileRow;
}
registTile(e, t) {
this._tileCol = e;
this._tileRow = t;
}
onLoad() {
super.onLoad();
this.init();
}
init() {
if (!this._inited) {
this._inited = !0;
this.useObb = !1;
this.ignoreTile = !1;
this.id = i._GetNewId();
this.collider = this.node.getComponent(cc.Collider);
this.collider || (this.collider = this.node.getComponentInChildren(cc.Collider));
}
}
resetPhysicsState() {
this.useObb = !1;
this.ignoreTile = !1;
this._enteredCollidersMap && this._enteredCollidersMap.clear();
}
hasEnteredColliderType(e) {
return (this._enteredCollidersMap.get(e) || []).length > 0;
}
hasEnteredCollider(e, t) {
let o = this._enteredCollidersMap.get(e);
return o && o.length > 0;
}
enterCollider(e, t) {
let o = this._enteredCollidersMap.get(e);
if (o) o.push(t); else {
o = [ t ];
this._enteredCollidersMap.set(e, o);
}
}
existCollider(e, t) {
let o = this._enteredCollidersMap.get(e);
if (o) {
let e = o.indexOf(t);
e >= 0 && o.splice(e, 1);
}
}
};
d._s_id = 0;
d = i = n([ l ], d);
o.default = d;
cc._RF.pop();
}, {
"../../GameData/GameTypeDefine": "GameTypeDefine",
"./Tile": "Tile",
"./WorldChild": "WorldChild"
} ],
WorldOptionPanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8357ezkN9JE8La/gh/88SD2", "WorldOptionPanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../CustomUI/Button"), s = e("../../CustomUI/ColorBox"), r = e("../../Frame/Config"), l = e("../../Frame/Panel"), c = e("../../Frame/SceneManager"), d = e("../../Frame/Util"), h = e("../../Scene/EditWorldScene/Inspector/TriggerItem"), {ccclass: p, property: u} = cc._decorator;
let m = class extends l.default {
constructor() {
super(...arguments);
this.saveBtn = null;
this.cameraRatioBtn = null;
this.colorBox = null;
this.triggerItem = null;
this.worldData = null;
this.worldLayout = null;
this.call = null;
}
onLoad() {
super.onLoad();
this.saveBtn.node.on(a.default.CLICK, this.onSave, this);
this.cameraRatioBtn.node.on(a.default.CLICK, this.onCameraRatioBtn, this);
}
setData(e, t) {
this.worldData = e;
this.worldLayout = t;
this.cameraRatioBtn.label.string = "" + (t.cameraRatio || 1);
let o = r.Config.colors.findIndex(e => {
let o = e.color, i = t.bgColor;
return o.r == i.r && o.g == i.g && o.b == i.b && o.a == i.a;
});
o < 0 && (o = 0);
this.colorBox.setDataArr(r.Config.colors);
this.colorBox.select(o);
t.onStart = t.onStart || [];
this.triggerItem.setData("当进入地图时：", t.onStart, !0);
}
onCameraRatioBtn() {
let e = Number.parseFloat(this.cameraRatioBtn.label.string);
c.default.ins.OpenPanelByName("NumberInputPanel", t => {
t.setData("摄像机缩放", e, e => n(this, void 0, void 0, function*() {
e = d.Util.clamp(e, .5, 10);
this.cameraRatioBtn.label.string = e;
}));
});
}
onSave() {
return n(this, void 0, void 0, function*() {
let e = this.colorBox.getColor();
this.worldLayout.bgColor.r = e.r;
this.worldLayout.bgColor.g = e.g;
this.worldLayout.bgColor.b = e.b;
this.worldLayout.bgColor.a = e.a;
this.worldLayout.cameraRatio = Number.parseFloat(this.cameraRatioBtn.label.string);
this.closePanel();
this.call && this.call();
});
}
};
i([ u(a.default) ], m.prototype, "saveBtn", void 0);
i([ u(a.default) ], m.prototype, "cameraRatioBtn", void 0);
i([ u(s.default) ], m.prototype, "colorBox", void 0);
i([ u(h.default) ], m.prototype, "triggerItem", void 0);
m = i([ p ], m);
o.default = m;
cc._RF.pop();
}, {
"../../CustomUI/Button": "Button",
"../../CustomUI/ColorBox": "ColorBox",
"../../Frame/Config": "Config",
"../../Frame/Panel": "Panel",
"../../Frame/SceneManager": "SceneManager",
"../../Frame/Util": "Util",
"../../Scene/EditWorldScene/Inspector/TriggerItem": "TriggerItem"
} ],
WorldRenamePanel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "8be289ATxhIbJv66DZBNWVP", "WorldRenamePanel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../../../scripts/_autogen/cmd/cmd"), s = e("../../CustomUI/Button"), r = e("../../Frame/NetworkMgr"), l = e("../../Frame/Panel"), c = e("../../Frame/Top"), d = e("../../Game/Player/Mng"), {ccclass: h, property: p} = cc._decorator;
let u = class extends l.default {
constructor() {
super(...arguments);
this.nameEditBox = null;
this.saveBtn = null;
this.worldData = null;
this.saveCall = null;
}
onLoad() {
super.onLoad();
this.saveBtn.node.on(s.default.CLICK, this.onSave, this);
}
setData(e) {
this.worldData = e;
this.nameEditBox.string = e.info.name;
}
onSave() {
return n(this, void 0, void 0, function*() {
this.worldData.info.name = this.nameEditBox.textLabel.string;
let e = {
msg: this.worldData.info.name
}, t = yield r.NetIns.SendCmdAsync({
cmd: a.CMDS.Game_SensitiveMsg,
params: e
}, a.Game_RSensitiveMsg);
if (t && t.sensitiveWords && t.sensitiveWords.length) c.default.showToast("名称违规"); else if (yield d.Mng.Ins.worldMng.save(this.worldData, !1)) {
this.saveCall && this.saveCall(this.worldData);
this.closePanel();
} else c.default.showToast("保存失败");
});
}
};
i([ p(cc.EditBox) ], u.prototype, "nameEditBox", void 0);
i([ p(s.default) ], u.prototype, "saveBtn", void 0);
u = i([ h ], u);
o.default = u;
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../CustomUI/Button": "Button",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Frame/Panel": "Panel",
"../../Frame/Top": "Top",
"../../Game/Player/Mng": "Mng"
} ],
WorldRpgCameraFollower: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "df753nJn+ZAUISJKehwicd1", "WorldRpgCameraFollower");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.WorldRpgCameraFollower = void 0;
const i = e("../../../Frame/Util");
o.WorldRpgCameraFollower = class {
constructor() {
this._target = null;
this._boundBox = null;
this._moveNode = null;
this._camera = null;
}
setCamera(e, t, o) {
this._camera = e;
this._moveNode = t;
this._boundBox = o;
}
setTarget(e) {
this._target = e;
}
centerOnTarget() {
let e = i.Util.convertPosition(this._target, this._moveNode.parent);
this._moveNode.position = e;
}
doFollow() {
if (!this._target || !this._camera) return;
let e = i.Util.convertPosition(this._target, this._moveNode.parent);
this._moveNode.x = i.Util.lerp(this._moveNode.x, e.x, .2);
this._moveNode.x = i.Util.clamp(this._moveNode.x, 0, this._boundBox.width);
this._moveNode.y = i.Util.lerp(this._moveNode.y, e.y, .2);
this._moveNode.y = i.Util.clamp(this._moveNode.y, 0, this._boundBox.height);
}
};
cc._RF.pop();
}, {
"../../../Frame/Util": "Util"
} ],
World: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7e3344FHOlAzYRCYbWNCWGU", "World");
var i, n = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, a = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const s = e("./../../GameScript/index"), r = e("../../Frame/Pool"), l = e("../../Frame/Util"), c = e("./Prop"), d = e("./Tile"), h = e("./TiledMap"), p = e("./Actor"), u = e("./Device"), m = e("../../Game/World/FloatLabel"), f = e("./CameraFollowCtrl"), g = e("./Gizmos/PlaceGizmos"), y = e("./Gizmos/SelectGizmos"), v = e("./Weapon/Bullet"), C = e("./Gizmos/InteractGizmos"), _ = e("./Interactable"), S = e("./TilePhysics"), I = e("./WorldNodeBody"), G = e("../Player/Mng"), T = e("./BgLayerCtrl"), b = e("../Player/TriggerMng"), M = e("../../GameData/GameTypeDefine"), P = e("../../Frame/DataStructs/UnionSet"), D = e("./AICtrl/AiCtrlBase"), w = e("../../Frame/ScreenRect"), B = e("./StartPoint"), R = e("../Player/GameSaveMng"), x = e("./Mover/Mover"), L = e("./TextBubble"), {ccclass: k, property: F} = cc._decorator;
let N = i = class extends cc.Component {
constructor() {
super(...arguments);
this.bg = null;
this.cameraFollowCtrl = null;
this.camera = null;
this.startPoint = null;
this.actorPool = null;
this.propPool = null;
this.bulletPool = null;
this.floatLabelPool = null;
this.textBubblePool = null;
this.graphics = null;
this.tiledMap = null;
this.content = null;
this.layerContents = [];
this.actorContent = null;
this.deviceContent = null;
this.bulletContent = null;
this.propContent = null;
this.effectContent = null;
this.placeGizmos = null;
this.selectGizmos = null;
this.interactGizmos = null;
this.floatLabelContent = null;
this.headContent = null;
this.bodys = [];
this.hero = null;
this.actors = [];
this.devices = [];
this.props = [];
this.bullets = [];
this.interacts = [];
this.playing = !1;
this.isGameScene = !1;
this.worldLayout = null;
this.worldData = null;
this.devicePrefabMap = new Map();
this.tilePhysics = new S.TilePhysics();
this._rect_t = new cc.Rect();
}
AddBody(e) {
e.init();
e.SetPosition(e.node.x, e.node.y);
this.bodys.push(e);
}
RemoveBody(e) {
for (let t = 0; t < this.bodys.length; ++t) this.bodys[t] == e && this.bodys.splice(t--, 1);
}
GetActNodeByDataId(e) {
for (let t of this.bodys) if (null != t.dataId && null != t.dataId && t.dataId == e) return t;
return null;
}
GetTileByDataId(e) {
return this.tiledMap.getTileByDataId(e);
}
GetActNodeByDataUnionId(e) {
for (let t of this.bodys) if (null != t.dataId && null != t.dataId && i.unionActSet.find(t.dataId) == e) return t;
return null;
}
get useGravity() {
let e = !1;
this.worldLayout.type == M.WorldType.Jump && (e = !0);
return e;
}
centerLayers() {
for (let e of this.layerContents) e.setCamera(this.cameraFollowCtrl.node);
}
addToLayer(e, t) {
e == M.DecoratorLayerType.Map && this.worldData.info.type == M.WorldType.Rpg ? t.parent = this.actorContent : t.parent = this._decoratorLayerMap.get(e).node;
}
ready() {}
play() {
this.worldLayout && this.worldLayout.onStart && this.hero && b.default.Ins.emitTrigger(this.worldLayout.onStart, this.hero.node);
}
pause() {
this.playing && this.tilePhysics.Step(this.bodys);
this.playing = !1;
this.node.emit(i.PAUSE);
}
resume() {
this.playing = !0;
this.node.emit(i.RESUME);
}
onLoad() {
this.placeGizmos.node.active = !1;
this.selectGizmos.node.active = !1;
this.interactGizmos.node.active = !1;
if (!this.headContent) {
this.headContent = new cc.Node();
let e = this.actorContent.zIndex;
this.actorContent.parent.addChild(this.headContent, e + 1);
}
this._decoratorLayerMap = new Map([ [ M.DecoratorLayerType.Foreground01, this.layerContents[0] ], [ M.DecoratorLayerType.MapFore, this.layerContents[1] ], [ M.DecoratorLayerType.MapBack, this.layerContents[2] ], [ M.DecoratorLayerType.Background01, this.layerContents[3] ], [ M.DecoratorLayerType.Background02, this.layerContents[4] ], [ M.DecoratorLayerType.Map, this.layerContents[5] ] ]);
}
onEnable() {
cc.director.getCollisionManager().enabled = !0;
console.log("enable col");
}
onDisable() {
cc.director.getCollisionManager().enabled = !1;
console.log("disable col");
}
initSize(e, t) {
this.node.width = e * d.default.SIZE;
this.node.height = t * d.default.SIZE;
l.Util.updateAllWidget(this.bg);
this.tiledMap.setSize(e, t);
}
getContentNode(e) {
return this.worldData.info.type == M.WorldType.Rpg && e != M.CommonDataType.Device ? this.actorContent : e == M.CommonDataType.Actor ? this.actorContent : e == M.CommonDataType.Device ? this.deviceContent : e == M.CommonDataType.Prop ? this.propContent : e == M.CommonDataType.Bullet ? this.bulletContent : this.actorContent;
}
addActor(e) {
let t = this.actorPool.get();
this.getContentNode(M.CommonDataType.Actor).addChild(t);
if (void 0 !== e.x && void 0 !== e.y) {
t.x = e.x;
t.y = e.y;
} else if (void 0 !== e.iCol && void 0 !== e.iRow) {
t.x = (e.iCol + .5) * d.default.SIZE;
t.y = (e.iRow + .5) * d.default.SIZE;
} else {
t.x = 0;
t.y = 0;
}
let o = t.getComponent(p.default);
this.actors.push(o);
this.AddBody(o);
o.gun && o.gun.boxDamager && this.AddBody(o.gun.boxDamager);
o.resetPhysicsState();
return o;
}
removeActor(e) {
i.clearAi(e);
this.RemoveBody(e);
e.gun && e.gun.boxDamager && this.RemoveBody(e.gun.boxDamager);
for (let t = 0; t < this.actors.length; t++) if (this.actors[t] == e) {
this.actors.splice(t--, 1);
e.node.emit(r.default.PUT);
}
if (!this.isGameScene && this.hero == e) {
this.hero = this.findHeroActor();
this.hero && this.startPoint.SetPosition(this.hero.node.x, this.hero.node.y);
}
}
addDevice(e, t) {
return a(this, void 0, void 0, function*() {
let o = this.devicePrefabMap.get(t);
if (!o) {
o = yield l.Util.loadBundleRes("Prefab/Device/" + t);
this.devicePrefabMap.set(t, o);
}
if (!o) return;
let i = cc.instantiate(o);
this.getContentNode(M.CommonDataType.Device).addChild(i);
let n = i.getComponent(u.default);
this.devices.push(n);
let a = i.getComponent(_.default);
a && this.interacts.push(a);
if (void 0 !== e.x && void 0 !== e.y) {
i.x = e.x;
i.y = e.y;
} else if (void 0 !== e.iCol && void 0 !== e.iRow) {
i.x = (e.iCol + .5) * d.default.SIZE;
i.y = (e.iRow + .5) * d.default.SIZE;
} else {
i.x = 0;
i.y = 0;
}
this.AddBody(n);
return n;
});
}
removeDevice(e) {
this.RemoveBody(e);
for (let t = 0; t < this.devices.length; t++) if (this.devices[t] == e) {
let o = e.node.getComponent(_.default);
if (o) for (let e = 0; e < this.interacts.length; e++) this.interacts[e] == o && this.interacts.splice(e--, 1);
this.devices.splice(t--, 1);
e.node.destroy();
}
}
addProp(e) {
let t = this.propPool.get();
this.getContentNode(M.CommonDataType.Prop).addChild(t);
if (void 0 !== e.x && void 0 !== e.y) {
t.x = e.x;
t.y = e.y;
} else if (void 0 !== e.iCol && void 0 !== e.iRow) {
t.x = (e.iCol + .5) * d.default.SIZE;
t.y = (e.iRow + .5) * d.default.SIZE;
} else {
t.x = 0;
t.y = 0;
}
let o = t.getComponent(c.default);
this.props.push(o);
this.AddBody(o);
return o;
}
removeProp(e) {
this.RemoveBody(e);
for (let t = 0; t < this.props.length; t++) if (this.props[t] == e) {
this.props.splice(t--, 1);
e.node.emit(r.default.PUT);
}
}
addBullet(e) {
if (!this.bulletContent) return null;
let t = this.bulletPool.get();
this.getContentNode(M.CommonDataType.Bullet).addChild(t);
if (void 0 !== e.x && void 0 !== e.y) {
t.x = e.x;
t.y = e.y;
} else if (void 0 !== e.iCol && void 0 !== e.iRow) {
t.x = (e.iCol + .5) * d.default.SIZE;
t.y = (e.iRow + .5) * d.default.SIZE;
} else {
t.x = 0;
t.y = 0;
}
let o = t.getComponent(v.default);
o.enabled = !0;
this.bullets.push(o);
this.AddBody(o);
return o;
}
removeBullet(e) {
this.RemoveBody(e);
for (let t = 0; t < this.bullets.length; t++) if (this.bullets[t] == e) {
this.bullets.splice(t--, 1);
e.node.emit(r.default.PUT);
}
}
static clearAi(e) {
let t = e.getComponents(D.default);
if (t && t.length > 0) for (let e of t) e.destroy();
let o = e.getComponents(x.default);
if (o && o.length > 0) for (let e of o) e.destroy();
}
onReCheckHero() {
if (!this.hero || this.hero.data.team != M.Team.Hero) {
this.hero = this.findHeroActor();
this.hero && this.startPoint.SetPosition(this.hero.node.x, this.hero.node.y);
}
}
playFloatLabel(e) {
let t = this.floatLabelPool.get();
this.floatLabelContent.addChild(t);
t.position = e.pos;
let o = t.getComponent(m.default);
o.label.string = e.str;
o.label.node.color = e.color || cc.Color.BLACK;
o.label.fontSize = e.size || 36;
e.anim && o.play(e.anim);
}
showTextBubble(e) {
let t = this.textBubblePool.get();
e.parent.addChild(t);
t.x = 0;
t.y = e.parent.height / 2;
let o = t.getComponent(L.default);
o.node.scale = 1;
o.show(e.text);
return o;
}
playEffect(e) {
return a(this, void 0, void 0, function*() {
if (!this.effectContent) return null;
let t = yield G.Mng.Ins.worldMng.getEffect(e.effectName);
this.effectContent.addChild(t);
t.position = e.pos;
t.getComponent(cc.Animation).play();
t.getComponent(cc.Animation).on(cc.Animation.EventType.FINISHED, () => {
t.parent = null;
G.Mng.Ins.worldMng.backEffect(e.effectName, t);
}, this);
return t;
});
}
repaintGrid() {
let e = this.tiledMap.nRow, t = this.tiledMap.nCol;
this.graphics.clear();
let o = this.worldLayout.bgColor;
this.graphics.strokeColor = cc.color(255 - o.r, 255 - o.g, 255 - o.b, 255);
let i = t * d.default.SIZE, n = e * d.default.SIZE;
for (let t = 0; t <= e; t++) {
this.graphics.moveTo(0, t * d.default.SIZE);
this.graphics.lineTo(i, t * d.default.SIZE);
this.graphics.stroke();
}
for (let e = 0; e <= t; e++) {
this.graphics.moveTo(e * d.default.SIZE, 0);
this.graphics.lineTo(e * d.default.SIZE, n);
this.graphics.stroke();
}
}
findActor(e) {
return this.actors.find(t => t.data.id == e);
}
findHeroActor() {
return this.actors.find(e => e.data.team == M.Team.Hero);
}
moveActor(e, t) {
if (e) {
let o = (t.iCol + .5) * d.default.SIZE, i = (t.iRow + .5) * d.default.SIZE;
e.SetPosition(o, i);
}
}
isHeroActor(e) {
return e.getComponent(p.default) == this.hero;
}
setWorldData(e) {
this.worldData = e;
}
initByWorldLayout(e, t = null) {
return a(this, void 0, void 0, function*() {
I.default.ResetId();
this.worldLayout = e;
this.initSize(e.size.col, e.size.row);
this.setBgColor(e.bgColor);
e.tiles = e.tiles || [];
e.actors = e.actors || [];
e.devices = e.devices || [];
e.props = e.props || [];
e.startPoint = e.startPoint || {
pos: null
};
this.isGameScene ? this.camera.zoomRatio = e.cameraRatio || 1 : this.camera.zoomRatio = 1;
let o = new Set(), i = new Set(), n = new Set(), a = new Set(), s = new Set();
for (let t = 0; t < e.tiles.length; t++) {
let i = e.tiles[t];
o.add(i.data.confId);
}
let r = e.startPoint.pos;
for (let t = 0; t < e.actors.length; t++) {
let o = e.actors[t];
i.add(o.data.confId);
o.data.gunId && s.add(o.data.gunId);
r || o.data.team != M.Team.Hero || (r = o.pos);
}
r || (r = {
x: 0,
y: 0
});
e.startPoint.pos = r;
for (let t = 0; t < e.devices.length; t++) {
let o = e.devices[t];
n.add(o.data.confId);
}
for (let t = 0; t < e.props.length; t++) {
let o = e.props[t];
a.add(o.data.confId);
}
yield G.Mng.Ins.tileMng.loadMany(Array.from(o));
yield G.Mng.Ins.actorMng.loadMany(Array.from(i));
yield G.Mng.Ins.deviceMng.loadMany(Array.from(n));
yield G.Mng.Ins.propMng.loadMany(Array.from(a));
yield G.Mng.Ins.weaponMng.loadMany(Array.from(s));
if (!this.isGameScene) {
this.startPoint.node.x = e.startPoint.pos.x;
this.startPoint.node.y = e.startPoint.pos.y;
this.startPoint.SetPosition(e.startPoint.pos.x, e.startPoint.pos.y);
}
this.startPoint.node.active = !this.isGameScene;
let l = new Map();
for (let t = 0; t < e.tiles.length; t++) {
let o = e.tiles[t];
o.data.layerIdx = o.data.layerIdx || 0;
let i = l.get(o.data.confId) || [];
i.push(o);
l.set(o.data.confId, i);
}
let c = Array.from(l);
for (let e = 0; e < c.length; e++) {
let o = c[e][1];
for (let e = 0; e < o.length; e++) {
let i = o[e];
if (!i.data.onlyOnce || !R.default.Ins.getTileFlag(t, i.data.id)) {
let e = this.tiledMap.addTileInLayer(i.data.layerIdx, i.pos.iCol, i.pos.iRow);
e.node.name = i.data.id;
yield e.setData(i.data);
}
}
}
for (let o = 0; o < e.actors.length; o++) {
let i = e.actors[o];
if (!i.data.onlyOnce || !R.default.Ins.getActorFlag(t, i.data.id)) {
let e = this.addActor(i.pos);
yield e.setData(i.data);
}
}
for (let o = 0; o < e.devices.length; o++) {
let i = e.devices[o];
if (!i.data.onlyOnce || !R.default.Ins.getDeviceFlag(t, i.data.id)) {
let e = yield G.Mng.Ins.deviceMng.loadOne(i.data.confId);
if (e) {
let t = yield this.addDevice(i.pos, e ? e.prefabName : "ErrorDevice");
t ? yield t.setData(i.data, e) : console.log("Julian", e.prefabName);
}
}
}
for (let o = 0; o < e.props.length; o++) {
let i = e.props[o];
if (!i.data.onlyOnce || !R.default.Ins.getPropFlag(t, i.data.id)) {
let e = yield this.addProp(i.pos);
yield e.setData(i.data);
}
}
this.tilePhysics.Init(this.tiledMap);
});
}
makeWorldLayout() {
this.worldLayout.startPoint.pos = {
x: this.startPoint.node.x,
y: this.startPoint.node.y
};
let e = {
type: this.worldLayout.type,
bgColor: {
r: this.bg.color.r,
g: this.bg.color.g,
b: this.bg.color.b,
a: this.bg.color.a
},
size: {
col: this.tiledMap.nCol,
row: this.tiledMap.nRow
},
actors: [],
devices: [],
props: [],
tiles: [],
incId: this.worldLayout.incId,
onStart: this.worldLayout.onStart || [],
gsData: this.worldLayout.gsData,
cameraRatio: this.worldLayout.cameraRatio,
startPoint: this.worldLayout.startPoint
};
void 0 === e.gsData && delete e.gsData;
void 0 === e.cameraRatio && delete e.cameraRatio;
for (let t = 0; t < this.actors.length; t++) {
let o = this.actors[t];
e.actors.push({
pos: {
x: o.node.x,
y: o.node.y
},
data: l.Util.deepCopy(o.data)
});
}
for (let t = 0; t < this.devices.length; t++) {
let o = this.devices[t];
e.devices.push({
pos: {
x: o.node.x,
y: o.node.y
},
data: l.Util.deepCopy(o.data)
});
}
for (let t = 0; t < this.props.length; t++) {
let o = this.props[t];
e.props.push({
pos: {
x: o.node.x,
y: o.node.y
},
data: o.data
});
}
let t = this.tiledMap.getAllTiles();
for (let o = 0; o < t.length; o++) {
let i = t[o];
e.tiles.push({
pos: {
iCol: i.iCol,
iRow: i.iRow
},
data: l.Util.deepCopy(i.data)
});
}
return e;
}
reset() {
this.tiledMap.reset();
let e = this.actors, t = this.devices, o = this.props, i = this.bullets;
for (let t = e.length - 1; t >= 0; t--) this.removeActor(e[t]);
for (let e = t.length - 1; e >= 0; e--) this.removeDevice(t[e]);
for (let e = o.length - 1; e >= 0; e--) this.removeProp(o[e]);
for (let e = i.length - 1; e >= 0; e--) this.removeBullet(i[e]);
this.actors = [];
this.devices = [];
this.props = [];
this.bullets = [];
this.setBgColor(cc.Color.BLACK);
}
clear() {}
setBgColor(e) {
this.bg.color = cc.color(e.r, e.g, e.b, 255);
}
update(e) {
let t = this.cameraFollowCtrl.node;
if (!this.isGameScene) {
t = this.camera.node;
this.startPoint.node.active = !this.hero;
this.hero && this.startPoint.SetPosition(this.hero.node.x, this.hero.node.y);
this.startPoint.ApplyPosition();
}
orange.TimeUtil.serverTime;
this.playing && this.tilePhysics.Step(this.bodys);
orange.TimeUtil.serverTime;
let o = w.default.width / this.camera.zoomRatio, i = w.default.height / this.camera.zoomRatio, n = t.anchorX, a = t.anchorY, r = t.x - o * n, l = t.y - i * a;
this._rect_t.x = r;
this._rect_t.y = l;
this._rect_t.width = o;
this._rect_t.height = i;
orange.TimeUtil.serverTime;
for (let e of this.bodys) {
e.ApplyPosition();
if (this.worldData.info.type == M.WorldType.Rpg) {
e.node.parent == this.actorContent && (e.node.zIndex = -e.getBoundingBox().yMin);
e.node.getComponent(p.default) && (e.node.zIndex += 10);
}
if (!e.setCutting) continue;
let t = e.getBoundingBox(), o = this._rect_t.intersects(t);
e.setCutting(!o);
}
orange.TimeUtil.serverTime;
this.tiledMap.checkOutScreen(this._rect_t);
orange.TimeUtil.serverTime;
s.GSRunnerMng.instance.step();
}
};
N.PAUSE = "WorldPause";
N.RESUME = "WorldResume";
N.HERO_MOVE = "HERO_MOVE";
N.unionActSet = new P.UnionSet();
n([ F(cc.Node) ], N.prototype, "bg", void 0);
n([ F(f.default) ], N.prototype, "cameraFollowCtrl", void 0);
n([ F(cc.Camera) ], N.prototype, "camera", void 0);
n([ F(B.default) ], N.prototype, "startPoint", void 0);
n([ F(r.default) ], N.prototype, "actorPool", void 0);
n([ F(r.default) ], N.prototype, "propPool", void 0);
n([ F(r.default) ], N.prototype, "bulletPool", void 0);
n([ F(r.default) ], N.prototype, "floatLabelPool", void 0);
n([ F(r.default) ], N.prototype, "textBubblePool", void 0);
n([ F(cc.Graphics) ], N.prototype, "graphics", void 0);
n([ F(h.default) ], N.prototype, "tiledMap", void 0);
n([ F(cc.Node) ], N.prototype, "content", void 0);
n([ F([ T.default ]) ], N.prototype, "layerContents", void 0);
n([ F(cc.Node) ], N.prototype, "actorContent", void 0);
n([ F(cc.Node) ], N.prototype, "deviceContent", void 0);
n([ F(cc.Node) ], N.prototype, "bulletContent", void 0);
n([ F(cc.Node) ], N.prototype, "propContent", void 0);
n([ F(cc.Node) ], N.prototype, "effectContent", void 0);
n([ F(g.default) ], N.prototype, "placeGizmos", void 0);
n([ F(y.default) ], N.prototype, "selectGizmos", void 0);
n([ F(C.default) ], N.prototype, "interactGizmos", void 0);
n([ F(cc.Node) ], N.prototype, "floatLabelContent", void 0);
N = i = n([ k ], N);
o.default = N;
cc._RF.pop();
}, {
"../../Frame/DataStructs/UnionSet": "UnionSet",
"../../Frame/Pool": "Pool",
"../../Frame/ScreenRect": "ScreenRect",
"../../Frame/Util": "Util",
"../../Game/World/FloatLabel": "FloatLabel",
"../../GameData/GameTypeDefine": "GameTypeDefine",
"../Player/GameSaveMng": "GameSaveMng",
"../Player/Mng": "Mng",
"../Player/TriggerMng": "TriggerMng",
"./../../GameScript/index": "index",
"./AICtrl/AiCtrlBase": "AiCtrlBase",
"./Actor": "Actor",
"./BgLayerCtrl": "BgLayerCtrl",
"./CameraFollowCtrl": "CameraFollowCtrl",
"./Device": "Device",
"./Gizmos/InteractGizmos": "InteractGizmos",
"./Gizmos/PlaceGizmos": "PlaceGizmos",
"./Gizmos/SelectGizmos": "SelectGizmos",
"./Interactable": "Interactable",
"./Mover/Mover": "Mover",
"./Prop": "Prop",
"./StartPoint": "StartPoint",
"./TextBubble": "TextBubble",
"./Tile": "Tile",
"./TilePhysics": "TilePhysics",
"./TiledMap": "TiledMap",
"./Weapon/Bullet": "Bullet",
"./WorldNodeBody": "WorldNodeBody"
} ],
WsMng: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "6d569joI0ZMHayNTwOIXLSw", "WsMng");
var i = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("../../../scripts/_autogen/cmd/cmd"), a = e("../../Frame/NetworkMgr"), s = e("../../Role"), r = e("../OperationFlow"), l = e("./Mng"), c = e("./ShopMng"), d = e("./TalkMng");
class h {
init() {
a.NetIns.on(n.RESPS.Game_RGameStatusNotify, this.onGameStatusNotify, this);
a.NetIns.on(n.RESPS.Game_RGoodsStatusNotify, this.onGoodsStatusNotify, this);
a.NetIns.on(n.RESPS.Game_RTalkStatusNotify, this.onTalkStatusNotify, this);
a.NetIns.on(n.RESPS.Game_RRoleNewUserImgNotify, this.onNewUserImgNotify, this);
}
DecodeMsg(e, t) {
let o = new t();
o.setValue(e);
return o;
}
onGameStatusNotify(e) {
if (!e.data || !e.data.decBody) return;
let t = e.data.decBody;
setTimeout(() => i(this, void 0, void 0, function*() {
console.log("WsMng:" + n.RESPS.Game_RGameStatusNotify, t);
let e = yield l.Mng.mine.gameMng.loadOne(t.gameId);
e.status = t.status;
e.offReason = r.OperationFlow.makeOffReason(t.offReason);
cc.game.emit("GameDataChange", e);
}), 1e3);
}
onGoodsStatusNotify(e) {
if (!e.data || !e.data.decBody) return;
let t = e.data.decBody;
setTimeout(() => i(this, void 0, void 0, function*() {
console.log("WsMng:" + n.RESPS.Game_RGoodsStatusNotify, t);
let e = yield c.default.Ins.loadGoodsInfos([ t.goodsId ]);
if (e && e[0]) {
e[0].status = t.status;
e[0].offReason = t.offReason;
cc.game.emit("GoodsStatusChange");
}
}), 1e3);
}
onTalkStatusNotify(e) {
if (!e.data || !e.data.decBody) return;
let t = e.data.decBody;
setTimeout(() => i(this, void 0, void 0, function*() {
console.log("WsMng:" + n.RESPS.Game_RTalkStatusNotify, t);
d.default.Ins.updateStatus(t);
}), 1e3);
}
onNewUserImgNotify(e) {
if (!e.data || !e.data.decBody) return;
let t = e.data.decBody;
setTimeout(() => i(this, void 0, void 0, function*() {
console.log("WsMng:" + n.RESPS.Game_RRoleNewUserImgNotify, t);
s.default.Ins.role.newUserImgReviewStatus = t.status;
s.default.Ins.role.userImg = t.userImg;
cc.game.emit(s.default.UserImgChange);
}), 1e3);
}
}
o.default = h;
h.Ins = new h();
cc._RF.pop();
}, {
"../../../scripts/_autogen/cmd/cmd": "cmd",
"../../Frame/NetworkMgr": "NetworkMgr",
"../../Role": "Role",
"../OperationFlow": "OperationFlow",
"./Mng": "Mng",
"./ShopMng": "ShopMng",
"./TalkMng": "TalkMng"
} ],
cmd: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7ced4f+BN5BY7AkoDDbzIoW", "cmd");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.Game_RDelGameRank = o.Game_RDelGameComment = o.Game_RDeleteTalk = o.Game_RDeleteGameRankScore = o.Game_RDelCustomColors = o.Game_RDelActorGroups = o.Game_RDebugGetRecommendGameMsg = o.Game_RDealWithReportPlayer = o.Game_RDealWithReportGoods = o.Game_RDealWithReportGameComment = o.Game_RCreateTalk = o.Game_RCreateOfficialTalk = o.Game_RCostCoinRecommendGame = o.Game_RCostCoinInGame = o.Game_RCommentTalk = o.Game_RCommentGame = o.Game_RCollectionTalk = o.Game_RCollectionGGoods = o.Game_RCollectionGames = o.Game_RClickRecommendsGames = o.Game_RClearReportTalkComment = o.Game_RClearReportTalk = o.Game_RClearReportPlayer = o.Game_RClearReportGoods = o.Game_RClearReportGameComment = o.Game_RClearReportGame = o.Game_RClearNewMsg = o.Game_RClearNewFans = o.Game_RClearNewComment = o.Game_RCancelUpTalk = o.Game_RCancelThumbTalkComment = o.Game_RCancelThumbTalk = o.Game_RCancelThumbGames = o.Game_RCancelThumbGameComment = o.Game_RCancelFollowUser = o.Game_RCancelDownTalk = o.Game_RCancelCollectionTalk = o.Game_RCancelCollectionGoods = o.Game_RCancelCollectionGames = o.Game_RBuyGoods = o.Game_RBindRole = o.Game_RAdminSetGameStatus = o.Game_RAdminGetGameMsgByReviewId = o.Game_RAddOtherCoinByAdvert = o.Game_RAddGameTage = o.Game_RAddCoinByShareVideo = o.Game_RAddCoinByAdvert = o.Account_SetPasswordR = o.RESPS = o.CMDS = void 0;
o.Game_RGetOneDynamicConfig = o.Game_RGetNewGoods = o.Game_RGetNewGameList = o.Game_RGetNewGameIdList = o.Game_RGetNewCommentListV2 = o.Game_RGetNewCommentList = o.Game_RGetNeedReviewImageList = o.Game_RGetMsgList = o.Game_RGetManualReportSensitiveImg = o.Game_RGetHomepageRecommendsGames = o.Game_RGetHomepageNewGames = o.Game_RGetHomepageGameData = o.Game_RGetHomepageFollowUserGames = o.Game_RGetGoodsInfos = o.Game_RGetGoodsIds = o.Game_RGetGiftRankData = o.Game_RGetGiftDynCfg = o.Game_RGetGameShopIds = o.Game_RGetGameShop = o.Game_RGetGameRank = o.Game_RGetGameIdListByGameTag = o.Game_RGetGameDetail = o.Game_RGetFollow = o.Game_RGetFans = o.Game_RGetCreativeRank = o.Game_RGetCostCoinRecommendGames = o.Game_RGetChosenGoodsIds = o.Game_RGetBindRoleMsg = o.Game_RGetBeReportGameData = o.Game_RGetAggregateMsgList = o.Game_RGameStatusNotify = o.Game_RFollowUser = o.Game_RDownTalkComment = o.Game_RDownTalk = o.Game_RDelWorldData = o.Game_RDelVariable = o.Game_RDelTalkTop = o.Game_RDelTalkCommentTop = o.Game_RDelTalkComment = o.Game_RDelTalkChosen = o.Game_RDelRoleWeaponConf = o.Game_RDelRoleTileConf = o.Game_RDelRolePropConf = o.Game_RDelRoleGameData = o.Game_RDelRoleDeviceConf = o.Game_RDelRoleCreativeConf = o.Game_RDelRoleBulletConf = o.Game_RDelRoleActorConf = o.Game_RDelReleaseGameRank = o.Game_RDelGameShop = void 0;
o.Game_RLoadGameComment = o.Game_RLoadFirstLevelTalkComment = o.Game_RLoadFirstLevelGameComment = o.Game_RIncCreditScore = o.Game_RHurryGames = o.Game_RGoodsStatusNotify = o.Game_RGMSetGameTage = o.Game_RGMRevokeBindRole = o.Game_RGMIncOtherCoin = o.Game_RGMBindRole = o.Game_RGetWorldDataIds = o.Game_RGetWorldData = o.Game_RGetVariableIds = o.Game_RGetVariable = o.Game_RGetUserSimpleMsg = o.Game_RGetUserDetailMsg = o.Game_RGetUserCreditMsg = o.Game_RGetThumbTalkComment = o.Game_RGetThumbGameComment = o.Game_RGetSourceCreativeGameRank = o.Game_RGetSimpleGoods = o.Game_RGetRoleWeaponIds = o.Game_RGetRoleWeaponConf = o.Game_RGetRoleTileIds = o.Game_RGetRoleTileConf = o.Game_RGetRolePropIds = o.Game_RGetRolePropConf = o.Game_RGetRoleGiftRankData = o.Game_RGetRoleGameIds = o.Game_RGetRoleGameData = o.Game_RGetRoleDeviceIds = o.Game_RGetRoleDeviceConf = o.Game_RGetRoleCreativeConf = o.Game_RGetRoleBulletIds = o.Game_RGetRoleBulletConf = o.Game_RGetRoleActorIds = o.Game_RGetRoleActorConf = o.Game_RGetReviewGameData = o.Game_RGetReportTalkList = o.Game_RGetReportTalkCommentList = o.Game_RGetReportSensitiveImg = o.Game_RGetReportPlayerList = o.Game_RGetReportGoodsList = o.Game_RGetReportGameList = o.Game_RGetReportGameCommentList = o.Game_RGetReleaseGameRank = o.Game_RGetRecommendGoodsIdList = o.Game_RGetRecommendGameIdList = o.Game_RGetPlayGameStatistics = o.Game_RGetOwnGoodsInfos = void 0;
o.Game_RSaveRoleActorConf = o.Game_RSaveGuide = o.Game_RSaveGameShop = o.Game_RSaveGameRank = o.Game_RSaveCustomColors = o.Game_RSaveAllVariable = o.Game_RSaveAllCustomColors = o.Game_RSaveActorGroups = o.Game_RRoleNewUserImgNotify = o.Game_RRevokeReportPlayer = o.Game_RRevokeReportGoods = o.Game_RRevokeReportGameComment = o.Game_RRevokeReportGame = o.Game_RReviewGame = o.Game_RResetChosenGoods = o.Game_RResetChosenGames = o.Game_RResetBannerGames = o.Game_RReportTalkComment = o.Game_RReportTalk = o.Game_RReportPlayer = o.Game_RReportGoodsShow = o.Game_RReportGoodsClick = o.Game_RReportGoods = o.Game_RReportGameShow = o.Game_RReportGameComment = o.Game_RReportGameClick = o.Game_RReportGame = o.Game_RReportBugMsg = o.Game_RReplyTalkComment = o.Game_RPublishGame = o.Game_RPlayGameStatistics = o.Game_RPlayGames = o.Game_ROwnOffGame = o.Game_ROfficialDeleteTalk = o.Game_ROffGoods = o.Game_ROffGame = o.Game_RObtainTTCoin0319 = o.Game_RNewSearchGoods = o.Game_RModifyTalkComment = o.Game_RModifyTalk = o.Game_RModifyOfficialTalk = o.Game_RLogin = o.Game_RLoadTalkSubComment = o.Game_RLoadTalkDetail = o.Game_RLoadTalkComment = o.Game_RLoadTalkByIdList = o.Game_RLoadTalk = o.Game_RLoadOwnTalkComment = o.Game_RLoadOwnTalk = o.Game_RLoadGameSubComment = void 0;
o.Room_FrameSyncStartP = o.Room_FrameMsgP = o.Room_DismissP = o.Room_CustomChangeP = o.RespSync = o.RespNone = o.OIMNewMsgNotify = o.OIM_GetHistoryResp = o.OIM_GetConversationListResp = o.Login_RSelectServer = o.Login_RGetAppUpdateInfo = o.Login_RAuthUserSingle = o.Login_RAuthUser = o.Login_CreateAccountR = o.Login_CheckAccountR = o.Game_SubGameListR = o.Game_RUpTalkComment = o.Game_RUpTalk = o.Game_RUploadTakeExamScore = o.Game_RUploadReleaseGame = o.Game_RUploadImage = o.Game_RUploadGoods = o.Game_RUploadGameRankScore = o.Game_RUpdateUserInfo = o.Game_RUpdateUserImg = o.Game_RThumbTalkComment = o.Game_RThumbTalk = o.Game_RThumbGames = o.Game_RThumbGameComment = o.Game_RTalkStatusNotify = o.Game_RTalkCommentStatusNotify = o.Game_RSetTalkTop = o.Game_RSetTalkCommentTop = o.Game_RSetTalkChosen = o.Game_RSensitiveMsg = o.Game_RSendGift = o.Game_RSearchTalk = o.Game_RSearchRole = o.Game_RSearchGoods = o.Game_RSearchGameByTag = o.Game_RSearchGame = o.Game_RSaveWorldData = o.Game_RSaveVariable = o.Game_RSaveRoleWeaponConf = o.Game_RSaveRoleTileConf = o.Game_RSaveRolePropConf = o.Game_RSaveRoleGameData = o.Game_RSaveRoleDeviceConf = o.Game_RSaveRoleCreativeConf = o.Game_RSaveRoleBulletConf = void 0;
o.Room_UnlockP = o.Room_StopP = o.Room_StartP = o.Room_StartingP = o.Room_StartFailP = o.Room_Resp = o.Room_REnter = o.Room_PingR = o.Room_MsgP = o.Room_MemberLeaveP = o.Room_MemberJoinP = o.Room_MemberGroupChangeP = o.Room_LockP = o.Room_ListR = o.Room_FrameSyncStopP = void 0;
const n = e("../data/data"), a = e("../data/data"), s = e("../data/data"), r = e("../data/data"), l = e("../data/data"), c = e("../data/data"), d = e("../data/data"), h = e("../data/data"), p = e("../data/data"), u = e("../data/data"), m = e("../data/data"), f = e("../data/data"), g = e("../data/data"), y = e("../data/data"), v = e("../data/data"), C = e("../data/data"), _ = e("../data/data"), S = e("../data/data"), I = e("../data/data"), G = e("../data/data"), T = e("../data/data"), b = e("../data/data"), M = e("../data/data"), P = e("../data/data"), D = e("../data/data"), w = e("../data/data"), B = e("../data/data"), R = e("../data/data"), x = e("../data/data"), L = e("../data/data"), k = e("../data/data"), F = e("../data/data"), N = e("../data/data"), A = e("../data/data"), O = e("../data/data"), U = e("../data/data"), E = e("../data/data"), j = e("../data/data"), H = e("../data/data"), W = e("../data/data"), V = e("../data/data"), K = e("../data/data"), J = e("../data/data"), Z = e("../data/data"), z = e("../data/data"), X = e("../data/data"), q = e("../data/data"), Y = e("../data/data"), $ = e("../data/data"), Q = e("../data/data"), ee = e("../data/data"), te = e("../data/data"), oe = e("../data/data"), ie = e("../data/data"), ne = e("../data/data"), ae = e("../data/data");
(function(e) {
e.Account_SetPassword = "account_setpassword";
e.Game_AddCoinByAdvert = "game_addcoinbyadvert";
e.Game_AddCoinByShareVideo = "game_addcoinbysharevideo";
e.Game_AddGameTage = "game_addgametage";
e.Game_AddItem = "game_additem";
e.Game_AddOtherCoinByAdvert = "game_addothercoinbyadvert";
e.Game_AdminGetGameMsgByReviewId = "game_admingetgamemsgbyreviewid";
e.Game_AdminSetGameStatus = "game_adminsetgamestatus";
e.Game_BindRole = "game_bindrole";
e.Game_BuyGoods = "game_buygoods";
e.Game_CancelCollectionGames = "game_cancelcollectiongames";
e.Game_CancelCollectionGoods = "game_cancelcollectiongoods";
e.Game_CancelCollectionTalk = "game_cancelcollectiontalk";
e.Game_CancelDownTalk = "game_canceldowntalk";
e.Game_CancelFollowUser = "game_cancelfollowuser";
e.Game_CancelThumbGameComment = "game_cancelthumbgamecomment";
e.Game_CancelThumbGames = "game_cancelthumbgames";
e.Game_CancelThumbTalk = "game_cancelthumbtalk";
e.Game_CancelThumbTalkComment = "game_cancelthumbtalkcomment";
e.Game_CancelUpTalk = "game_canceluptalk";
e.Game_ClearNewComment = "game_clearnewcomment";
e.Game_ClearNewFans = "game_clearnewfans";
e.Game_ClearNewMsg = "game_clearnewmsg";
e.Game_ClearReportGame = "game_clearreportgame";
e.Game_ClearReportGameComment = "game_clearreportgamecomment";
e.Game_ClearReportGoods = "game_clearreportgoods";
e.Game_ClearReportPlayer = "game_clearreportplayer";
e.Game_ClearReportTalk = "game_clearreporttalk";
e.Game_ClearReportTalkComment = "game_clearreporttalkcomment";
e.Game_ClickRecommendsGames = "game_clickrecommendsgames";
e.Game_CollectionGames = "game_collectiongames";
e.Game_CollectionGGoods = "game_collectionggoods";
e.Game_CollectionTalk = "game_collectiontalk";
e.Game_CommentGame = "game_commentgame";
e.Game_CommentTalk = "game_commenttalk";
e.Game_CostCoinInGame = "game_costcoiningame";
e.Game_CostCoinRecommendGame = "game_costcoinrecommendgame";
e.Game_CreateOfficialTalk = "game_createofficialtalk";
e.Game_CreateTalk = "game_createtalk";
e.Game_DealWithReportGameComment = "game_dealwithreportgamecomment";
e.Game_DealWithReportGoods = "game_dealwithreportgoods";
e.Game_DealWithReportPlayer = "game_dealwithreportplayer";
e.Game_DebugGetRecommendGameMsg = "game_debuggetrecommendgamemsg";
e.Game_DelActorGroups = "game_delactorgroups";
e.Game_DelCustomColors = "game_delcustomcolors";
e.Game_DeleteGameRankScore = "game_deletegamerankscore";
e.Game_DeleteTalk = "game_deletetalk";
e.Game_DelGameComment = "game_delgamecomment";
e.Game_DelGameRank = "game_delgamerank";
e.Game_DelGameShop = "game_delgameshop";
e.Game_DelReleaseGameRank = "game_delreleasegamerank";
e.Game_DelRoleActorConf = "game_delroleactorconf";
e.Game_DelRoleBulletConf = "game_delrolebulletconf";
e.Game_DelRoleCreativeConf = "game_delrolecreativeconf";
e.Game_DelRoleDeviceConf = "game_delroledeviceconf";
e.Game_DelRoleGameData = "game_delrolegamedata";
e.Game_DelRolePropConf = "game_delrolepropconf";
e.Game_DelRoleTileConf = "game_delroletileconf";
e.Game_DelRoleWeaponConf = "game_delroleweaponconf";
e.Game_DelTalkChosen = "game_deltalkchosen";
e.Game_DelTalkComment = "game_deltalkcomment";
e.Game_DelTalkCommentTop = "game_deltalkcommenttop";
e.Game_DelTalkTop = "game_deltalktop";
e.Game_DelVariable = "game_delvariable";
e.Game_DelWorldData = "game_delworlddata";
e.Game_DownTalk = "game_downtalk";
e.Game_DownTalkComment = "game_downtalkcomment";
e.Game_FollowUser = "game_followuser";
e.Game_GetAggregateMsgList = "game_getaggregatemsglist";
e.Game_GetBeReportGameData = "game_getbereportgamedata";
e.Game_GetBindRoleMsg = "game_getbindrolemsg";
e.Game_GetChosenGoodsIds = "game_getchosengoodsids";
e.Game_GetCostCoinRecommendGames = "game_getcostcoinrecommendgames";
e.Game_GetCreativeRank = "game_getcreativerank";
e.Game_GetFans = "game_getfans";
e.Game_GetFollow = "game_getfollow";
e.Game_GetGameDetail = "game_getgamedetail";
e.Game_GetGameIdListByGameTag = "game_getgameidlistbygametag";
e.Game_GetGameRank = "game_getgamerank";
e.Game_GetGameShop = "game_getgameshop";
e.Game_GetGameShopIds = "game_getgameshopids";
e.Game_GetGiftDynCfg = "game_getgiftdyncfg";
e.Game_GetGiftRankData = "game_getgiftrankdata";
e.Game_GetGoodsIds = "game_getgoodsids";
e.Game_GetGoodsInfos = "game_getgoodsinfos";
e.Game_GetHomepageFollowUserGames = "game_gethomepagefollowusergames";
e.Game_GetHomepageGameData = "game_gethomepagegamedata";
e.Game_GetHomepageNewGames = "game_gethomepagenewgames";
e.Game_GetHomepageRecommendsGames = "game_gethomepagerecommendsgames";
e.Game_GetManualReportSensitiveImg = "game_getmanualreportsensitiveimg";
e.Game_GetMsgList = "game_getmsglist";
e.Game_GetNeedReviewImageList = "game_getneedreviewimagelist";
e.Game_GetNewCommentList = "game_getnewcommentlist";
e.Game_GetNewCommentListV2 = "game_getnewcommentlistv2";
e.Game_GetNewGameIdList = "game_getnewgameidlist";
e.Game_GetNewGameList = "game_getnewgamelist";
e.Game_GetNewGoods = "game_getnewgoods";
e.Game_GetOneDynamicConfig = "game_getonedynamicconfig";
e.Game_GetOwnGoodsInfos = "game_getowngoodsinfos";
e.Game_GetPlayGameStatistics = "game_getplaygamestatistics";
e.Game_GetRecommendGameIdList = "game_getrecommendgameidlist";
e.Game_GetRecommendGoodsIdList = "game_getrecommendgoodsidlist";
e.Game_GetReleaseGameRank = "game_getreleasegamerank";
e.Game_GetReportGameCommentList = "game_getreportgamecommentlist";
e.Game_GetReportGameIdList = "game_getreportgameidlist";
e.Game_GetReportGoodsIdList = "game_getreportgoodsidlist";
e.Game_GetReportPlayerIdList = "game_getreportplayeridlist";
e.Game_GetReportSensitiveImg = "game_getreportsensitiveimg";
e.Game_GetReportTalkCommentList = "game_getreporttalkcommentlist";
e.Game_GetReportTalkList = "game_getreporttalklist";
e.Game_GetReviewGameData = "game_getreviewgamedata";
e.Game_GetRoleActorConf = "game_getroleactorconf";
e.Game_GetRoleActorIds = "game_getroleactorids";
e.Game_GetRoleBulletConf = "game_getrolebulletconf";
e.Game_GetRoleBulletIds = "game_getrolebulletids";
e.Game_GetRoleCreativeConf = "game_getrolecreativeconf";
e.Game_GetRoleDeviceConf = "game_getroledeviceconf";
e.Game_GetRoleDeviceIds = "game_getroledeviceids";
e.Game_GetRoleGameData = "game_getrolegamedata";
e.Game_GetRoleGameIds = "game_getrolegameids";
e.Game_GetRoleGiftRankData = "game_getrolegiftrankdata";
e.Game_GetRolePropConf = "game_getrolepropconf";
e.Game_GetRolePropIds = "game_getrolepropids";
e.Game_GetRoleTileConf = "game_getroletileconf";
e.Game_GetRoleTileIds = "game_getroletileids";
e.Game_GetRoleWeaponConf = "game_getroleweaponconf";
e.Game_GetRoleWeaponIds = "game_getroleweaponids";
e.Game_GetSimpleGoods = "game_getsimplegoods";
e.Game_GetSourceCreativeGameRank = "game_getsourcecreativegamerank";
e.Game_GetThumbGameComment = "game_getthumbgamecomment";
e.Game_GetThumbTalkComment = "game_getthumbtalkcomment";
e.Game_GetUserCreditMsg = "game_getusercreditmsg";
e.Game_GetUserDetailMsg = "game_getuserdetailmsg";
e.Game_GetUserSimpleMsg = "game_getusersimplemsg";
e.Game_GetVariable = "game_getvariable";
e.Game_GetVariableIds = "game_getvariableids";
e.Game_GetWorldData = "game_getworlddata";
e.Game_GetWorldDataIds = "game_getworlddataids";
e.Game_GMBindRole = "game_gmbindrole";
e.Game_GMIncOtherCoin = "game_gmincothercoin";
e.Game_GMLogin = "game_gmlogin";
e.Game_GMRevokeBindRole = "game_gmrevokebindrole";
e.Game_GMSetGameTage = "game_gmsetgametage";
e.Game_GmSetGold = "game_gmsetgold";
e.Game_HurryGames = "game_hurrygames";
e.Game_IncCreditScore = "game_inccreditscore";
e.Game_LoadFirstLevelGameComment = "game_loadfirstlevelgamecomment";
e.Game_LoadFirstLevelTalkComment = "game_loadfirstleveltalkcomment";
e.Game_LoadGameComment = "game_loadgamecomment";
e.Game_LoadGameSubComment = "game_loadgamesubcomment";
e.Game_LoadOwnTalk = "game_loadowntalk";
e.Game_LoadOwnTalkComment = "game_loadowntalkcomment";
e.Game_LoadTalk = "game_loadtalk";
e.Game_LoadTalkByIdList = "game_loadtalkbyidlist";
e.Game_LoadTalkComment = "game_loadtalkcomment";
e.Game_LoadTalkDetail = "game_loadtalkdetail";
e.Game_LoadTalkSubComment = "game_loadtalksubcomment";
e.Game_Login = "game_login";
e.Game_ModifyOfficialTalk = "game_modifyofficialtalk";
e.Game_ModifyTalk = "game_modifytalk";
e.Game_ModifyTalkComment = "game_modifytalkcomment";
e.Game_NewSearchGoods = "game_newsearchgoods";
e.Game_ObtainTTCoin0319 = "game_obtainttcoin0319";
e.Game_OffGame = "game_offgame";
e.Game_OffGoods = "game_offgoods";
e.Game_OfficialDeleteTalk = "game_officialdeletetalk";
e.Game_OwnOffGame = "game_ownoffgame";
e.Game_PlayGames = "game_playgames";
e.Game_PlayGameStatistics = "game_playgamestatistics";
e.Game_PublishGame = "game_publishgame";
e.Game_ReplyTalkComment = "game_replytalkcomment";
e.Game_ReportBugMsg = "game_reportbugmsg";
e.Game_ReportGame = "game_reportgame";
e.Game_ReportGameClick = "game_reportgameclick";
e.Game_ReportGameComment = "game_reportgamecomment";
e.Game_ReportGameShow = "game_reportgameshow";
e.Game_ReportGoods = "game_reportgoods";
e.Game_ReportGoodsClick = "game_reportgoodsclick";
e.Game_ReportGoodsShow = "game_reportgoodsshow";
e.Game_ReportPlayer = "game_reportplayer";
e.Game_ReportTalk = "game_reporttalk";
e.Game_ReportTalkComment = "game_reporttalkcomment";
e.Game_ResetBannerGames = "game_resetbannergames";
e.Game_ResetChosenGames = "game_resetchosengames";
e.Game_ResetChosenGoods = "game_resetchosengoods";
e.Game_ReviewGame = "game_reviewgame";
e.Game_RevokeReportGame = "game_revokereportgame";
e.Game_RevokeReportGameComment = "game_revokereportgamecomment";
e.Game_RevokeReportGoods = "game_revokereportgoods";
e.Game_RevokeReportPlayer = "game_revokereportplayer";
e.Game_SaveActorGroups = "game_saveactorgroups";
e.Game_SaveAllCustomColors = "game_saveallcustomcolors";
e.Game_SaveAllVariable = "game_saveallvariable";
e.Game_SaveCustomColors = "game_savecustomcolors";
e.Game_SaveGameRank = "game_savegamerank";
e.Game_SaveGameShop = "game_savegameshop";
e.Game_SaveGuide = "game_saveguide";
e.Game_SaveRoleActorConf = "game_saveroleactorconf";
e.Game_SaveRoleBulletConf = "game_saverolebulletconf";
e.Game_SaveRoleCreativeConf = "game_saverolecreativeconf";
e.Game_SaveRoleDeviceConf = "game_saveroledeviceconf";
e.Game_SaveRoleGameData = "game_saverolegamedata";
e.Game_SaveRolePropConf = "game_saverolepropconf";
e.Game_SaveRoleTileConf = "game_saveroletileconf";
e.Game_SaveRoleWeaponConf = "game_saveroleweaponconf";
e.Game_SaveVariable = "game_savevariable";
e.Game_SaveWorldData = "game_saveworlddata";
e.Game_SearchGame = "game_searchgame";
e.Game_SearchGameByTag = "game_searchgamebytag";
e.Game_SearchGoods = "game_searchgoods";
e.Game_SearchRole = "game_searchrole";
e.Game_SearchTalk = "game_searchtalk";
e.Game_SendGift = "game_sendgift";
e.Game_SensitiveMsg = "game_sensitivemsg";
e.Game_SetTalkChosen = "game_settalkchosen";
e.Game_SetTalkCommentTop = "game_settalkcommenttop";
e.Game_SetTalkTop = "game_settalktop";
e.Game_SubGameList = "game_subgamelist";
e.Game_ThumbGameComment = "game_thumbgamecomment";
e.Game_ThumbGames = "game_thumbgames";
e.Game_ThumbTalk = "game_thumbtalk";
e.Game_ThumbTalkComment = "game_thumbtalkcomment";
e.Game_UpdateUserImg = "game_updateuserimg";
e.Game_UpdateUserInfo = "game_updateuserinfo";
e.Game_UploadGameRankScore = "game_uploadgamerankscore";
e.Game_UploadGoods = "game_uploadgoods";
e.Game_UploadImage = "game_uploadimage";
e.Game_UploadReleaseGame = "game_uploadreleasegame";
e.Game_UploadTakeExamScore = "game_uploadtakeexamscore";
e.Game_UpTalk = "game_uptalk";
e.Game_UpTalkComment = "game_uptalkcomment";
e.Login_AuthUser = "login_authuser";
e.Login_AuthUserSingle = "login_authusersingle";
e.Login_CheckAccount = "login_checkaccount";
e.Login_CreateAccount = "login_createaccount";
e.Login_GetAppUpdateInfo = "login_getappupdateinfo";
e.Login_GMAuthUserSingle = "login_gmauthusersingle";
e.Login_SelectServer = "login_selectserver";
e.OIM_DelConversation = "oim_delconversation";
e.OIM_GetConversationList = "oim_getconversationlist";
e.OIM_GetHistory = "oim_gethistory";
e.OIM_SendMsg = "oim_sendmsg";
e.Room_ChangeCustom = "room_changecustom";
e.Room_ChangeMemberGroup = "room_changemembergroup";
e.Room_Create = "room_create";
e.Room_Dismiss = "room_dismiss";
e.Room_Enter = "room_enter";
e.Room_Join = "room_join";
e.Room_Leave = "room_leave";
e.Room_List = "room_list";
e.Room_Lock = "room_lock";
e.Room_MasterJoin = "room_masterjoin";
e.Room_Msg = "room_msg";
e.Room_Ping = "room_ping";
e.Room_SendFrameMsg = "room_sendframemsg";
e.Room_Start = "room_start";
e.Room_StartFrameSync = "room_startframesync";
e.Room_Stop = "room_stop";
e.Room_StopFrameSync = "room_stopframesync";
e.Room_Unlock = "room_unlock";
})(o.CMDS || (o.CMDS = {}));
(function(e) {
e.Account_SetPasswordR = "Account_SetPasswordR";
e.Game_RAddCoinByAdvert = "Game_RAddCoinByAdvert";
e.Game_RAddCoinByShareVideo = "Game_RAddCoinByShareVideo";
e.Game_RAddGameTage = "Game_RAddGameTage";
e.Game_RAddOtherCoinByAdvert = "Game_RAddOtherCoinByAdvert";
e.Game_RAdminGetGameMsgByReviewId = "Game_RAdminGetGameMsgByReviewId";
e.Game_RAdminSetGameStatus = "Game_RAdminSetGameStatus";
e.Game_RBindRole = "Game_RBindRole";
e.Game_RBuyGoods = "Game_RBuyGoods";
e.Game_RCancelCollectionGames = "Game_RCancelCollectionGames";
e.Game_RCancelCollectionGoods = "Game_RCancelCollectionGoods";
e.Game_RCancelCollectionTalk = "Game_RCancelCollectionTalk";
e.Game_RCancelDownTalk = "Game_RCancelDownTalk";
e.Game_RCancelFollowUser = "Game_RCancelFollowUser";
e.Game_RCancelThumbGameComment = "Game_RCancelThumbGameComment";
e.Game_RCancelThumbGames = "Game_RCancelThumbGames";
e.Game_RCancelThumbTalk = "Game_RCancelThumbTalk";
e.Game_RCancelThumbTalkComment = "Game_RCancelThumbTalkComment";
e.Game_RCancelUpTalk = "Game_RCancelUpTalk";
e.Game_RClearNewComment = "Game_RClearNewComment";
e.Game_RClearNewFans = "Game_RClearNewFans";
e.Game_RClearNewMsg = "Game_RClearNewMsg";
e.Game_RClearReportGame = "Game_RClearReportGame";
e.Game_RClearReportGameComment = "Game_RClearReportGameComment";
e.Game_RClearReportGoods = "Game_RClearReportGoods";
e.Game_RClearReportPlayer = "Game_RClearReportPlayer";
e.Game_RClearReportTalk = "Game_RClearReportTalk";
e.Game_RClearReportTalkComment = "Game_RClearReportTalkComment";
e.Game_RClickRecommendsGames = "Game_RClickRecommendsGames";
e.Game_RCollectionGames = "Game_RCollectionGames";
e.Game_RCollectionGGoods = "Game_RCollectionGGoods";
e.Game_RCollectionTalk = "Game_RCollectionTalk";
e.Game_RCommentGame = "Game_RCommentGame";
e.Game_RCommentTalk = "Game_RCommentTalk";
e.Game_RCostCoinInGame = "Game_RCostCoinInGame";
e.Game_RCostCoinRecommendGame = "Game_RCostCoinRecommendGame";
e.Game_RCreateOfficialTalk = "Game_RCreateOfficialTalk";
e.Game_RCreateTalk = "Game_RCreateTalk";
e.Game_RDealWithReportGameComment = "Game_RDealWithReportGameComment";
e.Game_RDealWithReportGoods = "Game_RDealWithReportGoods";
e.Game_RDealWithReportPlayer = "Game_RDealWithReportPlayer";
e.Game_RDebugGetRecommendGameMsg = "Game_RDebugGetRecommendGameMsg";
e.Game_RDelActorGroups = "Game_RDelActorGroups";
e.Game_RDelCustomColors = "Game_RDelCustomColors";
e.Game_RDeleteGameRankScore = "Game_RDeleteGameRankScore";
e.Game_RDeleteTalk = "Game_RDeleteTalk";
e.Game_RDelGameComment = "Game_RDelGameComment";
e.Game_RDelGameRank = "Game_RDelGameRank";
e.Game_RDelGameShop = "Game_RDelGameShop";
e.Game_RDelReleaseGameRank = "Game_RDelReleaseGameRank";
e.Game_RDelRoleActorConf = "Game_RDelRoleActorConf";
e.Game_RDelRoleBulletConf = "Game_RDelRoleBulletConf";
e.Game_RDelRoleCreativeConf = "Game_RDelRoleCreativeConf";
e.Game_RDelRoleDeviceConf = "Game_RDelRoleDeviceConf";
e.Game_RDelRoleGameData = "Game_RDelRoleGameData";
e.Game_RDelRolePropConf = "Game_RDelRolePropConf";
e.Game_RDelRoleTileConf = "Game_RDelRoleTileConf";
e.Game_RDelRoleWeaponConf = "Game_RDelRoleWeaponConf";
e.Game_RDelTalkChosen = "Game_RDelTalkChosen";
e.Game_RDelTalkComment = "Game_RDelTalkComment";
e.Game_RDelTalkCommentTop = "Game_RDelTalkCommentTop";
e.Game_RDelTalkTop = "Game_RDelTalkTop";
e.Game_RDelVariable = "Game_RDelVariable";
e.Game_RDelWorldData = "Game_RDelWorldData";
e.Game_RDownTalk = "Game_RDownTalk";
e.Game_RDownTalkComment = "Game_RDownTalkComment";
e.Game_RFollowUser = "Game_RFollowUser";
e.Game_RGameStatusNotify = "Game_RGameStatusNotify";
e.Game_RGetAggregateMsgList = "Game_RGetAggregateMsgList";
e.Game_RGetBeReportGameData = "Game_RGetBeReportGameData";
e.Game_RGetBindRoleMsg = "Game_RGetBindRoleMsg";
e.Game_RGetChosenGoodsIds = "Game_RGetChosenGoodsIds";
e.Game_RGetCostCoinRecommendGames = "Game_RGetCostCoinRecommendGames";
e.Game_RGetCreativeRank = "Game_RGetCreativeRank";
e.Game_RGetFans = "Game_RGetFans";
e.Game_RGetFollow = "Game_RGetFollow";
e.Game_RGetGameDetail = "Game_RGetGameDetail";
e.Game_RGetGameIdListByGameTag = "Game_RGetGameIdListByGameTag";
e.Game_RGetGameRank = "Game_RGetGameRank";
e.Game_RGetGameShop = "Game_RGetGameShop";
e.Game_RGetGameShopIds = "Game_RGetGameShopIds";
e.Game_RGetGiftDynCfg = "Game_RGetGiftDynCfg";
e.Game_RGetGiftRankData = "Game_RGetGiftRankData";
e.Game_RGetGoodsIds = "Game_RGetGoodsIds";
e.Game_RGetGoodsInfos = "Game_RGetGoodsInfos";
e.Game_RGetHomepageFollowUserGames = "Game_RGetHomepageFollowUserGames";
e.Game_RGetHomepageGameData = "Game_RGetHomepageGameData";
e.Game_RGetHomepageNewGames = "Game_RGetHomepageNewGames";
e.Game_RGetHomepageRecommendsGames = "Game_RGetHomepageRecommendsGames";
e.Game_RGetManualReportSensitiveImg = "Game_RGetManualReportSensitiveImg";
e.Game_RGetMsgList = "Game_RGetMsgList";
e.Game_RGetNeedReviewImageList = "Game_RGetNeedReviewImageList";
e.Game_RGetNewCommentList = "Game_RGetNewCommentList";
e.Game_RGetNewCommentListV2 = "Game_RGetNewCommentListV2";
e.Game_RGetNewGameIdList = "Game_RGetNewGameIdList";
e.Game_RGetNewGameList = "Game_RGetNewGameList";
e.Game_RGetNewGoods = "Game_RGetNewGoods";
e.Game_RGetOneDynamicConfig = "Game_RGetOneDynamicConfig";
e.Game_RGetOwnGoodsInfos = "Game_RGetOwnGoodsInfos";
e.Game_RGetPlayGameStatistics = "Game_RGetPlayGameStatistics";
e.Game_RGetRecommendGameIdList = "Game_RGetRecommendGameIdList";
e.Game_RGetRecommendGoodsIdList = "Game_RGetRecommendGoodsIdList";
e.Game_RGetReleaseGameRank = "Game_RGetReleaseGameRank";
e.Game_RGetReportGameCommentList = "Game_RGetReportGameCommentList";
e.Game_RGetReportGameList = "Game_RGetReportGameList";
e.Game_RGetReportGoodsList = "Game_RGetReportGoodsList";
e.Game_RGetReportPlayerList = "Game_RGetReportPlayerList";
e.Game_RGetReportSensitiveImg = "Game_RGetReportSensitiveImg";
e.Game_RGetReportTalkCommentList = "Game_RGetReportTalkCommentList";
e.Game_RGetReportTalkList = "Game_RGetReportTalkList";
e.Game_RGetReviewGameData = "Game_RGetReviewGameData";
e.Game_RGetRoleActorConf = "Game_RGetRoleActorConf";
e.Game_RGetRoleActorIds = "Game_RGetRoleActorIds";
e.Game_RGetRoleBulletConf = "Game_RGetRoleBulletConf";
e.Game_RGetRoleBulletIds = "Game_RGetRoleBulletIds";
e.Game_RGetRoleCreativeConf = "Game_RGetRoleCreativeConf";
e.Game_RGetRoleDeviceConf = "Game_RGetRoleDeviceConf";
e.Game_RGetRoleDeviceIds = "Game_RGetRoleDeviceIds";
e.Game_RGetRoleGameData = "Game_RGetRoleGameData";
e.Game_RGetRoleGameIds = "Game_RGetRoleGameIds";
e.Game_RGetRoleGiftRankData = "Game_RGetRoleGiftRankData";
e.Game_RGetRolePropConf = "Game_RGetRolePropConf";
e.Game_RGetRolePropIds = "Game_RGetRolePropIds";
e.Game_RGetRoleTileConf = "Game_RGetRoleTileConf";
e.Game_RGetRoleTileIds = "Game_RGetRoleTileIds";
e.Game_RGetRoleWeaponConf = "Game_RGetRoleWeaponConf";
e.Game_RGetRoleWeaponIds = "Game_RGetRoleWeaponIds";
e.Game_RGetSimpleGoods = "Game_RGetSimpleGoods";
e.Game_RGetSourceCreativeGameRank = "Game_RGetSourceCreativeGameRank";
e.Game_RGetThumbGameComment = "Game_RGetThumbGameComment";
e.Game_RGetThumbTalkComment = "Game_RGetThumbTalkComment";
e.Game_RGetUserCreditMsg = "Game_RGetUserCreditMsg";
e.Game_RGetUserDetailMsg = "Game_RGetUserDetailMsg";
e.Game_RGetUserSimpleMsg = "Game_RGetUserSimpleMsg";
e.Game_RGetVariable = "Game_RGetVariable";
e.Game_RGetVariableIds = "Game_RGetVariableIds";
e.Game_RGetWorldData = "Game_RGetWorldData";
e.Game_RGetWorldDataIds = "Game_RGetWorldDataIds";
e.Game_RGMBindRole = "Game_RGMBindRole";
e.Game_RGMIncOtherCoin = "Game_RGMIncOtherCoin";
e.Game_RGMRevokeBindRole = "Game_RGMRevokeBindRole";
e.Game_RGMSetGameTage = "Game_RGMSetGameTage";
e.Game_RGoodsStatusNotify = "Game_RGoodsStatusNotify";
e.Game_RHurryGames = "Game_RHurryGames";
e.Game_RIncCreditScore = "Game_RIncCreditScore";
e.Game_RLoadFirstLevelGameComment = "Game_RLoadFirstLevelGameComment";
e.Game_RLoadFirstLevelTalkComment = "Game_RLoadFirstLevelTalkComment";
e.Game_RLoadGameComment = "Game_RLoadGameComment";
e.Game_RLoadGameSubComment = "Game_RLoadGameSubComment";
e.Game_RLoadOwnTalk = "Game_RLoadOwnTalk";
e.Game_RLoadOwnTalkComment = "Game_RLoadOwnTalkComment";
e.Game_RLoadTalk = "Game_RLoadTalk";
e.Game_RLoadTalkByIdList = "Game_RLoadTalkByIdList";
e.Game_RLoadTalkComment = "Game_RLoadTalkComment";
e.Game_RLoadTalkDetail = "Game_RLoadTalkDetail";
e.Game_RLoadTalkSubComment = "Game_RLoadTalkSubComment";
e.Game_RLogin = "Game_RLogin";
e.Game_RModifyOfficialTalk = "Game_RModifyOfficialTalk";
e.Game_RModifyTalk = "Game_RModifyTalk";
e.Game_RModifyTalkComment = "Game_RModifyTalkComment";
e.Game_RNewSearchGoods = "Game_RNewSearchGoods";
e.Game_RObtainTTCoin0319 = "Game_RObtainTTCoin0319";
e.Game_ROffGame = "Game_ROffGame";
e.Game_ROffGoods = "Game_ROffGoods";
e.Game_ROfficialDeleteTalk = "Game_ROfficialDeleteTalk";
e.Game_ROwnOffGame = "Game_ROwnOffGame";
e.Game_RPlayGames = "Game_RPlayGames";
e.Game_RPlayGameStatistics = "Game_RPlayGameStatistics";
e.Game_RPublishGame = "Game_RPublishGame";
e.Game_RReplyTalkComment = "Game_RReplyTalkComment";
e.Game_RReportBugMsg = "Game_RReportBugMsg";
e.Game_RReportGame = "Game_RReportGame";
e.Game_RReportGameClick = "Game_RReportGameClick";
e.Game_RReportGameComment = "Game_RReportGameComment";
e.Game_RReportGameShow = "Game_RReportGameShow";
e.Game_RReportGoods = "Game_RReportGoods";
e.Game_RReportGoodsClick = "Game_RReportGoodsClick";
e.Game_RReportGoodsShow = "Game_RReportGoodsShow";
e.Game_RReportPlayer = "Game_RReportPlayer";
e.Game_RReportTalk = "Game_RReportTalk";
e.Game_RReportTalkComment = "Game_RReportTalkComment";
e.Game_RResetBannerGames = "Game_RResetBannerGames";
e.Game_RResetChosenGames = "Game_RResetChosenGames";
e.Game_RResetChosenGoods = "Game_RResetChosenGoods";
e.Game_RReviewGame = "Game_RReviewGame";
e.Game_RRevokeReportGame = "Game_RRevokeReportGame";
e.Game_RRevokeReportGameComment = "Game_RRevokeReportGameComment";
e.Game_RRevokeReportGoods = "Game_RRevokeReportGoods";
e.Game_RRevokeReportPlayer = "Game_RRevokeReportPlayer";
e.Game_RRoleNewUserImgNotify = "Game_RRoleNewUserImgNotify";
e.Game_RSaveActorGroups = "Game_RSaveActorGroups";
e.Game_RSaveAllCustomColors = "Game_RSaveAllCustomColors";
e.Game_RSaveAllVariable = "Game_RSaveAllVariable";
e.Game_RSaveCustomColors = "Game_RSaveCustomColors";
e.Game_RSaveGameRank = "Game_RSaveGameRank";
e.Game_RSaveGameShop = "Game_RSaveGameShop";
e.Game_RSaveGuide = "Game_RSaveGuide";
e.Game_RSaveRoleActorConf = "Game_RSaveRoleActorConf";
e.Game_RSaveRoleBulletConf = "Game_RSaveRoleBulletConf";
e.Game_RSaveRoleCreativeConf = "Game_RSaveRoleCreativeConf";
e.Game_RSaveRoleDeviceConf = "Game_RSaveRoleDeviceConf";
e.Game_RSaveRoleGameData = "Game_RSaveRoleGameData";
e.Game_RSaveRolePropConf = "Game_RSaveRolePropConf";
e.Game_RSaveRoleTileConf = "Game_RSaveRoleTileConf";
e.Game_RSaveRoleWeaponConf = "Game_RSaveRoleWeaponConf";
e.Game_RSaveVariable = "Game_RSaveVariable";
e.Game_RSaveWorldData = "Game_RSaveWorldData";
e.Game_RSearchGame = "Game_RSearchGame";
e.Game_RSearchGameByTag = "Game_RSearchGameByTag";
e.Game_RSearchGoods = "Game_RSearchGoods";
e.Game_RSearchRole = "Game_RSearchRole";
e.Game_RSearchTalk = "Game_RSearchTalk";
e.Game_RSendGift = "Game_RSendGift";
e.Game_RSensitiveMsg = "Game_RSensitiveMsg";
e.Game_RSetTalkChosen = "Game_RSetTalkChosen";
e.Game_RSetTalkCommentTop = "Game_RSetTalkCommentTop";
e.Game_RSetTalkTop = "Game_RSetTalkTop";
e.Game_RTalkCommentStatusNotify = "Game_RTalkCommentStatusNotify";
e.Game_RTalkStatusNotify = "Game_RTalkStatusNotify";
e.Game_RThumbGameComment = "Game_RThumbGameComment";
e.Game_RThumbGames = "Game_RThumbGames";
e.Game_RThumbTalk = "Game_RThumbTalk";
e.Game_RThumbTalkComment = "Game_RThumbTalkComment";
e.Game_RUpdateUserImg = "Game_RUpdateUserImg";
e.Game_RUpdateUserInfo = "Game_RUpdateUserInfo";
e.Game_RUploadGameRankScore = "Game_RUploadGameRankScore";
e.Game_RUploadGoods = "Game_RUploadGoods";
e.Game_RUploadImage = "Game_RUploadImage";
e.Game_RUploadReleaseGame = "Game_RUploadReleaseGame";
e.Game_RUploadTakeExamScore = "Game_RUploadTakeExamScore";
e.Game_RUpTalk = "Game_RUpTalk";
e.Game_RUpTalkComment = "Game_RUpTalkComment";
e.Game_SubGameListR = "Game_SubGameListR";
e.Login_CheckAccountR = "Login_CheckAccountR";
e.Login_CreateAccountR = "Login_CreateAccountR";
e.Login_RAuthUser = "Login_RAuthUser";
e.Login_RAuthUserSingle = "Login_RAuthUserSingle";
e.Login_RGetAppUpdateInfo = "Login_RGetAppUpdateInfo";
e.Login_RSelectServer = "Login_RSelectServer";
e.OIM_GetConversationListResp = "OIM_GetConversationListResp";
e.OIM_GetHistoryResp = "OIM_GetHistoryResp";
e.OIMNewMsgNotify = "OIMNewMsgNotify";
e.RespNone = "RespNone";
e.RespSync = "RespSync";
e.Room_CustomChangeP = "Room_CustomChangeP";
e.Room_DismissP = "Room_DismissP";
e.Room_FrameMsgP = "Room_FrameMsgP";
e.Room_FrameSyncStartP = "Room_FrameSyncStartP";
e.Room_FrameSyncStopP = "Room_FrameSyncStopP";
e.Room_ListR = "Room_ListR";
e.Room_LockP = "Room_LockP";
e.Room_MemberGroupChangeP = "Room_MemberGroupChangeP";
e.Room_MemberJoinP = "Room_MemberJoinP";
e.Room_MemberLeaveP = "Room_MemberLeaveP";
e.Room_MsgP = "Room_MsgP";
e.Room_PingR = "Room_PingR";
e.Room_REnter = "Room_REnter";
e.Room_Resp = "Room_Resp";
e.Room_StartFailP = "Room_StartFailP";
e.Room_StartingP = "Room_StartingP";
e.Room_StartP = "Room_StartP";
e.Room_StopP = "Room_StopP";
e.Room_UnlockP = "Room_UnlockP";
})(o.RESPS || (o.RESPS = {}));
const se = orange.type, re = orange.DataBase;
o.Account_SetPasswordR = class extends re {};
class le extends re {
constructor() {
super(...arguments);
this.coin = 0;
this.addCoinByAdvertCnt = 0;
this.addCoinByAdvertLimit = 0;
this.addCoinByAdvertReset = 0;
}
}
i([ se(0) ], le.prototype, "coin", void 0);
i([ se(0) ], le.prototype, "addCoinByAdvertCnt", void 0);
i([ se(0) ], le.prototype, "addCoinByAdvertLimit", void 0);
i([ se(0) ], le.prototype, "addCoinByAdvertReset", void 0);
o.Game_RAddCoinByAdvert = le;
class ce extends re {
constructor() {
super(...arguments);
this.coin = 0;
}
}
i([ se(0) ], ce.prototype, "coin", void 0);
o.Game_RAddCoinByShareVideo = ce;
class de extends re {
constructor() {
super(...arguments);
this.code = 0;
this.gameID = "";
this.sensitiveWords = new Array();
}
}
i([ se(0) ], de.prototype, "code", void 0);
i([ se(0) ], de.prototype, "gameID", void 0);
i([ se(2) ], de.prototype, "sensitiveWords", void 0);
o.Game_RAddGameTage = de;
class he extends re {
constructor() {
super(...arguments);
this.coin = 0;
this.addCoinByAdvertCnt = 0;
this.addCoinByAdvertLimit = 0;
this.addCoinByAdvertReset = 0;
}
}
i([ se(0) ], he.prototype, "coin", void 0);
i([ se(0) ], he.prototype, "addCoinByAdvertCnt", void 0);
i([ se(0) ], he.prototype, "addCoinByAdvertLimit", void 0);
i([ se(0) ], he.prototype, "addCoinByAdvertReset", void 0);
o.Game_RAddOtherCoinByAdvert = he;
class pe extends re {
constructor() {
super(...arguments);
this.gameData = new D.GameCellData();
}
}
i([ se(1, D.GameCellData) ], pe.prototype, "gameData", void 0);
o.Game_RAdminGetGameMsgByReviewId = pe;
class ue extends re {
constructor() {
super(...arguments);
this.gameData = new D.GameCellData();
}
}
i([ se(1, D.GameCellData) ], ue.prototype, "gameData", void 0);
o.Game_RAdminSetGameStatus = ue;
class me extends re {
constructor() {
super(...arguments);
this.errorCode = 0;
}
}
i([ se(0) ], me.prototype, "errorCode", void 0);
o.Game_RBindRole = me;
class fe extends re {
constructor() {
super(...arguments);
this.id = "";
this.tileConfs = new Array();
this.actorConfs = new Array();
this.deviceConfs = new Array();
this.propConfs = new Array();
this.weaponConfs = new Array();
this.bulletConfs = new Array();
this.bulletMap = new Map();
}
}
i([ se(0) ], fe.prototype, "id", void 0);
i([ se(2, te.TileConf) ], fe.prototype, "tileConfs", void 0);
i([ se(2, n.ActorConf) ], fe.prototype, "actorConfs", void 0);
i([ se(2, h.DeviceConf) ], fe.prototype, "deviceConfs", void 0);
i([ se(2, V.PropConf) ], fe.prototype, "propConfs", void 0);
i([ se(2, ae.WeaponConf) ], fe.prototype, "weaponConfs", void 0);
i([ se(2, r.BulletConf) ], fe.prototype, "bulletConfs", void 0);
i([ se(5) ], fe.prototype, "bulletMap", void 0);
o.Game_RBuyGoods = fe;
class ge extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], ge.prototype, "ids", void 0);
o.Game_RCancelCollectionGames = ge;
class ye extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], ye.prototype, "ids", void 0);
o.Game_RCancelCollectionGoods = ye;
class ve extends re {
constructor() {
super(...arguments);
this.code = 0;
this.iD = "";
}
}
i([ se(0) ], ve.prototype, "code", void 0);
i([ se(0) ], ve.prototype, "iD", void 0);
o.Game_RCancelCollectionTalk = ve;
class Ce extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], Ce.prototype, "upCnt", void 0);
o.Game_RCancelDownTalk = Ce;
class _e extends re {
constructor() {
super(...arguments);
this.followId = 0;
}
}
i([ se(0) ], _e.prototype, "followId", void 0);
o.Game_RCancelFollowUser = _e;
class Se extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Se.prototype, "thumbCnt", void 0);
o.Game_RCancelThumbGameComment = Se;
class Ie extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Ie.prototype, "ids", void 0);
o.Game_RCancelThumbGames = Ie;
class Ge extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Ge.prototype, "thumbCnt", void 0);
o.Game_RCancelThumbTalk = Ge;
class Te extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Te.prototype, "thumbCnt", void 0);
o.Game_RCancelThumbTalkComment = Te;
class be extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], be.prototype, "upCnt", void 0);
o.Game_RCancelUpTalk = be;
o.Game_RClearNewComment = class extends re {};
o.Game_RClearNewFans = class extends re {};
o.Game_RClearNewMsg = class extends re {};
o.Game_RClearReportGame = class extends re {};
o.Game_RClearReportGameComment = class extends re {};
o.Game_RClearReportGoods = class extends re {};
o.Game_RClearReportPlayer = class extends re {};
o.Game_RClearReportTalk = class extends re {};
o.Game_RClearReportTalkComment = class extends re {};
class Me extends re {
constructor() {
super(...arguments);
this.id = "";
this.clickCnt = 0;
}
}
i([ se(0) ], Me.prototype, "id", void 0);
i([ se(0) ], Me.prototype, "clickCnt", void 0);
o.Game_RClickRecommendsGames = Me;
class Pe extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Pe.prototype, "ids", void 0);
o.Game_RCollectionGames = Pe;
class De extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], De.prototype, "ids", void 0);
o.Game_RCollectionGGoods = De;
class we extends re {
constructor() {
super(...arguments);
this.code = 0;
this.iD = "";
}
}
i([ se(0) ], we.prototype, "code", void 0);
i([ se(0) ], we.prototype, "iD", void 0);
o.Game_RCollectionTalk = we;
class Be extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.comment = new w.GameComment();
}
}
i([ se(0) ], Be.prototype, "code", void 0);
i([ se(2) ], Be.prototype, "sensitiveWords", void 0);
i([ se(1, w.GameComment) ], Be.prototype, "comment", void 0);
o.Game_RCommentGame = Be;
class Re extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.comment = new Q.TalkComment();
}
}
i([ se(0) ], Re.prototype, "code", void 0);
i([ se(2) ], Re.prototype, "sensitiveWords", void 0);
i([ se(1, Q.TalkComment) ], Re.prototype, "comment", void 0);
o.Game_RCommentTalk = Re;
class xe extends re {
constructor() {
super(...arguments);
this.curCoin = 0;
}
}
i([ se(0) ], xe.prototype, "curCoin", void 0);
o.Game_RCostCoinInGame = xe;
class Le extends re {
constructor() {
super(...arguments);
this.errorCode = 0;
}
}
i([ se(0) ], Le.prototype, "errorCode", void 0);
o.Game_RCostCoinRecommendGame = Le;
class ke extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.talkData = new ee.TalkData();
}
}
i([ se(0) ], ke.prototype, "code", void 0);
i([ se(2) ], ke.prototype, "sensitiveWords", void 0);
i([ se(1, ee.TalkData) ], ke.prototype, "talkData", void 0);
o.Game_RCreateOfficialTalk = ke;
class Fe extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.talkData = new ee.TalkData();
}
}
i([ se(0) ], Fe.prototype, "code", void 0);
i([ se(2) ], Fe.prototype, "sensitiveWords", void 0);
i([ se(1, ee.TalkData) ], Fe.prototype, "talkData", void 0);
o.Game_RCreateTalk = Fe;
class Ne extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Ne.prototype, "id", void 0);
o.Game_RDealWithReportGameComment = Ne;
class Ae extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Ae.prototype, "id", void 0);
o.Game_RDealWithReportGoods = Ae;
class Oe extends re {
constructor() {
super(...arguments);
this.id = 0;
}
}
i([ se(0) ], Oe.prototype, "id", void 0);
o.Game_RDealWithReportPlayer = Oe;
class Ue extends re {
constructor() {
super(...arguments);
this.allStartupRecommendLeftCnt = 0;
this.allPastRecommendLeftCnt = 0;
this.allStartupHadRecommendCount = 0;
this.allPastHadRecommendCount = 0;
this.allHadRecommendCount = 0;
this.allNeedRecommendCount = 0;
this.lastRecommendScala = 0;
}
}
i([ se(0) ], Ue.prototype, "allStartupRecommendLeftCnt", void 0);
i([ se(0) ], Ue.prototype, "allPastRecommendLeftCnt", void 0);
i([ se(0) ], Ue.prototype, "allStartupHadRecommendCount", void 0);
i([ se(0) ], Ue.prototype, "allPastHadRecommendCount", void 0);
i([ se(0) ], Ue.prototype, "allHadRecommendCount", void 0);
i([ se(0) ], Ue.prototype, "allNeedRecommendCount", void 0);
i([ se(0) ], Ue.prototype, "lastRecommendScala", void 0);
o.Game_RDebugGetRecommendGameMsg = Ue;
o.Game_RDelActorGroups = class extends re {};
o.Game_RDelCustomColors = class extends re {};
o.Game_RDeleteGameRankScore = class extends re {};
class Ee extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Ee.prototype, "code", void 0);
o.Game_RDeleteTalk = Ee;
class je extends re {
constructor() {
super(...arguments);
this.commentId = "";
}
}
i([ se(0) ], je.prototype, "commentId", void 0);
o.Game_RDelGameComment = je;
class He extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], He.prototype, "ids", void 0);
o.Game_RDelGameRank = He;
class We extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], We.prototype, "ids", void 0);
o.Game_RDelGameShop = We;
class Ve extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Ve.prototype, "ids", void 0);
o.Game_RDelReleaseGameRank = Ve;
class Ke extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Ke.prototype, "ids", void 0);
o.Game_RDelRoleActorConf = Ke;
class Je extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Je.prototype, "ids", void 0);
o.Game_RDelRoleBulletConf = Je;
class Ze extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.confId = "";
}
}
i([ se(0) ], Ze.prototype, "gameId", void 0);
i([ se(0) ], Ze.prototype, "confId", void 0);
o.Game_RDelRoleCreativeConf = Ze;
class ze extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], ze.prototype, "ids", void 0);
o.Game_RDelRoleDeviceConf = ze;
class Xe extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Xe.prototype, "ids", void 0);
o.Game_RDelRoleGameData = Xe;
class qe extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], qe.prototype, "ids", void 0);
o.Game_RDelRolePropConf = qe;
class Ye extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Ye.prototype, "ids", void 0);
o.Game_RDelRoleTileConf = Ye;
class $e extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], $e.prototype, "ids", void 0);
o.Game_RDelRoleWeaponConf = $e;
class Qe extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Qe.prototype, "code", void 0);
o.Game_RDelTalkChosen = Qe;
class et extends re {
constructor() {
super(...arguments);
this.commentId = "";
}
}
i([ se(0) ], et.prototype, "commentId", void 0);
o.Game_RDelTalkComment = et;
class tt extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], tt.prototype, "code", void 0);
o.Game_RDelTalkCommentTop = tt;
class ot extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], ot.prototype, "code", void 0);
o.Game_RDelTalkTop = ot;
class it extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], it.prototype, "ids", void 0);
o.Game_RDelVariable = it;
class nt extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], nt.prototype, "ids", void 0);
o.Game_RDelWorldData = nt;
class at extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], at.prototype, "upCnt", void 0);
o.Game_RDownTalk = at;
class st extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], st.prototype, "upCnt", void 0);
o.Game_RDownTalkComment = st;
class rt extends re {
constructor() {
super(...arguments);
this.followId = 0;
}
}
i([ se(0) ], rt.prototype, "followId", void 0);
o.Game_RFollowUser = rt;
class lt extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.status = 0;
this.offReason = new H.OffReason();
}
}
i([ se(0) ], lt.prototype, "gameId", void 0);
i([ se(0) ], lt.prototype, "status", void 0);
i([ se(1, H.OffReason) ], lt.prototype, "offReason", void 0);
o.Game_RGameStatusNotify = lt;
class ct extends re {
constructor() {
super(...arguments);
this.newMsgCnt = 0;
this.newAggregateMsgCnt = 0;
this.aggregateMsgList = new Array();
}
}
i([ se(0) ], ct.prototype, "newMsgCnt", void 0);
i([ se(0) ], ct.prototype, "newAggregateMsgCnt", void 0);
i([ se(2, s.AggregateMsgData) ], ct.prototype, "aggregateMsgList", void 0);
o.Game_RGetAggregateMsgList = ct;
class dt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], dt.prototype, "gameDatas", void 0);
o.Game_RGetBeReportGameData = dt;
class ht extends re {
constructor() {
super(...arguments);
this.code = "";
}
}
i([ se(0) ], ht.prototype, "code", void 0);
o.Game_RGetBindRoleMsg = ht;
class pt extends re {
constructor() {
super(...arguments);
this.goodsIds = new Array();
this.recommendGoodsIds = new Array();
}
}
i([ se(2) ], pt.prototype, "goodsIds", void 0);
i([ se(2) ], pt.prototype, "recommendGoodsIds", void 0);
o.Game_RGetChosenGoodsIds = pt;
class ut extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], ut.prototype, "gameDatas", void 0);
o.Game_RGetCostCoinRecommendGames = ut;
class mt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
this.sourceReleaseGame = new g.GDReleaseGameData();
}
}
i([ se(2, g.GDReleaseGameData) ], mt.prototype, "gameDatas", void 0);
i([ se(1, g.GDReleaseGameData) ], mt.prototype, "sourceReleaseGame", void 0);
o.Game_RGetCreativeRank = mt;
class ft extends re {
constructor() {
super(...arguments);
this.newFansCnt = 0;
this.ids = new Array();
}
}
i([ se(0) ], ft.prototype, "newFansCnt", void 0);
i([ se(2) ], ft.prototype, "ids", void 0);
o.Game_RGetFans = ft;
class gt extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], gt.prototype, "ids", void 0);
o.Game_RGetFollow = gt;
class yt extends re {
constructor() {
super(...arguments);
this.authorMsg = new C.GDRoleSimpleMsg();
this.releaseGameData = new g.GDReleaseGameData();
this.gameTopComment = new m.GDGameTopComment();
this.creativeGameData = new c.CreativeGameData();
this.rankList = new Array();
}
}
i([ se(1, C.GDRoleSimpleMsg) ], yt.prototype, "authorMsg", void 0);
i([ se(1, g.GDReleaseGameData) ], yt.prototype, "releaseGameData", void 0);
i([ se(1, m.GDGameTopComment) ], yt.prototype, "gameTopComment", void 0);
i([ se(1, c.CreativeGameData) ], yt.prototype, "creativeGameData", void 0);
i([ se(2, x.GameGiftRankScoreInfo) ], yt.prototype, "rankList", void 0);
o.Game_RGetGameDetail = yt;
class vt extends re {
constructor() {
super(...arguments);
this.gameIdList = new Array();
}
}
i([ se(2) ], vt.prototype, "gameIdList", void 0);
o.Game_RGetGameIdListByGameTag = vt;
class Ct extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, L.GameRankConf) ], Ct.prototype, "datas", void 0);
o.Game_RGetGameRank = Ct;
class _t extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, k.GameShopConf) ], _t.prototype, "datas", void 0);
o.Game_RGetGameShop = _t;
class St extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], St.prototype, "ids", void 0);
o.Game_RGetGameShopIds = St;
class It extends re {
constructor() {
super(...arguments);
this.cfg = new p.DynamicGameGift();
}
}
i([ se(1, p.DynamicGameGift) ], It.prototype, "cfg", void 0);
o.Game_RGetGiftDynCfg = It;
class Gt extends re {
constructor() {
super(...arguments);
this.code = 0;
this.rankType = 0;
this.beginIndex = 0;
this.rankList = new Array();
}
}
i([ se(0) ], Gt.prototype, "code", void 0);
i([ se(0) ], Gt.prototype, "rankType", void 0);
i([ se(0) ], Gt.prototype, "beginIndex", void 0);
i([ se(2, R.GameGiftRank) ], Gt.prototype, "rankList", void 0);
o.Game_RGetGiftRankData = Gt;
class Tt extends re {
constructor() {
super(...arguments);
this.goodsIds = new Array();
this.recommendGoodsIds = new Array();
this.startMember = "";
}
}
i([ se(2) ], Tt.prototype, "goodsIds", void 0);
i([ se(2) ], Tt.prototype, "recommendGoodsIds", void 0);
i([ se(0) ], Tt.prototype, "startMember", void 0);
o.Game_RGetGoodsIds = Tt;
class bt extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
}
}
i([ se(2, f.GDGoodsInfo) ], bt.prototype, "goodsInfoList", void 0);
o.Game_RGetGoodsInfos = bt;
class Mt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], Mt.prototype, "gameDatas", void 0);
o.Game_RGetHomepageFollowUserGames = Mt;
class Pt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], Pt.prototype, "gameDatas", void 0);
o.Game_RGetHomepageGameData = Pt;
class Dt extends re {
constructor() {
super(...arguments);
this.startMember = "";
this.gameDatas = new Array();
}
}
i([ se(0) ], Dt.prototype, "startMember", void 0);
i([ se(2, D.GameCellData) ], Dt.prototype, "gameDatas", void 0);
o.Game_RGetHomepageNewGames = Dt;
class wt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], wt.prototype, "gameDatas", void 0);
o.Game_RGetHomepageRecommendsGames = wt;
class Bt extends re {
constructor() {
super(...arguments);
this.sensitiveImgMsgList = new Array();
}
}
i([ se(2, Z.RoleManualSensitiveImgMsg) ], Bt.prototype, "sensitiveImgMsgList", void 0);
o.Game_RGetManualReportSensitiveImg = Bt;
class Rt extends re {
constructor() {
super(...arguments);
this.newMsgCnt = 0;
this.msgList = new Array();
}
}
i([ se(0) ], Rt.prototype, "newMsgCnt", void 0);
i([ se(2, O.MsgData) ], Rt.prototype, "msgList", void 0);
o.Game_RGetMsgList = Rt;
class xt extends re {
constructor() {
super(...arguments);
this.needImageList = new Array();
}
}
i([ se(2) ], xt.prototype, "needImageList", void 0);
o.Game_RGetNeedReviewImageList = xt;
class Lt extends re {
constructor() {
super(...arguments);
this.startIndex = 0;
this.newCommentCnt = 0;
this.commentList = new Array();
}
}
i([ se(0) ], Lt.prototype, "startIndex", void 0);
i([ se(0) ], Lt.prototype, "newCommentCnt", void 0);
i([ se(2, w.GameComment) ], Lt.prototype, "commentList", void 0);
o.Game_RGetNewCommentList = Lt;
class kt extends re {
constructor() {
super(...arguments);
this.startIndex = 0;
this.newCommentCnt = 0;
this.commentList = new Array();
}
}
i([ se(0) ], kt.prototype, "startIndex", void 0);
i([ se(0) ], kt.prototype, "newCommentCnt", void 0);
i([ se(2, l.CommentMeData) ], kt.prototype, "commentList", void 0);
o.Game_RGetNewCommentListV2 = kt;
class Ft extends re {
constructor() {
super(...arguments);
this.gameIdList = new Array();
this.startMember = "";
}
}
i([ se(2) ], Ft.prototype, "gameIdList", void 0);
i([ se(0) ], Ft.prototype, "startMember", void 0);
o.Game_RGetNewGameIdList = Ft;
class Nt extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
this.startMember = "";
}
}
i([ se(2, D.GameCellData) ], Nt.prototype, "gameDatas", void 0);
i([ se(0) ], Nt.prototype, "startMember", void 0);
o.Game_RGetNewGameList = Nt;
class At extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
this.recommendGoods = new Array();
this.startMember = "";
}
}
i([ se(2, N.GoodsCellData) ], At.prototype, "goodsInfoList", void 0);
i([ se(2, N.GoodsCellData) ], At.prototype, "recommendGoods", void 0);
i([ se(0) ], At.prototype, "startMember", void 0);
o.Game_RGetNewGoods = At;
class Ot extends re {
constructor() {
super(...arguments);
this.dynamicConfig = {};
}
}
i([ se(0) ], Ot.prototype, "dynamicConfig", void 0);
o.Game_RGetOneDynamicConfig = Ot;
class Ut extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
}
}
i([ se(2, f.GDGoodsInfo) ], Ut.prototype, "goodsInfoList", void 0);
o.Game_RGetOwnGoodsInfos = Ut;
class Et extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, F.GameStatisticsData) ], Et.prototype, "gameDatas", void 0);
o.Game_RGetPlayGameStatistics = Et;
class jt extends re {
constructor() {
super(...arguments);
this.recommendList = new Array();
}
}
i([ se(2, W.PlatformRecommendData) ], jt.prototype, "recommendList", void 0);
o.Game_RGetRecommendGameIdList = jt;
class Ht extends re {
constructor() {
super(...arguments);
this.recommendList = new Array();
}
}
i([ se(2, W.PlatformRecommendData) ], Ht.prototype, "recommendList", void 0);
o.Game_RGetRecommendGoodsIdList = Ht;
class Wt extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, K.ReleaseGameGameRank) ], Wt.prototype, "datas", void 0);
o.Game_RGetReleaseGameRank = Wt;
class Vt extends re {
constructor() {
super(...arguments);
this.reportGameCommentList = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2, w.GameComment) ], Vt.prototype, "reportGameCommentList", void 0);
i([ se(5) ], Vt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportGameCommentList = Vt;
class Kt extends re {
constructor() {
super(...arguments);
this.reportGameIdList = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2) ], Kt.prototype, "reportGameIdList", void 0);
i([ se(5) ], Kt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportGameList = Kt;
class Jt extends re {
constructor() {
super(...arguments);
this.reportGoodsIdList = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2) ], Jt.prototype, "reportGoodsIdList", void 0);
i([ se(5) ], Jt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportGoodsList = Jt;
class Zt extends re {
constructor() {
super(...arguments);
this.reportPlayerIdList = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2) ], Zt.prototype, "reportPlayerIdList", void 0);
i([ se(5) ], Zt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportPlayerList = Zt;
class zt extends re {
constructor() {
super(...arguments);
this.sensitiveImgMsgList = new Array();
}
}
i([ se(2, X.RoleStatisticSensitiveImgMsg) ], zt.prototype, "sensitiveImgMsgList", void 0);
o.Game_RGetReportSensitiveImg = zt;
class Xt extends re {
constructor() {
super(...arguments);
this.comments = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2, Q.TalkComment) ], Xt.prototype, "comments", void 0);
i([ se(5) ], Xt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportTalkCommentList = Xt;
class qt extends re {
constructor() {
super(...arguments);
this.talkList = new Array();
this.reportScoreMap = new Map();
}
}
i([ se(2, ee.TalkData) ], qt.prototype, "talkList", void 0);
i([ se(5) ], qt.prototype, "reportScoreMap", void 0);
o.Game_RGetReportTalkList = qt;
class Yt extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, z.RoleReviewGameData) ], Yt.prototype, "datas", void 0);
o.Game_RGetReviewGameData = Yt;
class $t extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, n.ActorConf) ], $t.prototype, "datas", void 0);
o.Game_RGetRoleActorConf = $t;
class Qt extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Qt.prototype, "ids", void 0);
o.Game_RGetRoleActorIds = Qt;
class eo extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, r.BulletConf) ], eo.prototype, "datas", void 0);
o.Game_RGetRoleBulletConf = eo;
class to extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], to.prototype, "ids", void 0);
o.Game_RGetRoleBulletIds = to;
class oo extends re {
constructor() {
super(...arguments);
this.confMap = new Map();
}
}
i([ se(5) ], oo.prototype, "confMap", void 0);
o.Game_RGetRoleCreativeConf = oo;
class io extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, h.DeviceConf) ], io.prototype, "datas", void 0);
o.Game_RGetRoleDeviceConf = io;
class no extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], no.prototype, "ids", void 0);
o.Game_RGetRoleDeviceIds = no;
class ao extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, B.GameData) ], ao.prototype, "datas", void 0);
o.Game_RGetRoleGameData = ao;
class so extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], so.prototype, "ids", void 0);
o.Game_RGetRoleGameIds = so;
class ro extends re {
constructor() {
super(...arguments);
this.code = 0;
this.score = 0;
this.beginIndex = 0;
this.rankList = new Array();
this.checkerInfo = new x.GameGiftRankScoreInfo();
}
}
i([ se(0) ], ro.prototype, "code", void 0);
i([ se(0) ], ro.prototype, "score", void 0);
i([ se(0) ], ro.prototype, "beginIndex", void 0);
i([ se(2, x.GameGiftRankScoreInfo) ], ro.prototype, "rankList", void 0);
i([ se(1, x.GameGiftRankScoreInfo) ], ro.prototype, "checkerInfo", void 0);
o.Game_RGetRoleGiftRankData = ro;
class lo extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, V.PropConf) ], lo.prototype, "datas", void 0);
o.Game_RGetRolePropConf = lo;
class co extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], co.prototype, "ids", void 0);
o.Game_RGetRolePropIds = co;
class ho extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, te.TileConf) ], ho.prototype, "datas", void 0);
o.Game_RGetRoleTileConf = ho;
class po extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], po.prototype, "ids", void 0);
o.Game_RGetRoleTileIds = po;
class uo extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, ae.WeaponConf) ], uo.prototype, "datas", void 0);
o.Game_RGetRoleWeaponConf = uo;
class mo extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], mo.prototype, "ids", void 0);
o.Game_RGetRoleWeaponIds = mo;
class fo extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
}
}
i([ se(2, N.GoodsCellData) ], fo.prototype, "goodsInfoList", void 0);
o.Game_RGetSimpleGoods = fo;
class go extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, g.GDReleaseGameData) ], go.prototype, "gameDatas", void 0);
o.Game_RGetSourceCreativeGameRank = go;
class yo extends re {
constructor() {
super(...arguments);
this.gameCommentMap = new Map();
}
}
i([ se(5) ], yo.prototype, "gameCommentMap", void 0);
o.Game_RGetThumbGameComment = yo;
class vo extends re {
constructor() {
super(...arguments);
this.thumbMap = new Map();
}
}
i([ se(5) ], vo.prototype, "thumbMap", void 0);
o.Game_RGetThumbTalkComment = vo;
class Co extends re {
constructor() {
super(...arguments);
this.creditScore = 0;
this.creditScoreRecoverProcess = 0;
this.userCreditMsgList = new Array();
}
}
i([ se(0) ], Co.prototype, "creditScore", void 0);
i([ se(0) ], Co.prototype, "creditScoreRecoverProcess", void 0);
i([ se(2, oe.UserCreditMsg) ], Co.prototype, "userCreditMsgList", void 0);
o.Game_RGetUserCreditMsg = Co;
class _o extends re {
constructor() {
super(...arguments);
this.userDetailMsg = new ie.UserDetailMsg();
}
}
i([ se(1, ie.UserDetailMsg) ], _o.prototype, "userDetailMsg", void 0);
o.Game_RGetUserDetailMsg = _o;
class So extends re {
constructor() {
super(...arguments);
this.userSimpleMsgList = new Array();
}
}
i([ se(2, ne.UserSimpleMsg) ], So.prototype, "userSimpleMsgList", void 0);
o.Game_RGetUserSimpleMsg = So;
class Io extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, M.GDVariable) ], Io.prototype, "datas", void 0);
o.Game_RGetVariable = Io;
class Go extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Go.prototype, "ids", void 0);
o.Game_RGetVariableIds = Go;
class To extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, P.GDWorldData) ], To.prototype, "datas", void 0);
o.Game_RGetWorldData = To;
class bo extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], bo.prototype, "ids", void 0);
o.Game_RGetWorldDataIds = bo;
class Mo extends re {
constructor() {
super(...arguments);
this.errorCode = 0;
this.user = new b.GDUser();
}
}
i([ se(0) ], Mo.prototype, "errorCode", void 0);
i([ se(1, b.GDUser) ], Mo.prototype, "user", void 0);
o.Game_RGMBindRole = Mo;
class Po extends re {
constructor() {
super(...arguments);
this.coin = 0;
}
}
i([ se(0) ], Po.prototype, "coin", void 0);
o.Game_RGMIncOtherCoin = Po;
class Do extends re {
constructor() {
super(...arguments);
this.errorCode = 0;
this.user = new b.GDUser();
}
}
i([ se(0) ], Do.prototype, "errorCode", void 0);
i([ se(1, b.GDUser) ], Do.prototype, "user", void 0);
o.Game_RGMRevokeBindRole = Do;
class wo extends re {
constructor() {
super(...arguments);
this.code = 0;
this.gameID = "";
}
}
i([ se(0) ], wo.prototype, "code", void 0);
i([ se(0) ], wo.prototype, "gameID", void 0);
o.Game_RGMSetGameTage = wo;
class Bo extends re {
constructor() {
super(...arguments);
this.goodsId = "";
this.status = 0;
this.offReason = new H.OffReason();
}
}
i([ se(0) ], Bo.prototype, "goodsId", void 0);
i([ se(0) ], Bo.prototype, "status", void 0);
i([ se(1, H.OffReason) ], Bo.prototype, "offReason", void 0);
o.Game_RGoodsStatusNotify = Bo;
class Ro extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Ro.prototype, "ids", void 0);
o.Game_RHurryGames = Ro;
class xo extends re {
constructor() {
super(...arguments);
this.playerId = 0;
this.incScore = 0;
}
}
i([ se(0) ], xo.prototype, "playerId", void 0);
i([ se(0) ], xo.prototype, "incScore", void 0);
o.Game_RIncCreditScore = xo;
class Lo extends re {
constructor() {
super(...arguments);
this.comment = new w.GameComment();
}
}
i([ se(1, w.GameComment) ], Lo.prototype, "comment", void 0);
o.Game_RLoadFirstLevelGameComment = Lo;
class ko extends re {
constructor() {
super(...arguments);
this.comment = new Q.TalkComment();
}
}
i([ se(1, Q.TalkComment) ], ko.prototype, "comment", void 0);
o.Game_RLoadFirstLevelTalkComment = ko;
class Fo extends re {
constructor() {
super(...arguments);
this.commentsCnt = 0;
this.commentsCntSum = 0;
this.comments = new Array();
}
}
i([ se(0) ], Fo.prototype, "commentsCnt", void 0);
i([ se(0) ], Fo.prototype, "commentsCntSum", void 0);
i([ se(2, w.GameComment) ], Fo.prototype, "comments", void 0);
o.Game_RLoadGameComment = Fo;
class No extends re {
constructor() {
super(...arguments);
this.comments = new Array();
}
}
i([ se(2, w.GameComment) ], No.prototype, "comments", void 0);
o.Game_RLoadGameSubComment = No;
class Ao extends re {
constructor() {
super(...arguments);
this.talkList = new Array();
}
}
i([ se(2, ee.TalkData) ], Ao.prototype, "talkList", void 0);
o.Game_RLoadOwnTalk = Ao;
class Oo extends re {
constructor() {
super(...arguments);
this.comments = new Array();
}
}
i([ se(2, Q.TalkComment) ], Oo.prototype, "comments", void 0);
o.Game_RLoadOwnTalkComment = Oo;
class Uo extends re {
constructor() {
super(...arguments);
this.startMember = "";
this.talkList = new Array();
}
}
i([ se(0) ], Uo.prototype, "startMember", void 0);
i([ se(2, ee.TalkData) ], Uo.prototype, "talkList", void 0);
o.Game_RLoadTalk = Uo;
class Eo extends re {
constructor() {
super(...arguments);
this.talkList = new Array();
}
}
i([ se(2, ee.TalkData) ], Eo.prototype, "talkList", void 0);
o.Game_RLoadTalkByIdList = Eo;
class jo extends re {
constructor() {
super(...arguments);
this.commentsCnt = 0;
this.commentsCntSum = 0;
this.comments = new Array();
}
}
i([ se(0) ], jo.prototype, "commentsCnt", void 0);
i([ se(0) ], jo.prototype, "commentsCntSum", void 0);
i([ se(2, Q.TalkComment) ], jo.prototype, "comments", void 0);
o.Game_RLoadTalkComment = jo;
class Ho extends re {
constructor() {
super(...arguments);
this.talkData = new ee.TalkData();
}
}
i([ se(1, ee.TalkData) ], Ho.prototype, "talkData", void 0);
o.Game_RLoadTalkDetail = Ho;
class Wo extends re {
constructor() {
super(...arguments);
this.comments = new Array();
}
}
i([ se(2, Q.TalkComment) ], Wo.prototype, "comments", void 0);
o.Game_RLoadTalkSubComment = Wo;
class Vo extends re {
constructor() {
super(...arguments);
this.role = new y.GDRole();
this.dynamicConfig = new Map();
this.roleGameConf = new v.GDRoleGameConf();
this.offLineChangeMsg = new j.OffLineChangeMsg();
this.saleSummarys = new Array();
this.gameSaleSummarys = new Array();
this.adSummarys = new Array();
this.rebornSummarys = new Array();
this.unlockGameRewards = new Array();
this.unlockGoodsRewards = new Array();
this.gameSlotUnlockLvls = new Array();
this.goodsSlotUnlockLvls = new Array();
this.hotGameIdList = new Array();
this.newGameDatas = new Array();
this.followGameDatas = new Array();
this.newMsgCnt = 0;
this.newAggregateMsgCnt = 0;
this.newFansCnt = 0;
this.newCommentCnt = 0;
this.canObtainTTCoin = !1;
this.customActorGroups = new Array();
this.addCoinByAdvertCnt = 0;
this.addCoinByAdvertLimit = 0;
this.addCoinByAdvertReset = 0;
this.collectionGoods = new Array();
this.giftCfgVersion = "";
}
}
i([ se(1, y.GDRole) ], Vo.prototype, "role", void 0);
i([ se(5) ], Vo.prototype, "dynamicConfig", void 0);
i([ se(1, v.GDRoleGameConf) ], Vo.prototype, "roleGameConf", void 0);
i([ se(1, j.OffLineChangeMsg) ], Vo.prototype, "offLineChangeMsg", void 0);
i([ se(2, q.SaleSummary) ], Vo.prototype, "saleSummarys", void 0);
i([ se(2, q.SaleSummary) ], Vo.prototype, "gameSaleSummarys", void 0);
i([ se(2, q.SaleSummary) ], Vo.prototype, "adSummarys", void 0);
i([ se(2, q.SaleSummary) ], Vo.prototype, "rebornSummarys", void 0);
i([ se(2) ], Vo.prototype, "unlockGameRewards", void 0);
i([ se(2) ], Vo.prototype, "unlockGoodsRewards", void 0);
i([ se(2) ], Vo.prototype, "gameSlotUnlockLvls", void 0);
i([ se(2) ], Vo.prototype, "goodsSlotUnlockLvls", void 0);
i([ se(2) ], Vo.prototype, "hotGameIdList", void 0);
i([ se(2, D.GameCellData) ], Vo.prototype, "newGameDatas", void 0);
i([ se(2, D.GameCellData) ], Vo.prototype, "followGameDatas", void 0);
i([ se(0) ], Vo.prototype, "newMsgCnt", void 0);
i([ se(0) ], Vo.prototype, "newAggregateMsgCnt", void 0);
i([ se(0) ], Vo.prototype, "newFansCnt", void 0);
i([ se(0) ], Vo.prototype, "newCommentCnt", void 0);
i([ se(0) ], Vo.prototype, "canObtainTTCoin", void 0);
i([ se(2, a.ActorGroupData) ], Vo.prototype, "customActorGroups", void 0);
i([ se(0) ], Vo.prototype, "addCoinByAdvertCnt", void 0);
i([ se(0) ], Vo.prototype, "addCoinByAdvertLimit", void 0);
i([ se(0) ], Vo.prototype, "addCoinByAdvertReset", void 0);
i([ se(2) ], Vo.prototype, "collectionGoods", void 0);
i([ se(0) ], Vo.prototype, "giftCfgVersion", void 0);
o.Game_RLogin = Vo;
class Ko extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.talkData = new ee.TalkData();
}
}
i([ se(0) ], Ko.prototype, "code", void 0);
i([ se(2) ], Ko.prototype, "sensitiveWords", void 0);
i([ se(1, ee.TalkData) ], Ko.prototype, "talkData", void 0);
o.Game_RModifyOfficialTalk = Ko;
class Jo extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.talkData = new ee.TalkData();
}
}
i([ se(0) ], Jo.prototype, "code", void 0);
i([ se(2) ], Jo.prototype, "sensitiveWords", void 0);
i([ se(1, ee.TalkData) ], Jo.prototype, "talkData", void 0);
o.Game_RModifyTalk = Jo;
class Zo extends re {
constructor() {
super(...arguments);
this.code = 0;
this.comment = new Q.TalkComment();
}
}
i([ se(0) ], Zo.prototype, "code", void 0);
i([ se(1, Q.TalkComment) ], Zo.prototype, "comment", void 0);
o.Game_RModifyTalkComment = Zo;
class zo extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
}
}
i([ se(2, N.GoodsCellData) ], zo.prototype, "goodsInfoList", void 0);
o.Game_RNewSearchGoods = zo;
class Xo extends re {
constructor() {
super(...arguments);
this.coin = 0;
}
}
i([ se(0) ], Xo.prototype, "coin", void 0);
o.Game_RObtainTTCoin0319 = Xo;
class qo extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], qo.prototype, "id", void 0);
o.Game_ROffGame = qo;
class Yo extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Yo.prototype, "id", void 0);
o.Game_ROffGoods = Yo;
class $o extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], $o.prototype, "code", void 0);
o.Game_ROfficialDeleteTalk = $o;
class Qo extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Qo.prototype, "id", void 0);
o.Game_ROwnOffGame = Qo;
class ei extends re {
constructor() {
super(...arguments);
this.ids = new Array();
this.playCntList = new Array();
}
}
i([ se(2) ], ei.prototype, "ids", void 0);
i([ se(2) ], ei.prototype, "playCntList", void 0);
o.Game_RPlayGames = ei;
o.Game_RPlayGameStatistics = class extends re {};
class ti extends re {
constructor() {
super(...arguments);
this.id = "";
this.code = 0;
this.sensitiveWords = new Array();
}
}
i([ se(0) ], ti.prototype, "id", void 0);
i([ se(0) ], ti.prototype, "code", void 0);
i([ se(2) ], ti.prototype, "sensitiveWords", void 0);
o.Game_RPublishGame = ti;
class oi extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
this.comment = new Q.TalkComment();
}
}
i([ se(0) ], oi.prototype, "code", void 0);
i([ se(2) ], oi.prototype, "sensitiveWords", void 0);
i([ se(1, Q.TalkComment) ], oi.prototype, "comment", void 0);
o.Game_RReplyTalkComment = oi;
o.Game_RReportBugMsg = class extends re {};
class ii extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], ii.prototype, "id", void 0);
o.Game_RReportGame = ii;
o.Game_RReportGameClick = class extends re {};
class ni extends re {
constructor() {
super(...arguments);
this.reportCnt = 0;
}
}
i([ se(0) ], ni.prototype, "reportCnt", void 0);
o.Game_RReportGameComment = ni;
o.Game_RReportGameShow = class extends re {};
class ai extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], ai.prototype, "id", void 0);
o.Game_RReportGoods = ai;
o.Game_RReportGoodsClick = class extends re {};
o.Game_RReportGoodsShow = class extends re {};
class si extends re {
constructor() {
super(...arguments);
this.id = 0;
}
}
i([ se(0) ], si.prototype, "id", void 0);
o.Game_RReportPlayer = si;
class ri extends re {
constructor() {
super(...arguments);
this.reportCnt = 0;
}
}
i([ se(0) ], ri.prototype, "reportCnt", void 0);
o.Game_RReportTalk = ri;
class li extends re {
constructor() {
super(...arguments);
this.reportCnt = 0;
}
}
i([ se(0) ], li.prototype, "reportCnt", void 0);
o.Game_RReportTalkComment = li;
o.Game_RResetBannerGames = class extends re {};
o.Game_RResetChosenGames = class extends re {};
o.Game_RResetChosenGoods = class extends re {};
class ci extends re {
constructor() {
super(...arguments);
this.datas = new Array();
}
}
i([ se(2, z.RoleReviewGameData) ], ci.prototype, "datas", void 0);
o.Game_RReviewGame = ci;
class di extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], di.prototype, "id", void 0);
o.Game_RRevokeReportGame = di;
class hi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], hi.prototype, "id", void 0);
o.Game_RRevokeReportGameComment = hi;
class pi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], pi.prototype, "id", void 0);
o.Game_RRevokeReportGoods = pi;
class ui extends re {
constructor() {
super(...arguments);
this.id = 0;
}
}
i([ se(0) ], ui.prototype, "id", void 0);
o.Game_RRevokeReportPlayer = ui;
class mi extends re {
constructor() {
super(...arguments);
this.userImg = "";
this.status = 0;
this.offReason = new A.ImageOffReason();
}
}
i([ se(0) ], mi.prototype, "userImg", void 0);
i([ se(0) ], mi.prototype, "status", void 0);
i([ se(1, A.ImageOffReason) ], mi.prototype, "offReason", void 0);
o.Game_RRoleNewUserImgNotify = mi;
o.Game_RSaveActorGroups = class extends re {};
class fi extends re {
constructor() {
super(...arguments);
this.colorDatas = new Array();
}
}
i([ se(2, d.CustomColor) ], fi.prototype, "colorDatas", void 0);
o.Game_RSaveAllCustomColors = fi;
class gi extends re {
constructor() {
super(...arguments);
this.retVariableDatas = new Array();
}
}
i([ se(2, J.RetVariableData) ], gi.prototype, "retVariableDatas", void 0);
o.Game_RSaveAllVariable = gi;
class yi extends re {
constructor() {
super(...arguments);
this.colorDatas = new Array();
}
}
i([ se(2, d.CustomColor) ], yi.prototype, "colorDatas", void 0);
o.Game_RSaveCustomColors = yi;
class vi extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
}
}
i([ se(0) ], vi.prototype, "gameId", void 0);
i([ se(0) ], vi.prototype, "id", void 0);
o.Game_RSaveGameRank = vi;
class Ci extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
}
}
i([ se(0) ], Ci.prototype, "gameId", void 0);
i([ se(0) ], Ci.prototype, "id", void 0);
o.Game_RSaveGameShop = Ci;
o.Game_RSaveGuide = class extends re {};
class _i extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], _i.prototype, "id", void 0);
o.Game_RSaveRoleActorConf = _i;
class Si extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Si.prototype, "id", void 0);
o.Game_RSaveRoleBulletConf = Si;
class Ii extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.confId = "";
}
}
i([ se(0) ], Ii.prototype, "gameId", void 0);
i([ se(0) ], Ii.prototype, "confId", void 0);
o.Game_RSaveRoleCreativeConf = Ii;
class Gi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Gi.prototype, "id", void 0);
o.Game_RSaveRoleDeviceConf = Gi;
class Ti extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Ti.prototype, "id", void 0);
o.Game_RSaveRoleGameData = Ti;
class bi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], bi.prototype, "id", void 0);
o.Game_RSaveRolePropConf = bi;
class Mi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Mi.prototype, "id", void 0);
o.Game_RSaveRoleTileConf = Mi;
class Pi extends re {
constructor() {
super(...arguments);
this.id = "";
}
}
i([ se(0) ], Pi.prototype, "id", void 0);
o.Game_RSaveRoleWeaponConf = Pi;
class Di extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
}
}
i([ se(0) ], Di.prototype, "gameId", void 0);
i([ se(0) ], Di.prototype, "id", void 0);
o.Game_RSaveVariable = Di;
class wi extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
}
}
i([ se(0) ], wi.prototype, "gameId", void 0);
i([ se(0) ], wi.prototype, "id", void 0);
o.Game_RSaveWorldData = wi;
class Bi extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], Bi.prototype, "gameDatas", void 0);
o.Game_RSearchGame = Bi;
class Ri extends re {
constructor() {
super(...arguments);
this.gameDatas = new Array();
}
}
i([ se(2, D.GameCellData) ], Ri.prototype, "gameDatas", void 0);
o.Game_RSearchGameByTag = Ri;
class xi extends re {
constructor() {
super(...arguments);
this.goodsInfoList = new Array();
}
}
i([ se(2, f.GDGoodsInfo) ], xi.prototype, "goodsInfoList", void 0);
o.Game_RSearchGoods = xi;
class Li extends re {
constructor() {
super(...arguments);
this.roleDatas = new Array();
}
}
i([ se(2, ne.UserSimpleMsg) ], Li.prototype, "roleDatas", void 0);
o.Game_RSearchRole = Li;
class ki extends re {
constructor() {
super(...arguments);
this.talkList = new Array();
}
}
i([ se(2, ee.TalkData) ], ki.prototype, "talkList", void 0);
o.Game_RSearchTalk = ki;
class Fi extends re {
constructor() {
super(...arguments);
this.code = 0;
this.coin = 0;
}
}
i([ se(0) ], Fi.prototype, "code", void 0);
i([ se(0) ], Fi.prototype, "coin", void 0);
o.Game_RSendGift = Fi;
class Ni extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
}
}
i([ se(0) ], Ni.prototype, "code", void 0);
i([ se(2) ], Ni.prototype, "sensitiveWords", void 0);
o.Game_RSensitiveMsg = Ni;
class Ai extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Ai.prototype, "code", void 0);
o.Game_RSetTalkChosen = Ai;
class Oi extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Oi.prototype, "code", void 0);
o.Game_RSetTalkCommentTop = Oi;
class Ui extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Ui.prototype, "code", void 0);
o.Game_RSetTalkTop = Ui;
class Ei extends re {
constructor() {
super(...arguments);
this.talkCommentId = "";
this.status = 0;
this.offReason = new H.OffReason();
}
}
i([ se(0) ], Ei.prototype, "talkCommentId", void 0);
i([ se(0) ], Ei.prototype, "status", void 0);
i([ se(1, H.OffReason) ], Ei.prototype, "offReason", void 0);
o.Game_RTalkCommentStatusNotify = Ei;
class ji extends re {
constructor() {
super(...arguments);
this.talkId = "";
this.status = 0;
this.offReason = new H.OffReason();
}
}
i([ se(0) ], ji.prototype, "talkId", void 0);
i([ se(0) ], ji.prototype, "status", void 0);
i([ se(1, H.OffReason) ], ji.prototype, "offReason", void 0);
o.Game_RTalkStatusNotify = ji;
class Hi extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Hi.prototype, "thumbCnt", void 0);
o.Game_RThumbGameComment = Hi;
class Wi extends re {
constructor() {
super(...arguments);
this.ids = new Array();
}
}
i([ se(2) ], Wi.prototype, "ids", void 0);
o.Game_RThumbGames = Wi;
class Vi extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Vi.prototype, "thumbCnt", void 0);
o.Game_RThumbTalk = Vi;
class Ki extends re {
constructor() {
super(...arguments);
this.thumbCnt = 0;
}
}
i([ se(0) ], Ki.prototype, "thumbCnt", void 0);
o.Game_RThumbTalkComment = Ki;
class Ji extends re {
constructor() {
super(...arguments);
this.code = 0;
}
}
i([ se(0) ], Ji.prototype, "code", void 0);
o.Game_RUpdateUserImg = Ji;
class Zi extends re {
constructor() {
super(...arguments);
this.code = 0;
this.sensitiveWords = new Array();
}
}
i([ se(0) ], Zi.prototype, "code", void 0);
i([ se(2) ], Zi.prototype, "sensitiveWords", void 0);
o.Game_RUpdateUserInfo = Zi;
class zi extends re {
constructor() {
super(...arguments);
this.gameId = "";
this.scores = new Array();
}
}
i([ se(0) ], zi.prototype, "gameId", void 0);
i([ se(2, Y.ScoreInfo) ], zi.prototype, "scores", void 0);
o.Game_RUploadGameRankScore = zi;
class Xi extends re {
constructor() {
super(...arguments);
this.id = "";
this.code = 0;
this.sensitiveWords = new Array();
}
}
i([ se(0) ], Xi.prototype, "id", void 0);
i([ se(0) ], Xi.prototype, "code", void 0);
i([ se(2) ], Xi.prototype, "sensitiveWords", void 0);
o.Game_RUploadGoods = Xi;
class qi extends re {
constructor() {
super(...arguments);
this.isOK = !1;
this.sensitiveImageResult = new $.SensitiveImageResult();
this.url = "";
this.reason = "";
}
}
i([ se(0) ], qi.prototype, "isOK", void 0);
i([ se(1, $.SensitiveImageResult) ], qi.prototype, "sensitiveImageResult", void 0);
i([ se(0) ], qi.prototype, "url", void 0);
i([ se(0) ], qi.prototype, "reason", void 0);
o.Game_RUploadImage = qi;
class Yi extends re {
constructor() {
super(...arguments);
this.cdnUrl = "";
}
}
i([ se(0) ], Yi.prototype, "cdnUrl", void 0);
o.Game_RUploadReleaseGame = Yi;
class $i extends re {
constructor() {
super(...arguments);
this.score = 0;
}
}
i([ se(0) ], $i.prototype, "score", void 0);
o.Game_RUploadTakeExamScore = $i;
class Qi extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], Qi.prototype, "upCnt", void 0);
o.Game_RUpTalk = Qi;
class en extends re {
constructor() {
super(...arguments);
this.upCnt = 0;
}
}
i([ se(0) ], en.prototype, "upCnt", void 0);
o.Game_RUpTalkComment = en;
class tn extends re {
constructor() {
super(...arguments);
this.subGameList = new Array();
}
}
i([ se(2, T.GDSubGame) ], tn.prototype, "subGameList", void 0);
o.Game_SubGameListR = tn;
class on extends re {
constructor() {
super(...arguments);
this.ok = !1;
}
}
i([ se(0) ], on.prototype, "ok", void 0);
o.Login_CheckAccountR = on;
class nn extends re {
constructor() {
super(...arguments);
this.account = "";
this.oTP = "";
}
}
i([ se(0) ], nn.prototype, "account", void 0);
i([ se(0) ], nn.prototype, "oTP", void 0);
o.Login_CreateAccountR = nn;
class an extends re {
constructor() {
super(...arguments);
this.userToken = "";
this.uId = 0;
this.servers = new Array();
this.roles = new Array();
}
}
i([ se(0) ], an.prototype, "userToken", void 0);
i([ se(0) ], an.prototype, "uId", void 0);
i([ se(2, I.GDServer) ], an.prototype, "servers", void 0);
i([ se(2, G.GDServerRole) ], an.prototype, "roles", void 0);
o.Login_RAuthUser = an;
class sn extends re {
constructor() {
super(...arguments);
this.roleToken = "";
this.roleId = 0;
this.bindInfo = new u.GDBindRoleInfo();
this.bindPlatformUId = "";
this.ext = "";
}
}
i([ se(0) ], sn.prototype, "roleToken", void 0);
i([ se(0) ], sn.prototype, "roleId", void 0);
i([ se(1, u.GDBindRoleInfo) ], sn.prototype, "bindInfo", void 0);
i([ se(0) ], sn.prototype, "bindPlatformUId", void 0);
i([ se(0) ], sn.prototype, "ext", void 0);
o.Login_RAuthUserSingle = sn;
class rn extends re {
constructor() {
super(...arguments);
this.isForceUpdate = !1;
this.version = "";
this.url = "";
}
}
i([ se(0) ], rn.prototype, "isForceUpdate", void 0);
i([ se(0) ], rn.prototype, "version", void 0);
i([ se(0) ], rn.prototype, "url", void 0);
o.Login_RGetAppUpdateInfo = rn;
class ln extends re {
constructor() {
super(...arguments);
this.roleToken = "";
}
}
i([ se(0) ], ln.prototype, "roleToken", void 0);
o.Login_RSelectServer = ln;
class cn extends re {
constructor() {
super(...arguments);
this.convs = new Array();
}
}
i([ se(2, U.OIMConversation) ], cn.prototype, "convs", void 0);
o.OIM_GetConversationListResp = cn;
class dn extends re {
constructor() {
super(...arguments);
this.msgs = new Array();
}
}
i([ se(2, E.OIMMsg) ], dn.prototype, "msgs", void 0);
o.OIM_GetHistoryResp = dn;
class hn extends re {
constructor() {
super(...arguments);
this.msg = new E.OIMMsg();
}
}
i([ se(1, E.OIMMsg) ], hn.prototype, "msg", void 0);
o.OIMNewMsgNotify = hn;
o.RespNone = class extends re {};
class pn extends re {
constructor() {
super(...arguments);
this.role = new y.GDRole();
}
}
i([ se(1, y.GDRole) ], pn.prototype, "role", void 0);
o.RespSync = pn;
class un extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], un.prototype, "room", void 0);
o.Room_CustomChangeP = un;
class mn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], mn.prototype, "room", void 0);
o.Room_DismissP = mn;
class fn extends re {
constructor() {
super(...arguments);
this.roomId = "";
this.frame = 0;
this.msgs = new Array();
}
}
i([ se(0) ], fn.prototype, "roomId", void 0);
i([ se(0) ], fn.prototype, "frame", void 0);
i([ se(2, S.GDRoomFrameSyncMsg) ], fn.prototype, "msgs", void 0);
o.Room_FrameMsgP = fn;
class gn extends re {
constructor() {
super(...arguments);
this.roomId = "";
}
}
i([ se(0) ], gn.prototype, "roomId", void 0);
o.Room_FrameSyncStartP = gn;
class yn extends re {
constructor() {
super(...arguments);
this.roomId = "";
}
}
i([ se(0) ], yn.prototype, "roomId", void 0);
o.Room_FrameSyncStopP = yn;
class vn extends re {
constructor() {
super(...arguments);
this.roomList = new Array();
}
}
i([ se(2, _.GDRoom) ], vn.prototype, "roomList", void 0);
o.Room_ListR = vn;
class Cn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Cn.prototype, "room", void 0);
o.Room_LockP = Cn;
class _n extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], _n.prototype, "room", void 0);
o.Room_MemberGroupChangeP = _n;
class Sn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
this.roleId = 0;
}
}
i([ se(1, _.GDRoom) ], Sn.prototype, "room", void 0);
i([ se(0) ], Sn.prototype, "roleId", void 0);
o.Room_MemberJoinP = Sn;
class In extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
this.roleId = 0;
}
}
i([ se(1, _.GDRoom) ], In.prototype, "room", void 0);
i([ se(0) ], In.prototype, "roleId", void 0);
o.Room_MemberLeaveP = In;
class Gn extends re {
constructor() {
super(...arguments);
this.roomId = "";
this.roleId = 0;
this.msg = {};
}
}
i([ se(0) ], Gn.prototype, "roomId", void 0);
i([ se(0) ], Gn.prototype, "roleId", void 0);
i([ se(0) ], Gn.prototype, "msg", void 0);
o.Room_MsgP = Gn;
class Tn extends re {
constructor() {
super(...arguments);
this.roomId = "";
}
}
i([ se(0) ], Tn.prototype, "roomId", void 0);
o.Room_PingR = Tn;
class bn extends re {
constructor() {
super(...arguments);
this.userToken = "";
this.uId = 0;
this.servers = new Array();
this.roles = new Array();
}
}
i([ se(0) ], bn.prototype, "userToken", void 0);
i([ se(0) ], bn.prototype, "uId", void 0);
i([ se(2, I.GDServer) ], bn.prototype, "servers", void 0);
i([ se(2, G.GDServerRole) ], bn.prototype, "roles", void 0);
o.Room_REnter = bn;
class Mn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Mn.prototype, "room", void 0);
o.Room_Resp = Mn;
class Pn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Pn.prototype, "room", void 0);
o.Room_StartFailP = Pn;
class Dn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Dn.prototype, "room", void 0);
o.Room_StartingP = Dn;
class wn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], wn.prototype, "room", void 0);
o.Room_StartP = wn;
class Bn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Bn.prototype, "room", void 0);
o.Room_StopP = Bn;
class Rn extends re {
constructor() {
super(...arguments);
this.room = new _.GDRoom();
}
}
i([ se(1, _.GDRoom) ], Rn.prototype, "room", void 0);
o.Room_UnlockP = Rn;
cc._RF.pop();
}, {
"../data/data": "data"
} ],
dataexsplitter: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "d05bcNM5eNHwrAQ48hkmaMs", "dataexsplitter");
Object.defineProperty(o, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
data: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "2b2fb9gKIVNgavqcBZfbC4I", "data");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.GameRankSortType = o.GameRankCycleType = o.GameGiftRank = o.GameGiftRankScoreInfo = o.GiftData = o.GameData = o.OffReason = o.ImageOffReason = o.GameStatus = o.GameComment = o.GameCellData = o.ESCacheData = o.EMTeamState = o.EMServerStatus = o.EMServerBusyStatus = o.EMRoomType = o.EMRoomState = o.EMRoomMsgTarget = o.DynamicGameGift = o.DynamicGameGiftCfg = o.DeviceConf = o.CustomColor = o.CreativeGameSortType = o.CreativeGameScore = o.CreativeGameData = o.CreativeConfType = o.CreativeAttrType = o.CommentMeData = o.CommentType = o.CombImageReviewMap = o.SensitiveImageResult = o.SensitiveScore = o.ManualReview = o.ReviewCode = o.ColorData = o.CDAccountLoginInfo = o.CDAccountLoginExt = o.BulletConf = o.BugMsg = o.BeBindInfo = o.GDBindType = o.AnalyticsGoodsData = o.AnalyticsGameData = o.AggregateMsgData = o.MsgType = o.AggregateUserInfo = o.AddCoinByShareType = o.ActorGroupData = o.ActorGroupRefData = o.ActorConf = void 0;
o.ImageFileType = o.GoodsSortType = o.GoodsCellData = o.GiftRankActivity = o.GDWorldData = o.GDVariable = o.GDUser = o.GDSubGame = o.GDServerRole = o.GDServer = o.GDRoomFrameSyncMsg = o.GDRoom = o.GDRoleThumb = o.GDRoleSimpleMsg = o.GDRoleSaleMsg = o.SaleSummary = o.SaleGoodsType = o.GDRolePlayGame = o.GDRoleMsgList = o.MsgData = o.GDRoleGameConf = o.GDRoleFansData = o.GDRoleCountMsg = o.GDRoleCommentLikeMsg = o.GDRoleBugMsg = o.GDRole = o.UserCreditMsg = o.ManReviewStatus = o.GDUserInfo = o.GDReleaseGameData = o.GDMatch = o.GDTeam = o.GDRoomMember = o.GDGoodsInfo = o.GoodsType = o.GoodsStatus = o.GoodsContent = o.WeaponConf = o.TileConf = o.PropConf = o.GDGiftScoreInfo = o.GDGameTopComment = o.GDDynamicConfig = o.GDBindRoleInfo = o.GameTageInfo = o.GameTagaData = o.GameStatisticsData = o.GameShopConf = o.GameRankScoreInfo = o.GameRankConf = void 0;
o.VariableData = o.UserSimpleMsg = o.UserDetailMsg = o.TalkTopComment = o.TalkSortType = o.TalkData = o.TalkType = o.TalkComment = o.SecondaryGameData = o.ScoreInfo = o.RoleTalkMsg = o.RoleTalkCommentMsg = o.RoleStatisticSensitiveImgMsg = o.RoleReviewGameData = o.RoleManualSensitiveImgMsg = o.RoleCreativeWorldLayout = o.RoleCreativeConf = o.RoleActivity = o.ReviewStatus = o.ReviewResult = o.ReviewResultType = o.ReviewInfo = o.RetVariableData = o.ReleaseGameGameRank = o.PlatformRecommend = o.PlatformRecommendData = o.OIMMsg = o.OIMConversation = o.OIMUser = o.OIMConversationType = o.OIMContentType = o.OffLineChangeMsg = o.MsgReviewInfo = o.SensitiveMsgResult = o.SensitiveMsgData = o.SensitiveMsgDetails = o.Score = o.ImageSize = o.ImageReviewInfo = o.ReviewType = void 0;
const n = orange.type, a = orange.DataBase;
class s extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], s.prototype, "id", void 0);
i([ n(0) ], s.prototype, "goodsUId", void 0);
i([ n(0) ], s.prototype, "conf", void 0);
o.ActorConf = s;
class r extends a {
constructor() {
super(...arguments);
this.confType = 0;
this.confId = "";
}
}
i([ n(0) ], r.prototype, "confType", void 0);
i([ n(0) ], r.prototype, "confId", void 0);
o.ActorGroupRefData = r;
class l extends a {
constructor() {
super(...arguments);
this.groupName = "";
this.refDataList = new Array();
}
}
i([ n(0) ], l.prototype, "groupName", void 0);
i([ n(2, r) ], l.prototype, "refDataList", void 0);
o.ActorGroupData = l;
var c, d, h, p, u, m, f, g, y, v, C, _, S, I, G, T, b, M, P, D, w;
(function(e) {
e[e.game = 0] = "game";
e[e.draw = 1] = "draw";
})(o.AddCoinByShareType || (o.AddCoinByShareType = {}));
class B extends a {
constructor() {
super(...arguments);
this.playerId = 0;
this.userLevel = 0;
this.userName = "";
this.userImg = "";
this.stamp = 0;
}
}
i([ n(0) ], B.prototype, "playerId", void 0);
i([ n(0) ], B.prototype, "userLevel", void 0);
i([ n(0) ], B.prototype, "userName", void 0);
i([ n(0) ], B.prototype, "userImg", void 0);
i([ n(0) ], B.prototype, "stamp", void 0);
o.AggregateUserInfo = B;
(function(e) {
e[e.collectionGame = 0] = "collectionGame";
e[e.thumbGame = 1] = "thumbGame";
e[e.playGame = 2] = "playGame";
e[e.commentGame = 3] = "commentGame";
e[e.hurryGame = 4] = "hurryGame";
e[e.followYou = 5] = "followYou";
e[e.buyGoods = 6] = "buyGoods";
})(c = o.MsgType || (o.MsgType = {}));
class R extends a {
constructor() {
super(...arguments);
this.type = c.collectionGame;
this.lastStamp = 0;
this.gameId = "";
this.gameIcon = "";
this.goodsId = "";
this.goodsTextureName = "";
this.userInfoList = new Array();
}
}
i([ n(0) ], R.prototype, "type", void 0);
i([ n(0) ], R.prototype, "lastStamp", void 0);
i([ n(0) ], R.prototype, "gameId", void 0);
i([ n(0) ], R.prototype, "gameIcon", void 0);
i([ n(0) ], R.prototype, "goodsId", void 0);
i([ n(0) ], R.prototype, "goodsTextureName", void 0);
i([ n(2, B) ], R.prototype, "userInfoList", void 0);
o.AggregateMsgData = R;
class x extends a {
constructor() {
super(...arguments);
this.showId = "";
this.showType = "";
this.gameId = "";
this.st = "";
this.bk = "";
}
}
i([ n(0) ], x.prototype, "showId", void 0);
i([ n(0) ], x.prototype, "showType", void 0);
i([ n(0) ], x.prototype, "gameId", void 0);
i([ n(0) ], x.prototype, "st", void 0);
i([ n(0) ], x.prototype, "bk", void 0);
o.AnalyticsGameData = x;
class L extends a {
constructor() {
super(...arguments);
this.showId = "";
this.showType = "";
this.goodsId = "";
this.st = "";
this.bk = "";
}
}
i([ n(0) ], L.prototype, "showId", void 0);
i([ n(0) ], L.prototype, "showType", void 0);
i([ n(0) ], L.prototype, "goodsId", void 0);
i([ n(0) ], L.prototype, "st", void 0);
i([ n(0) ], L.prototype, "bk", void 0);
o.AnalyticsGoodsData = L;
(function(e) {
e.tikTok = "tt";
e.wechat = "wx";
e.qQ = "qq";
e.apple = "apple";
})(d = o.GDBindType || (o.GDBindType = {}));
class k extends a {
constructor() {
super(...arguments);
this.userKey = "";
this.roleId = 0;
this.bindIP = "";
this.bindType = d.tikTok;
this.bindCode = "";
this.bindTime = new Date(-621355968e5);
}
}
i([ n(0) ], k.prototype, "userKey", void 0);
i([ n(0) ], k.prototype, "roleId", void 0);
i([ n(0) ], k.prototype, "bindIP", void 0);
i([ n(0) ], k.prototype, "bindType", void 0);
i([ n(0) ], k.prototype, "bindCode", void 0);
i([ n(4) ], k.prototype, "bindTime", void 0);
o.BeBindInfo = k;
class F extends a {
constructor() {
super(...arguments);
this.type = "";
this.msg = "";
this.stamp = 0;
}
}
i([ n(0) ], F.prototype, "type", void 0);
i([ n(0) ], F.prototype, "msg", void 0);
i([ n(0) ], F.prototype, "stamp", void 0);
o.BugMsg = F;
class N extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], N.prototype, "id", void 0);
i([ n(0) ], N.prototype, "goodsUId", void 0);
i([ n(0) ], N.prototype, "conf", void 0);
o.BulletConf = N;
class A extends a {
constructor() {
super(...arguments);
this.account = "";
this.oTP = "";
this.isSetPassword = !1;
}
}
i([ n(0) ], A.prototype, "account", void 0);
i([ n(0) ], A.prototype, "oTP", void 0);
i([ n(0) ], A.prototype, "isSetPassword", void 0);
o.CDAccountLoginExt = A;
class O extends a {
constructor() {
super(...arguments);
this.account = "";
this.oTP = "";
this.password = "";
}
}
i([ n(0) ], O.prototype, "account", void 0);
i([ n(0) ], O.prototype, "oTP", void 0);
i([ n(0) ], O.prototype, "password", void 0);
o.CDAccountLoginInfo = O;
class U extends a {
constructor() {
super(...arguments);
this.r = 0;
this.g = 0;
this.b = 0;
}
}
i([ n(0) ], U.prototype, "r", void 0);
i([ n(0) ], U.prototype, "g", void 0);
i([ n(0) ], U.prototype, "b", void 0);
o.ColorData = U;
(function(e) {
e[e.fail = 1] = "fail";
e[e.success = 2] = "success";
e[e.inReview = 5] = "inReview";
})(h = o.ReviewCode || (o.ReviewCode = {}));
class E extends a {
constructor() {
super(...arguments);
this.contentId = "";
this.content = "";
this.batchId = "";
}
}
i([ n(0) ], E.prototype, "contentId", void 0);
i([ n(0) ], E.prototype, "content", void 0);
i([ n(0) ], E.prototype, "batchId", void 0);
o.ManualReview = E;
class j extends a {
constructor() {
super(...arguments);
this.Ad = 0;
this.Normal = 0;
this.Sexy = 0;
this.Porn = 0;
this.Abuse = 0;
this.Polity = 0;
this.Terror = 0;
this.Anniversary_flag = 0;
this.Cartoon_leader = 0;
this.Sensitive_flag = 0;
this.Sensitive_text = 0;
this.Leader_recognition = 0;
this.Bloody = 0;
this.Fandongtaibiao = 0;
this.Plant_ppx = 0;
this.High_risk_social_event = 0;
this.High_risk_boom = 0;
this.High_risk_money = 0;
this.High_risk_terrorist_uniform = 0;
this.High_risk_sensitive_map = 0;
this.Great_hall = 0;
this.Cartoon_porn = 0;
this.Party_founding_memorial = 0;
}
}
i([ n(0) ], j.prototype, "Ad", void 0);
i([ n(0) ], j.prototype, "Normal", void 0);
i([ n(0) ], j.prototype, "Sexy", void 0);
i([ n(0) ], j.prototype, "Porn", void 0);
i([ n(0) ], j.prototype, "Abuse", void 0);
i([ n(0) ], j.prototype, "Polity", void 0);
i([ n(0) ], j.prototype, "Terror", void 0);
i([ n(0) ], j.prototype, "Anniversary_flag", void 0);
i([ n(0) ], j.prototype, "Cartoon_leader", void 0);
i([ n(0) ], j.prototype, "Sensitive_flag", void 0);
i([ n(0) ], j.prototype, "Sensitive_text", void 0);
i([ n(0) ], j.prototype, "Leader_recognition", void 0);
i([ n(0) ], j.prototype, "Bloody", void 0);
i([ n(0) ], j.prototype, "Fandongtaibiao", void 0);
i([ n(0) ], j.prototype, "Plant_ppx", void 0);
i([ n(0) ], j.prototype, "High_risk_social_event", void 0);
i([ n(0) ], j.prototype, "High_risk_boom", void 0);
i([ n(0) ], j.prototype, "High_risk_money", void 0);
i([ n(0) ], j.prototype, "High_risk_terrorist_uniform", void 0);
i([ n(0) ], j.prototype, "High_risk_sensitive_map", void 0);
i([ n(0) ], j.prototype, "Great_hall", void 0);
i([ n(0) ], j.prototype, "Cartoon_porn", void 0);
i([ n(0) ], j.prototype, "Party_founding_memorial", void 0);
o.SensitiveScore = j;
class H extends a {
constructor() {
super(...arguments);
this.result = 0;
this.source = "";
this.score = new j();
this.manualReview = new E();
}
}
i([ n(0) ], H.prototype, "result", void 0);
i([ n(0) ], H.prototype, "source", void 0);
i([ n(1, j) ], H.prototype, "score", void 0);
i([ n(1, E) ], H.prototype, "manualReview", void 0);
o.SensitiveImageResult = H;
class W extends a {
constructor() {
super(...arguments);
this.combImageUrl = "";
this.imageUrlList = new Array();
this.imageUrlHashList = new Array();
this.applyTime = new Date(-621355968e5);
this.reviewCode = h.fail;
this.reviewTime = new Date(-621355968e5);
this.sensitiveImageResult = new H();
}
}
i([ n(0) ], W.prototype, "combImageUrl", void 0);
i([ n(2) ], W.prototype, "imageUrlList", void 0);
i([ n(2) ], W.prototype, "imageUrlHashList", void 0);
i([ n(4) ], W.prototype, "applyTime", void 0);
i([ n(0) ], W.prototype, "reviewCode", void 0);
i([ n(4) ], W.prototype, "reviewTime", void 0);
i([ n(1, H) ], W.prototype, "sensitiveImageResult", void 0);
o.CombImageReviewMap = W;
(function(e) {
e[e.gameType = 0] = "gameType";
e[e.talkType = 1] = "talkType";
})(p = o.CommentType || (o.CommentType = {}));
class V extends a {
constructor() {
super(...arguments);
this.id = "";
this.commentId = "";
this.type = p.gameType;
this.playerId = 0;
this.userLevel = 0;
this.userImg = "";
this.userName = "";
this.gameIcon = "";
this.content = {};
this.targetPlayerId = 0;
this.targetPlayerName = "";
this.stamp = 0;
this.thumbCnt = 0;
this.reportCnt = 0;
}
}
i([ n(0) ], V.prototype, "id", void 0);
i([ n(0) ], V.prototype, "commentId", void 0);
i([ n(0) ], V.prototype, "type", void 0);
i([ n(0) ], V.prototype, "playerId", void 0);
i([ n(0) ], V.prototype, "userLevel", void 0);
i([ n(0) ], V.prototype, "userImg", void 0);
i([ n(0) ], V.prototype, "userName", void 0);
i([ n(0) ], V.prototype, "gameIcon", void 0);
i([ n(0) ], V.prototype, "content", void 0);
i([ n(0) ], V.prototype, "targetPlayerId", void 0);
i([ n(0) ], V.prototype, "targetPlayerName", void 0);
i([ n(0) ], V.prototype, "stamp", void 0);
i([ n(0) ], V.prototype, "thumbCnt", void 0);
i([ n(0) ], V.prototype, "reportCnt", void 0);
o.CommentMeData = V;
(function(e) {
e.tile = "tileConfs";
e.actor = "actorConfs";
e.device = "deviceConfs";
e.prop = "propConfs";
e.weapon = "weaponConfs";
e.bullet = "bulletConfs";
e.shop = "shopConfs";
e.variable = "variableConfs";
})(o.CreativeAttrType || (o.CreativeAttrType = {}));
(function(e) {
e.tile = "tile";
e.actor = "actor";
e.device = "device";
e.prop = "prop";
e.weapon = "weapon";
e.bullet = "bullet";
e.shop = "shop";
e.rank = "rank";
e.variable = "variable";
})(o.CreativeConfType || (o.CreativeConfType = {}));
class K extends a {
constructor() {
super(...arguments);
this.id = "";
this.playerName = "";
this.name = "";
this.iconTextureName = "";
this.advert = "";
this.openData = {};
this.packUrl = "";
this.secondaryCnt = 0;
this.secondaryList = new Array();
this.lastPublishTime = 0;
}
}
i([ n(0) ], K.prototype, "id", void 0);
i([ n(0) ], K.prototype, "playerName", void 0);
i([ n(0) ], K.prototype, "name", void 0);
i([ n(0) ], K.prototype, "iconTextureName", void 0);
i([ n(0) ], K.prototype, "advert", void 0);
i([ n(0) ], K.prototype, "openData", void 0);
i([ n(0) ], K.prototype, "packUrl", void 0);
i([ n(0) ], K.prototype, "secondaryCnt", void 0);
i([ n(2) ], K.prototype, "secondaryList", void 0);
i([ n(0) ], K.prototype, "lastPublishTime", void 0);
o.CreativeGameData = K;
class J extends a {
constructor() {
super(...arguments);
this.gameUId = "";
this.score = 0;
}
}
i([ n(0) ], J.prototype, "gameUId", void 0);
i([ n(0) ], J.prototype, "score", void 0);
o.CreativeGameScore = J;
(function(e) {
e[e.comprehensive = 0] = "comprehensive";
e[e.creativeGameUpStampDesc = 1] = "creativeGameUpStampDesc";
})(o.CreativeGameSortType || (o.CreativeGameSortType = {}));
class Z extends a {
constructor() {
super(...arguments);
this.id = 0;
this.data = new U();
}
}
i([ n(0) ], Z.prototype, "id", void 0);
i([ n(1, U) ], Z.prototype, "data", void 0);
o.CustomColor = Z;
class z extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], z.prototype, "id", void 0);
i([ n(0) ], z.prototype, "goodsUId", void 0);
i([ n(0) ], z.prototype, "conf", void 0);
o.DeviceConf = z;
class X extends a {
constructor() {
super(...arguments);
this.id = 0;
this.exp = 0;
this.coin = 0;
this.iconUrl = "";
this.name = "";
this.intr = "";
}
}
i([ n(0) ], X.prototype, "id", void 0);
i([ n(0) ], X.prototype, "exp", void 0);
i([ n(0) ], X.prototype, "coin", void 0);
i([ n(0) ], X.prototype, "iconUrl", void 0);
i([ n(0) ], X.prototype, "name", void 0);
i([ n(0) ], X.prototype, "intr", void 0);
o.DynamicGameGiftCfg = X;
class q extends a {
constructor() {
super(...arguments);
this.version = "";
this.datas = new Map();
}
}
i([ n(0) ], q.prototype, "version", void 0);
i([ n(5, X) ], q.prototype, "datas", void 0);
o.DynamicGameGift = q;
(function(e) {
e[e.all = 0] = "all";
e[e.others = 1] = "others";
e[e.ids = 2] = "ids";
e[e.master = 3] = "master";
})(o.EMRoomMsgTarget || (o.EMRoomMsgTarget = {}));
(function(e) {
e.idle = "idle";
e.starting = "starting";
e.started = "started";
e.ended = "ended";
})(u = o.EMRoomState || (o.EMRoomState = {}));
(function(e) {
e.match = "match";
e.free = "free";
})(m = o.EMRoomType || (o.EMRoomType = {}));
(function(e) {
e[e.normal = 0] = "normal";
e[e.full = 1] = "full";
e[e.recommend = 2] = "recommend";
})(f = o.EMServerBusyStatus || (o.EMServerBusyStatus = {}));
(function(e) {
e[e.closed = 0] = "closed";
e[e.open = 1] = "open";
e[e.maintain = 2] = "maintain";
})(g = o.EMServerStatus || (o.EMServerStatus = {}));
(function(e) {
e.idle = "idle";
e.matching = "matching";
e.matchingBusy = "matchingBusy";
e.vS = "vs";
})(y = o.EMTeamState || (o.EMTeamState = {}));
class Y extends a {
constructor() {
super(...arguments);
this.id = "";
this.name = "";
}
}
i([ n(0) ], Y.prototype, "id", void 0);
i([ n(0) ], Y.prototype, "name", void 0);
o.ESCacheData = Y;
class $ extends a {
constructor() {
super(...arguments);
this.id = "";
this.iconTextureName = "";
this.name = "";
this.rank = 0;
this.thumbCnt = 0;
this.collectionCnt = 0;
this.playCnt = 0;
this.hurryCnt = 0;
this.advert = "";
this.openCreativeGame = !1;
this.lastPublishTime = 0;
}
}
i([ n(0) ], $.prototype, "id", void 0);
i([ n(0) ], $.prototype, "iconTextureName", void 0);
i([ n(0) ], $.prototype, "name", void 0);
i([ n(0) ], $.prototype, "rank", void 0);
i([ n(0) ], $.prototype, "thumbCnt", void 0);
i([ n(0) ], $.prototype, "collectionCnt", void 0);
i([ n(0) ], $.prototype, "playCnt", void 0);
i([ n(0) ], $.prototype, "hurryCnt", void 0);
i([ n(0) ], $.prototype, "advert", void 0);
i([ n(0) ], $.prototype, "openCreativeGame", void 0);
i([ n(0) ], $.prototype, "lastPublishTime", void 0);
o.GameCellData = $;
class Q extends a {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
this.playerId = 0;
this.msg = "";
this.userLevel = 0;
this.userImg = "";
this.userName = "";
this.gameIcon = "";
this.targetPlayerId = 0;
this.targetPlayerName = "";
this.stamp = 0;
this.likeCnt = 0;
this.reportCnt = 0;
this.subCommentsCnt = 0;
this.commentIds = new Array();
this.openCnt = 0;
this.comments = new Array();
}
}
i([ n(0) ], Q.prototype, "gameId", void 0);
i([ n(0) ], Q.prototype, "id", void 0);
i([ n(0) ], Q.prototype, "playerId", void 0);
i([ n(0) ], Q.prototype, "msg", void 0);
i([ n(0) ], Q.prototype, "userLevel", void 0);
i([ n(0) ], Q.prototype, "userImg", void 0);
i([ n(0) ], Q.prototype, "userName", void 0);
i([ n(0) ], Q.prototype, "gameIcon", void 0);
i([ n(0) ], Q.prototype, "targetPlayerId", void 0);
i([ n(0) ], Q.prototype, "targetPlayerName", void 0);
i([ n(0) ], Q.prototype, "stamp", void 0);
i([ n(0) ], Q.prototype, "likeCnt", void 0);
i([ n(0) ], Q.prototype, "reportCnt", void 0);
i([ n(0) ], Q.prototype, "subCommentsCnt", void 0);
i([ n(2) ], Q.prototype, "commentIds", void 0);
i([ n(0) ], Q.prototype, "openCnt", void 0);
i([ n(2, Q) ], Q.prototype, "comments", void 0);
o.GameComment = Q;
(function(e) {
e[e.noPublish = 0] = "noPublish";
e[e.success = 1] = "success";
e[e.inReview = 2] = "inReview";
e[e.fail = 3] = "fail";
e[e.off = 4] = "off";
})(v = o.GameStatus || (o.GameStatus = {}));
class ee extends a {
constructor() {
super(...arguments);
this.imageUrl = "";
this.sensitiveImageResult = new H();
}
}
i([ n(0) ], ee.prototype, "imageUrl", void 0);
i([ n(1, H) ], ee.prototype, "sensitiveImageResult", void 0);
o.ImageOffReason = ee;
class te extends a {
constructor() {
super(...arguments);
this.images = new Array();
this.strs = new Array();
this.imageOffReasonList = new Array();
}
}
i([ n(2) ], te.prototype, "images", void 0);
i([ n(2) ], te.prototype, "strs", void 0);
i([ n(2, ee) ], te.prototype, "imageOffReasonList", void 0);
o.OffReason = te;
class oe extends a {
constructor() {
super(...arguments);
this.uId = "";
this.playerId = 0;
this.id = "";
this.thumbCnt = 0;
this.collectionCnt = 0;
this.playCnt = 0;
this.hurryCnt = 0;
this.worldIds = new Array();
this.variableIds = new Array();
this.gameShopIds = new Array();
this.gameRankIds = new Array();
this.name = "";
this.advert = "";
this.variableDatas = new Array();
this.data = {};
this.thawTime = 0;
this.isOldTangData = !1;
this.iconTextureName = "";
this.isOff = !1;
this.status = v.noPublish;
this.offReason = new te();
this.openCreativeGame = !1;
this.publishTimes = 0;
this.creativeSourceUId = "";
this.openData = {};
this.gameDataCdnUrl = "";
this.firstPublishTime = 0;
this.lastPublishTime = 0;
}
}
i([ n(0) ], oe.prototype, "uId", void 0);
i([ n(0) ], oe.prototype, "playerId", void 0);
i([ n(0) ], oe.prototype, "id", void 0);
i([ n(0) ], oe.prototype, "thumbCnt", void 0);
i([ n(0) ], oe.prototype, "collectionCnt", void 0);
i([ n(0) ], oe.prototype, "playCnt", void 0);
i([ n(0) ], oe.prototype, "hurryCnt", void 0);
i([ n(2) ], oe.prototype, "worldIds", void 0);
i([ n(2) ], oe.prototype, "variableIds", void 0);
i([ n(2) ], oe.prototype, "gameShopIds", void 0);
i([ n(2) ], oe.prototype, "gameRankIds", void 0);
i([ n(0) ], oe.prototype, "name", void 0);
i([ n(0) ], oe.prototype, "advert", void 0);
i([ n(2) ], oe.prototype, "variableDatas", void 0);
i([ n(0) ], oe.prototype, "data", void 0);
i([ n(0) ], oe.prototype, "thawTime", void 0);
i([ n(0) ], oe.prototype, "isOldTangData", void 0);
i([ n(0) ], oe.prototype, "iconTextureName", void 0);
i([ n(0) ], oe.prototype, "isOff", void 0);
i([ n(0) ], oe.prototype, "status", void 0);
i([ n(1, te) ], oe.prototype, "offReason", void 0);
i([ n(0) ], oe.prototype, "openCreativeGame", void 0);
i([ n(0) ], oe.prototype, "publishTimes", void 0);
i([ n(0) ], oe.prototype, "creativeSourceUId", void 0);
i([ n(0) ], oe.prototype, "openData", void 0);
i([ n(0) ], oe.prototype, "gameDataCdnUrl", void 0);
i([ n(0) ], oe.prototype, "firstPublishTime", void 0);
i([ n(0) ], oe.prototype, "lastPublishTime", void 0);
o.GameData = oe;
class ie extends a {
constructor() {
super(...arguments);
this.giftID = 0;
this.giftCount = 0;
}
}
i([ n(0) ], ie.prototype, "giftID", void 0);
i([ n(0) ], ie.prototype, "giftCount", void 0);
o.GiftData = ie;
class ne extends a {
constructor() {
super(...arguments);
this.roleId = 0;
this.userLevel = 0;
this.userName = "";
this.userImg = "";
this.userIntro = "";
this.score = 0;
this.rank = 0;
this.giftDatas = new Array();
}
}
i([ n(0) ], ne.prototype, "roleId", void 0);
i([ n(0) ], ne.prototype, "userLevel", void 0);
i([ n(0) ], ne.prototype, "userName", void 0);
i([ n(0) ], ne.prototype, "userImg", void 0);
i([ n(0) ], ne.prototype, "userIntro", void 0);
i([ n(0) ], ne.prototype, "score", void 0);
i([ n(0) ], ne.prototype, "rank", void 0);
i([ n(2, ie) ], ne.prototype, "giftDatas", void 0);
o.GameGiftRankScoreInfo = ne;
class ae extends a {
constructor() {
super(...arguments);
this.rankKey = "";
this.rid = 0;
this.score = 0;
this.gameName = "";
this.gameIcon = "";
this.gameDataCdnUrl = "";
this.rankList = new Array();
}
}
i([ n(0) ], ae.prototype, "rankKey", void 0);
i([ n(0) ], ae.prototype, "rid", void 0);
i([ n(0) ], ae.prototype, "score", void 0);
i([ n(0) ], ae.prototype, "gameName", void 0);
i([ n(0) ], ae.prototype, "gameIcon", void 0);
i([ n(0) ], ae.prototype, "gameDataCdnUrl", void 0);
i([ n(2, ne) ], ae.prototype, "rankList", void 0);
o.GameGiftRank = ae;
(function(e) {
e[e.day = 0] = "day";
e[e.week = 1] = "week";
e[e.month = 2] = "month";
e[e.forever = 3] = "forever";
})(C = o.GameRankCycleType || (o.GameRankCycleType = {}));
(function(e) {
e[e.asc = 0] = "asc";
e[e.desc = 1] = "desc";
})(_ = o.GameRankSortType || (o.GameRankSortType = {}));
class se extends a {
constructor() {
super(...arguments);
this.id = "";
this.sortType = _.asc;
this.cycleType = C.day;
this.conf = {};
}
}
i([ n(0) ], se.prototype, "id", void 0);
i([ n(0) ], se.prototype, "sortType", void 0);
i([ n(0) ], se.prototype, "cycleType", void 0);
i([ n(0) ], se.prototype, "conf", void 0);
o.GameRankConf = se;
class re extends a {
constructor() {
super(...arguments);
this.roleId = 0;
this.userLevel = 0;
this.userName = "";
this.userImg = "";
this.userIntro = "";
this.score = 0;
this.rank = 0;
}
}
i([ n(0) ], re.prototype, "roleId", void 0);
i([ n(0) ], re.prototype, "userLevel", void 0);
i([ n(0) ], re.prototype, "userName", void 0);
i([ n(0) ], re.prototype, "userImg", void 0);
i([ n(0) ], re.prototype, "userIntro", void 0);
i([ n(0) ], re.prototype, "score", void 0);
i([ n(0) ], re.prototype, "rank", void 0);
o.GameRankScoreInfo = re;
class le extends a {
constructor() {
super(...arguments);
this.id = "";
this.conf = {};
}
}
i([ n(0) ], le.prototype, "id", void 0);
i([ n(0) ], le.prototype, "conf", void 0);
o.GameShopConf = le;
class ce extends a {
constructor() {
super(...arguments);
this.id = "";
this.iconTextureName = "";
this.name = "";
this.rank = 0;
this.playCnt = 0;
this.advert = "";
this.playCntStatistics = 0;
this.playAllCnt = 0;
this.playAllTime = 0;
this.playAveTime = 0;
}
}
i([ n(0) ], ce.prototype, "id", void 0);
i([ n(0) ], ce.prototype, "iconTextureName", void 0);
i([ n(0) ], ce.prototype, "name", void 0);
i([ n(0) ], ce.prototype, "rank", void 0);
i([ n(0) ], ce.prototype, "playCnt", void 0);
i([ n(0) ], ce.prototype, "advert", void 0);
i([ n(0) ], ce.prototype, "playCntStatistics", void 0);
i([ n(0) ], ce.prototype, "playAllCnt", void 0);
i([ n(0) ], ce.prototype, "playAllTime", void 0);
i([ n(0) ], ce.prototype, "playAveTime", void 0);
o.GameStatisticsData = ce;
class de extends a {
constructor() {
super(...arguments);
this.tagMsg = "";
this.recommendTimes = 0;
this.lastEditTime = 0;
}
}
i([ n(0) ], de.prototype, "tagMsg", void 0);
i([ n(0) ], de.prototype, "recommendTimes", void 0);
i([ n(0) ], de.prototype, "lastEditTime", void 0);
o.GameTagaData = de;
class he extends a {
constructor() {
super(...arguments);
this.id = "";
this.sortType = _.asc;
this.cycleType = C.day;
this.conf = {};
this.rankList = new Array();
}
}
i([ n(0) ], he.prototype, "id", void 0);
i([ n(0) ], he.prototype, "sortType", void 0);
i([ n(0) ], he.prototype, "cycleType", void 0);
i([ n(0) ], he.prototype, "conf", void 0);
i([ n(2, re) ], he.prototype, "rankList", void 0);
o.GameTageInfo = he;
class pe extends a {
constructor() {
super(...arguments);
this.id = 0;
this.bindIP = "";
this.bindType = d.tikTok;
this.bindCode = "";
this.bindTime = new Date(-621355968e5);
}
}
i([ n(0) ], pe.prototype, "id", void 0);
i([ n(0) ], pe.prototype, "bindIP", void 0);
i([ n(0) ], pe.prototype, "bindType", void 0);
i([ n(0) ], pe.prototype, "bindCode", void 0);
i([ n(4) ], pe.prototype, "bindTime", void 0);
o.GDBindRoleInfo = pe;
class ue extends a {
constructor() {
super(...arguments);
this.id = 0;
}
}
i([ n(0) ], ue.prototype, "id", void 0);
o.GDDynamicConfig = ue;
class me extends a {
constructor() {
super(...arguments);
this.uId = "";
this.gameId = "";
this.id = "";
this.commentsCnt = 0;
this.commentsCntSum = 0;
this.comments = new Array();
}
}
i([ n(0) ], me.prototype, "uId", void 0);
i([ n(0) ], me.prototype, "gameId", void 0);
i([ n(0) ], me.prototype, "id", void 0);
i([ n(0) ], me.prototype, "commentsCnt", void 0);
i([ n(0) ], me.prototype, "commentsCntSum", void 0);
i([ n(2, Q) ], me.prototype, "comments", void 0);
o.GDGameTopComment = me;
class fe extends a {
constructor() {
super(...arguments);
this.fGiftScore = 0;
this.mGiftScore = 0;
this.wGiftScore = 0;
this.mBeginDay = "";
this.wBeginDay = "";
this.holidayGiftScore = 0;
this.hBeginDay = "";
}
}
i([ n(0) ], fe.prototype, "fGiftScore", void 0);
i([ n(0) ], fe.prototype, "mGiftScore", void 0);
i([ n(0) ], fe.prototype, "wGiftScore", void 0);
i([ n(0) ], fe.prototype, "mBeginDay", void 0);
i([ n(0) ], fe.prototype, "wBeginDay", void 0);
i([ n(0) ], fe.prototype, "holidayGiftScore", void 0);
i([ n(0) ], fe.prototype, "hBeginDay", void 0);
o.GDGiftScoreInfo = fe;
class ge extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], ge.prototype, "id", void 0);
i([ n(0) ], ge.prototype, "goodsUId", void 0);
i([ n(0) ], ge.prototype, "conf", void 0);
o.PropConf = ge;
class ye extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], ye.prototype, "id", void 0);
i([ n(0) ], ye.prototype, "goodsUId", void 0);
i([ n(0) ], ye.prototype, "conf", void 0);
o.TileConf = ye;
class ve extends a {
constructor() {
super(...arguments);
this.id = "";
this.goodsUId = "";
this.conf = {};
}
}
i([ n(0) ], ve.prototype, "id", void 0);
i([ n(0) ], ve.prototype, "goodsUId", void 0);
i([ n(0) ], ve.prototype, "conf", void 0);
o.WeaponConf = ve;
class Ce extends a {
constructor() {
super(...arguments);
this.tileConfs = new Array();
this.actorConfs = new Array();
this.deviceConfs = new Array();
this.propConfs = new Array();
this.weaponConfs = new Array();
this.bulletConfs = new Array();
}
}
i([ n(2, ye) ], Ce.prototype, "tileConfs", void 0);
i([ n(2, s) ], Ce.prototype, "actorConfs", void 0);
i([ n(2, z) ], Ce.prototype, "deviceConfs", void 0);
i([ n(2, ge) ], Ce.prototype, "propConfs", void 0);
i([ n(2, ve) ], Ce.prototype, "weaponConfs", void 0);
i([ n(2, N) ], Ce.prototype, "bulletConfs", void 0);
o.GoodsContent = Ce;
(function(e) {
e[e.noPublish = 0] = "noPublish";
e[e.success = 1] = "success";
e[e.inReview = 2] = "inReview";
e[e.fail = 3] = "fail";
e[e.off = 4] = "off";
})(S = o.GoodsStatus || (o.GoodsStatus = {}));
(function(e) {
e[e.all = 0] = "all";
e[e.package = 1] = "package";
e[e.tile = 2] = "tile";
e[e.actor = 3] = "actor";
e[e.device = 4] = "device";
e[e.prop = 5] = "prop";
e[e.weapon = 6] = "weapon";
})(I = o.GoodsType || (o.GoodsType = {}));
class _e extends a {
constructor() {
super(...arguments);
this.playerId = 0;
this.id = "";
this.goodsType = I.all;
this.name = "";
this.iconTextureName = "";
this.advert = "";
this.isOff = !1;
this.status = S.noPublish;
this.offReason = new te();
this.goodsContent = new Ce();
this.price = 0;
this.saleCnt = 0;
this.saleCoin = 0;
this.upStamp = 0;
this.isAgainUpload = !1;
this.collectionCnt = 0;
}
}
i([ n(0) ], _e.prototype, "playerId", void 0);
i([ n(0) ], _e.prototype, "id", void 0);
i([ n(0) ], _e.prototype, "goodsType", void 0);
i([ n(0) ], _e.prototype, "name", void 0);
i([ n(0) ], _e.prototype, "iconTextureName", void 0);
i([ n(0) ], _e.prototype, "advert", void 0);
i([ n(0) ], _e.prototype, "isOff", void 0);
i([ n(0) ], _e.prototype, "status", void 0);
i([ n(1, te) ], _e.prototype, "offReason", void 0);
i([ n(1, Ce) ], _e.prototype, "goodsContent", void 0);
i([ n(0) ], _e.prototype, "price", void 0);
i([ n(0) ], _e.prototype, "saleCnt", void 0);
i([ n(0) ], _e.prototype, "saleCoin", void 0);
i([ n(0) ], _e.prototype, "upStamp", void 0);
i([ n(0) ], _e.prototype, "isAgainUpload", void 0);
i([ n(0) ], _e.prototype, "collectionCnt", void 0);
o.GDGoodsInfo = _e;
class Se extends a {
constructor() {
super(...arguments);
this.id = 0;
this.name = "";
this.group = 0;
this.idxInGroup = 0;
this.matchScore = 0;
this.avatar = new Array();
this.custom = new Map();
}
}
i([ n(0) ], Se.prototype, "id", void 0);
i([ n(0) ], Se.prototype, "name", void 0);
i([ n(0) ], Se.prototype, "group", void 0);
i([ n(0) ], Se.prototype, "idxInGroup", void 0);
i([ n(0) ], Se.prototype, "matchScore", void 0);
i([ n(2) ], Se.prototype, "avatar", void 0);
i([ n(5) ], Se.prototype, "custom", void 0);
o.GDRoomMember = Se;
class Ie extends a {
constructor() {
super(...arguments);
this.id = "";
this.owner = 0;
this.size = 0;
this.createAt = 0;
this.state = y.idle;
this.password = "";
this.members = new Map();
this.custom = new Map();
}
}
i([ n(0) ], Ie.prototype, "id", void 0);
i([ n(0) ], Ie.prototype, "owner", void 0);
i([ n(0) ], Ie.prototype, "size", void 0);
i([ n(0) ], Ie.prototype, "createAt", void 0);
i([ n(0) ], Ie.prototype, "state", void 0);
i([ n(0) ], Ie.prototype, "password", void 0);
i([ n(3, Se) ], Ie.prototype, "members", void 0);
i([ n(5) ], Ie.prototype, "custom", void 0);
o.GDTeam = Ie;
class Ge extends a {
constructor() {
super(...arguments);
this.type = "";
this.scoreDiff = 0;
this.teamSize = 0;
this.teamNum = 0;
this.timeoutAt = 0;
this.team = new Ie();
this.score = 0;
}
}
i([ n(0) ], Ge.prototype, "type", void 0);
i([ n(0) ], Ge.prototype, "scoreDiff", void 0);
i([ n(0) ], Ge.prototype, "teamSize", void 0);
i([ n(0) ], Ge.prototype, "teamNum", void 0);
i([ n(0) ], Ge.prototype, "timeoutAt", void 0);
i([ n(1, Ie) ], Ge.prototype, "team", void 0);
i([ n(0) ], Ge.prototype, "score", void 0);
o.GDMatch = Ge;
class Te extends a {
constructor() {
super(...arguments);
this.id = "";
this.name = "";
this.iconTextureName = "";
this.advert = "";
this.status = v.noPublish;
this.isPlay = !1;
this.isThumb = !1;
this.isHurry = !1;
this.isCollection = !1;
this.thumbCnt = 0;
this.collectionCnt = 0;
this.playCnt = 0;
this.hurryCnt = 0;
this.reportCnt = 0;
this.dataVersion = "";
this.gameDataCdnUrl = "";
this.gameTags = new Array();
this.playCntStatistics = 0;
this.playAllCnt = 0;
this.playAllTime = 0;
this.playAveTime = 0;
this.isInRecommendPool = !1;
this.recommendFansCnt = 0;
this.recommendLevel = 0;
this.recommendClickAllCnt = 0;
this.recommendCnt = 0;
this.recommendAllCnt = 0;
this.recommendScore = 0;
this.needRecommendCnt = 0;
this.recommendTagTime = 0;
this.openCreativeGame = !1;
this.creativeSourceUId = "";
this.openData = {};
this.reviewRecommendScore = 0;
this.hurryList = new Array();
this.playUserList = new Array();
this.lastPublishTime = 0;
this.tagList = new Array();
this.gDGiftScoreInfo = new fe();
}
}
i([ n(0) ], Te.prototype, "id", void 0);
i([ n(0) ], Te.prototype, "name", void 0);
i([ n(0) ], Te.prototype, "iconTextureName", void 0);
i([ n(0) ], Te.prototype, "advert", void 0);
i([ n(0) ], Te.prototype, "status", void 0);
i([ n(0) ], Te.prototype, "isPlay", void 0);
i([ n(0) ], Te.prototype, "isThumb", void 0);
i([ n(0) ], Te.prototype, "isHurry", void 0);
i([ n(0) ], Te.prototype, "isCollection", void 0);
i([ n(0) ], Te.prototype, "thumbCnt", void 0);
i([ n(0) ], Te.prototype, "collectionCnt", void 0);
i([ n(0) ], Te.prototype, "playCnt", void 0);
i([ n(0) ], Te.prototype, "hurryCnt", void 0);
i([ n(0) ], Te.prototype, "reportCnt", void 0);
i([ n(0) ], Te.prototype, "dataVersion", void 0);
i([ n(0) ], Te.prototype, "gameDataCdnUrl", void 0);
i([ n(2) ], Te.prototype, "gameTags", void 0);
i([ n(0) ], Te.prototype, "playCntStatistics", void 0);
i([ n(0) ], Te.prototype, "playAllCnt", void 0);
i([ n(0) ], Te.prototype, "playAllTime", void 0);
i([ n(0) ], Te.prototype, "playAveTime", void 0);
i([ n(0) ], Te.prototype, "isInRecommendPool", void 0);
i([ n(0) ], Te.prototype, "recommendFansCnt", void 0);
i([ n(0) ], Te.prototype, "recommendLevel", void 0);
i([ n(0) ], Te.prototype, "recommendClickAllCnt", void 0);
i([ n(0) ], Te.prototype, "recommendCnt", void 0);
i([ n(0) ], Te.prototype, "recommendAllCnt", void 0);
i([ n(0) ], Te.prototype, "recommendScore", void 0);
i([ n(0) ], Te.prototype, "needRecommendCnt", void 0);
i([ n(0) ], Te.prototype, "recommendTagTime", void 0);
i([ n(0) ], Te.prototype, "openCreativeGame", void 0);
i([ n(0) ], Te.prototype, "creativeSourceUId", void 0);
i([ n(0) ], Te.prototype, "openData", void 0);
i([ n(0) ], Te.prototype, "reviewRecommendScore", void 0);
i([ n(2) ], Te.prototype, "hurryList", void 0);
i([ n(2) ], Te.prototype, "playUserList", void 0);
i([ n(0) ], Te.prototype, "lastPublishTime", void 0);
i([ n(2, de) ], Te.prototype, "tagList", void 0);
i([ n(1, fe) ], Te.prototype, "gDGiftScoreInfo", void 0);
o.GDReleaseGameData = Te;
class be extends a {
constructor() {
super(...arguments);
this.platformUId = "";
this.openId = "";
this.unionId = "";
this.userName = "";
this.userImg = "";
this.userSex = 0;
this.province = "";
this.city = "";
}
}
i([ n(0) ], be.prototype, "platformUId", void 0);
i([ n(0) ], be.prototype, "openId", void 0);
i([ n(0) ], be.prototype, "unionId", void 0);
i([ n(0) ], be.prototype, "userName", void 0);
i([ n(0) ], be.prototype, "userImg", void 0);
i([ n(0) ], be.prototype, "userSex", void 0);
i([ n(0) ], be.prototype, "province", void 0);
i([ n(0) ], be.prototype, "city", void 0);
o.GDUserInfo = be;
(function(e) {
e[e.noPublish = 0] = "noPublish";
e[e.success = 1] = "success";
e[e.inReview = 2] = "inReview";
e[e.fail = 3] = "fail";
e[e.off = 4] = "off";
e[e.delete = 5] = "delete";
e[e.unknown = 6] = "unknown";
})(G = o.ManReviewStatus || (o.ManReviewStatus = {}));
class Me extends a {
constructor() {
super(...arguments);
this.score = 0;
this.reason = "";
this.stamp = 0;
}
}
i([ n(0) ], Me.prototype, "score", void 0);
i([ n(0) ], Me.prototype, "reason", void 0);
i([ n(0) ], Me.prototype, "stamp", void 0);
o.UserCreditMsg = Me;
class Pe extends a {
constructor() {
super(...arguments);
this.id = 0;
this.uId = 0;
this.sId = 0;
this.uKey = "";
this.userInfo = new be();
this.coin = 0;
this.diamond = 0;
this.creditScore = 0;
this.reviewCreditScore = 0;
this.examScore = 0;
this.publishGameTimes = 0;
this.publishGoodsTimes = 0;
this.creditTime = new Date(-621355968e5);
this.creditMsgList = new Array();
this.goodsIds = new Array();
this.myGameMaxCnt = 0;
this.myGoodsMaxCnt = 0;
this.authed = !1;
this.creatorVersion = "";
this.userName = "";
this.exp = 0;
this.level = 0;
this.userImg = "";
this.userIntro = "";
this.gameIncId = 0;
this.worldIncId = 0;
this.variableIncId = 0;
this.customColorIncId = 0;
this.games = new Array();
this.collectionGames = new Array();
this.worlds = new Array();
this.variables = new Array();
this.fansCount = 0;
this.bindRoleCode = "";
this.beBindList = new Array();
this.channel = "";
this.customActorGroups = new Array();
this.customColors = new Array();
this.guideVersion = "";
this.completeTaskIds = new Array();
this.follows = new Array();
this.createAt = new Date(-621355968e5);
this.collectionGoods = new Array();
this.collectionTalks = new Array();
this.newUserImg = "";
this.userImgTime = new Date(-621355968e5);
this.newUserImgReviewStatus = G.noPublish;
this.offReason = new ee();
}
}
i([ n(0) ], Pe.prototype, "id", void 0);
i([ n(0) ], Pe.prototype, "uId", void 0);
i([ n(0) ], Pe.prototype, "sId", void 0);
i([ n(0) ], Pe.prototype, "uKey", void 0);
i([ n(1, be) ], Pe.prototype, "userInfo", void 0);
i([ n(0) ], Pe.prototype, "coin", void 0);
i([ n(0) ], Pe.prototype, "diamond", void 0);
i([ n(0) ], Pe.prototype, "creditScore", void 0);
i([ n(0) ], Pe.prototype, "reviewCreditScore", void 0);
i([ n(0) ], Pe.prototype, "examScore", void 0);
i([ n(0) ], Pe.prototype, "publishGameTimes", void 0);
i([ n(0) ], Pe.prototype, "publishGoodsTimes", void 0);
i([ n(4) ], Pe.prototype, "creditTime", void 0);
i([ n(2, Me) ], Pe.prototype, "creditMsgList", void 0);
i([ n(2) ], Pe.prototype, "goodsIds", void 0);
i([ n(0) ], Pe.prototype, "myGameMaxCnt", void 0);
i([ n(0) ], Pe.prototype, "myGoodsMaxCnt", void 0);
i([ n(0) ], Pe.prototype, "authed", void 0);
i([ n(0) ], Pe.prototype, "creatorVersion", void 0);
i([ n(0) ], Pe.prototype, "userName", void 0);
i([ n(0) ], Pe.prototype, "exp", void 0);
i([ n(0) ], Pe.prototype, "level", void 0);
i([ n(0) ], Pe.prototype, "userImg", void 0);
i([ n(0) ], Pe.prototype, "userIntro", void 0);
i([ n(0) ], Pe.prototype, "gameIncId", void 0);
i([ n(0) ], Pe.prototype, "worldIncId", void 0);
i([ n(0) ], Pe.prototype, "variableIncId", void 0);
i([ n(0) ], Pe.prototype, "customColorIncId", void 0);
i([ n(2) ], Pe.prototype, "games", void 0);
i([ n(2) ], Pe.prototype, "collectionGames", void 0);
i([ n(2) ], Pe.prototype, "worlds", void 0);
i([ n(2) ], Pe.prototype, "variables", void 0);
i([ n(0) ], Pe.prototype, "fansCount", void 0);
i([ n(0) ], Pe.prototype, "bindRoleCode", void 0);
i([ n(2, k) ], Pe.prototype, "beBindList", void 0);
i([ n(0) ], Pe.prototype, "channel", void 0);
i([ n(2, l) ], Pe.prototype, "customActorGroups", void 0);
i([ n(2, Z) ], Pe.prototype, "customColors", void 0);
i([ n(0) ], Pe.prototype, "guideVersion", void 0);
i([ n(2) ], Pe.prototype, "completeTaskIds", void 0);
i([ n(2) ], Pe.prototype, "follows", void 0);
i([ n(4) ], Pe.prototype, "createAt", void 0);
i([ n(2) ], Pe.prototype, "collectionGoods", void 0);
i([ n(2) ], Pe.prototype, "collectionTalks", void 0);
i([ n(0) ], Pe.prototype, "newUserImg", void 0);
i([ n(4) ], Pe.prototype, "userImgTime", void 0);
i([ n(0) ], Pe.prototype, "newUserImgReviewStatus", void 0);
i([ n(1, ee) ], Pe.prototype, "offReason", void 0);
o.GDRole = Pe;
class De extends a {
constructor() {
super(...arguments);
this.id = 0;
this.lastReportTime = 0;
this.lastDealTime = 0;
this.bugMap = new Map();
}
}
i([ n(0) ], De.prototype, "id", void 0);
i([ n(0) ], De.prototype, "lastReportTime", void 0);
i([ n(0) ], De.prototype, "lastDealTime", void 0);
i([ n(5, F) ], De.prototype, "bugMap", void 0);
o.GDRoleBugMsg = De;
class we extends a {
constructor() {
super(...arguments);
this.id = 0;
this.lastCommentStamp = 0;
this.gameCommentMap = new Map();
this.lastReportStamp = 0;
this.reportCommentMap = new Map();
}
}
i([ n(0) ], we.prototype, "id", void 0);
i([ n(0) ], we.prototype, "lastCommentStamp", void 0);
i([ n(5) ], we.prototype, "gameCommentMap", void 0);
i([ n(0) ], we.prototype, "lastReportStamp", void 0);
i([ n(5) ], we.prototype, "reportCommentMap", void 0);
o.GDRoleCommentLikeMsg = we;
class Be extends a {
constructor() {
super(...arguments);
this.id = 0;
this.lastLoginThumbCount = 0;
this.thumbCount = 0;
this.lastLoginPlayCount = 0;
this.playCount = 0;
this.lastLoginCollectionCount = 0;
this.collectionCount = 0;
this.hurryCount = 0;
}
}
i([ n(0) ], Be.prototype, "id", void 0);
i([ n(0) ], Be.prototype, "lastLoginThumbCount", void 0);
i([ n(0) ], Be.prototype, "thumbCount", void 0);
i([ n(0) ], Be.prototype, "lastLoginPlayCount", void 0);
i([ n(0) ], Be.prototype, "playCount", void 0);
i([ n(0) ], Be.prototype, "lastLoginCollectionCount", void 0);
i([ n(0) ], Be.prototype, "collectionCount", void 0);
i([ n(0) ], Be.prototype, "hurryCount", void 0);
o.GDRoleCountMsg = Be;
class Re extends a {
constructor() {
super(...arguments);
this.uId = "";
this.playerId = 0;
this.targetId = 0;
}
}
i([ n(0) ], Re.prototype, "uId", void 0);
i([ n(0) ], Re.prototype, "playerId", void 0);
i([ n(0) ], Re.prototype, "targetId", void 0);
o.GDRoleFansData = Re;
class xe extends a {
constructor() {
super(...arguments);
this.id = 0;
this.tileConfIds = new Array();
this.actorConfIds = new Array();
this.propConfIds = new Array();
this.deviceConfIds = new Array();
this.weaponConfIds = new Array();
this.bulletConfIds = new Array();
this.gameShopConfIds = new Array();
this.gameRankConfIds = new Array();
}
}
i([ n(0) ], xe.prototype, "id", void 0);
i([ n(2) ], xe.prototype, "tileConfIds", void 0);
i([ n(2) ], xe.prototype, "actorConfIds", void 0);
i([ n(2) ], xe.prototype, "propConfIds", void 0);
i([ n(2) ], xe.prototype, "deviceConfIds", void 0);
i([ n(2) ], xe.prototype, "weaponConfIds", void 0);
i([ n(2) ], xe.prototype, "bulletConfIds", void 0);
i([ n(2) ], xe.prototype, "gameShopConfIds", void 0);
i([ n(2) ], xe.prototype, "gameRankConfIds", void 0);
o.GDRoleGameConf = xe;
class Le extends a {
constructor() {
super(...arguments);
this.type = c.collectionGame;
this.playerId = 0;
this.userLevel = 0;
this.userName = "";
this.userImg = "";
this.gameId = "";
this.gameIcon = "";
this.goodsId = "";
this.goodsTextureName = "";
}
}
i([ n(0) ], Le.prototype, "type", void 0);
i([ n(0) ], Le.prototype, "playerId", void 0);
i([ n(0) ], Le.prototype, "userLevel", void 0);
i([ n(0) ], Le.prototype, "userName", void 0);
i([ n(0) ], Le.prototype, "userImg", void 0);
i([ n(0) ], Le.prototype, "gameId", void 0);
i([ n(0) ], Le.prototype, "gameIcon", void 0);
i([ n(0) ], Le.prototype, "goodsId", void 0);
i([ n(0) ], Le.prototype, "goodsTextureName", void 0);
o.MsgData = Le;
class ke extends a {
constructor() {
super(...arguments);
this.id = 0;
this.newMsgCnt = 0;
this.msgList = new Array();
this.offLineAggregateMsgMap = new Map();
this.newAggregateMsgCnt = 0;
this.aggregateMsgList = new Array();
this.newFansCnt = 0;
this.newFansList = new Array();
this.newCommentCnt = 0;
this.newCommentIdList = new Array();
}
}
i([ n(0) ], ke.prototype, "id", void 0);
i([ n(0) ], ke.prototype, "newMsgCnt", void 0);
i([ n(2, Le) ], ke.prototype, "msgList", void 0);
i([ n(5, R) ], ke.prototype, "offLineAggregateMsgMap", void 0);
i([ n(0) ], ke.prototype, "newAggregateMsgCnt", void 0);
i([ n(2, R) ], ke.prototype, "aggregateMsgList", void 0);
i([ n(0) ], ke.prototype, "newFansCnt", void 0);
i([ n(2) ], ke.prototype, "newFansList", void 0);
i([ n(0) ], ke.prototype, "newCommentCnt", void 0);
i([ n(2) ], ke.prototype, "newCommentIdList", void 0);
o.GDRoleMsgList = ke;
class Fe extends a {
constructor() {
super(...arguments);
this.id = 0;
this.playGames = new Map();
this.playGamesStatistics = new Map();
}
}
i([ n(0) ], Fe.prototype, "id", void 0);
i([ n(5) ], Fe.prototype, "playGames", void 0);
i([ n(5) ], Fe.prototype, "playGamesStatistics", void 0);
o.GDRolePlayGame = Fe;
(function(e) {
e.shopGoods = "shopGoods";
e.gameGoods = "gameGoods";
e.gameExchange = "gameExchange";
e.gameAdvert = "ad";
e.gameReborn = "reborn";
})(T = o.SaleGoodsType || (o.SaleGoodsType = {}));
class Ne extends a {
constructor() {
super(...arguments);
this.type = T.shopGoods;
this.gameId = "";
this.name = "";
this.textureName = "";
this.earnCoin = 0;
this.saleCnt = 0;
}
}
i([ n(0) ], Ne.prototype, "type", void 0);
i([ n(0) ], Ne.prototype, "gameId", void 0);
i([ n(0) ], Ne.prototype, "name", void 0);
i([ n(0) ], Ne.prototype, "textureName", void 0);
i([ n(0) ], Ne.prototype, "earnCoin", void 0);
i([ n(0) ], Ne.prototype, "saleCnt", void 0);
o.SaleSummary = Ne;
class Ae extends a {
constructor() {
super(...arguments);
this.id = 0;
this.saleCntMap = new Map();
this.gameSaleCntMap = new Map();
this.saleTypeCntMap = new Map();
}
}
i([ n(0) ], Ae.prototype, "id", void 0);
i([ n(5, Ne) ], Ae.prototype, "saleCntMap", void 0);
i([ n(5, Ne) ], Ae.prototype, "gameSaleCntMap", void 0);
i([ n(5, Ne) ], Ae.prototype, "saleTypeCntMap", void 0);
o.GDRoleSaleMsg = Ae;
class Oe extends a {
constructor() {
super(...arguments);
this.id = 0;
this.userName = "";
this.coin = 0;
this.diamond = 0;
this.level = 0;
this.creditScore = 0;
this.isFollow = !1;
this.authed = !1;
this.userImg = "";
this.fansCount = 0;
this.followsCount = 0;
}
}
i([ n(0) ], Oe.prototype, "id", void 0);
i([ n(0) ], Oe.prototype, "userName", void 0);
i([ n(0) ], Oe.prototype, "coin", void 0);
i([ n(0) ], Oe.prototype, "diamond", void 0);
i([ n(0) ], Oe.prototype, "level", void 0);
i([ n(0) ], Oe.prototype, "creditScore", void 0);
i([ n(0) ], Oe.prototype, "isFollow", void 0);
i([ n(0) ], Oe.prototype, "authed", void 0);
i([ n(0) ], Oe.prototype, "userImg", void 0);
i([ n(0) ], Oe.prototype, "fansCount", void 0);
i([ n(0) ], Oe.prototype, "followsCount", void 0);
o.GDRoleSimpleMsg = Oe;
class Ue extends a {
constructor() {
super(...arguments);
this.id = 0;
this.thumbGames = new Map();
}
}
i([ n(0) ], Ue.prototype, "id", void 0);
i([ n(5) ], Ue.prototype, "thumbGames", void 0);
o.GDRoleThumb = Ue;
class Ee extends a {
constructor() {
super(...arguments);
this.id = "";
this.type = m.match;
this.subGameId = "";
this.name = "";
this.owner = 0;
this.ownerName = "";
this.state = u.idle;
this.frameRate = 0;
this.custom = new Map();
this.teams = new Array();
this.groupNum = 0;
this.memberNumPerGroup = 0;
this.audienceNum = 0;
this.useMaster = !1;
this.members = new Map();
this.locked = !1;
this.createAt = new Date(-621355968e5);
}
}
i([ n(0) ], Ee.prototype, "id", void 0);
i([ n(0) ], Ee.prototype, "type", void 0);
i([ n(0) ], Ee.prototype, "subGameId", void 0);
i([ n(0) ], Ee.prototype, "name", void 0);
i([ n(0) ], Ee.prototype, "owner", void 0);
i([ n(0) ], Ee.prototype, "ownerName", void 0);
i([ n(0) ], Ee.prototype, "state", void 0);
i([ n(0) ], Ee.prototype, "frameRate", void 0);
i([ n(5) ], Ee.prototype, "custom", void 0);
i([ n(2, Ie) ], Ee.prototype, "teams", void 0);
i([ n(0) ], Ee.prototype, "groupNum", void 0);
i([ n(0) ], Ee.prototype, "memberNumPerGroup", void 0);
i([ n(0) ], Ee.prototype, "audienceNum", void 0);
i([ n(0) ], Ee.prototype, "useMaster", void 0);
i([ n(3, Se) ], Ee.prototype, "members", void 0);
i([ n(0) ], Ee.prototype, "locked", void 0);
i([ n(4) ], Ee.prototype, "createAt", void 0);
o.GDRoom = Ee;
class je extends a {
constructor() {
super(...arguments);
this.roleId = 0;
this.frame = 0;
this.msg = {};
}
}
i([ n(0) ], je.prototype, "roleId", void 0);
i([ n(0) ], je.prototype, "frame", void 0);
i([ n(0) ], je.prototype, "msg", void 0);
o.GDRoomFrameSyncMsg = je;
class He extends a {
constructor() {
super(...arguments);
this.id = 0;
this.name = "";
this.status = g.closed;
this.busyStatus = f.normal;
}
}
i([ n(0) ], He.prototype, "id", void 0);
i([ n(0) ], He.prototype, "name", void 0);
i([ n(0) ], He.prototype, "status", void 0);
i([ n(0) ], He.prototype, "busyStatus", void 0);
o.GDServer = He;
class We extends a {
constructor() {
super(...arguments);
this.id = 0;
this.sId = 0;
this.name = "";
this.lv = 0;
this.loginAt = new Date(-621355968e5);
}
}
i([ n(0) ], We.prototype, "id", void 0);
i([ n(0) ], We.prototype, "sId", void 0);
i([ n(0) ], We.prototype, "name", void 0);
i([ n(0) ], We.prototype, "lv", void 0);
i([ n(4) ], We.prototype, "loginAt", void 0);
o.GDServerRole = We;
class Ve extends a {
constructor() {
super(...arguments);
this.id = "";
this.name = "";
this.desc = "";
this.version = "";
this.creatorId = 0;
this.creatorName = "";
this.createAt = new Date(-621355968e5);
}
}
i([ n(0) ], Ve.prototype, "id", void 0);
i([ n(0) ], Ve.prototype, "name", void 0);
i([ n(0) ], Ve.prototype, "desc", void 0);
i([ n(0) ], Ve.prototype, "version", void 0);
i([ n(0) ], Ve.prototype, "creatorId", void 0);
i([ n(0) ], Ve.prototype, "creatorName", void 0);
i([ n(4) ], Ve.prototype, "createAt", void 0);
o.GDSubGame = Ve;
class Ke extends a {
constructor() {
super(...arguments);
this.id = 0;
this.key = "";
this.platform = "";
this.platformUId = "";
this.platformId = 0;
this.visitorUId = "";
this.openId = "";
this.unionId = "";
this.userName = "";
this.userImg = "";
this.userSex = 0;
this.shareCode = "";
this.loginPlatform = "";
this.province = "";
this.city = "";
this.isSubscribe = !1;
this.authed = !1;
this.channel = "";
this.scene = 0;
this.referrerInfo = "";
this.clientVersion = "";
this.clientIp = "";
this.isAppVisitor = !1;
this.regTime = new Date(-621355968e5);
this.bindInfo = new pe();
this.roles = new Map();
}
}
i([ n(0) ], Ke.prototype, "id", void 0);
i([ n(0) ], Ke.prototype, "key", void 0);
i([ n(0) ], Ke.prototype, "platform", void 0);
i([ n(0) ], Ke.prototype, "platformUId", void 0);
i([ n(0) ], Ke.prototype, "platformId", void 0);
i([ n(0) ], Ke.prototype, "visitorUId", void 0);
i([ n(0) ], Ke.prototype, "openId", void 0);
i([ n(0) ], Ke.prototype, "unionId", void 0);
i([ n(0) ], Ke.prototype, "userName", void 0);
i([ n(0) ], Ke.prototype, "userImg", void 0);
i([ n(0) ], Ke.prototype, "userSex", void 0);
i([ n(0) ], Ke.prototype, "shareCode", void 0);
i([ n(0) ], Ke.prototype, "loginPlatform", void 0);
i([ n(0) ], Ke.prototype, "province", void 0);
i([ n(0) ], Ke.prototype, "city", void 0);
i([ n(0) ], Ke.prototype, "isSubscribe", void 0);
i([ n(0) ], Ke.prototype, "authed", void 0);
i([ n(0) ], Ke.prototype, "channel", void 0);
i([ n(0) ], Ke.prototype, "scene", void 0);
i([ n(0) ], Ke.prototype, "referrerInfo", void 0);
i([ n(0) ], Ke.prototype, "clientVersion", void 0);
i([ n(0) ], Ke.prototype, "clientIp", void 0);
i([ n(0) ], Ke.prototype, "isAppVisitor", void 0);
i([ n(4) ], Ke.prototype, "regTime", void 0);
i([ n(1, pe) ], Ke.prototype, "bindInfo", void 0);
i([ n(3, We) ], Ke.prototype, "roles", void 0);
o.GDUser = Ke;
class Je extends a {
constructor() {
super(...arguments);
this.id = "";
this.data = {};
}
}
i([ n(0) ], Je.prototype, "id", void 0);
i([ n(0) ], Je.prototype, "data", void 0);
o.GDVariable = Je;
class Ze extends a {
constructor() {
super(...arguments);
this.id = "";
this.info = {};
this.layoutMin = null;
}
}
i([ n(0) ], Ze.prototype, "id", void 0);
i([ n(0) ], Ze.prototype, "info", void 0);
i([ n(0) ], Ze.prototype, "layoutMin", void 0);
o.GDWorldData = Ze;
class ze extends a {
constructor() {
super(...arguments);
this.endStamp = 0;
this.startStamp = 0;
this.name = "";
}
}
i([ n(0) ], ze.prototype, "endStamp", void 0);
i([ n(0) ], ze.prototype, "startStamp", void 0);
i([ n(0) ], ze.prototype, "name", void 0);
o.GiftRankActivity = ze;
class Xe extends a {
constructor() {
super(...arguments);
this.playerId = 0;
this.id = "";
this.goodsType = I.all;
this.name = "";
this.iconTextureName = "";
this.advert = "";
this.price = 0;
this.saleCnt = 0;
this.upStamp = 0;
this.goodsContentCnt = 0;
this.goodsInfoList = new Array();
}
}
i([ n(0) ], Xe.prototype, "playerId", void 0);
i([ n(0) ], Xe.prototype, "id", void 0);
i([ n(0) ], Xe.prototype, "goodsType", void 0);
i([ n(0) ], Xe.prototype, "name", void 0);
i([ n(0) ], Xe.prototype, "iconTextureName", void 0);
i([ n(0) ], Xe.prototype, "advert", void 0);
i([ n(0) ], Xe.prototype, "price", void 0);
i([ n(0) ], Xe.prototype, "saleCnt", void 0);
i([ n(0) ], Xe.prototype, "upStamp", void 0);
i([ n(0) ], Xe.prototype, "goodsContentCnt", void 0);
i([ n(2, Xe) ], Xe.prototype, "goodsInfoList", void 0);
o.GoodsCellData = Xe;
(function(e) {
e[e.comprehensive = 0] = "comprehensive";
e[e.goodsPriceAsc = 1] = "goodsPriceAsc";
e[e.goodsPriceDesc = 2] = "goodsPriceDesc";
e[e.goodsSaleAsc = 3] = "goodsSaleAsc";
e[e.goodsSaleDesc = 4] = "goodsSaleDesc";
e[e.goodsUpStampDesc = 5] = "goodsUpStampDesc";
})(o.GoodsSortType || (o.GoodsSortType = {}));
(function(e) {
e.tile = "tile";
e.actor = "actor";
e.device = "device";
e.prop = "prop";
e.gameIcon = "gameIcon";
e.headIcon = "headIcon";
e.weapon = "weapon";
e.bullet = "bullet";
e.forum = "forum";
})(o.ImageFileType || (o.ImageFileType = {}));
(function(e) {
e.game = "game";
e.goods = "goods";
e.talk = "talk";
e.talkComment = "talkComment";
e.userImg = "userImg";
})(b = o.ReviewType || (o.ReviewType = {}));
class qe extends a {
constructor() {
super(...arguments);
this.reviewImage = "";
this.reviewType = b.game;
this.applyIdList = new Array();
this.applyPlayerIdList = new Array();
this.applyTime = new Date(-621355968e5);
this.reviewCode = h.fail;
this.reviewTime = new Date(-621355968e5);
this.isAppeal = !1;
this.appealPlayerId = 0;
this.sensitiveImageResult = new H();
}
}
i([ n(0) ], qe.prototype, "reviewImage", void 0);
i([ n(0) ], qe.prototype, "reviewType", void 0);
i([ n(2) ], qe.prototype, "applyIdList", void 0);
i([ n(2) ], qe.prototype, "applyPlayerIdList", void 0);
i([ n(4) ], qe.prototype, "applyTime", void 0);
i([ n(0) ], qe.prototype, "reviewCode", void 0);
i([ n(4) ], qe.prototype, "reviewTime", void 0);
i([ n(0) ], qe.prototype, "isAppeal", void 0);
i([ n(0) ], qe.prototype, "appealPlayerId", void 0);
i([ n(1, H) ], qe.prototype, "sensitiveImageResult", void 0);
o.ImageReviewInfo = qe;
class Ye extends a {
constructor() {
super(...arguments);
this.width = 0;
this.height = 0;
}
}
i([ n(0) ], Ye.prototype, "width", void 0);
i([ n(0) ], Ye.prototype, "height", void 0);
o.ImageSize = Ye;
class $e extends a {
constructor() {
super(...arguments);
this.abuse = 0;
this.ad = 0;
this.porn = 0;
this.terror = 0;
}
}
i([ n(0) ], $e.prototype, "abuse", void 0);
i([ n(0) ], $e.prototype, "ad", void 0);
i([ n(0) ], $e.prototype, "porn", void 0);
i([ n(0) ], $e.prototype, "terror", void 0);
o.Score = $e;
class Qe extends a {
constructor() {
super(...arguments);
this.word = "";
this.source = "";
this.label = "";
}
}
i([ n(0) ], Qe.prototype, "word", void 0);
i([ n(0) ], Qe.prototype, "source", void 0);
i([ n(0) ], Qe.prototype, "label", void 0);
o.SensitiveMsgDetails = Qe;
class et extends a {
constructor() {
super(...arguments);
this.result = 0;
this.source = "";
this.score = new $e();
this.details = new Array();
}
}
i([ n(0) ], et.prototype, "result", void 0);
i([ n(0) ], et.prototype, "source", void 0);
i([ n(1, $e) ], et.prototype, "score", void 0);
i([ n(2, Qe) ], et.prototype, "details", void 0);
o.SensitiveMsgData = et;
class tt extends a {
constructor() {
super(...arguments);
this.errCode = 0;
this.errMsg = "";
this.data = new et();
}
}
i([ n(0) ], tt.prototype, "errCode", void 0);
i([ n(0) ], tt.prototype, "errMsg", void 0);
i([ n(1, et) ], tt.prototype, "data", void 0);
o.SensitiveMsgResult = tt;
class ot extends a {
constructor() {
super(...arguments);
this.reviewStr = "";
this.reviewType = b.game;
this.applyIdList = new Array();
this.applyPlayerIdList = new Array();
this.applyTime = new Date(-621355968e5);
this.reviewCode = h.fail;
this.reviewTime = new Date(-621355968e5);
this.isAppeal = !1;
this.appealPlayerId = 0;
this.sensitiveMsgResult = new tt();
}
}
i([ n(0) ], ot.prototype, "reviewStr", void 0);
i([ n(0) ], ot.prototype, "reviewType", void 0);
i([ n(2) ], ot.prototype, "applyIdList", void 0);
i([ n(2) ], ot.prototype, "applyPlayerIdList", void 0);
i([ n(4) ], ot.prototype, "applyTime", void 0);
i([ n(0) ], ot.prototype, "reviewCode", void 0);
i([ n(4) ], ot.prototype, "reviewTime", void 0);
i([ n(0) ], ot.prototype, "isAppeal", void 0);
i([ n(0) ], ot.prototype, "appealPlayerId", void 0);
i([ n(1, tt) ], ot.prototype, "sensitiveMsgResult", void 0);
o.MsgReviewInfo = ot;
class it extends a {
constructor() {
super(...arguments);
this.exp = 0;
this.incExp = 0;
this.levelUpNeedExp = 0;
this.oldLevel = 0;
this.level = 0;
this.incPlayCount = 0;
this.incThumbCount = 0;
}
}
i([ n(0) ], it.prototype, "exp", void 0);
i([ n(0) ], it.prototype, "incExp", void 0);
i([ n(0) ], it.prototype, "levelUpNeedExp", void 0);
i([ n(0) ], it.prototype, "oldLevel", void 0);
i([ n(0) ], it.prototype, "level", void 0);
i([ n(0) ], it.prototype, "incPlayCount", void 0);
i([ n(0) ], it.prototype, "incThumbCount", void 0);
o.OffLineChangeMsg = it;
(function(e) {
e[e.text = 0] = "text";
e[e.image = 1] = "image";
e[e.voice = 2] = "voice";
e[e.custom = 99] = "custom";
})(M = o.OIMContentType || (o.OIMContentType = {}));
(function(e) {
e[e.system = 0] = "system";
e[e.peer = 1] = "peer";
e[e.group = 2] = "group";
e[e.chatRoom = 3] = "chatRoom";
e[e.world = 4] = "world";
e[e.server = 5] = "server";
})(P = o.OIMConversationType || (o.OIMConversationType = {}));
class nt extends a {
constructor() {
super(...arguments);
this.id = 0;
this.name = "";
this.avatar = "";
this.extra = "";
}
}
i([ n(0) ], nt.prototype, "id", void 0);
i([ n(0) ], nt.prototype, "name", void 0);
i([ n(0) ], nt.prototype, "avatar", void 0);
i([ n(0) ], nt.prototype, "extra", void 0);
o.OIMUser = nt;
class at extends a {
constructor() {
super(...arguments);
this.convType = P.system;
this.oppId = 0;
this.oppInfo = new nt();
this.time = new Date(-621355968e5);
}
}
i([ n(0) ], at.prototype, "convType", void 0);
i([ n(0) ], at.prototype, "oppId", void 0);
i([ n(1, nt) ], at.prototype, "oppInfo", void 0);
i([ n(4) ], at.prototype, "time", void 0);
o.OIMConversation = at;
class st extends a {
constructor() {
super(...arguments);
this.id = 0;
this.from = new nt();
this.oppId = 0;
this.time = new Date(-621355968e5);
this.convType = P.system;
this.contType = M.text;
this.content = "";
this.extra = "";
}
}
i([ n(0) ], st.prototype, "id", void 0);
i([ n(1, nt) ], st.prototype, "from", void 0);
i([ n(0) ], st.prototype, "oppId", void 0);
i([ n(4) ], st.prototype, "time", void 0);
i([ n(0) ], st.prototype, "convType", void 0);
i([ n(0) ], st.prototype, "contType", void 0);
i([ n(0) ], st.prototype, "content", void 0);
i([ n(0) ], st.prototype, "extra", void 0);
o.OIMMsg = st;
class rt extends a {
constructor() {
super(...arguments);
this.st = "";
this.bk = "";
this.refine = 0;
this.id = "";
this.type = "";
this.scoreOpt = 0;
}
}
i([ n(0) ], rt.prototype, "st", void 0);
i([ n(0) ], rt.prototype, "bk", void 0);
i([ n(0) ], rt.prototype, "refine", void 0);
i([ n(0) ], rt.prototype, "id", void 0);
i([ n(0) ], rt.prototype, "type", void 0);
i([ n(0) ], rt.prototype, "scoreOpt", void 0);
o.PlatformRecommendData = rt;
class lt extends a {
constructor() {
super(...arguments);
this.data = new Array();
}
}
i([ n(2, rt) ], lt.prototype, "data", void 0);
o.PlatformRecommend = lt;
class ct extends a {
constructor() {
super(...arguments);
this.id = "";
this.sortType = _.asc;
this.cycleType = C.day;
this.conf = {};
this.rankList = new Array();
}
}
i([ n(0) ], ct.prototype, "id", void 0);
i([ n(0) ], ct.prototype, "sortType", void 0);
i([ n(0) ], ct.prototype, "cycleType", void 0);
i([ n(0) ], ct.prototype, "conf", void 0);
i([ n(2, re) ], ct.prototype, "rankList", void 0);
o.ReleaseGameGameRank = ct;
class dt extends a {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
}
}
i([ n(0) ], dt.prototype, "gameId", void 0);
i([ n(0) ], dt.prototype, "id", void 0);
o.RetVariableData = dt;
class ht extends a {
constructor() {
super(...arguments);
this.reviewType = b.game;
this.applyId = "";
this.applyPlayerId = 0;
this.reviewImageMap = new Map();
this.combImageList = new Array();
this.reviewImageList = new Array();
this.successImageList = new Array();
this.failImageList = new Array();
this.reviewStr = "";
this.failStrList = new Array();
this.applyTime = new Date(-621355968e5);
this.reviewTime = new Date(-621355968e5);
this.reviewImageCode = h.fail;
this.reviewMsgCode = h.fail;
}
}
i([ n(0) ], ht.prototype, "reviewType", void 0);
i([ n(0) ], ht.prototype, "applyId", void 0);
i([ n(0) ], ht.prototype, "applyPlayerId", void 0);
i([ n(5) ], ht.prototype, "reviewImageMap", void 0);
i([ n(2) ], ht.prototype, "combImageList", void 0);
i([ n(2) ], ht.prototype, "reviewImageList", void 0);
i([ n(2) ], ht.prototype, "successImageList", void 0);
i([ n(2) ], ht.prototype, "failImageList", void 0);
i([ n(0) ], ht.prototype, "reviewStr", void 0);
i([ n(2) ], ht.prototype, "failStrList", void 0);
i([ n(4) ], ht.prototype, "applyTime", void 0);
i([ n(4) ], ht.prototype, "reviewTime", void 0);
i([ n(0) ], ht.prototype, "reviewImageCode", void 0);
i([ n(0) ], ht.prototype, "reviewMsgCode", void 0);
o.ReviewInfo = ht;
(function(e) {
e.normal = "normal";
e.nationalFlag = "nationalFlag";
e.porn = "porn";
e.argue = "argue";
e.politically = "politically";
e.abuse = "abuse";
e.terror = "terror";
})(D = o.ReviewResultType || (o.ReviewResultType = {}));
class pt extends a {
constructor() {
super(...arguments);
this.reviewId = 0;
this.resultType = D.normal;
this.describe = "";
}
}
i([ n(0) ], pt.prototype, "reviewId", void 0);
i([ n(0) ], pt.prototype, "resultType", void 0);
i([ n(0) ], pt.prototype, "describe", void 0);
o.ReviewResult = pt;
(function(e) {
e[e.success = 0] = "success";
e[e.inReview = 1] = "inReview";
e[e.fail = 2] = "fail";
})(o.ReviewStatus || (o.ReviewStatus = {}));
class ut extends a {
constructor() {
super(...arguments);
this.id = 0;
this.activityTT20210319Time = 0;
}
}
i([ n(0) ], ut.prototype, "id", void 0);
i([ n(0) ], ut.prototype, "activityTT20210319Time", void 0);
o.RoleActivity = ut;
class mt extends a {
constructor() {
super(...arguments);
this.id = "";
this.confMap = new Map();
}
}
i([ n(0) ], mt.prototype, "id", void 0);
i([ n(5) ], mt.prototype, "confMap", void 0);
o.RoleCreativeConf = mt;
class ft extends a {
constructor() {
super(...arguments);
this.id = "";
this.worldLayoutMap = new Map();
}
}
i([ n(0) ], ft.prototype, "id", void 0);
i([ n(5) ], ft.prototype, "worldLayoutMap", void 0);
o.RoleCreativeWorldLayout = ft;
class gt extends a {
constructor() {
super(...arguments);
this.sensitiveImgUrl = "";
this.sensitiveImageResult = new H();
}
}
i([ n(0) ], gt.prototype, "sensitiveImgUrl", void 0);
i([ n(1, H) ], gt.prototype, "sensitiveImageResult", void 0);
o.RoleManualSensitiveImgMsg = gt;
class yt extends a {
constructor() {
super(...arguments);
this.id = "";
this.name = "";
this.iconTextureName = "";
this.dataVersion = "";
this.advert = "";
this.gameDataCdnUrl = "";
this.gameTags = new Array();
this.openCreativeGame = !1;
this.creativeSourceUId = "";
this.openData = {};
this.publishTime = 0;
}
}
i([ n(0) ], yt.prototype, "id", void 0);
i([ n(0) ], yt.prototype, "name", void 0);
i([ n(0) ], yt.prototype, "iconTextureName", void 0);
i([ n(0) ], yt.prototype, "dataVersion", void 0);
i([ n(0) ], yt.prototype, "advert", void 0);
i([ n(0) ], yt.prototype, "gameDataCdnUrl", void 0);
i([ n(2) ], yt.prototype, "gameTags", void 0);
i([ n(0) ], yt.prototype, "openCreativeGame", void 0);
i([ n(0) ], yt.prototype, "creativeSourceUId", void 0);
i([ n(0) ], yt.prototype, "openData", void 0);
i([ n(0) ], yt.prototype, "publishTime", void 0);
o.RoleReviewGameData = yt;
class vt extends a {
constructor() {
super(...arguments);
this.sensitiveImgUrl = "";
this.sensitiveImageResult = new H();
}
}
i([ n(0) ], vt.prototype, "sensitiveImgUrl", void 0);
i([ n(1, H) ], vt.prototype, "sensitiveImageResult", void 0);
o.RoleStatisticSensitiveImgMsg = vt;
class Ct extends a {
constructor() {
super(...arguments);
this.id = 0;
this.lastStamp = 0;
this.commentIdList = new Array();
this.upMap = new Map();
this.downMap = new Map();
this.thumbMap = new Map();
this.unThumbMap = new Map();
this.lastReportStamp = 0;
this.reportMap = new Map();
}
}
i([ n(0) ], Ct.prototype, "id", void 0);
i([ n(0) ], Ct.prototype, "lastStamp", void 0);
i([ n(2) ], Ct.prototype, "commentIdList", void 0);
i([ n(5) ], Ct.prototype, "upMap", void 0);
i([ n(5) ], Ct.prototype, "downMap", void 0);
i([ n(5) ], Ct.prototype, "thumbMap", void 0);
i([ n(5) ], Ct.prototype, "unThumbMap", void 0);
i([ n(0) ], Ct.prototype, "lastReportStamp", void 0);
i([ n(5) ], Ct.prototype, "reportMap", void 0);
o.RoleTalkCommentMsg = Ct;
class _t extends a {
constructor() {
super(...arguments);
this.id = 0;
this.lastStamp = 0;
this.talkIdList = new Array();
this.officialTalkIdList = new Array();
this.upMap = new Map();
this.downMap = new Map();
this.thumbMap = new Map();
this.unThumbMap = new Map();
this.lastReportStamp = 0;
this.reportMap = new Map();
}
}
i([ n(0) ], _t.prototype, "id", void 0);
i([ n(0) ], _t.prototype, "lastStamp", void 0);
i([ n(2) ], _t.prototype, "talkIdList", void 0);
i([ n(2) ], _t.prototype, "officialTalkIdList", void 0);
i([ n(5) ], _t.prototype, "upMap", void 0);
i([ n(5) ], _t.prototype, "downMap", void 0);
i([ n(5) ], _t.prototype, "thumbMap", void 0);
i([ n(5) ], _t.prototype, "unThumbMap", void 0);
i([ n(0) ], _t.prototype, "lastReportStamp", void 0);
i([ n(5) ], _t.prototype, "reportMap", void 0);
o.RoleTalkMsg = _t;
class St extends a {
constructor() {
super(...arguments);
this.id = "";
this.score = 0;
}
}
i([ n(0) ], St.prototype, "id", void 0);
i([ n(0) ], St.prototype, "score", void 0);
o.ScoreInfo = St;
class It extends a {
constructor() {
super(...arguments);
this.id = "";
this.creativeSourceUId = "";
this.comprehensiveScore = 0;
this.lastPublishTime = 0;
}
}
i([ n(0) ], It.prototype, "id", void 0);
i([ n(0) ], It.prototype, "creativeSourceUId", void 0);
i([ n(0) ], It.prototype, "comprehensiveScore", void 0);
i([ n(0) ], It.prototype, "lastPublishTime", void 0);
o.SecondaryGameData = It;
class Gt extends a {
constructor() {
super(...arguments);
this.talkId = "";
this.id = "";
this.playerId = 0;
this.content = {};
this.userLevel = 0;
this.userImg = "";
this.userName = "";
this.userIntro = "";
this.replayCommentId = "";
this.targetPlayerId = 0;
this.targetPlayerName = "";
this.thumbCnt = 0;
this.reportCnt = 0;
this.subCommentsCnt = 0;
this.commentIds = new Array();
this.openCnt = 0;
this.comments = new Array();
this.status = G.noPublish;
this.offReason = new te();
this.stamp = 0;
}
}
i([ n(0) ], Gt.prototype, "talkId", void 0);
i([ n(0) ], Gt.prototype, "id", void 0);
i([ n(0) ], Gt.prototype, "playerId", void 0);
i([ n(0) ], Gt.prototype, "content", void 0);
i([ n(0) ], Gt.prototype, "userLevel", void 0);
i([ n(0) ], Gt.prototype, "userImg", void 0);
i([ n(0) ], Gt.prototype, "userName", void 0);
i([ n(0) ], Gt.prototype, "userIntro", void 0);
i([ n(0) ], Gt.prototype, "replayCommentId", void 0);
i([ n(0) ], Gt.prototype, "targetPlayerId", void 0);
i([ n(0) ], Gt.prototype, "targetPlayerName", void 0);
i([ n(0) ], Gt.prototype, "thumbCnt", void 0);
i([ n(0) ], Gt.prototype, "reportCnt", void 0);
i([ n(0) ], Gt.prototype, "subCommentsCnt", void 0);
i([ n(2) ], Gt.prototype, "commentIds", void 0);
i([ n(0) ], Gt.prototype, "openCnt", void 0);
i([ n(2, Gt) ], Gt.prototype, "comments", void 0);
i([ n(0) ], Gt.prototype, "status", void 0);
i([ n(1, te) ], Gt.prototype, "offReason", void 0);
i([ n(0) ], Gt.prototype, "stamp", void 0);
o.TalkComment = Gt;
(function(e) {
e.trends = "trends";
e.chosen = "chosen";
e.official = "official";
e.top = "top";
})(w = o.TalkType || (o.TalkType = {}));
class Tt extends a {
constructor() {
super(...arguments);
this.uId = "";
this.playerId = 0;
this.userLevel = 0;
this.userImg = "";
this.userName = "";
this.userIntro = "";
this.talkType = w.trends;
this.title = "";
this.simpleContent = {};
this.content = {};
this.upCnt = 0;
this.reportCnt = 0;
this.commentsCnt = 0;
this.commentsCntSum = 0;
this.isTop = !1;
this.isUp = !1;
this.isDown = !1;
this.topComment = new Gt();
this.comments = new Array();
this.status = G.noPublish;
this.offReason = new te();
this.createStamp = 0;
this.newCommentStamp = 0;
this.upStamp = 0;
this.collectionCntSum = 0;
}
}
i([ n(0) ], Tt.prototype, "uId", void 0);
i([ n(0) ], Tt.prototype, "playerId", void 0);
i([ n(0) ], Tt.prototype, "userLevel", void 0);
i([ n(0) ], Tt.prototype, "userImg", void 0);
i([ n(0) ], Tt.prototype, "userName", void 0);
i([ n(0) ], Tt.prototype, "userIntro", void 0);
i([ n(0) ], Tt.prototype, "talkType", void 0);
i([ n(0) ], Tt.prototype, "title", void 0);
i([ n(0) ], Tt.prototype, "simpleContent", void 0);
i([ n(0) ], Tt.prototype, "content", void 0);
i([ n(0) ], Tt.prototype, "upCnt", void 0);
i([ n(0) ], Tt.prototype, "reportCnt", void 0);
i([ n(0) ], Tt.prototype, "commentsCnt", void 0);
i([ n(0) ], Tt.prototype, "commentsCntSum", void 0);
i([ n(0) ], Tt.prototype, "isTop", void 0);
i([ n(0) ], Tt.prototype, "isUp", void 0);
i([ n(0) ], Tt.prototype, "isDown", void 0);
i([ n(1, Gt) ], Tt.prototype, "topComment", void 0);
i([ n(2, Gt) ], Tt.prototype, "comments", void 0);
i([ n(0) ], Tt.prototype, "status", void 0);
i([ n(1, te) ], Tt.prototype, "offReason", void 0);
i([ n(0) ], Tt.prototype, "createStamp", void 0);
i([ n(0) ], Tt.prototype, "newCommentStamp", void 0);
i([ n(0) ], Tt.prototype, "upStamp", void 0);
i([ n(0) ], Tt.prototype, "collectionCntSum", void 0);
o.TalkData = Tt;
(function(e) {
e.talkTime = "talkTime";
e.thumbCnt = "thumbCnt";
e.newCommentTime = "newCommentTime";
})(o.TalkSortType || (o.TalkSortType = {}));
class bt extends a {
constructor() {
super(...arguments);
this.uId = "";
this.talkId = "";
this.id = "";
this.upCnt = 0;
this.reportCnt = 0;
this.commentsCnt = 0;
this.commentsCntSum = 0;
this.topComment = new Gt();
this.comments = new Array();
}
}
i([ n(0) ], bt.prototype, "uId", void 0);
i([ n(0) ], bt.prototype, "talkId", void 0);
i([ n(0) ], bt.prototype, "id", void 0);
i([ n(0) ], bt.prototype, "upCnt", void 0);
i([ n(0) ], bt.prototype, "reportCnt", void 0);
i([ n(0) ], bt.prototype, "commentsCnt", void 0);
i([ n(0) ], bt.prototype, "commentsCntSum", void 0);
i([ n(1, Gt) ], bt.prototype, "topComment", void 0);
i([ n(2, Gt) ], bt.prototype, "comments", void 0);
o.TalkTopComment = bt;
class Mt extends a {
constructor() {
super(...arguments);
this.playerId = 0;
this.userName = "";
this.userImg = "";
this.userIntro = "";
this.level = 0;
this.isFollow = !1;
this.fansCount = 0;
this.followCount = 0;
this.goodsIds = new Array();
this.gameDatas = new Array();
}
}
i([ n(0) ], Mt.prototype, "playerId", void 0);
i([ n(0) ], Mt.prototype, "userName", void 0);
i([ n(0) ], Mt.prototype, "userImg", void 0);
i([ n(0) ], Mt.prototype, "userIntro", void 0);
i([ n(0) ], Mt.prototype, "level", void 0);
i([ n(0) ], Mt.prototype, "isFollow", void 0);
i([ n(0) ], Mt.prototype, "fansCount", void 0);
i([ n(0) ], Mt.prototype, "followCount", void 0);
i([ n(2) ], Mt.prototype, "goodsIds", void 0);
i([ n(2, $) ], Mt.prototype, "gameDatas", void 0);
o.UserDetailMsg = Mt;
class Pt extends a {
constructor() {
super(...arguments);
this.playerId = 0;
this.channel = "";
this.userName = "";
this.userImg = "";
this.userIntro = "";
this.level = 0;
this.isFollow = !1;
}
}
i([ n(0) ], Pt.prototype, "playerId", void 0);
i([ n(0) ], Pt.prototype, "channel", void 0);
i([ n(0) ], Pt.prototype, "userName", void 0);
i([ n(0) ], Pt.prototype, "userImg", void 0);
i([ n(0) ], Pt.prototype, "userIntro", void 0);
i([ n(0) ], Pt.prototype, "level", void 0);
i([ n(0) ], Pt.prototype, "isFollow", void 0);
o.UserSimpleMsg = Pt;
class Dt extends a {
constructor() {
super(...arguments);
this.gameId = "";
this.id = "";
this.data = {};
}
}
i([ n(0) ], Dt.prototype, "gameId", void 0);
i([ n(0) ], Dt.prototype, "id", void 0);
i([ n(0) ], Dt.prototype, "data", void 0);
o.VariableData = Dt;
cc._RF.pop();
}, {} ],
dts: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "11e8c2+/XJAtochl9kDivXx", "dts");
Object.defineProperty(o, "__esModule", {
value: !0
});
o.DiySaveData = o.RType = void 0;
(function(e) {
e.energy = "energy";
e.energyBig = "energyBig";
e.coin = "coin";
e.coins = "coins";
e.rareStar = "rareStar";
e.title = "title";
e.jigsaw = "jigsaw";
})(o.RType || (o.RType = {}));
o.DiySaveData = class {
constructor() {
this.time = 0;
this.musicName = "";
this.beatCnt = 0;
this.beatsId = 0;
this.tapeId = 0;
}
};
cc._RF.pop();
}, {} ],
fix: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "fac3avJgCJLapaP7iBezjC0", "fix");
Object.defineProperty(o, "__esModule", {
value: !0
});
const i = e("../../../i18n/i18nMgr");
Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
enumerable: !1,
value: function(e) {
return -1 !== this.indexOf(e);
}
});
cc.Node.prototype.getComponentInParent = function(e) {
let t, o = this;
for (;!(t = o.getComponent(e)) && (o = o.parent) && !(o instanceof cc.Scene); ) ;
return t;
};
cc.Node.prototype.getComponentsInParent = function(e) {
let t = [], o = this;
do {
let i = o.getComponent(e);
i && t.push(i);
} while ((o = o.parent) && !(o instanceof cc.Scene));
return t;
};
(function() {
if (cc.WXSubContextView) {
let e = cc.WXSubContextView.prototype.onLoad;
cc.WXSubContextView.prototype.onLoad = function() {
this._tex.initWithData(new Uint8Array(new ArrayBuffer(4)), cc.Texture2D.PixelFormat.RGBA8888, 1, 1);
e.call(this);
};
}
})();
(function() {
let e = Object.getOwnPropertyDescriptor(cc.Label.prototype, "string");
Object.defineProperty(cc.Label.prototype, "string", {
get: function() {
return e.get.call(this);
},
set: function(t) {
e.set.call(this, i.I18nMgr.getI18nStringByZh(t));
}
});
})();
cc._RF.pop();
}, {
"../../../i18n/i18nMgr": "i18nMgr"
} ],
i18nLabel: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "7b7576IAS1F7oCZiotK0GfF", "i18nLabel");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const n = e("./i18nMgr"), {ccclass: a, property: s, executeInEditMode: r, menu: l, inspector: c} = cc._decorator;
let d = class extends cc.Label {
constructor() {
super(...arguments);
this._tid = "";
}
set tid(e) {
this._tid = e;
let t = n.I18nMgr.getI18nString(this._tid);
t && (this.string = t);
}
get tid() {
return this._tid;
}
onLoad() {
super.onLoad();
n.I18nMgr.addLabel(this);
this.tid = this._tid;
}
onDestroy() {
super.onDestroy();
n.I18nMgr.delLabel(this);
}
refreshLabel() {
this.tid = this._tid;
}
};
i([ s() ], d.prototype, "_tid", void 0);
i([ s({
multiline: !0,
tooltip: "多语言 text id"
}) ], d.prototype, "tid", null);
d = i([ a, r(), c("packages://i18n_peimin/inspectors/i18nLabel.js") ], d);
o.default = d;
cc._RF.pop();
}, {
"./i18nMgr": "i18nMgr"
} ],
i18nMgr: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "1e36aJmHntDxqZis49hy52h", "i18nMgr");
var i, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.I18nMgr = void 0;
(function(e) {
e[e.notInit = 0] = "notInit";
e[e.initializing = 1] = "initializing";
e[e.initialized = 2] = "initialized";
})(i || (i = {}));
class a {
static checkInit() {
return n(this, void 0, void 0, function*() {
switch (this.initState) {
case i.notInit:
this.initState = i.initializing;
yield new Promise((e, t) => {
cc.resources.load([ "i18n/languages", "i18n/config" ], (o, n) => {
let a = {};
if (o) {
console.error(o);
this.labelData = {};
this.initState = i.notInit;
t();
} else {
this.labelData = n[0].json;
a = n[1].json;
this.setLanguage(a.usingLan);
this.initState = i.initialized;
e(!0);
}
});
});
break;

case i.initializing:
case i.initialized:
}
});
}
static setLanguage(e) {
if (this.language !== e) {
this.language = e;
this.reloadLabel();
this.reloadSprite();
}
}
static addLabel(e) {
this.labelArr.push(e);
}
static delLabel(e) {
let t = this.labelArr.indexOf(e);
-1 !== t && this.labelArr.splice(t, 1);
}
static getI18nString(e) {
var t;
this.checkInit();
return null === (t = this.labelData[e]) || void 0 === t ? void 0 : t[this.language];
}
static getI18nStringByZh(e) {
this.checkInit();
for (const t in this.labelData) {
let o = this.labelData[t];
if (o.zh == e) return o[this.language];
}
return e;
}
static exceI18nStringByZh(e, t) {
let o = this.getI18nStringByZh(e);
t.forEach(e => {
o = o.replace(`\${${e.paramName}}`, `${e.param}`);
});
return o;
}
static getI18nTidByZh(e) {
this.checkInit();
for (const t in this.labelData) if (this.labelData[t].zh == e) return t;
return "";
}
static _addOrDelSprite(e, t) {
if (t) this.spriteArr.push(e); else {
let t = this.spriteArr.indexOf(e);
-1 !== t && this.spriteArr.splice(t, 1);
}
}
static getSprite(e, t) {
this.checkInit();
cc.resources.load("i18n/sprite/" + this.language + "/" + e, cc.SpriteFrame, (e, o) => {
if (e) return t(null);
t(o);
});
}
static reloadLabel() {
this.checkInit().then(() => {
for (let e of this.labelArr) e.refreshLabel();
});
}
static reloadSprite() {
for (let e of this.spriteArr) e._resetValue();
}
}
o.I18nMgr = a;
a.language = "";
a.labelArr = [];
a.labelData = {};
a.spriteArr = [];
a.initState = i.notInit;
cc._RF.pop();
}, {} ],
i18nSprite: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "0ffbcbl89xEj5yYYH4SQgf+", "i18nSprite");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.i18nSprite = void 0;
const n = e("./i18nMgr"), {ccclass: a, property: s, executeInEditMode: r, disallowMultiple: l, requireComponent: c, menu: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.i18n_string = "";
}
start() {
n.I18nMgr._addOrDelSprite(this, !0);
this._resetValue();
}
get string() {
return this.i18n_string;
}
set string(e) {
this.i18n_string = e;
let t = this.getComponent(cc.Sprite);
cc.isValid(t) && n.I18nMgr.getSprite(e, e => {
cc.isValid(t) && (t.spriteFrame = e);
});
}
_resetValue() {
this.string = this.i18n_string;
}
onDestroy() {
n.I18nMgr._addOrDelSprite(this, !1);
}
};
i([ s({
visible: !1
}) ], h.prototype, "i18n_string", void 0);
i([ s({
type: cc.String
}) ], h.prototype, "string", null);
h = i([ a, r, c(cc.Sprite), l, d("多语言/i18nSprite") ], h);
o.i18nSprite = h;
cc._RF.pop();
}, {
"./i18nMgr": "i18nMgr"
} ],
"image-share": [ function(e, t, o) {
"use strict";
cc._RF.push(t, "f98fajLMJVEoaCzVClb2a9E", "image-share");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
}, n = this && this.__awaiter || function(e, t, o, i) {
return new (o || (o = Promise))(function(n, a) {
function s(e) {
try {
l(i.next(e));
} catch (e) {
a(e);
}
}
function r(e) {
try {
l(i.throw(e));
} catch (e) {
a(e);
}
}
function l(e) {
e.done ? n(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
e(t);
})).then(s, r);
var t;
}
l((i = i.apply(e, t || [])).next());
});
};
Object.defineProperty(o, "__esModule", {
value: !0
});
const a = e("../Game/GameEnv"), s = e("./qr-code"), r = e("./Util"), {menu: l, ccclass: c, property: d} = cc._decorator;
let h = class extends cc.Component {
constructor() {
super(...arguments);
this.qrCode = null;
this.labelTitle = null;
this.labelInfo = null;
this.gameCover = null;
this.spQrCode = null;
this.spDebug = null;
}
fillData(e) {
e = e.replace(/:/g, "_");
console.log(">>queryStr>>" + e);
this.qrCode.string = `https://ios-app.hortorgames.com/creator/#/?gameId=${a.gameEnv.appGameId}&channel=${a.gameEnv.androidChannel}&${e}`;
console.log(">>qrCode>>" + this.qrCode.string);
this.qrCode.setContent();
}
generateShareImage(e, t, o, i) {
return n(this, void 0, void 0, function*() {
let n = this.node.width, a = this.node.height;
this.node.active = !0;
this.node.scaleY = -1;
this.labelTitle.string = o;
this.labelInfo.string = i;
r.Util.updateLabel(this.labelTitle);
r.Util.updateLabel(this.labelInfo);
r.Util.updateAllLayout(this.node);
this.fillData(e);
this.gameCover.spriteFrame = t;
let s = r.Util.screenShotToTexture(this.node);
this.node.active = !1;
let l = s.readPixels();
this.spDebug && this.spDebug.node.active && (this.spDebug.spriteFrame = new cc.SpriteFrame(s));
{
const e = jsb.fileUtils.getWritablePath() + "share.png";
jsb.saveImageData(l, n, a, e);
return e;
}
});
}
};
i([ d(s.QRCodeComponent) ], h.prototype, "qrCode", void 0);
i([ d(cc.Label) ], h.prototype, "labelTitle", void 0);
i([ d(cc.Label) ], h.prototype, "labelInfo", void 0);
i([ d(cc.Sprite) ], h.prototype, "gameCover", void 0);
i([ d(cc.Sprite) ], h.prototype, "spQrCode", void 0);
i([ d(cc.Sprite) ], h.prototype, "spDebug", void 0);
h = i([ c ], h);
o.default = h;
cc._RF.pop();
}, {
"../Game/GameEnv": "GameEnv",
"./Util": "Util",
"./qr-code": "qr-code"
} ],
index: [ function(e, t, o) {
"use strict";
cc._RF.push(t, "c1744j9A6lO175PgdWw2Y1/", "index");
var i = this && this.__createBinding || (Object.create ? function(e, t, o, i) {
void 0 === i && (i = o);
Object.defineProperty(e, i, {
enumerable: !0,
get: function() {
return t[o];
}
});
} : function(e, t, o, i) {
void 0 === i && (i = o);
e[i] = t[o];
}), n = this && this.__exportStar || function(e, t) {
for (var o in e) "default" === o || Object.prototype.hasOwnProperty.call(t, o) || i(t, e, o);
};
Object.defineProperty(o, "__esModule", {
value: !0
});
n(e("./GameScriptDefines"), o);
n(e("./GameScriptData"), o);
n(e("./GameScriptValueType"), o);
n(e("./GSVariable"), o);
n(e("./GSRunner"), o);
n(e("./GSParam"), o);
n(e("./GSUtil"), o);
n(e("./GSMng"), o);
n(e("./GSVariableMng"), o);
n(e("./GSRunnerMng"), o);
n(e("./GSCmdMng"), o);
n(e("./executes/GSInstructionHelper"), o);
n(e("./executes/GSExecuteBlock"), o);
n(e("./executes/GSExecuteCall"), o);
n(e("./executes/GSExecuteCompare"), o);
n(e("./executes/GSExecuteIf"), o);
n(e("./executes/GSExecuteIfElse"), o);
n(e("./executes/GSExecuteLogic"), o);
n(e("./executes/GSExecuteWhile"), o);
n(e("./executes/GSExecuteWhileCount"), o);
n(e("./executes/GSExecuteBreak"), o);
n(e("./commands/GSCmdTest"), o);
n(e("./commands/GSCmdAwait"), o);
n(e("./commands/GSCmdSetVariable"), o);
cc._RF.pop();
}, {
"./GSCmdMng": "GSCmdMng",
"./GSMng": "GSMng",
"./GSParam": "GSParam",
"./GSRunner": "GSRunner",
"./GSRunnerMng": "GSRunnerMng",
"./GSUtil": "GSUtil",
"./GSVariable": "GSVariable",
"./GSVariableMng": "GSVariableMng",
"./GameScriptData": "GameScriptData",
"./GameScriptDefines": "GameScriptDefines",
"./GameScriptValueType": "GameScriptValueType",
"./commands/GSCmdAwait": "GSCmdAwait",
"./commands/GSCmdSetVariable": "GSCmdSetVariable",
"./commands/GSCmdTest": "GSCmdTest",
"./executes/GSExecuteBlock": "GSExecuteBlock",
"./executes/GSExecuteBreak": "GSExecuteBreak",
"./executes/GSExecuteCall": "GSExecuteCall",
"./executes/GSExecuteCompare": "GSExecuteCompare",
"./executes/GSExecuteIf": "GSExecuteIf",
"./executes/GSExecuteIfElse": "GSExecuteIfElse",
"./executes/GSExecuteLogic": "GSExecuteLogic",
"./executes/GSExecuteWhile": "GSExecuteWhile",
"./executes/GSExecuteWhileCount": "GSExecuteWhileCount",
"./executes/GSInstructionHelper": "GSInstructionHelper"
} ],
"qr-code": [ function(e, t, o) {
"use strict";
cc._RF.push(t, "630f8S0LfVOeJzzp2UtdJ+v", "qr-code");
var i = this && this.__decorate || function(e, t, o, i) {
var n, a = arguments.length, s = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, o) : i;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, o, i); else for (var r = e.length - 1; r >= 0; r--) (n = e[r]) && (s = (a < 3 ? n(s) : a > 3 ? n(t, o, s) : n(t, o)) || s);
return a > 3 && s && Object.defineProperty(t, o, s), s;
};
Object.defineProperty(o, "__esModule", {
value: !0
});
o.QRCodeComponent = void 0;
let n = {
MODE_NUMBER: 1,
MODE_ALPHA_NUM: 2,
MODE_8BIT_BYTE: 4,
MODE_KANJI: 8
}, a = {
L: 1,
M: 0,
Q: 3,
H: 2
}, s = {
PATTERN000: 0,
PATTERN001: 1,
PATTERN010: 2,
PATTERN011: 3,
PATTERN100: 4,
PATTERN101: 5,
PATTERN110: 6,
PATTERN111: 7
};
class r {
constructor(e) {
this.data = e;
this.mode = n.MODE_8BIT_BYTE;
}
getLength(e) {
return this.data.length;
}
write(e) {
for (let t = 0; t < this.data.length; t++) e.put(this.data.charCodeAt(t), 8);
}
}
class l {
static getBCHTypeInfo(e) {
let t = e << 10;
for (;l.getBCHDigit(t) - l.getBCHDigit(l.G15) >= 0; ) t ^= l.G15 << l.getBCHDigit(t) - l.getBCHDigit(l.G15);
return (e << 10 | t) ^ l.G15_MASK;
}
static getBCHTypeNumber(e) {
let t = e << 12;
for (;l.getBCHDigit(t) - l.getBCHDigit(l.G18) >= 0; ) t ^= l.G18 << l.getBCHDigit(t) - l.getBCHDigit(l.G18);
return e << 12 | t;
}
static getBCHDigit(e) {
let t = 0;
for (;0 != e; ) {
t++;
e >>>= 1;
}
return t;
}
static getPatternPosition(e) {
return l.PATTERN_POSITION_TABLE[e - 1];
}
static getMask(e, t, o) {
switch (e) {
case s.PATTERN000:
return (t + o) % 2 == 0;

case s.PATTERN001:
return t % 2 == 0;

case s.PATTERN010:
return o % 3 == 0;

case s.PATTERN011:
return (t + o) % 3 == 0;

case s.PATTERN100:
return (Math.floor(t / 2) + Math.floor(o / 3)) % 2 == 0;

case s.PATTERN101:
return t * o % 2 + t * o % 3 == 0;

case s.PATTERN110:
return (t * o % 2 + t * o % 3) % 2 == 0;

case s.PATTERN111:
return (t * o % 3 + (t + o) % 2) % 2 == 0;

default:
throw new Error("bad maskPattern:" + e);
}
}
static getErrorCorrectPolynomial(e) {
let t = new d([ 1 ], 0);
for (let o = 0; o < e; o++) t = t.multiply(new d([ 1, c.gexp(o) ], 0));
return t;
}
static getLengthInBits(e, t) {
if (1 <= t && t < 10) switch (e) {
case n.MODE_NUMBER:
return 10;

case n.MODE_ALPHA_NUM:
return 9;

case n.MODE_8BIT_BYTE:
case n.MODE_KANJI:
return 8;

default:
throw new Error("mode:" + e);
} else if (t < 27) switch (e) {
case n.MODE_NUMBER:
return 12;

case n.MODE_ALPHA_NUM:
return 11;

case n.MODE_8BIT_BYTE:
return 16;

case n.MODE_KANJI:
return 10;

default:
throw new Error("mode:" + e);
} else {
if (!(t < 41)) throw new Error("type:" + t);
switch (e) {
case n.MODE_NUMBER:
return 14;

case n.MODE_ALPHA_NUM:
return 13;

case n.MODE_8BIT_BYTE:
return 16;

case n.MODE_KANJI:
return 12;

default:
throw new Error("mode:" + e);
}
}
}
static getLostPoint(e) {
let t = e.getModuleCount(), o = 0;
for (let i = 0; i < t; i++) for (let n = 0; n < t; n++) {
let a = 0, s = e.isDark(i, n);
for (let o = -1; o <= 1; o++) if (!(i + o < 0 || t <= i + o)) for (let r = -1; r <= 1; r++) n + r < 0 || t <= n + r || 0 == o && 0 == r || s == e.isDark(i + o, n + r) && a++;
a > 5 && (o += 3 + a - 5);
}
for (let i = 0; i < t - 1; i++) for (let n = 0; n < t - 1; n++) {
let t = 0;
e.isDark(i, n) && t++;
e.isDark(i + 1, n) && t++;
e.isDark(i, n + 1) && t++;
e.isDark(i + 1, n + 1) && t++;
0 != t && 4 != t || (o += 3);
}
for (let i = 0; i < t; i++) for (let n = 0; n < t - 6; n++) e.isDark(i, n) && !e.isDark(i, n + 1) && e.isDark(i, n + 2) && e.isDark(i, n + 3) && e.isDark(i, n + 4) && !e.isDark(i, n + 5) && e.isDark(i, n + 6) && (o += 40);
for (let i = 0; i < t; i++) for (let n = 0; n < t - 6; n++) e.isDark(n, i) && !e.isDark(n + 1, i) && e.isDark(n + 2, i) && e.isDark(n + 3, i) && e.isDark(n + 4, i) && !e.isDark(n + 5, i) && e.isDark(n + 6, i) && (o += 40);
let i = 0;
for (let o = 0; o < t; o++) for (let n = 0; n < t; n++) e.isDark(n, o) && i++;
return o + Math.abs(100 * i / t / t - 50) / 5 * 10;
}
}
l.PATTERN_POSITION_TABLE = [ [], [ 6, 18 ], [ 6, 22 ], [ 6, 26 ], [ 6, 30 ], [ 6, 34 ], [ 6, 22, 38 ], [ 6, 24, 42 ], [ 6, 26, 46 ], [ 6, 28, 50 ], [ 6, 30, 54 ], [ 6, 32, 58 ], [ 6, 34, 62 ], [ 6, 26, 46, 66 ], [ 6, 26, 48, 70 ], [ 6, 26, 50, 74 ], [ 6, 30, 54, 78 ], [ 6, 30, 56, 82 ], [ 6, 30, 58, 86 ], [ 6, 34, 62, 90 ], [ 6, 28, 50, 72, 94 ], [ 6, 26, 50, 74, 98 ], [ 6, 30, 54, 78, 102 ], [ 6, 28, 54, 80, 106 ], [ 6, 32, 58, 84, 110 ], [ 6, 30, 58, 86, 114 ], [ 6, 34, 62, 90, 118 ], [ 6, 26, 50, 74, 98, 122 ], [ 6, 30, 54, 78, 102, 126 ], [ 6, 26, 52, 78, 104, 130 ], [ 6, 30, 56, 82, 108, 134 ], [ 6, 34, 60, 86, 112, 138 ], [ 6, 30, 58, 86, 114, 142 ], [ 6, 34, 62, 90, 118, 146 ], [ 6, 30, 54, 78, 102, 126, 150 ], [ 6, 24, 50, 76, 102, 128, 154 ], [ 6, 28, 54, 80, 106, 132, 158 ], [ 6, 32, 58, 84, 110, 136, 162 ], [ 6, 26, 54, 82, 110, 138, 166 ], [ 6, 30, 58, 86, 114, 142, 170 ] ];
l.G15 = 1335;
l.G18 = 7973;
l.G15_MASK = 21522;
let c = {
glog: function(e) {
if (e < 1) throw new Error("glog(" + e + ")");
return c.LOG_TABLE[e];
},
gexp: function(e) {
for (;e < 0; ) e += 255;
for (;e >= 256; ) e -= 255;
return c.EXP_TABLE[e];
},
EXP_TABLE: new Array(256),
LOG_TABLE: new Array(256)
};
for (let e = 0; e < 8; e++) c.EXP_TABLE[e] = 1 << e;
for (let e = 8; e < 256; e++) c.EXP_TABLE[e] = c.EXP_TABLE[e - 4] ^ c.EXP_TABLE[e - 5] ^ c.EXP_TABLE[e - 6] ^ c.EXP_TABLE[e - 8];
for (let e = 0; e < 255; e++) c.LOG_TABLE[c.EXP_TABLE[e]] = e;
class d {
constructor(e, t) {
if (null == e.length) throw new Error(e.length + "/" + t);
let o = 0;
for (;o < e.length && 0 == e[o]; ) o++;
this.num = new Array(e.length - o + t);
for (let t = 0; t < e.length - o; t++) this.num[t] = e[t + o];
}
get(e) {
return this.num[e];
}
getLength() {
return this.num.length;
}
multiply(e) {
let t = new Array(this.getLength() + e.getLength() - 1);
for (let o = 0; o < this.getLength(); o++) for (let i = 0; i < e.getLength(); i++) t[o + i] ^= c.gexp(c.glog(this.get(o)) + c.glog(e.get(i)));
return new d(t, 0);
}
mod(e) {
if (this.getLength() - e.getLength() < 0) return this;
let t = c.glog(this.get(0)) - c.glog(e.get(0)), o = new Array(this.getLength());
for (let e = 0; e < this.getLength(); e++) o[e] = this.get(e);
for (let i = 0; i < e.getLength(); i++) o[i] ^= c.gexp(c.glog(e.get(i)) + t);
return new d(o, 0).mod(e);
}
}
class h {
constructor(e, t) {
this.totalCount = e;
this.dataCount = t;
}
static getRSBlocks(e, t) {
let o = h.getRsBlockTable(e, t);
if (null == o) throw new Error("bad rs block @ typeNumber:" + e + "/errorCorrectLevel:" + t);
let i = o.length / 3, n = new Array();
for (let e = 0; e < i; e++) {
let t = o[3 * e + 0], i = o[3 * e + 1], a = o[3 * e + 2];
for (let e = 0; e < t; e++) n.push(new h(i, a));
}
return n;
}
static getRsBlockTable(e, t) {
switch (t) {
case a.L:
return h.RS_BLOCK_TABLE[4 * (e - 1) + 0];

case a.M:
return h.RS_BLOCK_TABLE[4 * (e - 1) + 1];

case a.Q:
return h.RS_BLOCK_TABLE[4 * (e - 1) + 2];

case a.H:
return h.RS_BLOCK_TABLE[4 * (e - 1) + 3];

default:
return;
}
}
}
h.RS_BLOCK_TABLE = [ [ 1, 26, 19 ], [ 1, 26, 16 ], [ 1, 26, 13 ], [ 1, 26, 9 ], [ 1, 44, 34 ], [ 1, 44, 28 ], [ 1, 44, 22 ], [ 1, 44, 16 ], [ 1, 70, 55 ], [ 1, 70, 44 ], [ 2, 35, 17 ], [ 2, 35, 13 ], [ 1, 100, 80 ], [ 2, 50, 32 ], [ 2, 50, 24 ], [ 4, 25, 9 ], [ 1, 134, 108 ], [ 2, 67, 43 ], [ 2, 33, 15, 2, 34, 16 ], [ 2, 33, 11, 2, 34, 12 ], [ 2, 86, 68 ], [ 4, 43, 27 ], [ 4, 43, 19 ], [ 4, 43, 15 ], [ 2, 98, 78 ], [ 4, 49, 31 ], [ 2, 32, 14, 4, 33, 15 ], [ 4, 39, 13, 1, 40, 14 ], [ 2, 121, 97 ], [ 2, 60, 38, 2, 61, 39 ], [ 4, 40, 18, 2, 41, 19 ], [ 4, 40, 14, 2, 41, 15 ], [ 2, 146, 116 ], [ 3, 58, 36, 2, 59, 37 ], [ 4, 36, 16, 4, 37, 17 ], [ 4, 36, 12, 4, 37, 13 ], [ 2, 86, 68, 2, 87, 69 ], [ 4, 69, 43, 1, 70, 44 ], [ 6, 43, 19, 2, 44, 20 ], [ 6, 43, 15, 2, 44, 16 ], [ 4, 101, 81 ], [ 1, 80, 50, 4, 81, 51 ], [ 4, 50, 22, 4, 51, 23 ], [ 3, 36, 12, 8, 37, 13 ], [ 2, 116, 92, 2, 117, 93 ], [ 6, 58, 36, 2, 59, 37 ], [ 4, 46, 20, 6, 47, 21 ], [ 7, 42, 14, 4, 43, 15 ], [ 4, 133, 107 ], [ 8, 59, 37, 1, 60, 38 ], [ 8, 44, 20, 4, 45, 21 ], [ 12, 33, 11, 4, 34, 12 ], [ 3, 145, 115, 1, 146, 116 ], [ 4, 64, 40, 5, 65, 41 ], [ 11, 36, 16, 5, 37, 17 ], [ 11, 36, 12, 5, 37, 13 ], [ 5, 109, 87, 1, 110, 88 ], [ 5, 65, 41, 5, 66, 42 ], [ 5, 54, 24, 7, 55, 25 ], [ 11, 36, 12 ], [ 5, 122, 98, 1, 123, 99 ], [ 7, 73, 45, 3, 74, 46 ], [ 15, 43, 19, 2, 44, 20 ], [ 3, 45, 15, 13, 46, 16 ], [ 1, 135, 107, 5, 136, 108 ], [ 10, 74, 46, 1, 75, 47 ], [ 1, 50, 22, 15, 51, 23 ], [ 2, 42, 14, 17, 43, 15 ], [ 5, 150, 120, 1, 151, 121 ], [ 9, 69, 43, 4, 70, 44 ], [ 17, 50, 22, 1, 51, 23 ], [ 2, 42, 14, 19, 43, 15 ], [ 3, 141, 113, 4, 142, 114 ], [ 3, 70, 44, 11, 71, 45 ], [ 17, 47, 21, 4, 48, 22 ], [ 9, 39, 13, 16, 40, 14 ], [ 3, 135, 107, 5, 136, 108 ], [ 3, 67, 41, 13, 68, 42 ], [ 15, 54, 24, 5, 55, 25 ], [ 15, 43, 15, 10, 44, 16 ], [ 4, 144, 116, 4, 145, 117 ], [ 17, 68, 42 ], [ 17, 50, 22, 6, 51, 23 ], [ 19, 46, 16, 6, 47, 17 ], [ 2, 139, 111, 7, 140, 112 ], [ 17, 74, 46 ], [ 7, 54, 24, 16, 55, 25 ], [ 34, 37, 13 ], [ 4, 151, 121, 5, 152, 122 ], [ 4, 75, 47, 14, 76, 48 ], [ 11, 54, 24, 14, 55, 25 ], [ 16, 45, 15, 14, 46, 16 ], [ 6, 147, 117, 4, 148, 118 ], [ 6, 73, 45, 14, 74, 46 ], [ 11, 54, 24, 16, 55, 25 ], [ 30, 46, 16, 2, 47, 17 ], [ 8, 132, 106, 4, 133, 107 ], [ 8, 75, 47, 13, 76, 48 ], [ 7, 54, 24, 22, 55, 25 ], [ 22, 45, 15, 13, 46, 16 ], [ 10, 142, 114, 2, 143, 115 ], [ 19, 74, 46, 4, 75, 47 ], [ 28, 50, 22, 6, 51, 23 ], [ 33, 46, 16, 4, 47, 17 ], [ 8, 152, 122, 4, 153, 123 ], [ 22, 73, 45, 3, 74, 46 ], [ 8, 53, 23, 26, 54, 24 ], [ 12, 45, 15, 28, 46, 16 ], [ 3, 147, 117, 10, 148, 118 ], [ 3, 73, 45, 23, 74, 46 ], [ 4, 54, 24, 31, 55, 25 ], [ 11, 45, 15, 31, 46, 16 ], [ 7, 146, 116, 7, 147, 117 ], [ 21, 73, 45, 7, 74, 46 ], [ 1, 53, 23, 37, 54, 24 ], [ 19, 45, 15, 26, 46, 16 ], [ 5, 145, 115, 10, 146, 116 ], [ 19, 75, 47, 10, 76, 48 ], [ 15, 54, 24, 25, 55, 25 ], [ 23, 45, 15, 25, 46, 16 ], [ 13, 145, 115, 3, 146, 116 ], [ 2, 74, 46, 29, 75, 47 ], [ 42, 54, 24, 1, 55, 25 ], [ 23, 45, 15, 28, 46, 16 ], [ 17, 145, 115 ], [ 10, 74, 46, 23, 75, 47 ], [ 10, 54, 24, 35, 55, 25 ], [ 19, 45, 15, 35, 46, 16 ], [ 17, 145, 115, 1, 146, 116 ], [ 14, 74, 46, 21, 75, 47 ], [ 29, 54, 24, 19, 55, 25 ], [ 11, 45, 15, 46, 46, 16 ], [ 13, 145, 115, 6, 146, 116 ], [ 14, 74, 46, 23, 75, 47 ], [ 44, 54, 24, 7, 55, 25 ], [ 59, 46, 16, 1, 47, 17 ], [ 12, 151, 121, 7, 152, 122 ], [ 12, 75, 47, 26, 76, 48 ], [ 39, 54, 24, 14, 55, 25 ], [ 22, 45, 15, 41, 46, 16 ], [ 6, 151, 121, 14, 152, 122 ], [ 6, 75, 47, 34, 76, 48 ], [ 46, 54, 24, 10, 55, 25 ], [ 2, 45, 15, 64, 46, 16 ], [ 17, 152, 122, 4, 153, 123 ], [ 29, 74, 46, 14, 75, 47 ], [ 49, 54, 24, 10, 55, 25 ], [ 24, 45, 15, 46, 46, 16 ], [ 4, 152, 122, 18, 153, 123 ], [ 13, 74, 46, 32, 75, 47 ], [ 48, 54, 24, 14, 55, 25 ], [ 42, 45, 15, 32, 46, 16 ], [ 20, 147, 117, 4, 148, 118 ], [ 40, 75, 47, 7, 76, 48 ], [ 43, 54, 24, 22, 55, 25 ], [ 10, 45, 15, 67, 46, 16 ], [ 19, 148, 118, 6, 149, 119 ], [ 18, 75, 47, 31, 76, 48 ], [ 34, 54, 24, 34, 55, 25 ], [ 20, 45, 15, 61, 46, 16 ] ];
class p {
constructor() {
this.buffer = [];
this.length = 0;
}
get(e) {
let t = Math.floor(e / 8);
return 1 == (this.buffer[t] >>> 7 - e % 8 & 1);
}
put(e, t) {
for (let o = 0; o < t; o++) this.putBit(1 == (e >>> t - o - 1 & 1));
}
getLengthInBits() {
return this.length;
}
putBit(e) {
let t = Math.floor(this.length / 8);
this.buffer.length <= t && this.buffer.push(0);
e && (this.buffer[t] |= 128 >>> this.length % 8);
this.length++;
}
}
class u {
constructor(e, t) {
this.typeNumber = e;
this.errorCorrectLevel = t;
this.moduleCount = 0;
this.dataList = [];
}
static createData(e, t, o) {
let i = h.getRSBlocks(e, t), n = new p();
for (let t = 0; t < o.length; t++) {
let i = o[t];
n.put(i.mode, 4);
n.put(i.getLength(), l.getLengthInBits(i.mode, e));
i.write(n);
}
let a = 0;
for (let e = 0; e < i.length; e++) a += i[e].dataCount;
if (n.getLengthInBits() > 8 * a) throw new Error("code length overflow. (" + n.getLengthInBits() + ">" + 8 * a + ")");
n.getLengthInBits() + 4 <= 8 * a && n.put(0, 4);
for (;n.getLengthInBits() % 8 != 0; ) n.putBit(!1);
for (;!(n.getLengthInBits() >= 8 * a); ) {
n.put(u.PAD0, 8);
if (n.getLengthInBits() >= 8 * a) break;
n.put(u.PAD1, 8);
}
return u.createBytes(n, i);
}
static createBytes(e, t) {
let o = 0, i = 0, n = 0, a = new Array(t.length), s = new Array(t.length);
for (let r = 0; r < t.length; r++) {
let c = t[r].dataCount, h = t[r].totalCount - c;
i = Math.max(i, c);
n = Math.max(n, h);
a[r] = new Array(c);
for (let t = 0; t < a[r].length; t++) a[r][t] = 255 & e.buffer[t + o];
o += c;
let p = l.getErrorCorrectPolynomial(h), u = new d(a[r], p.getLength() - 1).mod(p);
s[r] = new Array(p.getLength() - 1);
for (let e = 0; e < s[r].length; e++) {
let t = e + u.getLength() - s[r].length;
s[r][e] = t >= 0 ? u.get(t) : 0;
}
}
let r = 0;
for (let e = 0; e < t.length; e++) r += t[e].totalCount;
let c = new Array(r), h = 0;
for (let e = 0; e < i; e++) for (let o = 0; o < t.length; o++) e < a[o].length && (c[h++] = a[o][e]);
for (let e = 0; e < n; e++) for (let o = 0; o < t.length; o++) e < s[o].length && (c[h++] = s[o][e]);
return c;
}
addData(e) {
let t = new r(e);
this.dataList.push(t);
this.dataCache = null;
}
isDark(e, t) {
if (e < 0 || this.moduleCount <= e || t < 0 || this.moduleCount <= t) throw new Error(e + "," + t);
return this.modules[e][t];
}
getModuleCount() {
return this.moduleCount;
}
make() {
if (this.typeNumber < 1) {
let e = 1;
for (e = 1; e < 40; e++) {
let t = h.getRSBlocks(e, this.errorCorrectLevel), o = new p(), i = 0;
for (let e = 0; e < t.length; e++) i += t[e].dataCount;
for (let t = 0; t < this.dataList.length; t++) {
let i = this.dataList[t];
o.put(i.mode, 4);
o.put(i.getLength(), l.getLengthInBits(i.mode, e));
i.write(o);
}
if (o.getLengthInBits() <= 8 * i) break;
}
this.typeNumber = e;
}
this.makeImpl(!1, this.getBestMaskPattern());
}
makeImpl(e, t) {
this.moduleCount = 4 * this.typeNumber + 17;
this.modules = new Array(this.moduleCount);
for (let e = 0; e < this.moduleCount; e++) {
this.modules[e] = new Array(this.moduleCount);
for (let t = 0; t < this.moduleCount; t++) this.modules[e][t] = null;
}
this.setupPositionProbePattern(0, 0);
this.setupPositionProbePattern(this.moduleCount - 7, 0);
this.setupPositionProbePattern(0, this.moduleCount - 7);
this.setupPositionAdjustPattern();
this.setupTimingPattern();
this.setupTypeInfo(e, t);
this.typeNumber >= 7 && this.setupTypeNumber(e);
null == this.dataCache && (this.dataCache = u.createData(this.typeNumber, this.errorCorrectLevel, this.dataList));
this.mapData(this.dataCache, t);
}
setupPositionProbePattern(e, t) {
for (let o = -1; o <= 7; o++) if (!(e + o <= -1 || this.moduleCount <= e + o)) for (let i = -1; i <= 7; i++) t + i <= -1 || this.moduleCount <= t + i || (this.modules[e + o][t + i] = 0 <= o && o <= 6 && (0 == i || 6 == i) || 0 <= i && i <= 6 && (0 == o || 6 == o) || 2 <= o && o <= 4 && 2 <= i && i <= 4);
}
getBestMaskPattern() {
let e = 0, t = 0;
for (let o = 0; o < 8; o++) {
this.makeImpl(!0, o);
let i = l.getLostPoint(this);
if (0 == o || e > i) {
e = i;
t = o;
}
}
return t;
}
createMovieClip(e, t, o) {
let i = e.createEmptyMovieClip(t, o);
this.make();
for (let e = 0; e < this.modules.length; e++) {
let t = 1 * e;
for (let o = 0; o < this.modules[e].length; o++) {
let n = 1 * o;
if (this.modules[e][o]) {
i.beginFill(0, 100);
i.moveTo(n, t);
i.lineTo(n + 1, t);
i.lineTo(n + 1, t + 1);
i.lineTo(n, t + 1);
i.endFill();
}
}
}
return i;
}
setupTimingPattern() {
for (let e = 8; e < this.moduleCount - 8; e++) null == this.modules[e][6] && (this.modules[e][6] = e % 2 == 0);
for (let e = 8; e < this.moduleCount - 8; e++) null == this.modules[6][e] && (this.modules[6][e] = e % 2 == 0);
}
setupPositionAdjustPattern() {
let e = l.getPatternPosition(this.typeNumber);
for (let t = 0; t < e.length; t++) for (let o = 0; o < e.length; o++) {
let i = e[t], n = e[o];
if (null == this.modules[i][n]) for (let e = -2; e <= 2; e++) for (let t = -2; t <= 2; t++) this.modules[i + e][n + t] = -2 == e || 2 == e || -2 == t || 2 == t || 0 == e && 0 == t;
}
}
setupTypeNumber(e) {
let t = l.getBCHTypeNumber(this.typeNumber);
for (let o = 0; o < 18; o++) {
let i = !e && 1 == (t >> o & 1);
this.modules[Math.floor(o / 3)][o % 3 + this.moduleCount - 8 - 3] = i;
}
for (let o = 0; o < 18; o++) {
let i = !e && 1 == (t >> o & 1);
this.modules[o % 3 + this.moduleCount - 8 - 3][Math.floor(o / 3)] = i;
}
}
setupTypeInfo(e, t) {
let o = this.errorCorrectLevel << 3 | t, i = l.getBCHTypeInfo(o);
for (let t = 0; t < 15; t++) {
let o = !e && 1 == (i >> t & 1);
t < 6 ? this.modules[t][8] = o : t < 8 ? this.modules[t + 1][8] = o : this.modules[this.moduleCount - 15 + t][8] = o;
}
for (let t = 0; t < 15; t++) {
let o = !e && 1 == (i >> t & 1);
t < 8 ? this.modules[8][this.moduleCount - t - 1] = o : t < 9 ? this.modules[8][15 - t - 1 + 1] = o : this.modules[8][15 - t - 1] = o;
}
this.modules[this.moduleCount - 8][8] = !e;
}
mapData(e, t) {
let o = -1, i = this.moduleCount - 1, n = 7, a = 0;
for (let s = this.moduleCount - 1; s > 0; s -= 2) {
6 == s && s--;
for (;;) {
for (let o = 0; o < 2; o++) if (null == this.modules[i][s - o]) {
let r = !1;
a < e.length && (r = 1 == (e[a] >>> n & 1));
l.getMask(t, i, s - o) && (r = !r);
this.modules[i][s - o] = r;
if (-1 == --n) {
a++;
n = 7;
}
}
if ((i += o) < 0 || this.moduleCount <= i) {
i -= o;
o = -o;
break;
}
}
}
}
}
u.PAD0 = 236;
u.PAD1 = 17;
const {ccclass: m, property: f} = cc._decorator;
let g = class extends cc.Component {
constructor() {
super(...arguments);
this.string = "Hello World!";
this.backColor = cc.Color.WHITE;
this.foreColor = cc.Color.BLACK;
this.margin = 10;
this.size = 200;
}
onLoad() {
this.graphics = this.addComponent(cc.Graphics);
}
setContent() {
this.node.setContentSize(this.size, this.size);
this.graphics.clear();
this.graphics.fillColor = this.backColor;
let e = this.node.width;
this.graphics.rect(-e / 2, -e / 2, e, e);
this.graphics.fill();
this.graphics.close();
let t = new u(-1, a.H);
t.addData(this.string);
t.make();
this.graphics.fillColor = this.foreColor;
let o = e - 2 * this.margin, i = t.getModuleCount(), n = o / i, s = o / i, r = Math.ceil(n), l = Math.ceil(s);
for (let a = 0; a < i; a++) for (let c = 0; c < i; c++) if (t.isDark(a, c)) {
this.graphics.rect(this.margin + c * n - e / 2, o - s - Math.round(a * s) + this.margin - e / 2, r, l);
this.graphics.fill();
}
}
};
i([ f ], g.prototype, "string", void 0);
i([ f(cc.Color) ], g.prototype, "backColor", void 0);
i([ f(cc.Color) ], g.prototype, "foreColor", void 0);
i([ f ], g.prototype, "margin", void 0);
i([ f ], g.prototype, "size", void 0);
g = i([ m ], g);
o.QRCodeComponent = g;
cc._RF.pop();
}, {} ]
}, {}, [ "JSBridge", "Button", "CoinBar", "ColorBox", "CustomSpriteLine", "DirBtn", "DropDownBox", "DropDownItem", "GameIcon", "Graphics", "HeadIcon", "HeroHeadIcon", "HpBar", "IntBox", "Joystick", "AutoFixedSizeByTargetNode", "ProgressBar", "ScrollList", "ScrollListItem", "Slider", "Toggle", "ToggleGroup", "AD", "CameraCtrl", "Config", "CrossPlatform", "Damager", "DataBind", "UnionSet", "EngineManager", "FightSystem", "GameRecorder", "Hper", "Local", "MessageBox", "Music", "NetworkMgr", "Panel", "PanelQueue", "PanelStack", "Particle", "PhyExt", "PiecewiseFunc", "Pool", "RedMark", "Scene", "SceneManager", "ScreenRect", "Share", "Sound", "Spark", "SyncNode", "Top", "TweenUtil", "UIColor", "Util", "Vibrate", "dts", "image-share", "qr-code", "ArrowGuide", "AstroGuide", "BannerGuide", "CollisionEmiter", "Billboard", "Bomb", "ConveyorPlatform", "Decorator", "DeviceButton", "DeviceToggle", "ErrorDevice", "FireBallLine", "Flag", "IceCone", "Ladder", "LoadPoint", "Lurker", "MonsterSpawner", "MovePlatform", "Platform", "Region", "SavePoint", "Saw", "Spring", "TrapPlatform", "DialogBox", "GM", "GameBoard", "GameEnv", "GameRankComp", "Hortor", "OperationFlow", "PaintGuide", "PathConfig", "PhyObj", "ActorMng", "AssetGroupMng", "BannerMng", "BaseConfMng", "BulletMng", "ChosenMng", "CoinMng", "CollectionMng", "ColorMng", "CommentMng", "CreativeRankMng", "CreativeResMng", "CreditMng", "DeviceMng", "DiscoverMng", "DynamicMng", "FollowMng", "FreshGameMng", "GameBagMng", "GameCellDataMng", "GameCoverMng", "GameIconMng", "GameMng", "GamePackageMng", "GamePetMng", "GameRankDataMng", "GameRankMng", "GameSaveMng", "GameShopMng", "GameTagMng", "GiftRankMng", "GuideMng", "HeadIconMng", "HotGameMng", "HurryMng", "LifeMng", "Mng", "MsgMng", "PlayerDetailMng", "PropMng", "PublishMng", "RcmdMng", "RemoteStorage", "ReportMng", "RunDataMng", "ShopMng", "SpriteMng", "TalkDraftMng", "TalkMng", "ThumbMng", "TileMng", "TriggerMng", "VariableMng", "WeaponMng", "WorldMng", "WsMng", "AiCtrlBase", "AiComBase", "AiComDirLineMover", "AiComPlatformJumpFollow", "AiComSimplerMover", "GridRandomCtrl", "GridStaticCtrl", "PlatformJumpAiComMoveCtrl", "PlatformJumpAiFollowHeroCtrl", "PlatformJumpAiMoveCtrl", "PlatformJumpAiStaticCtrl", "Actor", "BgLayerCtrl", "CameraDragCtrl", "CameraFollowCtrl", "WorldCameraFollowerInterface", "WorldJumpCameraFollower", "WorldRpgCameraFollower", "Device", "FloatLabel", "InteractGizmos", "PlaceGizmos", "SelectGizmos", "TeamGizmo", "HeroContactTileCtrl", "HeroInteractCtrl", "Interactable", "DragMover", "GridMover", "Mover", "PlatformJumpMover", "RpgMover", "BaseMoveCtrl", "DragMoverCtrl", "GridMoverCtrl", "KeyInput", "PlatformJumpMoverCtrl", "RpgMoverCtrl", "Prop", "StartPoint", "TextBubble", "Tile", "TilePhysics", "TiledMap", "TouchWorldCtrl", "Bullet", "CastCtl", "GunCtl", "MeleeCtl", "Weapon", "WeaponCtl", "World", "WorldChild", "WorldNodeBody", "DataUpgrader", "GameTypeDefine", "Data_0_0_0", "Data_1_0_0", "GSCmdMng", "GSMng", "GSParam", "GSRunner", "GSRunnerMng", "GSUtil", "GSVariable", "GSVariableMng", "GameScriptData", "GameScriptDefines", "GameScriptValueType", "GameScriptTest", "GSCmdAwait", "GSCmdCameraShake", "GSCmdChangeActProperty", "GSCmdChangeBagItem", "GSCmdChangeHeroProperty", "GSCmdDialogue", "GSCmdDropItem", "GSCmdSetVariable", "GSCmdShowGameOver", "GSCmdShowGameWin", "GSCmdSwitchHero", "GSCmdSwitchMap", "GSCmdTest", "GSCmdTimeCountDownStart", "GSCmdTimeCountDownStop", "GSExecuteAssign", "GSExecuteBlock", "GSExecuteBreak", "GSExecuteCall", "GSExecuteCompare", "GSExecuteCompute", "GSExecuteIf", "GSExecuteIfElse", "GSExecuteLogic", "GSExecuteWhile", "GSExecuteWhileCount", "GSInstructionHelper", "index", "AboutPanel", "ActOptionCameraShakePanel", "ActOptionChangeActPanel", "ActOptionDialogItemPanel", "ActOptionDialogCell", "ActOptionDialogPanel", "ActOptionDropPropPanel", "ActOptionGameAdPanel", "ActOptionGameOverPanel", "ActOptionGameSharePanel", "ActOptionGameWinPanel", "ActOptionRandomPanel", "ActOptionRecoverHpPanel", "ActOptionActCell", "ActOptionSelectWorldActPanel", "ActOptionSelectWorldCoorPanel", "ActOptionShiftWorldPanel", "ActOptionSwitchHeroPanel", "ActOptionUploadRankScorePanel", "ActorGroupCreatePanel", "ActorTypeCell", "ActorTypePanel", "AddGameTagPanel", "ApplyWorldPanel", "AssetCategoryPanel", "AssetCategorycCell", "ActorGroupNameToggle", "AssetGroupSelectPanel", "AssetPreviewCell", "AssetPreviewPanel", "BagItemPanel", "BagCell", "BagPanel", "BanCommentPanel", "BanGamePanel", "BanGoodsPanel", "BanPlayerPanel", "BanTalkPanel", "BaseGainPanel", "BeginExamPanel", "BuyGameGoodsComfirmPanel", "BuyGoodsPanel", "GoodsItemCell", "ActorOptionHelper", "BulletOptionHelper", "CommonOptionHelper", "CommonOptionHelperFactory", "CommonOptionPanel", "DeviceOptionHelper", "PropOptionHelper", "TileOptionHelper", "WeaponOptionHelper", "CreateActorPanel", "CreateBulletPanel", "CreateColorPanel", "CreateBulletHelper", "CreateCommonHelper", "CreateCommonHelperFactory", "CreateCommonPanel", "CreateTileHelper", "CreateWeaponHelper", "CreateDevicePanel", "CreateGamePanel", "CreateGameRankPanel", "CreateGameShopCell", "CreateGameShopPanel", "CreatePropPanel", "CreateSelectPanel", "CreateTilePanel", "TileShapeCell", "CreateVariablePanel", "CreateWeaponPanel", "CreateWorldInfoPanel", "CreateWorldTypePanel", "DeviceTypeCell", "DeviceTypePanel", "DownloadNewVerPanel", "EditAssetGroupCell", "EditAssetGroupPanel", "ColorCell", "EditColorPanel", "EditGameScriptPanel", "GSUIItemCondition", "GSUIItemConditionCell", "GSUIItemNodeCell", "GSUIItemNodeInfoCell", "GSDataNodeRender", "GSDataNodeRenderAdd", "GSDataNodeRenderBagItem", "GSDataNodeRenderCameraShake", "GSDataNodeRenderChangeActProperty", "GSDataNodeRenderChangeHeroProperty", "GSDataNodeRenderChangeVariable", "GSDataNodeRenderDialogue", "GSDataNodeRenderDropItem", "GSDataNodeRenderFactory", "GSDataNodeRenderFlowIf", "GSDataNodeRenderFlowIfElse", "GSDataNodeRenderFlowWait", "GSDataNodeRenderShowGameOver", "GSDataNodeRenderShowGameWin", "GSDataNodeRenderStart", "GSDataNodeRenderSwitchHero", "GSDataNodeRenderSwitchWorld", "GSDataNodeRenderTimeCountDownStart", "GSDataNodeRenderTimeCountDownStop", "SimpleNodeList", "EditUserInfoPanel", "EditVariablePanel", "ExamPrepareCell", "ExamScene", "GMLoginPanel", "GSConditionSelectItemPanel", "GSConditionSelectTypePanel", "GSConditionSelectVariablePanel", "GSDataNodeBagItemPanel", "GSDataNodeCameraShakePanel", "GSDataNodeActPropertyHelper", "GSDataNodeChangeActPanel", "GSDataNodeChangeHeroPanel", "GSDataNodeChangeVariable", "GSDataNodeDialogPanel", "GSDialogCell", "GSDataNodeDropItemPanel", "GSDataNodeFlowWaitPanel", "GSDataNodeGameOverPanel", "GSDataNodeGameWinPanel", "GSDataNodeShiftWorldCell", "GSDataNodeShiftWorldPanel", "GSDataNodeSwitchHeroPanel", "GSDataNodeTimeCountDownStartPanel", "GSSelectDataNodeCell", "GSSelectDataNodePanel", "GainActorPanel", "GainCoinPanel", "GainDevicePanel", "GainGameGoodsPanel", "GainPropPanel", "GainPublishTicketPanel", "GainTilePanel", "GainWeaponPanel", "GameAdPanel", "GameOverPanel", "GameRankCell", "GameRankPanel", "GameRankTop3Cell", "GameRankTopPerson", "GameRankSharePanel", "GameSharePanel", "GameGoodsCell", "GameShopPanel", "GameWinPanel", "GiftChooseCell", "GiftChoosePanel", "GuideCell", "GuidePanel", "ImagePreviewPanel", "InputPanel", "LackCoinPanel", "LevelHelpPanel", "LevelUpgradePanel", "LinkAccountPanel", "LoginCreateAccountPanel", "LoginPanel", "LoginPanel2", "LoginWithAccountPanel", "MenuPanel", "MobileLoginPanel", "NoticePanel", "NumberInputPanel", "OpenGamePanel", "PausePanel", "ProjectMsgPanel", "PublishGamePanel", "TagCell", "ReportBugPanel", "ReviewFailReasonCell", "ReviewFailReasonPanel", "SaleGameBagItemPanel", "ScorePanel", "SelectAIPanel", "SelectActorCell", "SelectActorPanel", "BulletCell", "SelectBulletPanel", "SelectCreativeWorldPanel", "SelectGameCell", "SelectGamePanel", "SelectGameRankCell", "SelectGameRankPanel", "SelectGameShopCell", "SelectGameShopPanel", "SelectGoodsItemCell", "SelectGoodsItemPanel", "SelectGoodsCell", "SelectGoodsPanel", "SelectHeroCell", "SelectHeroPanel", "SelectImageCell", "SelectImagePanel", "SelectPropCell", "SelectPropPanel", "SelectSoundPanel", "SoundCell", "SelectWeaponPanel", "WeaponCell", "WeaponTypeToggleItem", "SelectWorldCell", "SelectWorldPanel", "SensitiveCheckCell", "SensitiveCheckPanel", "SettingPanel", "SelectShareTypeCell", "SharePanel", "SubmitWorldPanel", "SummaryCell", "SummaryPanel", "SummaryTitleCell", "TalkDraftCell", "TalkDraftPanel", "TemplateWorldTipPanel", "TriggerActPanel", "UnlockPanel", "UploadGoodsCell", "UploadGoodsPanel", "VariableCell", "VariablesPanel", "WeaponTypeCell", "WeaponTypePanel", "WorldOptionPanel", "WorldRenamePanel", "PlatformInterface", "PlatformRecorderApp", "PlatformRecorderInterface", "PlatformRecorderTT", "PlatformRecorderTest", "PlatformRecorderWechat", "Role", "BagScene", "CollectionGameCell", "CollectionScene", "OtherTalkCell", "CreativeSpaceCell", "CreativeSpaceScene", "CreditChangeCell", "CreditScene", "DeelReportCommentCell", "DeelReportGameCell", "DeelReportGoodsCell", "DeelReportPlayerCell", "DeelReportScene", "DeelReportTalkCell", "DocumentScene", "EditGameScene", "WorldCell", "WorldCellMenu", "EditTalkScene", "TalkSectionEditorBase", "TalkSectionEditorGame", "TalkSectionEditorGoods", "TalkSectionEditorImgCell", "TalkSectionEditorImgs", "TalkSectionEditorProject", "TalkSectionEditorText", "PatrolAI", "ActorCell", "DeviceCell", "EditWorldScene", "ElementBox", "Inspector", "ButtonItem", "DropDownBoxItem", "EditBoxItem", "HeadItem", "ImgBtnHListItem", "IntBoxItem", "NumberEditBoxItem", "SpawnMonsterCell", "SpawnMonsterItem", "ToggleItem", "TriggerEvtCell", "TriggerItem", "ActorGroupFilterCell", "ActorPage", "DevicePage", "EditPageBase", "PropPage", "TileMapLayerSelectCell", "TilePage", "PropCell", "TileCell", "TouchWorldShowGizmos", "FansCell", "FollowCell", "FollowScene", "FriendGameCell", "FriendGoodsCell", "FriendScene", "CommentCell", "CommentHeadCell", "CommentMoreCell", "GameCoverInfoCell", "GameCoverScene", "GameTagFlow", "GiftInfoCell", "GameListScene", "GameBagBar", "GameBagItemCell", "GameScene", "GameTimerComp", "PetItemCell", "ShiftWorldAnim", "GameStatisticsCell", "GameStatisticsScene", "GameTagScene", "GiftRankDetialCell", "GiftRankDetialIconCell", "GiftRankDetialScene", "ChosenRowComp", "ChosenSubPage", "FollowBanner", "CreativeGamesSubPage", "DiscoverPage", "ChosenComp", "DiscoverSubPage", "FreshComp", "GameBanner", "GameBannerComp", "GameTagComp", "GiftRankComp", "MyFollowComp", "RecommendComp", "FollowGamesSubPage", "FreshSubPage", "GameCell", "GuideBtn", "HomePageToggle", "HomeScene", "HotSubPage", "CreateGameCell", "CreateTalkCell", "LockGameCell", "MinePage", "MinePageToggle", "MyGameCell", "MyTalkCell", "UserComp", "CommentMeCell", "MsgCell", "MsgPage", "MsgPageToggle", "GiftRankCell", "GiftRankSubPage", "SearchGameComp", "SearchTalkComp", "CreateGoodsCell", "GoodsCell", "GoodsRecommendCell", "LockGoodsCell", "MyGoodsCell", "ShopPage", "TalkCell", "TalkCommentCell", "TalkCommentMng", "TalkCommentMoreCell", "TalkPage", "TalkSectionGame", "TalkSectionGoods", "TalkSectionHead", "TalkSectionImgs", "TalkSectionProject", "TalkSectionText", "TalkStateBar", "LoginScene", "ColorBtn", "CreateColorBtn", "EditColorBtn", "GraphicsSelectBox", "PaintScene", "PlayerListScene", "ReportScene", "RoleCell", "RoleListScene", "TalkScene", "TGA", "i18nLabel", "i18nMgr", "i18nSprite", "cmd", "data", "dataexsplitter", "fix" ]);